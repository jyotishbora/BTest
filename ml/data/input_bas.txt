Sub Common_Calculation(){n}{t}If GetBool(IAF1040.MFJ) = True Then{n}{t}{t}ReturnVal = GetString(USWBasicInfo.CombFirst){n}{t}Else{n}{t}{t}ReturnVal = GetString(USWBasicInfo.TPCommon){n}{t}End If{n}End Sub
Sub MEF100SP_Calculation(){n}{t}If GetBool(IA100.Spouse) = True And GetBool(IA100.Print) = True Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub MEF100TP_Calculation(){n}{t}If GetBool(IA100.Taxpayer) = True And GetBool(IA100.Print) = True Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Names_Calculation(){n}{t}If GetBool(IA100.Spouse) = True Then{n}{t}{t}ReturnVal = GetString(IARequired.SPCombName){n}{t}Else{n}{t}{t}ReturnVal = GetString(IARequired.TPCombName){n}{t}End If{n}End Sub
Sub P2Gain_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA100.P2SalesPx) - GetCurrency(IA100.P2Cost)){n}End Sub
Sub P2TPSharePerc_Calculation(){n}{t}ReturnVal = GetFloat(IA100.P2TPShare) * 100{n}End Sub
Sub Print_Calculation(){n}{t}If GetCurrency(IA100.P6CGD) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SpouseCommon_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = GetString(USWBasicInfo.SPCommon){n}{t}Else{n}{t}{t}ReturnVal = "Not Applicable"{n}{t}End If{n}End Sub
Sub SSN_Calculation(){n}{t}If GetBool(IA100.Spouse) = True Then{n}{t}{t}ReturnVal = GetString(IAF1040.SpouseSSN){n}{t}Else{n}{t}{t}ReturnVal = GetString(IAF1040.SSN){n}{t}End If{n}End SubSub Add_Calculation(){n}{t}ReturnVal = GetString(IAF1040.Add){n}End Sub
Sub CityComb_Calculation(){n}{t}ReturnVal = GetString(IAF1040.CityComb){n}End Sub
Sub CombNames_Calculation(){n}{t}ReturnVal = GetString(IARequired.CombNames){n}End Sub
Sub Desc_Calculation(){n}{t}ReturnVal = "Payment Voucher - " + GetString(IA1040V.TotDue){n}End Sub
Sub PeriodEnd_Calculation(){n}{t}ReturnVal = "123118"{n}End Sub
Sub Phone_Calculation(){n}{t}ReturnVal = GetString(IAF1040.Phone){n}End Sub
Sub PrVou_Calculation(){n}{t}If GetCurrency(IA1040V.TotDue) > 0 And GetBool(IAEFWksht.Yes) = True Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA1040V.TotDue) > 0 And GetBool(IAEFWksht.EFW) = False Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IAF1040.SSN){n}End Sub
Sub TotDue_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.TotDue){n}End SubSub AAltTax_Calculation(){n}' 1st condition added for situation when MFS return and reporting spouse income causes an alternate tax calculation yet taxpayer has zero income{n}' See saved return IA MFS Alternate Tax Issue.ta2{n}{t}If GetBool(IA1040X.MFS) = True And GetCurrency(IA1040X.ATaxInc) = 0 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf (GetCurrency(IAWkAltTax.Mult) < GetCurrency(IA1040X.TotTaxSch)) And GetBool(IAWkAltTax.Qualify) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.ATax){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IA1040X.ARegTax){n}{t}End If{n}End Sub
Sub ABalance14_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA1040X.ATotTax) - GetCurrency(IA1040X.ATotCr50)){n}End Sub
Sub ABalance16_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA1040X.ABalance14) - GetCurrency(IA1040X.ACrNon)){n}End Sub
Sub ABalance18_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA1040X.ABalance16) - GetCurrency(IA1040X.AOthIACr)){n}End Sub
Sub ABalance7_Calculation(){n}{t}ReturnVal = GetCurrency(IA1040X.ATotInc) - GetCurrency(IA1040X.AFedDed){n}End Sub
Sub AContrib_Calculation(){n}{t}If GetBool(IA1040X.CombMFS) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.TotContrib) - GetCurrency(IA1040X.BContrib){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAF1040.TotContrib){n}{t}End If{n}End Sub
Sub ACrNon_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.ACrNon){n}End Sub
Sub Add_Calculation(){n}{t}ReturnVal = GetString(IAF1040.Add){n}End Sub
Sub ADedBox_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.ADedBox){n}End Sub
Sub AdjRef_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA1040X.CalcOP) - GetCurrency(IA1040X.TotCF)){n}End Sub
Sub AFedDed_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.AFedDed){n}End Sub
Sub AFedTax_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.AFedTax){n}End Sub
Sub AGross_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.AGross){n}End Sub
Sub ALumpMin_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.ALump) + GetCurrency(IAF1040.AIAMin){n}End Sub
Sub ANet_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.ANet){n}End Sub
Sub AOthIACr_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.AOutState) + GetCurrency(IAF1040.AOthIACr){n}End Sub
Sub APenExcl_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.APenExcl){n}End Sub
Sub ARegTax_Calculation(){n}{t}Dim TotTaxInc As Currency{n}{t}{n}{t}TotTaxInc = GetCurrency(IA1040X.ATaxInc){n}{t}{n}{t}ReturnVal = Tax(TotTaxInc){n}{t}{n}End Sub
Sub ARepSSB_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.ARepSSB){n}End Sub
Sub ASch_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.ASch){n}End Sub
Sub ATaxInc_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.ATaxInc){n}End Sub
Sub ATotAdj_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.ATotAdj){n}End Sub
Sub ATotCr50_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.ACredits){n}End Sub
Sub ATotInc_Calculation(){n}{t}ReturnVal = GetCurrency(IA1040X.ANet) + GetCurrency(IA1040X.AFedTax){n}End Sub
Sub ATotTax_Calculation(){n}{t}ReturnVal = GetCurrency(IA1040X.AAltTax) + GetCurrency(IA1040X.ALumpMin){n}End Sub
Sub ATotTax2_Calculation(){n}{t}ReturnVal = GetCurrency(IA1040X.ABalance18) + GetCurrency(IA1040X.ASch) + GetCurrency(IA1040X.AContrib){n}End Sub
Sub Balance27_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA1040X.TotPay) - GetCurrency(IA1040X.PrevOP)){n}End Sub
Sub BAltTax_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}If (GetCurrency(IAWkAltTax.Mult) < GetCurrency(IA1040X.TotTaxSch)) And GetBool(IAWkAltTax.Qualify) = True Then{n}{t}{t}{t}ReturnVal = GetCurrency(IAF1040.BTax){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = GetCurrency(IA1040X.BRegTax){n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BBalance14_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA1040X.BTotTax) - GetCurrency(IA1040X.BTotCr50)){n}End Sub
Sub BBalance16_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA1040X.BBalance14) - GetCurrency(IA1040X.BCrNon)){n}End Sub
Sub BBalance18_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA1040X.BBalance16) - GetCurrency(IA1040X.BOthIACr)){n}End Sub
Sub BBalance7_Calculation(){n}{t}ReturnVal = GetCurrency(IA1040X.BTotInc) - GetCurrency(IA1040X.BFedDed){n}End Sub
Sub BContrib_Calculation(){n}{t}If GetBool(IA1040X.CombMFS) = True Then{n}{t}{t}ReturnVal = CDollar(GetFloat(IAF1040.TotContrib) * 0.5){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BCrNon_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.BCrNon){n}End Sub
Sub BDedBox_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.BDedBox){n}End Sub
Sub BFedDed_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.BFedDed){n}End Sub
Sub BFedTax_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.BFedTax){n}End Sub
Sub BGross_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.BGross){n}End Sub
Sub BLumpMin_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.BLump) + GetCurrency(IAF1040.BIAMin){n}End Sub
Sub BNet_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.BNet){n}End Sub
Sub BOthIACr_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.BOutState) + GetCurrency(IAF1040.BOthIACr){n}End Sub
Sub BPenExcl_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.BPenExcl){n}End Sub
Sub BRegTax_Calculation(){n}{t}Dim TotTaxInc As Currency{n}{t}{n}{t}If GetBool(IAF1040.MFS) = True Then{n}{t}{t}TotTaxInc = GetCurrency(IAF1040.SpTaxInc){n}{t}Else{n}{t}{t}TotTaxInc = GetCurrency(IA1040X.BTaxInc){n}{t}End If{n}{t}{n}{t}ReturnVal = Tax(TotTaxInc){n}{t}{n}End Sub
Sub BRepSSB_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.BRepSSB){n}End Sub
Sub BSch_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.BSch){n}End Sub
Sub BTaxInc_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.BTaxInc){n}End Sub
Sub BTotAdj_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.BTotAdj){n}End Sub
Sub BTotCr50_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.BCredits){n}End Sub
Sub BTotInc_Calculation(){n}{t}ReturnVal = GetCurrency(IA1040X.BNet) + GetCurrency(IA1040X.BFedTax){n}End Sub
Sub BTotTax_Calculation(){n}{t}ReturnVal = GetCurrency(IA1040X.BAltTax) + GetCurrency(IA1040X.BLumpMin){n}End Sub
Sub BTotTax2_Calculation(){n}{t}ReturnVal = GetCurrency(IA1040X.BBalance18) + GetCurrency(IA1040X.BSch) + GetCurrency(IA1040X.BContrib){n}End Sub
Sub CalcOP_Calculation(){n}{t}Dim PrevOP As Currency{n}{t}{n}{t}PrevOP = MaxValue(0, GetCurrency(IA1040X.PrevOP) - GetCurrency(IA1040X.TotPay)){n}{n}{t}ReturnVal = MaxValue(0, GetCurrency(IA1040X.Balance27) - GetCurrency(IA1040X.Total) - PrevOP){n}End Sub
Sub City_Calculation(){n}{t}ReturnVal = GetString(IAF1040.CityComb){n}End Sub
Sub CombMFS_Calculation(){n}{t}ReturnVal = GetBool(IAF1040.CombMFS){n}End Sub
Sub CountyNo_Calculation(){n}{t}ReturnVal = GetString(IAF1040.CountyNo){n}End Sub
Sub DC1_Calculation(){n}{t}ReturnVal = GetNumber(IAF1040.DC1){n}End Sub
Sub DC2_Calculation(){n}{t}ReturnVal = GetNumber(IAF1040.DC2){n}End Sub
Sub DepN_Calculation(){n}{t}ReturnVal = GetBool(IAF1040.DepN){n}End Sub
Sub DepNames_Calculation(){n}{t}ReturnVal = GetString(IAF1040.DepNames){n}End Sub
Sub DepY_Calculation(){n}{t}ReturnVal = GetBool(IAF1040.DepY){n}End Sub
Sub Desc_Calculation(){n}{t}ReturnVal = GetString(IARequired.CombNames){n}End Sub
Sub EFExplanation_Calculation(){n}{t}Dim t As String{n}{t}Dim a As Integer{n}{t}{n}{t}t = ""{n}{t}a = 0{n}{t}{n}{t}Do While a < 18{n}{t}{t}t = t + " " + GetString(IA1040X.Explanation(a)){n}{t}{t}a = a + 1{n}{t}Loop{n}{n}{t}If GetBool(IA1040X.EFAmend) = True Then{n}{t}{t}ReturnVal = Trim(t){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub ExempA_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.ExempA){n}End Sub
Sub ExempB_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.ExempB){n}End Sub
Sub Exist_Calculation(){n}{t}ReturnVal = 1{n}End Sub
Sub FirstName_Calculation(){n}{t}ReturnVal = GetString(IAF1040.FirstName){n}End Sub
Sub HOH_Calculation(){n}{t}ReturnVal = GetBool(IAF1040.HOH){n}End Sub
Sub HOHDep_Calculation(){n}{t}ReturnVal = GetString(IAF1040.HOHDep){n}End Sub
Sub HOHSSN_Calculation(){n}{t}ReturnVal = GetString(IAF1040.HOHSSN){n}End Sub
Sub Int_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.Int74){n}End Sub
Sub ItemCheck_Calculation(){n}{t}ReturnVal = GetBool(IAF1040.ItemCheck){n}End Sub
Sub LastName_Calculation(){n}{t}ReturnVal = GetString(IAF1040.LastName){n}End Sub
Sub Lesser_Calculation(){n}{t}If IAFS() = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IA1040X.TotTaxSch){n}{t}Else{n}{t}{t}If GetBool(IAWkAltTax.Qualify) = True Then{n}{t}{t}{t}ReturnVal = MinValue(GetCurrency(IAWkAltTax.Mult), GetCurrency(IA1040X.TotTaxSch)){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = GetCurrency(IA1040X.TotTaxSch){n}{t}{t}End If{n}{t}End If{n}End Sub
Sub MFJ_Calculation(){n}{t}ReturnVal = GetBool(IAF1040.MFJ){n}End Sub
Sub MFS_Calculation(){n}{t}ReturnVal = GetBool(IAF1040.MFS){n}End Sub
Sub MFSName_Calculation(){n}{t}ReturnVal = GetString(IAF1040.MFSName){n}End Sub
Sub MFSSSN_Calculation(){n}{t}ReturnVal = GetString(IAF1040.MFSSSN){n}End Sub
Sub Over65_Calculation(){n}{t}ReturnVal = GetBool(IAF1040.Over65){n}End Sub
Sub Owe_Calculation(){n}{t}Dim PrevOP As Currency{n}{t}{n}{t}PrevOP = MaxValue(0, GetCurrency(IA1040X.PrevOP) - GetCurrency(IA1040X.TotPay)){n}{n}{t}ReturnVal = MaxValue(0, GetCurrency(IA1040X.Total) + PrevOP - GetCurrency(IA1040X.Balance27)){n}End Sub
Sub PC1a_Calculation(){n}{t}ReturnVal = GetNumber(IAF1040.PC1a){n}End Sub
Sub PC1b_Calculation(){n}{t}ReturnVal = GetNumber(IAF1040.PC1b){n}End Sub
Sub PC2a_Calculation(){n}{t}ReturnVal = GetNumber(IAF1040.PC2a){n}End Sub
Sub PC2b_Calculation(){n}{t}ReturnVal = GetNumber(IAF1040.PC2b){n}End Sub
Sub Pen_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.Pen74){n}End Sub
Sub PenInt_Calculation(){n}{t}If GetCurrency(IA1040X.Refund) > 0 Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IA1040X.Pen) + GetCurrency(IA1040X.Int){n}{t}End If{n}End Sub
Sub Phone_Calculation(){n}{t}ReturnVal = GetString(IAF1040.Phone){n}End Sub
Sub PrepAdd_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.PrepAdd){n}End Sub
Sub PrepCitySt_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.CombPrepCityStZipFor){n}End Sub
Sub PrepFirm_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.PrepName){n}End Sub
Sub PrepID_Calculation(){n}{t}ReturnVal = GetString(IAF1040.PrepID){n}End Sub
Sub PrepPhone_Calculation(){n}{t}ReturnVal = GetString(IAF1040.PrepPhone){n}End Sub
Sub QualWidow_Calculation(){n}{t}ReturnVal = GetBool(IAF1040.QualWidow){n}End Sub
Sub Refund_Calculation(){n}{t}Dim PrevOP As Currency{n}{t}{n}{t}PrevOP = MaxValue(0, GetCurrency(IA1040X.PrevOP) - GetCurrency(IA1040X.TotPay)){n}{n}{t}If GetCurrency(IA1040X.TotCF) > 0 Then{n}{t}{t}ReturnVal = GetCurrency(IA1040X.AdjRef){n}{t}Else{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(IA1040X.Balance27) - GetCurrency(IA1040X.Total) - PrevOP){n}{t}End If{n}End Sub
Sub SchNo_Calculation(){n}{t}ReturnVal = GetString(IAF1040.SchNo){n}End Sub
Sub Single_Calculation(){n}{t}ReturnVal = GetBool(IAF1040.Single){n}End Sub
Sub SpIncome_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.SpIncome){n}End Sub
Sub SpouseFirst_Calculation(){n}{t}ReturnVal = GetString(IAF1040.SpouseFirst){n}End Sub
Sub SpouseLast_Calculation(){n}{t}ReturnVal = GetString(IAF1040.SpouseLast){n}End Sub
Sub SpouseSSN_Calculation(){n}{t}ReturnVal = GetString(IAF1040.SpouseSSN){n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IAF1040.SSN){n}End Sub
Sub StadCheck_Calculation(){n}{t}ReturnVal = GetBool(IAF1040.StadCheck){n}End Sub
Sub TaxYear_Calculation(){n}{t}Dim TaxYear As Integer{n}{t}{n}{t}TaxYear = YearNumber{n}{t}{n}{t}ReturnVal = CStr(TaxYear){n}End Sub
Sub Tot67_Calculation(){n}{t}If GetBool(IA1040X.EFAmend) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BTot67) + GetCurrency(IAF1040.ATot67) - GetCurrency(IA1040X.TotPrevTax){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BTot67) + GetCurrency(IAF1040.ATot67){n}{t}End If{n}End Sub
Sub Total_Calculation(){n}{t}ReturnVal = GetCurrency(IA1040X.BTotTax2) + GetCurrency(IA1040X.ATotTax2){n}End Sub
Sub TotCF_Calculation(){n}{t}ReturnVal = GetCurrency(IA1040X.TPElectCF) + GetCurrency(IA1040X.SPElectCF){n}End Sub
Sub TotDC1_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.TotDC1){n}End Sub
Sub TotDC2_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.TotDC2){n}End Sub
Sub TotDue_Calculation(){n}{t}ReturnVal = GetCurrency(IA1040X.Owe) + GetCurrency(IA1040X.PenInt){n}End Sub
Sub TotPay_Calculation(){n}{t}ReturnVal = GetCurrency(IA1040X.Tot67) + GetCurrency(IA1040X.TotPrevTax){n}End Sub
Sub TotPC2a_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.TotPC2a){n}End Sub
Sub TotPC2b_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.TotPC2b){n}End Sub
Sub TotPCa_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.TotPCa){n}End Sub
Sub TotPCb_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.TotPCb){n}End Sub
Sub TotTaxSch_Calculation(){n}{t}ReturnVal = GetCurrency(IA1040X.ARegTax) + GetCurrency(IA1040X.BRegTax){n}End SubSub Add_Calculation(){n}{t}ReturnVal = GetString(IA1040X.Add){n}End Sub
Sub CityComb_Calculation(){n}{t}ReturnVal = GetString(IA1040X.City){n}End Sub
Sub CombNames_Calculation(){n}{t}ReturnVal = GetString(IARequired.CombNames){n}End Sub
Sub Desc_Calculation(){n}{t}ReturnVal = "Payment Voucher - " + GetString(IA1040XV.TotDue){n}End Sub
Sub PeriodEnd_Calculation(){n}{t}ReturnVal = "123118"{n}End Sub
Sub Phone_Calculation(){n}{t}ReturnVal = GetString(IA1040X.Phone){n}End Sub
Sub PrVou_Calculation(){n}{t}If GetCurrency(IA1040XV.TotDue) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IA1040X.SSN){n}End Sub
Sub TotDue_Calculation(){n}{t}ReturnVal = GetCurrency(IA1040X.TotDue){n}End SubSub Alert10_Calculation(){n}{t}If GetBool(IA130.MEF130TP) = True And Trim(GetString(IA130.EFTPState)) = "" Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert20_Calculation(){n}{t}If GetBool(IA130.MEF130SP) = True And Trim(GetString(IA130.EFTPState)) = "" Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Common_Calculation(){n}{t}If GetBool(IAF1040.MFJ) = True Then{n}{t}{t}ReturnVal = GetString(USWBasicInfo.CombFirst){n}{t}Else{n}{t}{t}ReturnVal = GetString(USWBasicInfo.TPCommon){n}{t}End If{n}End Sub
Sub Credit_Calculation(){n}{t}ReturnVal = GetCurrency(IA130.Small) + GetCurrency(IA130.PY130Cr){n}End Sub
Sub Description_Calculation(){n}{t}Dim Total As Currency{n}{t}{n}{t}Total = GetCurrency(IA130.Small) + GetCurrency(IA130.PY130Cr){n}{t}{n}{t}ReturnVal = CStr(Total) & " Credit"{n}End Sub
Sub Div_Calculation(){n}{t}Dim TopLim As Double{n}{t}{t}{n}{t}If GetCurrency(IA130.Inc15) = 0 Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}TopLim = MinValue(1#, Round(GetFloat(IA130.GrInc) / GetFloat(IA130.Inc15), 3)){n}{t}{t}ReturnVal = MaxValue(0, TopLim) {n}{t}End If{n}End Sub
Sub EFTPState_Calculation(){n}{t}If Trim(GetString(IA130.YouFC)) <> "" Then{n}{t}{t}ReturnVal = ForeignCode(Trim(GetString(IA130.YouFC))){n}{t}Else{n}{t}{t}ReturnVal = GetString(IA130.YouState){n}{t}End If{n}End Sub
Sub Exist_Calculation(){n}{t}ReturnVal = 1{n}End Sub
Sub Inc15_Calculation(){n}{t}If GetBool(IA130.TPRes) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.AGross){n}{t}ElseIf GetBool(IA130.TPPY) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAF126.GrossInc){n}{t}ElseIf GetBool(IA130.SPRes) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BGross){n}{t}ElseIf GetBool(IA130.SPPY) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAF126.BGross){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub MEF130SP_Calculation(){n}{t}If GetBool(IA130.SPRes) = True And GetCurrency(IA130.Small) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetBool(IA130.SPPY) = True And GetCurrency(IA130.PY130Cr) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub MEF130TP_Calculation(){n}{t}If GetBool(IA130.TPRes) = True And GetCurrency(IA130.Small) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetBool(IA130.TPPY) = True And GetCurrency(IA130.PY130Cr) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Mult_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IA130.Div) * GetFloat(IA130.Tax55)){n}End Sub
Sub Names_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}If GetBool(IA130.Spouse) = True Then{n}{t}{t}{t}ReturnVal = GetString(IARequired.SPCombName){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = GetString(IARequired.TPCombName){n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = GetString(IARequired.CombNames){n}{t}End If{n}End Sub
Sub PartYear_Calculation(){n}{t}If GetNumber(IA130.TPPY) > 0 Or GetNumber(IA130.SPPY) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub PrintMe_Calculation(){n}{t}If GetCurrency(IA130.Small) + GetCurrency(IA130.PY130Cr) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub PY130Cr_Calculation(){n}{t}If GetBool(IA130.TPPY) = True Or GetBool(IA130.SPPY) = True Then{n}{t}{t}ReturnVal = MinValue(GetCurrency(IA130.Mult), GetCurrency(IA130.PYTax)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub PYPer_Calculation(){n}{t}Dim TopLim As Double{n}{t}{t}{n}{t}If GetBool(IA130.TPPY) = True Or GetBool(IA130.SPPY) = True Then{n}{t}{t}If GetFloat(IA130.PYSmall) = 0 Then{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}Else{n}{t}{t}{t}TopLim = MinValue(1#, Round(GetFloat(IA130.GrInc) / GetFloat(IA130.PYSmall), 3)){n}{t}{t}{t}ReturnVal = MaxValue(0, TopLim){t}{t}{t}{t}{t}{t}{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub PYTax_Calculation(){n}{t}If GetBool(IA130.TPPY) = True Or GetBool(IA130.SPPY) = True Then{n}{t}{t}ReturnVal = CDollar(GetFloat(IA130.OthTax) * GetFloat(IA130.PYPer)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Small_Calculation(){n}{t}If GetBool(IA130.TPRes) = True Or GetBool(IA130.SPRes) = True Then{n}{t}{t}ReturnVal = MinValue(GetCurrency(IA130.Mult), GetCurrency(IA130.OthTax)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPCredit_Calculation(){n}{t}If GetNumber(IA130.SPRes) > 0 Or GetNumber(IA130.SPPY) > 0 Then{n}{t}{t}ReturnVal = GetCurrency(IA130.Small) + GetCurrency(IA130.PY130Cr){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SpouseCommon_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = GetString(USWBasicInfo.SPCommon){n}{t}Else{n}{t}{t}ReturnVal = "Not Applicable"{n}{t}End If{n}End Sub
Sub SPPY_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True And GetBool(IAF126.SpPYRes) = True And GetBool(IA130.Spouse) = True Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPRes_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True And GetBool(IA130.Spouse) = True Then{n}{t}{t}If GetBool(IAF126.Exist) = False Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}ElseIf GetBool(IAF126.SpRes) = True Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SSN_Calculation(){n}{t}If GetBool(IA130.Spouse) = True Then{n}{t}{t}ReturnVal = GetString(IAF1040.SpouseSSN){n}{t}Else{n}{t}{t}ReturnVal = GetString(IAF1040.SSN){n}{t}End If{n}End Sub
Sub Tax55_Calculation(){n}{t}If GetBool(IA130.TPRes) = True Or GetBool(IA130.TPPY) = True Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(IAF1040.ABal2) - (GetCurrency(IAF1040.ALump) + GetCurrency(IAF1040.AIAMin))){n}{t}ElseIf GetBool(IA130.SPRes) = True Or GetBool(IA130.SPPY) = True Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(IAF1040.BBal2) - (GetCurrency(IAF1040.BLump) + GetCurrency(IAF1040.BIAMin))){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPCredit_Calculation(){n}{t}If GetNumber(IA130.TPRes) > 0 Or GetNumber(IA130.TPPY) > 0 Then{n}{t}{t}ReturnVal = GetCurrency(IA130.Small) + GetCurrency(IA130.PY130Cr){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPPY_Calculation(){n}{t}If GetBool(IA130.Spouse) = True Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAF1040.MFJ) = True Then{n}{t}{t}If GetBool(IAF126.TpPYRes) = True Or GetBool(IAF126.SpPYRes) = True Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}ElseIf GetBool(IAF126.TpPYRes) = True Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPRes_Calculation(){n}{t}Dim Only1NR As Long{n}{t}{n}{t}If GetBool(IAF126.TpNonRes) = True And GetBool(IAF126.SPRes) = True Then{n}{t}{t}Only1NR = 1{n}{t}ElseIf GetBool(IAF126.TPRes) = True And GetBool(IAF126.SpNonRes) = True Then{n}{t}{t}Only1NR = 1{n}{t}Else{n}{t}{t}Only1NR = 0{n}{t}End If{n}{n}{t}If GetBool(IA130.Spouse) = True Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAF126.Exist) = False Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetBool(IAF1040.MFJ) = True And Only1NR = 1 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetBool(IAF1040.MFJ) = True And GetBool(IAF126.TPRes) = True And GetBool(IAF126.SPRes) = True Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetBool(IAF1040.MFJ) <> True And GetBool(IAF126.TPRes) = True Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End SubSub Common_Calculation(){n}{t}If GetBool(IAF1040.MFJ) = True Then{n}{t}{t}ReturnVal = GetString(USWBasicInfo.CombFirst){n}{t}Else{n}{t}{t}ReturnVal = GetString(USWBasicInfo.TPCommon){n}{t}End If{n}End Sub
Sub IA133Applied_Calculation(){n}{t}ReturnVal = GetCurrency(IA133.NewJobCr){n}End Sub
Sub IncreaseEmpPerc_Calculation(){n}{t}Dim TopLim As Double{n}{t}{n}{t}If GetFloat(IA133.Base) <= 0 Then{n}{t}{t}ReturnVal = 0.10{n}{t}Else{n}{t}{t}TopLim = Round(GetFloat(IA133.TotEligNewJobs) / GetFloat(IA133.Base), 3){n}{t}{t}ReturnVal = MaxValue(0, TopLim){n}{t}End If{n}End Sub
Sub MEF133SP_Calculation(){n}{t}If GetBool(IA133.Spouse) = True And GetBool(IA133.Print) = True Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub MEF133TP_Calculation(){n}{t}If GetBool(IA133.Taxpayer) = True And GetBool(IA133.Print) = True Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Names_Calculation(){n}{t}If GetBool(IA100.Spouse) = True Then{n}{t}{t}ReturnVal = GetString(IARequired.SPCombName){n}{t}Else{n}{t}{t}ReturnVal = GetString(IARequired.TPCombName){n}{t}End If{n}End Sub
Sub ProjectJobs_Calculation(){n}{t}ReturnVal = GetNumber(IA133.SchATotHours){n}End Sub
Sub SchATotHours_Calculation(){n}{t}Dim count As Integer{n}{t}Dim SubTot As Integer{n}{n}{t}count = 0{n}{t}SubTot = 0{n}{n}{t}Do While count < 14{n}{t}{t}SubTot = SubTot + GetNumber(IA133.SchAHours(count)){n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = SubTot{n}End Sub
Sub SchATotTaxWages_Calculation(){n}{t}Dim count As Integer{n}{t}Dim SubTot As Currency{n}{n}{t}count = 0{n}{t}SubTot = 0{n}{n}{t}Do While count < 14{n}{t}{t}SubTot = SubTot + GetCurrency(IA133.SchATaxWages(count)){n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = SubTot{n}End Sub
Sub SpouseCommon_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = GetString(USWBasicInfo.SPCommon){n}{t}Else{n}{t}{t}ReturnVal = "Not Applicable"{n}{t}End If{n}End Sub
Sub SSN_Calculation(){n}{t}If GetBool(IA100.Spouse) = True Then{n}{t}{t}ReturnVal = GetString(IAF1040.SpouseSSN){n}{t}Else{n}{t}{t}ReturnVal = GetString(IAF1040.SSN){n}{t}End If{n}End Sub
Sub TotEligNewJobs_Calculation(){n}{t}ReturnVal = MinValue(GetNumber(IA133.TotSchBHoursShare), GetNumber(IA133.TotEmplGain)){n}End Sub
Sub TotEmplGain_Calculation(){n}{t}ReturnVal = GetNumber(IA133.TotNewJobs) - GetNumber(IA133.Base){n}End Sub
Sub TotSchBHoursShare_Calculation(){n}{t}ReturnVal = GetNumber(IA133.ProjectJobs) + GetNumber(IA133.TotSchAHoursShare){n}End SubSub Alert10_Calculation(){n}{t}If GetNumber(IA134Sp.Print) > 0 Then{n}{t}{t}If Trim(GetString(IA134Sp.SCorpName)) = "" Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}ElseIf GetString(IA134Sp.SCorpEIN) = "" Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert20_Calculation(){n}{t}If GetNumber(IA134Sp.Print) > 0 Then{n}{t}{t}If GetCurrency(IA134Sp.StateAdj) <> 0 And Trim(GetString(IA134Sp.StateAdjExpl)) = "" Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert30_Calculation(){n}{t}If GetNumber(IA134Sp.Print) > 0 Then{n}{t}{t}If GetCurrency(IA134Sp.FedRegTax) = 0 Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BiggerInc_Calculation(){n}{t}ReturnVal = MaxValue(GetCurrency(IA134Sp.IASourceInc), GetCurrency(IA134Sp.NetDist)){n}End Sub
Sub Credit_Calculation(){n}{t}ReturnVal = CDollar((((Round(GetFloat(IA134Sp.CreditPercent) * 100#)) / 100#) * GetFloat(IA134Sp.NetTax)) / 100#){n}End Sub
Sub CreditPercent_Calculation(){n}{t}If GetFloat(IA134Sp.BusRatio) > 0 Then{n}{t}{t}ReturnVal = MaxValue(0, 100# - GetFloat(IA134Sp.TaxPercent)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Description_Calculation(){n}{t}Dim Total As Currency{n}{t}{n}{t}Total = GetCurrency(IA134Sp.Credit){n}{t}{n}{t}ReturnVal = CStr(Total) & " Credit"{n}End Sub
Sub Dividends_Calculation(){n}{t}ReturnVal = GetCurrency(USDSCorpK1.Dividends, ParentCopy()) - (CDollar(GetFloat(USDSCorpK1.Dividends, ParentCopy()) * GetFloat(IA134Sp.TPRatio))){n}End Sub
Sub Exist_Calculation(){n}{t}ReturnVal = 1{n}End Sub
Sub FedAGI_Calculation(){n}{t}If GetFloat(IA134Sp.BusRatio) > 0 Then{n}{t}{t}If GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}{t}ReturnVal = GetCurrency(USWRec.SAGI){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub FedTax_Calculation(){n}{t}ReturnVal = GetCurrency(IA134Sp.K1FedTax){n}End Sub
Sub IAApportion_Calculation(){n}{t}ReturnVal = CDollar((((Round(GetFloat(IA134Sp.IABusRatio) * 100#)) / 100#) * GetFloat(IA134Sp.NetIAInc)) / 100#){n}End Sub
Sub IABusRatio_Calculation(){n}{t}ReturnVal = GetFloat(IA134Sp.BusRatio) * 100{n}End Sub
Sub IAInc_Calculation(){n}{t}If GetFloat(IA134Sp.BusRatio) > 0 Then{n}{t}{t}If GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}{t}ReturnVal = GetCurrency(IAF1040.BNet) + GetCurrency(IAOthAdj.SIANOL){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub IASCorpInc_Calculation(){n}{t}If GetFloat(IA134Sp.BusRatio) > 0 Then{n}{t}{t}ReturnVal = GetCurrency(IA134Sp.K1Inc) + GetCurrency(IA134Sp.StateAdj){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub IASourceInc_Calculation(){n}{t}If GetFloat(IA134Sp.BusRatio) > 0 Then{n}{t}{t}ReturnVal = GetCurrency(IA134Sp.IAApportion) + GetCurrency(IA134Sp.IANonBusInc){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Interest_Calculation(){n}{t}ReturnVal = GetCurrency(USDSCorpK1.Interest, ParentCopy()) - (CDollar(GetFloat(USDSCorpK1.Interest, ParentCopy()) * GetFloat(IA134Sp.TPRatio))){n}End Sub
Sub IntSCorp_Calculation(){n}{t}If Trim(GetString(IA134Sp.SCorpName)) <> "" Then{n}{t}{t}ReturnVal = GetString(IA134Sp.SCorpName){n}{t}Else{n}{t}{t}ReturnVal = "this S corporation"{n}{t}End If{n}End Sub
Sub K1FedTax_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA134Sp.K1Tax) - GetCurrency(IA134Sp.K1FedCredits)){n}End Sub
Sub K1Inc_Calculation(){n}{t}ReturnVal = GetCurrency(IA134Sp.TotInc) - GetCurrency(IA134Sp.TotDed){n}End Sub
Sub K1Inc2_Calculation(){n}{t}ReturnVal = GetCurrency(IA134Sp.K1Inc){n}End Sub
Sub K1IncPercent_Calculation(){n}{t}ReturnVal = GetFloat(IA134Sp.K1IncRatio) * 100{n}End Sub
Sub K1IncRatio_Calculation(){n}{t}Dim TopLim As Double{n}{t}{n}{t}If GetFloat(IA134Sp.BusRatio) = 0 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetFloat(IA134Sp.FedAGI) <= 0 Then{n}{t}{t}ReturnVal = 1#{n}{t}Else{n}{t}{t}TopLim = MinValue(1#, Round(GetFloat(IA134Sp.K1Inc2) / GetFloat(IA134Sp.FedAGI), 6)){n}{t}{t}ReturnVal = MaxValue(0, TopLim){n}{t}End If{n}End Sub
Sub K1Tax_Calculation(){n}{t}ReturnVal = Round(CDollar(GetFloat(IA134Sp.NetFedTax) * (GetFloat(IA134Sp.K1IncPercent) / 100#))){t}{n}End Sub
Sub LtGain_Calculation(){n}{t}ReturnVal = GetCurrency(USDSCorpK1.LtGain, ParentCopy()) - (CDollar(GetFloat(USDSCorpK1.LtGain, ParentCopy()) * GetFloat(IA134Sp.TPRatio))){n}End Sub
Sub Names_Calculation(){n}{t}ReturnVal = GetString(IARequired.SPCombName){n}End Sub
Sub NetDist_Calculation(){n}{t}If GetFloat(IA134Sp.BusRatio) > 0 Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(IA134Sp.Distributions) - GetCurrency(IA134Sp.FedTax)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub NetFedTax_Calculation(){n}{t}ReturnVal = GetCurrency(IA134Sp.FedRegTax) + GetCurrency(IA134Sp.FedAMT){n}End Sub
Sub NetIAInc_Calculation(){n}{t}If GetFloat(IA134Sp.BusRatio) > 0 Then{n}{t}{t}ReturnVal = GetCurrency(IA134Sp.IASCorpInc) - GetCurrency(IA134Sp.NonBusInc){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub NetTax_Calculation(){n}{t}If GetFloat(IA134Sp.BusRatio) > 0 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BTotIATax){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Numerator_Calculation(){n}{t}ReturnVal = GetCurrency(IA134Sp.BiggerInc) + GetCurrency(IA134Sp.Remainder){n}End Sub
Sub Ordinary_Calculation(){n}{t}ReturnVal = GetCurrency(USDSCorpK1.OrdAmt, ParentCopy()) - (CDollar(GetFloat(USDSCorpK1.OrdAmt, ParentCopy()) * GetFloat(IA134Sp.TPRatio))){n}End Sub
Sub OthDed_Calculation(){n}{t}ReturnVal = GetCurrency(USDSCorpK1.SCOthDed, ParentCopy()) - (CDollar(GetFloat(USDSCorpK1.SCOthDed, ParentCopy()) * GetFloat(IA134Sp.TPRatio))){n}End Sub
Sub OtherInc_Calculation(){n}{t}Dim PortInc As Currency{n}{t}Dim Sec1256 As Currency{n}{t}Dim MineCost As Currency{n}{t}Dim OthInc As Currency{n}{t}{n}{t}PortInc = GetCurrency(USDSCorpK1.PortInc, ParentCopy()) - (CDollar(GetFloat(USDSCorpK1.PortInc, ParentCopy()) * GetFloat(IA134Sp.TPRatio))){n}{t}Sec1256 = GetCurrency(USDSCorpK1.Sec1256, ParentCopy()) - (CDollar(GetFloat(USDSCorpK1.Sec1256, ParentCopy()) * GetFloat(IA134Sp.TPRatio))){n}{t}MineCost = GetCurrency(USDSCorpK1.MineCost, ParentCopy()) - (CDollar(GetFloat(USDSCorpK1.MineCost, ParentCopy()) * GetFloat(IA134Sp.TPRatio))){n}{t}OthInc = GetCurrency(USDSCorpK1.OthInc, ParentCopy()) - (CDollar(GetFloat(USDSCorpK1.OthInc, ParentCopy()) * GetFloat(IA134Sp.TPRatio))){n}{t}{n}{t}ReturnVal = PortInc + Sec1256 + MineCost + OthInc{n}{t}{n}End Sub
Sub Print_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = False Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetCurrency(IA134Sp.Credit) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub RealEstate_Calculation(){n}{t}ReturnVal = GetCurrency(USDSCorpK1.RentAmt, ParentCopy()) - (CDollar(GetFloat(USDSCorpK1.RentAmt, ParentCopy()) * GetFloat(IA134Sp.TPRatio))){n}End Sub
Sub Remainder_Calculation(){n}{t}ReturnVal = GetCurrency(IA134Sp.IAInc) - GetCurrency(IA134Sp.IASCorpInc){n}End Sub
Sub Rental_Calculation(){n}{t}ReturnVal = GetCurrency(USDSCorpK1.Rental, ParentCopy()) - (CDollar(GetFloat(USDSCorpK1.Rental, ParentCopy()) * GetFloat(IA134Sp.TPRatio))){n}End Sub
Sub Royalties_Calculation(){n}{t}ReturnVal = GetCurrency(USDSCorpK1.Royalties, ParentCopy()) - (CDollar(GetFloat(USDSCorpK1.Royalties, ParentCopy()) * GetFloat(IA134Sp.TPRatio))){n}End Sub
Sub SCorpEIN_Calculation(){n}{t}ReturnVal = GetString(USDSCorpK1.EIN, ParentCopy()){n}End Sub
Sub SCorpName_Calculation(){n}{t}ReturnVal = GetString(USDSCorpK1.CoName, ParentCopy()){n}End Sub
Sub Sec1231_Calculation(){n}{t}ReturnVal = GetCurrency(USDSCorpK1.Sec1231, ParentCopy()) - (CDollar(GetFloat(USDSCorpK1.Sec1231, ParentCopy()) * GetFloat(IA134Sp.TPRatio))){n}End Sub
Sub Sec179_Calculation(){n}{t}ReturnVal = GetCurrency(USDSCorpK1.Sec179, ParentCopy()) - (CDollar(GetFloat(USDSCorpK1.Sec179, ParentCopy()) * GetFloat(IA134Sp.TPRatio))){n}End Sub
Sub SPApplied_Calculation(){n}{t}Dim count As Integer{n}{t}{n}{t}count = 0{n}{t}{n}{t}Do While count <= 9{n}{t}{t}If GetString(IA148Sp.NonRefCode(count)) = "11" And GetCurrency(IA148Sp.CYCredit(count)) = GetCurrency(IA134Sp.Credit) Then{n}{t}{t}{t}ReturnVal = GetCurrency(IA148Sp.ArrayNonRefCr(count)){n}{t}{t}End If{n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}Dim count2 As Integer{n}{t}{n}{t}count2 = 0{n}{t}{t}{n}{t}Do While count <= 28{n}{t}{t}If GetString(IAWBP148Sp.NonRefCode(count2)) = "11" And GetCurrency(IAWBP148Sp.CYCredit(count2)) = GetCurrency(IA134Sp.Credit) Then{n}{t}{t}{t}ReturnVal = GetCurrency(IAWBP148Sp.ArrayNonRefCr(count2)){n}{t}{t}End If{n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = 0{n}End Sub
Sub SPExpired_Calculation(){n}{t}Dim count As Integer{n}{t}{n}{t}count = 0{n}{t}{n}{t}Do While count <= 9{n}{t}{t}If GetString(IA148Sp.NonRefCode(count)) = "11" And GetCurrency(IA148Sp.CYCredit(count)) = GetCurrency(IA134Sp.Credit) Then{n}{t}{t}{t}ReturnVal = GetCurrency(IA148Sp.ExpCr(count)){n}{t}{t}End If{n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}Dim count2 As Integer{n}{t}{n}{t}count2 = 0{n}{t}{t}{n}{t}Do While count <= 28{n}{t}{t}If GetString(IAWBP148Sp.NonRefCode(count2)) = "11" And GetCurrency(IAWBP148Sp.CYCredit(count2)) = GetCurrency(IA134Sp.Credit) Then{n}{t}{t}{t}ReturnVal = GetCurrency(IAWBP148Sp.ExpCr(count2)){n}{t}{t}End If{n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = 0{n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IAF1040.SpouseSSN){n}End Sub
Sub StGain_Calculation(){n}{t}ReturnVal = GetCurrency(USDSCorpK1.StGain, ParentCopy()) - (CDollar(GetFloat(USDSCorpK1.StGain, ParentCopy()) * GetFloat(IA134Sp.TPRatio))){n}End Sub
Sub TaxPercent_Calculation(){n}{t}ReturnVal = GetFloat(IA134Sp.TaxRatio) * 100{n}End Sub
Sub TaxRatio_Calculation(){n}{t}Dim TopLim As Double{n}{t}{n}{t}If GetFloat(IA134Sp.BusRatio) = 0 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetFloat(IA134Sp.IAInc) = 0 Then{n}{t}{t}ReturnVal = 1#{n}{t}Else{n}{t}{t}TopLim = MinValue(1#, Round(GetFloat(IA134Sp.Numerator) / GetFloat(IA134Sp.IAInc), 6)){n}{t}{t}ReturnVal = MaxValue(0, TopLim){n}{t}End If{n}End Sub
Sub TotDed_Calculation(){n}{t}If GetFloat(IA134Sp.BusRatio) > 0 Then{n}{t}{t}ReturnVal = GetCurrency(IA134Sp.Sec179) + GetCurrency(IA134Sp.OthDed){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TotInc_Calculation(){n}{t}If GetFloat(IA134Sp.BusRatio) > 0 Then{n}{t}{t}ReturnVal = GetCurrency(IA134Sp.Ordinary) + GetCurrency(IA134Sp.RealEstate) + GetCurrency(IA134Sp.Rental) + GetCurrency(IA134Sp.Interest) + GetCurrency(IA134Sp.Dividends) + GetCurrency(IA134Sp.Royalties) + GetCurrency(IA134Sp.StGain) + GetCurrency(IA134Sp.LtGain) + GetCurrency(IA134Sp.Sec1231) + GetCurrency(IA134Sp.OtherInc){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPRatio_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True And GetBool(USDSCorpK1.Joint, ParentCopy()) = True Then{n}{t}{t}ReturnVal = 0.5{n}{t}ElseIf GetBool(IAF1040.CombMFS) = True And GetBool(USDSCorpK1.Spouse, ParentCopy()) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = 1#{n}{t}End If{n}End SubSub Alert10_Calculation(){n}{t}Dim RetailZip As Integer{n}{t}{n}{t}If Trim(GetString(IA137.StateAbb)) = "" Then{n}{t}{t}RetailZip = 0{n}{t}ElseIf (IsValidZIP(GetString(IA137.ZipCode), GetString(IA137.StateAbb))) Then{n}{t}{t}RetailZip = 0{n}{t}Else{n}{t}{t}RetailZip = 1{n}{t}End If{n}{n}{t}If GetBool(IA137.Print) = False Or GetBool(IA137.Site) = False Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf Not IsValidEFileString(GetString(IA137.RetailName)) Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf Not IsValidEFileString(GetString(IA137.RetailAdd)) Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf Not IsValidEFileString(GetString(IA137.City)) Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf Trim(GetString(IA137.StateAbb)) = "" Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf RetailZip = 1 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}{n}End Sub
Sub AllSitesTotal_Calculation(){n}{t}If GetBool(IA137.Site) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetNumber(IA137.TotGas){n}{t}End If{n}End Sub
Sub BioDisparity_Calculation(){n}{t}ReturnVal = MaxValue(0, Round(GetFloat(IA137.BioThresPer) - GetFloat(IA137.BioDistPer), 4)){n}End Sub
Sub BioDistPer_Calculation(){n}{t}If GetNumber(IA137.TotGas) <= 0 Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = Round(GetFloat(IA137.TotGal) / GetFloat(IA137.TotGas), 4){n}{t}End If{n}End Sub
Sub BioThresPer_Calculation(){n}' updated for 2018{n}{t}{n}{t}If GetNumber(IA137.AllSitesTotal) <= 0 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetNumber(IA137.AllSitesTotal) <= 200000 Then{n}{t}{t}ReturnVal = 0.19{n}{t}Else{n}{t}{t}ReturnVal = 0.23{n}{t}End If{n}End Sub
Sub Common_Calculation(){n}{t}If GetBool(IAF1040.MFJ) = True Then{n}{t}{t}ReturnVal = GetString(USWBasicInfo.CombFirst){n}{t}Else{n}{t}{t}ReturnVal = GetString(USWBasicInfo.TPCommon){n}{t}End If{n}End Sub
Sub CreditRate_Calculation(){n}{t}If GetFloat(IA137.BioDisparity) = 0 Then{n}{t}{t}ReturnVal = "0.080"{n}{t}ElseIf GetFloat(IA137.BioDisparity) >= 0.0001 And GetFloat(IA137.BioDisparity) <= 0.02 Then{n}{t}{t}ReturnVal = "0.060"{n}{t}ElseIf GetFloat(IA137.BioDisparity) >= 0.0201 And GetFloat(IA137.BioDisparity) <= 0.04 Then{n}{t}{t}ReturnVal = "0.040"{n}{t}Else{n}{t}{t}ReturnVal = "0"{n}{t}End If{n}End Sub
Sub Description_Calculation(){n}{t}Dim Total As Currency{n}{t}{n}{t}Total = GetCurrency(IA137.TotEthSoldCr) + GetCurrency(IA137.PassThruCr){n}{t}{n}{t}ReturnVal = CStr(Total) & " Credit"{n}{n}End Sub
Sub EthPromoteCr_Calculation(){n}{t}ReturnVal = GetCurrency(IA137.IndEthPromoteCr) + GetCurrency(IA137.PassThruCr){n}End Sub
Sub EthSoldCr_Calculation(){n}{t}If GetFloat(IA137.BioDisparity) = 0 Then{n}{t}{t}ReturnVal = CDollar(GetFloat(IA137.TotEth) * 8){n}{t}ElseIf GetFloat(IA137.BioDisparity) >= 0.0001 And GetFloat(IA137.BioDisparity) <= 0.02 Then{n}{t}{t}ReturnVal = CDollar(GetFloat(IA137.TotEth) * 6){n}{t}ElseIf GetFloat(IA137.BioDisparity) >= 0.0201 And GetFloat(IA137.BioDisparity) <= 0.04 Then{n}{t}{t}ReturnVal = CDollar(GetFloat(IA137.TotEth) * 4){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub IndEthPromoteCr_Calculation(){n}{t}If GetBool(IA137.Company) = True And GetBool(IA137.Taxpayer) = True Then{n}{t}{t}ReturnVal = GetCurrency(IA148.TotCode64){n}{t}ElseIf GetBool(IA137.Company) = True And GetBool(IA137.Spouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IA148Sp.TotCode64){n}{t}ElseIf GetCopy() = GetNumber(IA148.FirstCopy137Site) And GetBool(IA137.Taxpayer) = True Then{n}{t}{t}ReturnVal = GetCurrency(IA148.TotCode64){n}{t}ElseIf GetCopy() = GetNumber(IA148Sp.FirstCopy137Site) And GetBool(IA137.Spouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IA148Sp.TotCode64){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub MEF137SP_Calculation(){n}{t}If GetBool(IA137.Spouse) = True And GetCurrency(IA137.TotEthSoldCr) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub MEF137SPPTE_Calculation(){n}{t}If GetBool(IA137.Spouse) = True And GetCurrency(IA137.PassThruCr) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub MEF137TP_Calculation(){n}{t}If GetBool(IA137.Taxpayer) = True And GetCurrency(IA137.TotEthSoldCr) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub MEF137TPPTE_Calculation(){n}{t}If GetBool(IA137.Taxpayer) = True And GetCurrency(IA137.PassThruCr) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub MeFBioDisparity_Calculation(){n}{t}ReturnVal = GetFloat(IA137.BioDisparity) * 100{n}End Sub
Sub Names_Calculation(){n}{t}If GetBool(IA137.Spouse) = True Then{n}{t}{t}ReturnVal = GetString(IARequired.SPCombName){n}{t}Else{n}{t}{t}ReturnVal = GetString(IARequired.TPCombName){n}{t}End If{n}End Sub
Sub Owner_Calculation(){n}{t}If GetBool(IA137.Taxpayer) = True Then{n}{t}{t}ReturnVal = GetString(USWBasicInfo.TPTheName){n}{t}Else{n}{t}{t}ReturnVal = GetString(USWBasicInfo.SPTheName){n}{t}End If{n}End Sub
Sub PassThruCr_Calculation(){n}{t}ReturnVal = GetCurrency(IA137.PTECredit(0)){n}End Sub
Sub Print_Calculation(){n}{t}If GetBool(IA137.Spouse) = True And GetBool(IAF1040.CombMFS) = False Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetCurrency(IA137.TotEthSoldCr) > 0 Or GetCurrency(IA137.PassThruCr) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub PTEFEIN_Calculation(){n}{t}If GetCurrency(IA137.PassThruCr) > 0 Then{n}{t}{t}ReturnVal = GetString(IA137.PTEEIN(0)){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub PTEName_Calculation(Index As Integer){n}{t}If GetCurrency(IA137.PassThruCr) > 0 Then{n}{t}{t}ReturnVal = GetString(IA137.PTEEntity(0)){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub RetailCityStZip_Calculation(){n}{t}ReturnVal = GetString(IA137.City) & ", " & GetString(IA137.StateAbb) & " " & GetString(IA137.ZipCode){n}End Sub
Sub SpouseCommon_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = GetString(USWBasicInfo.SPCommon){n}{t}Else{n}{t}{t}ReturnVal = "Not Applicable"{n}{t}End If{n}End Sub
Sub SSN_Calculation(){n}{t}If GetBool(IA137.Spouse) = True Then{n}{t}{t}ReturnVal = GetString(IAF1040.SpouseSSN){n}{t}Else{n}{t}{t}ReturnVal = GetString(IAF1040.SSN){n}{t}End If{n}End Sub
Sub TotB10Gal_Calculation(){n}{t}ReturnVal = CLng(Round(GetNumber(IA137.B10Gal) * 0.11)){n}End Sub
Sub TotB20Gal_Calculation(){n}{t}ReturnVal = CLng(Round(GetNumber(IA137.B20Gal) * 0.2)){n}End Sub
Sub TotB2Gal_Calculation(){n}{t}ReturnVal = CLng(Round(GetNumber(IA137.B2Gal) * 0.02)){n}End Sub
Sub TotB5Gal_Calculation(){n}{t}ReturnVal = CLng(Round(GetNumber(IA137.B5Gal) * 0.05)){n}End Sub
Sub TotBTypeGal_Calculation(){n}{t}ReturnVal = CLng(Round(GetFloat(IA137.BTypeGal) * (GetFloat(IA137.BTypeGalPer) / 100#))){n}End Sub
Sub TotE10Gal_Calculation(){n}{t}ReturnVal = CLng(Round(GetNumber(IA137.E10Gal) * 0.1)){n}End Sub
Sub TotE15Gal_Calculation(){n}{t}ReturnVal = CLng(Round(GetNumber(IA137.E15Gal) * 0.15)){n}End Sub
Sub TotE85Gal_Calculation(){n}{t}ReturnVal = CLng(Round(GetNumber(IA137.E85Gal) * 0.79)){n}End Sub
Sub TotEth_Calculation(){n}{t}ReturnVal = GetNumber(IA137.TotEthGal){n}End Sub
Sub TotEthGal_Calculation(){n}{t}ReturnVal = GetNumber(IA137.TotE10Gal) + GetNumber(IA137.TotE15Gal) + GetNumber(IA137.TotE85Gal) + GetNumber(IA137.TotOthGal){n}End Sub
Sub TotEthGalColA_Calculation(){n}{t}ReturnVal = GetNumber(IA137.E10Gal) + GetNumber(IA137.E15Gal) + GetNumber(IA137.E85Gal) + GetNumber(IA137.OthGal){n}End Sub
Sub TotEthSoldCr_Calculation(){n}{t}ReturnVal = GetCurrency(IA137.EthSoldCr){n}End Sub
Sub TotGas_Calculation(){n}{t}ReturnVal = GetNumber(IA137.E10Gal) + GetNumber(IA137.E15Gal) + GetNumber(IA137.E85Gal) + GetNumber(IA137.OthGal) + GetNumber(IA137.NonEthGal){n}End Sub
Sub TotGal_Calculation(){n}{t}ReturnVal = GetNumber(IA137.TotEthGal) + GetNumber(IA137.TotB2Gal) + GetNumber(IA137.TotB5Gal) + GetNumber(IA137.TotB10Gal) + GetNumber(IA137.TotB20Gal) + GetNumber(IA137.TotBTypeGal){n}End Sub
Sub TotOthGal_Calculation(){n}{t}ReturnVal = CLng(Round(GetFloat(IA137.OthGal) * (GetFloat(IA137.OthGalPer) / 100#))){n}End SubSub PTECode_Calculation(Index As Integer){n}  Dim strindex As Long{n}  Dim copystr As String{n}  Dim Copy As Long{n}  {n}  If GetNumber(IA148Sp.NonRefNbr) > 10 And Index > 9 Then{n}{t}strindex = ((Index - 1) * 4) + 1{n}  Else{n}{t}strindex = ((Index) * 4) + 1{n}  End If{n}  {n}  copystr = Trim(Mid(GetString(IA148Sp.NonRefCopiesStr), strindex, 4)){n}  {n}  If Index = 9 And GetNumber(IA148Sp.NonRefNbr) > 10 Then{n}{t}ReturnVal = "Stmt"{n}  ElseIf copystr <> "" Then{n}{t}Copy = CLng(copystr){n}{t}If (Copy > 100) And (Copy <= 200) Then{n}{t}  ReturnVal = "04"{n}{t}ElseIf (Copy > 200) And (Copy <= 300) Then{n}{t}  ReturnVal = "11"{n}{t}ElseIf (Copy > 300) And (Copy <= 400) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 300){n}{t}ElseIf (Copy > 400) And (Copy <= 500) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 400){n}{t}ElseIf (Copy > 500) And (Copy <= 600) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 500){n}{t}ElseIf (Copy > 600) And (Copy <= 700) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 600){n}{t}ElseIf (Copy > 700) And (Copy <= 800) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 700){n}{t}ElseIf (Copy > 800) And (Copy <= 900) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 800){n}{t}ElseIf (Copy > 900) And (Copy <= 1000) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 900){n}{t}ElseIf (Copy > 1000) And (Copy <= 1100) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 1000){n}{t}ElseIf (Copy > 1100) And (Copy <= 1200) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 1100){n}{t}ElseIf (Copy > 1200) And (Copy <= 1300) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 1200){n}{t}ElseIf (Copy > 1300) And (Copy <= 1400) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 1300){n}{t}ElseIf (Copy > 1400) And (Copy <= 1500) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 1400){n}{t}ElseIf (Copy > 1500) And (Copy <= 1600) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 1500){n}{t}ElseIf (Copy > 1600) And (Copy <= 1700) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 1600){n}{t}ElseIf (Copy > 1700) And (Copy <= 1800) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 1700){n}{t}ElseIf (Copy > 1800) And (Copy <= 1900) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 1800){n}{t}ElseIf (Copy > 1900) And (Copy <= 2000) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 1900){n}{t}ElseIf (Copy > 2000) And (Copy <= 2100) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 2000){n}{t}ElseIf (Copy > 2100) And (Copy <= 2200) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 2100){n}{t}ElseIf (Copy > 2200) And (Copy <= 2300) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 2200){n}{t}ElseIf (Copy > 2300) And (Copy <= 2400) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 2300){n}{t}ElseIf (Copy > 2400) And (Copy <= 2500) Then{n}{t}  ReturnVal = "09"{n}{t}End If{n}  End If{n}  ReturnVal = ""{n}End Sub
Sub PTEEIN_Calculation(Index As Integer){n}  Dim strindex As Long{n}  Dim copystr As String{n}  Dim Copy As Long{n}  {n}  If GetNumber(IA148Sp.NonRefNbr) > 10 And Index > 9 Then{n}{t}strindex = ((Index - 1) * 4) + 1{n}  Else{n}{t}strindex = ((Index) * 4) + 1{n}  End If{n}  {n}  copystr = Trim(Mid(GetString(IA148Sp.NonRefCopiesStr), strindex, 4)){n}  {n}  If Index = 9 And GetNumber(IA148Sp.NonRefNbr) > 10 Then{n}{t}ReturnVal = ""{n}  ElseIf copystr <> "" Then{n}{t}Copy = CLng(copystr){n}{t}If (Copy > 100) And (Copy <= 200) Then{n}{t}  ReturnVal = ""{n}{t}ElseIf (Copy > 200) And (Copy <= 300) Then{n}{t}  ReturnVal = GetString(IA134.SCorpEIN, (Copy) - 200){n}{t}ElseIf (Copy > 300) And (Copy <= 400) Then{n}{t}  ReturnVal = GetString(IACred.PTEEIN, (Copy) - 300){n}{t}ElseIf (Copy > 400) And (Copy <= 500) Then{n}{t}  ReturnVal = GetString(IACred.PTEEIN, (Copy) - 400){n}{t}ElseIf (Copy > 500) And (Copy <= 600) Then{n}{t}  ReturnVal = GetString(IACred.PTEEIN, (Copy) - 500){n}{t}ElseIf (Copy > 600) And (Copy <= 700) Then{n}{t}  ReturnVal = GetString(IACred.PTEEIN, (Copy) - 600){n}{t}ElseIf (Copy > 700) And (Copy <= 800) Then{n}{t}  ReturnVal = GetString(IACred.PTEEIN, (Copy) - 700){n}{t}ElseIf (Copy > 800) And (Copy <= 900) Then{n}{t}  ReturnVal = GetString(IACred.PTEEIN, (Copy) - 800){n}{t}ElseIf (Copy > 900) And (Copy <= 1000) Then{n}{t}  ReturnVal = GetString(IACred.PTEEIN, (Copy) - 900){n}{t}ElseIf (Copy > 1000) And (Copy <= 1100) Then{n}{t}  ReturnVal = GetString(IACred.PTEEIN, (Copy) - 1000){n}{t}ElseIf (Copy > 1100) And (Copy <= 1200) Then{n}{t}  ReturnVal = GetString(IACred.PTEEIN, (Copy) - 1100){n}{t}ElseIf (Copy > 1200) And (Copy <= 1300) Then{n}{t}  ReturnVal = GetString(IACred.PTEEIN, (Copy) - 1200){n}{t}ElseIf (Copy > 1300) And (Copy <= 1400) Then{n}{t}  ReturnVal = GetString(IACred.PTEEIN, (Copy) - 1300){n}{t}ElseIf (Copy > 1400) And (Copy <= 1500) Then{n}{t}  ReturnVal = GetString(IACred.PTEEIN, (Copy) - 1400){n}{t}ElseIf (Copy > 1500) And (Copy <= 1600) Then{n}{t}  ReturnVal = GetString(IACred.PTEEIN, (Copy) - 1500){n}{t}ElseIf (Copy > 1600) And (Copy <= 1700) Then{n}{t}  ReturnVal = GetString(IACred.PTEEIN, (Copy) - 1600){n}{t}ElseIf (Copy > 1700) And (Copy <= 1800) Then{n}{t}  ReturnVal = GetString(IACred.PTEEIN, (Copy) - 1700){n}{t}ElseIf (Copy > 1800) And (Copy <= 1900) Then{n}{t}  ReturnVal = GetString(IACred.PTEEIN, (Copy) - 1800){n}{t}ElseIf (Copy > 1900) And (Copy <= 2000) Then{n}{t}  ReturnVal = GetString(IACred.PTEEIN, (Copy) - 1900){n}{t}ElseIf (Copy > 2000) And (Copy <= 2100) Then{n}{t}  ReturnVal = GetString(IACred.PTEEIN, (Copy) - 2000){n}{t}ElseIf (Copy > 2100) And (Copy <= 2200) Then{n}{t}  ReturnVal = GetString(IACred.PTEEIN, (Copy) - 2100){n}{t}ElseIf (Copy > 2200) And (Copy <= 2300) Then{n}{t}  ReturnVal = GetString(IACred.PTEEIN, (Copy) - 2200){n}{t}ElseIf (Copy > 2300) And (Copy <= 2400) Then{n}{t}  ReturnVal = GetString(IACred.PTEEIN, (Copy) - 2300){n}{t}ElseIf (Copy > 2400) And (Copy <= 2500) Then{n}{t}  ReturnVal = ""{n}{t}End If{n}  End If{n}  ReturnVal = ""{n}End Sub
Sub PTEIndexNbr_Calculation(Index As Integer){n}{t}Dim count As Long{n}{t}Dim max As Long{n}{t}Dim listedcount As Long{n}{t}{n}{t}listedcount = 0{n}{t}count = 0{n}{t}{n}{t}Do While count < 98{n}{t}{t}If Trim(GetString(IA148BumpSp.PTEName(count))) <> "" Then{n}{t}{t}{t}If listedcount = Index Then{n}{t}{t}{t}{t}ReturnVal = count{n}{t}{t}{t}Else{n}{t}{t}{t}{t}listedcount = listedcount + 1{n}{t}{t}{t}End If{n}{t}{t}End If{n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{t}{n}{t}ReturnVal = 0{n}End Sub
Sub PTELine_Calculation(Index As Integer){n}{t}Dim Hold As Long{n}{t}{n}{t}Hold = Index + 1{n}{t}{t}{n}{t}If Index > 9 Then{n}{t}{t}ReturnVal = "Attached stmt"{n}{t}Else{n}{t}{t}ReturnVal = CStr(Hold){n}{t}End If{n}End Sub
Sub PTEName_Calculation(Index As Integer){n}  Dim strindex As Long{n}  Dim copystr As String{n}  Dim Copy As Long{n}  {n}  If GetNumber(IA148Sp.NonRefNbr) > 10 And Index > 9 Then{n}{t}strindex = ((Index - 1) * 4) + 1{n}  Else{n}{t}strindex = ((Index) * 4) + 1{n}  End If{n}  {n}  copystr = Trim(Mid(GetString(IA148Sp.NonRefCopiesStr), strindex, 4)){n}  {n}  If Index = 9 And GetNumber(IA148Sp.NonRefNbr) > 10 Then{n}{t}ReturnVal = ""{n}  ElseIf copystr <> "" Then{n}{t}Copy = CLng(copystr){n}{t}If (Copy > 100) And (Copy <= 200) Then{n}{t}  ReturnVal = ""{n}{t}ElseIf (Copy > 200) And (Copy <= 300) Then{n}{t}  ReturnVal = GetString(IA134.SCorpName, (Copy) - 200){n}{t}ElseIf (Copy > 300) And (Copy <= 400) Then{n}{t}  ReturnVal = GetString(IACred.PTEEntity, (Copy) - 300){n}{t}ElseIf (Copy > 400) And (Copy <= 500) Then{n}{t}  ReturnVal = GetString(IACred.PTEEntity, (Copy) - 400){n}{t}ElseIf (Copy > 500) And (Copy <= 600) Then{n}{t}  ReturnVal = GetString(IACred.PTEEntity, (Copy) - 500){n}{t}ElseIf (Copy > 600) And (Copy <= 700) Then{n}{t}  ReturnVal = GetString(IACred.PTEEntity, (Copy) - 600){n}{t}ElseIf (Copy > 700) And (Copy <= 800) Then{n}{t}  ReturnVal = GetString(IACred.PTEEntity, (Copy) - 700){n}{t}ElseIf (Copy > 800) And (Copy <= 900) Then{n}{t}  ReturnVal = GetString(IACred.PTEEntity, (Copy) - 800){n}{t}ElseIf (Copy > 900) And (Copy <= 1000) Then{n}{t}  ReturnVal = GetString(IACred.PTEEntity, (Copy) - 900){n}{t}ElseIf (Copy > 1000) And (Copy <= 1100) Then{n}{t}  ReturnVal = GetString(IACred.PTEEntity, (Copy) - 1000){n}{t}ElseIf (Copy > 1100) And (Copy <= 1200) Then{n}{t}  ReturnVal = GetString(IACred.PTEEntity, (Copy) - 1100){n}{t}ElseIf (Copy > 1200) And (Copy <= 1300) Then{n}{t}  ReturnVal = GetString(IACred.PTEEntity, (Copy) - 1200){n}{t}ElseIf (Copy > 1300) And (Copy <= 1400) Then{n}{t}  ReturnVal = GetString(IACred.PTEEntity, (Copy) - 1300){n}{t}ElseIf (Copy > 1400) And (Copy <= 1500) Then{n}{t}  ReturnVal = GetString(IACred.PTEEntity, (Copy) - 1400){n}{t}ElseIf (Copy > 1500) And (Copy <= 1600) Then{n}{t}  ReturnVal = GetString(IACred.PTEEntity, (Copy) - 1500){n}{t}ElseIf (Copy > 1600) And (Copy <= 1700) Then{n}{t}  ReturnVal = GetString(IACred.PTEEntity, (Copy) - 1600){n}{t}ElseIf (Copy > 1700) And (Copy <= 1800) Then{n}{t}  ReturnVal = GetString(IACred.PTEEntity, (Copy) - 1700){n}{t}ElseIf (Copy > 1800) And (Copy <= 1900) Then{n}{t}  ReturnVal = GetString(IACred.PTEEntity, (Copy) - 1800){n}{t}ElseIf (Copy > 1900) And (Copy <= 2000) Then{n}{t}  ReturnVal = GetString(IACred.PTEEntity, (Copy) - 1900){n}{t}ElseIf (Copy > 2000) And (Copy <= 2100) Then{n}{t}  ReturnVal = GetString(IACred.PTEEntity, (Copy) - 2000){n}{t}ElseIf (Copy > 2100) And (Copy <= 2200) Then{n}{t}  ReturnVal = GetString(IACred.PTEEntity, (Copy) - 2100){n}{t}ElseIf (Copy > 2200) And (Copy <= 2300) Then{n}{t}  ReturnVal = GetString(IACred.PTEEntity, (Copy) - 2200){n}{t}ElseIf (Copy > 2300) And (Copy <= 2400) Then{n}{t}  ReturnVal = GetString(IACred.PTEEntity, (Copy) - 2300){n}{t}ElseIf (Copy > 2400) And (Copy <= 2500) Then{n}{t}  ReturnVal = ""{n}{t}End If{n}  End If{n}  ReturnVal = ""{n}End Sub
Sub PTENRTrig_Calculation(Index As Integer){n}{t}If GetString(IA148BumpSp.PTECode(Index)) = "04" Or GetString(IA148BumpSp.PTECode(Index)) = "11" Or GetString(IA148BumpSp.PTECode(Index)) = "09" Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf Trim(GetString(IA148BumpSp.PTEName(Index))) <> "" Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub PTERefTrig_Calculation(Index As Integer){n}{t}If GetString(IA148BumpSp.RefPTECode(Index)) = "64" Or GetString(IA148BumpSp.RefPTECode(Index)) = "58" Or GetString(IA148BumpSp.RefPTECode(Index)) = "55" Or GetString(IA148BumpSp.RefPTECode(Index)) = "52" Or GetString(IA148BumpSp.RefPTECode(Index)) = "59" Or GetString(IA148BumpSp.RefPTECode(Index)) = "65" Or GetString(IA148BumpSp.RefPTECode(Index)) = "66" Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf Trim(GetString(IA148BumpSp.RefPTEName(Index))) <> "" Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub RefPTECode_Calculation(Index As Integer){n}  Dim strindex As Long{n}  Dim copystr As String{n}  Dim Copy As Long{n}  {n}  If GetNumber(IA148Sp.NonRefNbr) > 10 And Index > 9 Then{n}{t}strindex = ((Index - 1) * 4) + 1{n}  Else{n}{t}strindex = ((Index) * 4) + 1{n}  End If{n}  copystr = Trim(Mid(GetString(IA148Sp.RefCopiesStr), strindex, 4)){n}  {n}  If Index = 6 And GetNumber(IA148Sp.RefNbr) > 7 Then{n}{t}ReturnVal = "See Statement Attached"{n}  ElseIf copystr <> "" Then{n}{t}Copy = CLng(copystr){n}{t}If (Copy > 100) And (Copy <= 200) Then{n}{t}  ReturnVal = "52"{n}{t}ElseIf (Copy > 200) And (Copy <= 300) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 200){n}{t}ElseIf (Copy > 300) And (Copy <= 400) Then{n}{t}  ReturnVal = "55"{n}{t}ElseIf (Copy > 400) And (Copy <= 500) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 400){n}{t}ElseIf (Copy > 500) And (Copy <= 600) Then{n}{t}  ReturnVal = "58"{n}{t}ElseIf (Copy > 600) And (Copy <= 700) Then{n}{t}  ReturnVal = "58"{n}{t}ElseIf (Copy > 700) And (Copy <= 800) Then{n}{t}  ReturnVal = "59"{n}{t}ElseIf (Copy > 800) And (Copy <= 900) Then{n}{t}  ReturnVal = "59"{n}{t}ElseIf (Copy > 900) And (Copy <= 1000) Then{n}{t}  ReturnVal = "64"{n}{t}ElseIf (Copy > 1000) And (Copy <= 1100) Then{n}{t}  ReturnVal = "65"{n}{t}ElseIf (Copy > 1100) And (Copy <= 1200) Then{n}{t}  ReturnVal = "66"{n}{t}ElseIf (Copy > 1200) And (Copy <= 1300) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 1200){n}{t}ElseIf (Copy > 1300) And (Copy <= 1400) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 1300){n}{t}ElseIf (Copy > 1400) And (Copy <= 1500) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 1400){n}{t}End If{n}  End If{n}  ReturnVal = ""{n}End Sub
Sub RefPTEEIN_Calculation(Index As Integer){n}  Dim strindex As Long{n}  Dim copystr As String{n}  Dim Copy As Long{n}  {n}  If GetNumber(IA148Sp.NonRefNbr) > 10 And Index > 9 Then{n}{t}strindex = ((Index - 1) * 4) + 1{n}  Else{n}{t}strindex = ((Index) * 4) + 1{n}  End If{n}  copystr = Trim(Mid(GetString(IA148Sp.RefCopiesStr), strindex, 4)){n}  {n}  If Index = 6 And GetNumber(IA148Sp.RefNbr) > 7 Then{n}{t}ReturnVal = ""{n}  ElseIf copystr <> "" Then{n}{t}Copy = CLng(copystr){n}{t}If (Copy > 100) And (Copy <= 200) Then{n}{t}  ReturnVal = GetString(IA8864.PTEEIN(0), (Copy) - 100){n}{t}ElseIf (Copy > 200) And (Copy <= 300) Then{n}{t}  ReturnVal = GetString(IACred.PTEEIN, (Copy) - 200){n}{t}ElseIf (Copy > 300) And (Copy <= 400) Then{n}{t}  ReturnVal = GetString(IA135.PTEEIN(0), (Copy) - 300){n}{t}ElseIf (Copy > 400) And (Copy <= 500) Then{n}{t}  ReturnVal = GetString(IACred.PTEEIN, (Copy) - 400){n}{t}ElseIf (Copy > 500) And (Copy <= 600) Then{n}{t}  ReturnVal = GetString(IA128.PTEEIN(0), (Copy) - 500){n}{t}ElseIf (Copy > 600) And (Copy <= 700) Then{n}{t}  ReturnVal = GetString(IA128S.PTEEIN(0), (Copy) - 600){n}{t}ElseIf (Copy > 700) And (Copy <= 800) Then{n}{t}  ReturnVal = GetString(IA128.PTEEIN(0), (Copy) - 700){n}{t}ElseIf (Copy > 800) And (Copy <= 900) Then{n}{t}  ReturnVal = GetString(IA128S.PTEEIN(0), (Copy) - 800){n}{t}ElseIf (Copy > 900) And (Copy <= 1000) Then{n}{t}  ReturnVal = GetString(IA137.PTEEIN(0), (Copy) - 900){n}{t}ElseIf (Copy > 1000) And (Copy <= 1100) Then{n}{t}  ReturnVal = GetString(IA138.PTEEIN(0), (Copy) - 1000){n}{t}ElseIf (Copy > 1100) And (Copy <= 1200) Then{n}{t}  ReturnVal = ""{n}{t}ElseIf (Copy > 1200) And (Copy <= 1300) Then{n}{t}  ReturnVal = GetString(IACred.PTEEIN, (Copy) - 1200){n}{t}ElseIf (Copy > 1300) And (Copy <= 1400) Then{n}{t}  ReturnVal = GetString(IACred.PTEEIN, (Copy) - 1300){n}{t}ElseIf (Copy > 1400) And (Copy <= 1500) Then{n}{t}  ReturnVal = GetString(IACred.PTEEIN, (Copy) - 1400){n}{t}End If{n}  End If{n}  ReturnVal = ""{n}End Sub
Sub RefPTEIndexNbr_Calculation(Index As Integer){n}{t}Dim count As Long{n}{t}Dim max As Long{n}{t}Dim listedcount As Long{n}{t}{n}{t}listedcount = 0{n}{t}count = 0{n}{t}{n}{t}Do While count < 69{n}{t}{t}If Trim(GetString(IA148BumpSp.RefPTEName(count))) <> "" Then{n}{t}{t}{t}If listedcount = Index Then{n}{t}{t}{t}{t}ReturnVal = count{n}{t}{t}{t}Else{n}{t}{t}{t}{t}listedcount = listedcount + 1{n}{t}{t}{t}End If{n}{t}{t}End If{n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{t}{n}{t}ReturnVal = 0{n}End Sub
Sub RefPTELine_Calculation(Index As Integer){n}{t}Dim Hold As Long{n}{t}{n}{t}Hold = Index + 11{n}{t}{n}{t}If Index > 9 Then{n}{t}{t}ReturnVal = "Attached stmt"{n}{t}Else{n}{t}{t}ReturnVal = CStr(Hold){n}{t}End If{n}End Sub
Sub RefPTEName_Calculation(Index As Integer){n}  Dim strindex As Long{n}  Dim copystr As String{n}  Dim Copy As Long{n}  {n}  If GetNumber(IA148Sp.NonRefNbr) > 10 And Index > 9 Then{n}{t}strindex = ((Index - 1) * 4) + 1{n}  Else{n}{t}strindex = ((Index) * 4) + 1{n}  End If{n}  copystr = Trim(Mid(GetString(IA148Sp.RefCopiesStr), strindex, 4)){n}  {n}  If Index = 6 And GetNumber(IA148Sp.RefNbr) > 7 Then{n}{t}ReturnVal = ""{n}  ElseIf copystr <> "" Then{n}{t}Copy = CLng(copystr){n}{t}If (Copy > 100) And (Copy <= 200) Then{n}{t}  ReturnVal = GetString(IA8864.PTEEntity(0), (Copy) - 100){n}{t}ElseIf (Copy > 200) And (Copy <= 300) Then{n}{t}  ReturnVal = GetString(IACred.PTEEntity, (Copy) - 200){n}{t}ElseIf (Copy > 300) And (Copy <= 400) Then{n}{t}  ReturnVal = GetString(IA135.PTEEntity(0), (Copy) - 300){n}{t}ElseIf (Copy > 400) And (Copy <= 500) Then{n}{t}  ReturnVal = GetString(IACred.PTEEntity, (Copy) - 400){n}{t}ElseIf (Copy > 500) And (Copy <= 600) Then{n}{t}  ReturnVal = GetString(IA128.PTEEntity(0), (Copy) - 500){n}{t}ElseIf (Copy > 600) And (Copy <= 700) Then{n}{t}  ReturnVal = GetString(IA128S.PTEEntity(0), (Copy) - 600){n}{t}ElseIf (Copy > 700) And (Copy <= 800) Then{n}{t}  ReturnVal = GetString(IA128.PTEEntity(0), (Copy) - 700){n}{t}ElseIf (Copy > 800) And (Copy <= 900) Then{n}{t}  ReturnVal = GetString(IA128S.PTEEntity(0), (Copy) - 800){n}{t}ElseIf (Copy > 900) And (Copy <= 1000) Then{n}{t}  ReturnVal = GetString(IA137.PTEEntity(0), (Copy) - 900){n}{t}ElseIf (Copy > 1000) And (Copy <= 1100) Then{n}{t}  ReturnVal = GetString(IA138.PTEEntity(0), (Copy) - 1000){n}{t}ElseIf (Copy > 1100) And (Copy <= 1200) Then{n}{t}  ReturnVal = ""{n}{t}ElseIf (Copy > 1200) And (Copy <= 1300) Then{n}{t}  ReturnVal = GetString(IACred.PTEEntity, (Copy) - 1200){n}{t}ElseIf (Copy > 1300) And (Copy <= 1400) Then{n}{t}  ReturnVal = GetString(IACred.PTEEntity, (Copy) - 1300){n}{t}ElseIf (Copy > 1400) And (Copy <= 1500) Then{n}{t}  ReturnVal = GetString(IACred.PTEEntity, (Copy) - 1400){n}{t}End If{n}  End If{n}  ReturnVal = ""{n}End Sub
Sub RefTPPerc_Calculation(Index As Integer){n}  Dim strindex As Long{n}  Dim copystr As String{n}  Dim Copy As Long{n}  {n}  If GetNumber(IA148Sp.NonRefNbr) > 10 And Index > 9 Then{n}{t}strindex = ((Index - 1) * 4) + 1{n}  Else{n}{t}strindex = ((Index) * 4) + 1{n}  End If{n}  copystr = Trim(Mid(GetString(IA148Sp.RefCopiesStr), strindex, 4)){n}  {n}  If Index = 6 And GetNumber(IA148Sp.RefNbr) > 7 Then{n}{t}ReturnVal = 0{n}  ElseIf copystr <> "" Then{n}{t}Copy = CLng(copystr){n}{t}If (Copy > 100) And (Copy <= 200) Then{n}{t}  ReturnVal = GetFloat(IA8864.TPPerc(0), (Copy) - 100){n}{t}ElseIf (Copy > 200) And (Copy <= 300) Then{n}{t}  ReturnVal = GetFloat(IACred.TPPerc, (Copy) - 200){n}{t}ElseIf (Copy > 300) And (Copy <= 400) Then{n}{t}  ReturnVal = GetFloat(IA135.TPPerc(0), (Copy) - 300){n}{t}ElseIf (Copy > 400) And (Copy <= 500) Then{n}{t}  ReturnVal = GetFloat(IACred.TPPerc, (Copy) - 400){n}{t}ElseIf (Copy > 500) And (Copy <= 600) Then{n}{t}  ReturnVal = GetFloat(IA128.TPPerc(0), (Copy) - 500){n}{t}ElseIf (Copy > 600) And (Copy <= 700) Then{n}{t}  ReturnVal = GetFloat(IA128S.TPPerc(0), (Copy) - 600){n}{t}ElseIf (Copy > 700) And (Copy <= 800) Then{n}{t}  ReturnVal = GetFloat(IA128.TPPerc(0), (Copy) - 700){n}{t}ElseIf (Copy > 800) And (Copy <= 900) Then{n}{t}  ReturnVal = GetFloat(IA128S.TPPerc(0), (Copy) - 800){n}{t}ElseIf (Copy > 900) And (Copy <= 1000) Then{n}{t}  ReturnVal = GetFloat(IA137.TPPerc(0), (Copy) - 900){n}{t}ElseIf (Copy > 1000) And (Copy <= 1100) Then{n}{t}  ReturnVal = GetFloat(IA138.TPPerc(0), (Copy) - 1000){n}{t}ElseIf (Copy > 1100) And (Copy <= 1200) Then{n}{t}  ReturnVal = 0{n}{t}ElseIf (Copy > 1200) And (Copy <= 1300) Then{n}{t}  ReturnVal = GetFloat(IACred.TPPerc, (Copy) - 1200){n}{t}ElseIf (Copy > 1300) And (Copy <= 1400) Then{n}{t}  ReturnVal = GetFloat(IACred.TPPerc, (Copy) - 1300){n}{t}ElseIf (Copy > 1400) And (Copy <= 1500) Then{n}{t}  ReturnVal = GetFloat(IACred.TPPerc, (Copy) - 1400){n}{t}End If{n}  End If{n}  ReturnVal = 0{n}End Sub
Sub TotPTE_Calculation(){n}{t}Dim count As Integer{n}{t}Dim Total As Integer{n}{n}{t}count = 0{n}{t}Total = 0{n}{n}{t}Do While count < 98{n}{t}{t}If Trim(GetString(IA148BumpSp.PTEName(count))) <> "" Then{n}{t}{t}{t}Total = Total + 1{n}{t}{t}Else{n}{t}{t}{t}Total = Total{n}{t}{t}End If{n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = Total{n}End Sub
Sub TotRefPTE_Calculation(){n}{t}Dim count As Integer{n}{t}Dim Total As Integer{n}{n}{t}count = 0{n}{t}Total = 0{n}{n}{t}Do While count < 69{n}{t}{t}If Trim(GetString(IA148BumpSp.RefPTEName(count))) <> "" Then{n}{t}{t}{t}Total = Total + 1{n}{t}{t}Else{n}{t}{t}{t}Total = Total{n}{t}{t}End If{n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = Total{n}End Sub
Sub TPPerc_Calculation(Index As Integer){n}  Dim strindex As Long{n}  Dim copystr As String{n}  Dim Copy As Long{n}  {n}  If GetNumber(IA148Sp.NonRefNbr) > 10 And Index > 9 Then{n}{t}strindex = ((Index - 1) * 4) + 1{n}  Else{n}{t}strindex = ((Index) * 4) + 1{n}  End If{n}  {n}  copystr = Trim(Mid(GetString(IA148Sp.NonRefCopiesStr), strindex, 4)){n}  {n}  If Index = 9 And GetNumber(IA148Sp.NonRefNbr) > 10 Then{n}{t}ReturnVal = 0{n}  ElseIf copystr <> "" Then{n}{t}Copy = CLng(copystr){n}{t}If (Copy > 100) And (Copy <= 200) Then{n}{t}  ReturnVal = 0{n}{t}ElseIf (Copy > 200) And (Copy <= 300) Then{n}{t}  ReturnVal = GetFloat(IA134.SCorpPerc, (Copy) - 200){n}{t}ElseIf (Copy > 300) And (Copy <= 400) Then{n}{t}  ReturnVal = GetFloat(IACred.TPPerc, (Copy) - 300){n}{t}ElseIf (Copy > 400) And (Copy <= 500) Then{n}{t}  ReturnVal = GetFloat(IACred.TPPerc, (Copy) - 400){n}{t}ElseIf (Copy > 500) And (Copy <= 600) Then{n}{t}  ReturnVal = GetFloat(IACred.TPPerc, (Copy) - 500){n}{t}ElseIf (Copy > 600) And (Copy <= 700) Then{n}{t}  ReturnVal = GetFloat(IACred.TPPerc, (Copy) - 600){n}{t}ElseIf (Copy > 700) And (Copy <= 800) Then{n}{t}  ReturnVal = GetFloat(IACred.TPPerc, (Copy) - 700){n}{t}ElseIf (Copy > 800) And (Copy <= 900) Then{n}{t}  ReturnVal = GetFloat(IACred.TPPerc, (Copy) - 800){n}{t}ElseIf (Copy > 900) And (Copy <= 1000) Then{n}{t}  ReturnVal = GetFloat(IACred.TPPerc, (Copy) - 900){n}{t}ElseIf (Copy > 1000) And (Copy <= 1100) Then{n}{t}  ReturnVal = GetFloat(IACred.TPPerc, (Copy) - 1000){n}{t}ElseIf (Copy > 1100) And (Copy <= 1200) Then{n}{t}  ReturnVal = GetFloat(IACred.TPPerc, (Copy) - 1100){n}{t}ElseIf (Copy > 1200) And (Copy <= 1300) Then{n}{t}  ReturnVal = GetFloat(IACred.TPPerc, (Copy) - 1200){n}{t}ElseIf (Copy > 1300) And (Copy <= 1400) Then{n}{t}  ReturnVal = GetFloat(IACred.TPPerc, (Copy) - 1300){n}{t}ElseIf (Copy > 1400) And (Copy <= 1500) Then{n}{t}  ReturnVal = GetFloat(IACred.TPPerc, (Copy) - 1400){n}{t}ElseIf (Copy > 1500) And (Copy <= 1600) Then{n}{t}  ReturnVal = GetFloat(IACred.TPPerc, (Copy) - 1500){n}{t}ElseIf (Copy > 1600) And (Copy <= 1700) Then{n}{t}  ReturnVal = GetFloat(IACred.TPPerc, (Copy) - 1600){n}{t}ElseIf (Copy > 1700) And (Copy <= 1800) Then{n}{t}  ReturnVal = GetFloat(IACred.TPPerc, (Copy) - 1700){n}{t}ElseIf (Copy > 1800) And (Copy <= 1900) Then{n}{t}  ReturnVal = GetFloat(IACred.TPPerc, (Copy) - 1800){n}{t}ElseIf (Copy > 1900) And (Copy <= 2000) Then{n}{t}  ReturnVal = GetFloat(IACred.TPPerc, (Copy) - 1900){n}{t}ElseIf (Copy > 2000) And (Copy <= 2100) Then{n}{t}  ReturnVal = GetFloat(IACred.TPPerc, (Copy) - 2000){n}{t}ElseIf (Copy > 2100) And (Copy <= 2200) Then{n}{t}  ReturnVal = GetFloat(IACred.TPPerc, (Copy) - 2100){n}{t}ElseIf (Copy > 2200) And (Copy <= 2300) Then{n}{t}  ReturnVal = GetFloat(IACred.TPPerc, (Copy) - 2200){n}{t}ElseIf (Copy > 2300) And (Copy <= 2400) Then{n}{t}  ReturnVal = GetFloat(IACred.TPPerc, (Copy) - 2300){n}{t}ElseIf (Copy > 2400) And (Copy <= 2500) Then{n}{t}  ReturnVal = 0{n}{t}End If{n}  End If{n}  ReturnVal = 0{n}End SubSub ArrayNonRefCr_Calculation(Index As Integer){n}{t}If Index = 0 Then{n}{t}{t}ReturnVal = GetCurrency(IA148Sp.NonRefCr1){n}{t}ElseIf Index = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IA148Sp.NonRefCr2){n}{t}ElseIf Index = 2 Then{n}{t}{t}ReturnVal = GetCurrency(IA148Sp.NonRefCr3){n}{t}ElseIf Index = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IA148Sp.NonRefCr4){n}{t}ElseIf Index = 4 Then{n}{t}{t}ReturnVal = GetCurrency(IA148Sp.NonRefCr5){n}{t}ElseIf Index = 5 Then{n}{t}{t}ReturnVal = GetCurrency(IA148Sp.NonRefCr6){n}{t}ElseIf Index = 6 Then{n}{t}{t}ReturnVal = GetCurrency(IA148Sp.NonRefCr7){n}{t}ElseIf Index = 7 Then{n}{t}{t}ReturnVal = GetCurrency(IA148Sp.NonRefCr8){n}{t}ElseIf Index = 8 Then{n}{t}{t}ReturnVal = GetCurrency(IA148Sp.NonRefCr9){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IA148Sp.NonRefCr10){n}{t}End If{n}End Sub
Sub AvailCr_Calculation(Index As Integer){n}{t}If GetString(IA148Sp.NonRefCode(Index)) = "09" Then{n}{t}{t}ReturnVal = GetCurrency(IA8801Sp.AMTCR){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IA148Sp.PYCarry(Index)) + GetCurrency(IA148Sp.CYCredit(Index)){n}{t}End If{n}End Sub
Sub CreateBPNonRef1_Calculation(){n}{t}If GetNumber(IA148Sp.NonRefNbr) > 10 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CreateBPNonRef2_Calculation(){n}{t}If GetNumber(IA148Sp.NonRefNbr) > 38 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CreateBPNonRef3_Calculation(){n}{t}If GetNumber(IA148Sp.NonRefNbr) > 67 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CreateBPNonRef4_Calculation(){n}{t}If GetNumber(IA148Sp.NonRefNbr) > 96 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CreateBPPTE1_Calculation(){n}{t}If GetNumber(IA148Sp.TotPTE) > 6 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CreateBPPTE2_Calculation(){n}{t}If GetNumber(IA148Sp.TotPTE) > 35 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CreateBPPTE3_Calculation(){n}{t}If GetNumber(IA148Sp.TotPTE) > 65 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CreateBPPTE4_Calculation(){n}{t}If GetNumber(IA148Sp.TotPTE) > 95 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CreateBPPTE5_Calculation(){n}{t}If GetNumber(IA148Sp.TotPTE) > 125 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CreateBPRef1_Calculation(){n}{t}If GetNumber(IA148Sp.RefNbr) > 7 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CreateBPRef2_Calculation(){n}{t}If GetNumber(IA148Sp.RefNbr) > 56 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CYCarry_Calculation(Index As Integer){n}{t}If GetString(IA148Sp.NonRefCode(Index)) = "09" Then{n}{t}{t}ReturnVal = GetCurrency(IA8801Sp.CYCarryforward){n}{t}Else{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(IA148Sp.AvailCr(Index)) - GetCurrency(IA148Sp.ArrayNonRefCr(Index)) - GetCurrency(IA148Sp.ExpCr(Index))){n}{t}End If{n}End Sub
Sub CYCredit_Calculation(Index As Integer){n}  Dim strindex As Long{n}  Dim copystr As String{n}  Dim Copy As Long{n}  {n}  strindex = ((Index) * 4) + 1{n}  copystr = Trim(Mid(GetString(IA148Sp.NonRefCopiesStr), strindex, 4)){n}  {n}  If Index = 9 And GetNumber(IA148Sp.NonRefNbr) > 10 Then{n}{t}ReturnVal = 0{n}  ElseIf copystr <> "" Then{n}{t}Copy = CLng(copystr){n}{t}If (Copy > 100) And (Copy <= 200) Then{n}{t}  ReturnVal = GetCurrency(IA147.FranchiseCr, (Copy) - 100){n}{t}ElseIf (Copy > 200) And (Copy <= 300) Then{n}{t}  ReturnVal = GetCurrency(IA134Sp.Credit, (Copy) - 200){n}{t}ElseIf (Copy > 300) And (Copy <= 400) Then{n}{t}  ReturnVal = GetCurrency(IACred.CYCredit, (Copy) - 300){n}{t}ElseIf (Copy > 400) And (Copy <= 500) Then{n}{t}  ReturnVal = GetCurrency(IACred.CYCredit, (Copy) - 400){n}{t}ElseIf (Copy > 500) And (Copy <= 600) Then{n}{t}  ReturnVal = GetCurrency(IACred.CYCredit, (Copy) - 500){n}{t}ElseIf (Copy > 600) And (Copy <= 700) Then{n}{t}  ReturnVal = GetCurrency(IACred.CYCredit, (Copy) - 600){n}{t}ElseIf (Copy > 700) And (Copy <= 800) Then{n}{t}  ReturnVal = GetCurrency(IACred.CYCredit, (Copy) - 700){n}{t}ElseIf (Copy > 800) And (Copy <= 900) Then{n}{t}  ReturnVal = GetCurrency(IACred.CYCredit, (Copy) - 800){n}{t}ElseIf (Copy > 900) And (Copy <= 1000) Then{n}{t}  ReturnVal = GetCurrency(IACred.CYCredit, (Copy) - 900){n}{t}ElseIf (Copy > 1000) And (Copy <= 1100) Then{n}{t}  ReturnVal = GetCurrency(IACred.CYCredit, (Copy) - 1000){n}{t}ElseIf (Copy > 1100) And (Copy <= 1200) Then{n}{t}  ReturnVal = GetCurrency(IACred.CYCredit, (Copy) - 1100){n}{t}ElseIf (Copy > 1200) And (Copy <= 1300) Then{n}{t}  ReturnVal = GetCurrency(IACred.CYCredit, (Copy) - 1200){n}{t}ElseIf (Copy > 1300) And (Copy <= 1400) Then{n}{t}  ReturnVal = GetCurrency(IACred.CYCredit, (Copy) - 1300){n}{t}ElseIf (Copy > 1400) And (Copy <= 1500) Then{n}{t}  ReturnVal = GetCurrency(IACred.CYCredit, (Copy) - 1400){n}{t}ElseIf (Copy > 1500) And (Copy <= 1600) Then{n}{t}  ReturnVal = GetCurrency(IACred.CYCredit, (Copy) - 1500){n}{t}ElseIf (Copy > 1600) And (Copy <= 1700) Then{n}{t}  ReturnVal = GetCurrency(IACred.CYCredit, (Copy) - 1600){n}{t}ElseIf (Copy > 1700) And (Copy <= 1800) Then{n}{t}  ReturnVal = GetCurrency(IACred.CYCredit, (Copy) - 1700){n}{t}ElseIf (Copy > 1800) And (Copy <= 1900) Then{n}{t}  ReturnVal = GetCurrency(IACred.CYCredit, (Copy) - 1800){n}{t}ElseIf (Copy > 1900) And (Copy <= 2000) Then{n}{t}  ReturnVal = GetCurrency(IACred.CYCredit, (Copy) - 1900){n}{t}ElseIf (Copy > 2000) And (Copy <= 2100) Then{n}{t}  ReturnVal = GetCurrency(IACred.CYCredit, (Copy) - 2000){n}{t}ElseIf (Copy > 2100) And (Copy <= 2200) Then{n}{t}  ReturnVal = GetCurrency(IACred.CYCredit, (Copy) - 2100){n}{t}ElseIf (Copy > 2200) And (Copy <= 2300) Then{n}{t}  ReturnVal = GetCurrency(IACred.CYCredit, (Copy) - 2200){n}{t}ElseIf (Copy > 2300) And (Copy <= 2400) Then{n}{t}  ReturnVal = GetCurrency(IACred.CYCredit, (Copy) - 2300){n}{t}ElseIf (Copy > 2400) And (Copy <= 2500) Then{n}{t}  ReturnVal = GetCurrency(IA8801Sp.PYAMT){n}{t}End If{n}  End If{n}  ReturnVal = 0{n}End Sub
Sub Desc_Calculation(){n}{t}Dim Total1 As Currency{n}{t}Dim Total2 As Currency{n}{t}{n}{t}Total1 = GetCurrency(IA148Sp.TotNonRefCr){n}{t}Total2 = GetCurrency(IA148Sp.TotRefCr){n}{t}{n}{t}If Total1 > 0 And Total2 = 0 Then{n}{t}{t}ReturnVal = CStr(Total1) & " Nonrefundable Credits"{n}{t}ElseIf Total1 = 0 And Total2 > 0 Then{n}{t}{t}ReturnVal = CStr(Total2) & " Refundable Credits"{n}{t}ElseIf Total1 > 0 And Total2 > 0 Then{n}{t}{t}ReturnVal = CStr(Total1) & " Nonrefundable Credits " & CStr(Total2) & " Refundable Credits"{n}{t}Else{n}{t}{t}ReturnVal = CStr(Total1) & " Credits"{n}{t}End If{n}End Sub
Sub ExpCr_Calculation(Index As Integer){n}  Dim strindex As Long{n}  Dim copystr As String{n}  Dim Copy As Long{n}  {n}  strindex = ((Index) * 4) + 1{n}  copystr = Trim(Mid(GetString(IA148Sp.NonRefCopiesStr), strindex, 4)){n}  {n}  If Index = 9 And GetNumber(IA148Sp.NonRefNbr) > 10 Then{n}{t}ReturnVal = 0{n}  ElseIf copystr <> "" Then{n}{t}Copy = CLng(copystr){n}{t}If (Copy > 100) And (Copy <= 200) Then{n}{t}  ReturnVal = MaxValue(0, GetCurrency(IA148Sp.AvailCr(Index)) - GetCurrency(IA148Sp.ArrayNonRefCr(Index))){n}{t}ElseIf (Copy > 200) And (Copy <= 300) Then{n}{t}  ReturnVal = MaxValue(0, GetCurrency(IA148Sp.AvailCr(Index)) - GetCurrency(IA148Sp.ArrayNonRefCr(Index))){n}{t}ElseIf (Copy > 300) And (Copy <= 400) Then{n}{t}  ReturnVal = GetCurrency(IACred.ExpCr, (Copy) - 300){n}{t}ElseIf (Copy > 400) And (Copy <= 500) Then{n}{t}  ReturnVal = GetCurrency(IACred.ExpCr, (Copy) - 400){n}{t}ElseIf (Copy > 500) And (Copy <= 600) Then{n}{t}  ReturnVal = GetCurrency(IACred.ExpCr, (Copy) - 500){n}{t}ElseIf (Copy > 600) And (Copy <= 700) Then{n}{t}  ReturnVal = GetCurrency(IACred.ExpCr, (Copy) - 600){n}{t}ElseIf (Copy > 700) And (Copy <= 800) Then{n}{t}  ReturnVal = GetCurrency(IACred.ExpCr, (Copy) - 700){n}{t}ElseIf (Copy > 800) And (Copy <= 900) Then{n}{t}  ReturnVal = GetCurrency(IACred.ExpCr, (Copy) - 800){n}{t}ElseIf (Copy > 900) And (Copy <= 1000) Then{n}{t}  ReturnVal = GetCurrency(IACred.ExpCr, (Copy) - 900){n}{t}ElseIf (Copy > 1000) And (Copy <= 1100) Then{n}{t}  ReturnVal = GetCurrency(IACred.ExpCr, (Copy) - 1000){n}{t}ElseIf (Copy > 1100) And (Copy <= 1200) Then{n}{t}  ReturnVal = GetCurrency(IACred.ExpCr, (Copy) - 1100){n}{t}ElseIf (Copy > 1200) And (Copy <= 1300) Then{n}{t}  ReturnVal = GetCurrency(IACred.ExpCr, (Copy) - 1200){n}{t}ElseIf (Copy > 1300) And (Copy <= 1400) Then{n}{t}  ReturnVal = GetCurrency(IACred.ExpCr, (Copy) - 1300){n}{t}ElseIf (Copy > 1400) And (Copy <= 1500) Then{n}{t}  ReturnVal = GetCurrency(IACred.ExpCr, (Copy) - 1400){n}{t}ElseIf (Copy > 1500) And (Copy <= 1600) Then{n}{t}  ReturnVal = GetCurrency(IACred.ExpCr, (Copy) - 1500){n}{t}ElseIf (Copy > 1600) And (Copy <= 1700) Then{n}{t}  ReturnVal = GetCurrency(IACred.ExpCr, (Copy) - 1600){n}{t}ElseIf (Copy > 1700) And (Copy <= 1800) Then{n}{t}  ReturnVal = GetCurrency(IACred.ExpCr, (Copy) - 1700){n}{t}ElseIf (Copy > 1800) And (Copy <= 1900) Then{n}{t}  ReturnVal = GetCurrency(IACred.ExpCr, (Copy) - 1800){n}{t}ElseIf (Copy > 1900) And (Copy <= 2000) Then{n}{t}  ReturnVal = GetCurrency(IACred.ExpCr, (Copy) - 1900){n}{t}ElseIf (Copy > 2000) And (Copy <= 2100) Then{n}{t}  ReturnVal = GetCurrency(IACred.ExpCr, (Copy) - 2000){n}{t}ElseIf (Copy > 2100) And (Copy <= 2200) Then{n}{t}  ReturnVal = GetCurrency(IACred.ExpCr, (Copy) - 2100){n}{t}ElseIf (Copy > 2200) And (Copy <= 2300) Then{n}{t}  ReturnVal = GetCurrency(IACred.ExpCr, (Copy) - 2200){n}{t}ElseIf (Copy > 2300) And (Copy <= 2400) Then{n}{t}  ReturnVal = GetCurrency(IACred.ExpCr, (Copy) - 2300){n}{t}ElseIf (Copy > 2400) And (Copy <= 2500) Then{n}{t}  ReturnVal = 0{n}{t}End If{n}  End If{n}  ReturnVal = 0{n}End Sub
Sub FirstCopy137Site_Calculation(){n}{t}Dim count As Long{n}{t}Dim max As Long{n}{n}{t}max = GetAllCopies(IA137){n}{t}count = 0{n}{t}{n}{t}Do While count < max{n}{t}{t}count = count + 1{n}{t}{t}If GetBool(IA137.Spouse, count) = True And GetBool(IA137.Site, count) = True And GetCurrency(IA137.TotEthSoldCr, count) > 0 Then{n}{t}{t}{t}ReturnVal = count{n}{t}{t}Else{n}{t}{t}{t}count = count{n}{t}{t}End If{n}{t}Loop{n}{t}{t}{n}{t}ReturnVal = 0{n}End Sub
Sub Names_Calculation(){n}{t}ReturnVal = GetString(IARequired.SPCombName){n}End Sub
Sub NonRefCert_Calculation(Index As Integer){n}  Dim strindex As Long{n}  Dim copystr As String{n}  Dim Copy As Long{n}  {n}  strindex = ((Index) * 4) + 1{n}  copystr = Trim(Mid(GetString(IA148Sp.NonRefCopiesStr), strindex, 4)){n}  {n}  If Index = 9 And GetNumber(IA148Sp.NonRefNbr) > 10 Then{n}{t}ReturnVal = "Stmt Att."{n}  ElseIf copystr <> "" Then{n}{t}Copy = CLng(copystr){n}{t}If (Copy > 100) And (Copy <= 200) Then{n}{t}  ReturnVal = ""{n}{t}ElseIf (Copy > 200) And (Copy <= 300) Then{n}{t}  ReturnVal = ""{n}{t}ElseIf (Copy > 300) And (Copy <= 400) Then{n}{t}  ReturnVal = GetString(IACred.CertNumber, (Copy) - 300){n}{t}ElseIf (Copy > 400) And (Copy <= 500) Then{n}{t}  ReturnVal = GetString(IACred.CertNumber, (Copy) - 400){n}{t}ElseIf (Copy > 500) And (Copy <= 600) Then{n}{t}  ReturnVal = GetString(IACred.CertNumber, (Copy) - 500){n}{t}ElseIf (Copy > 600) And (Copy <= 700) Then{n}{t}  ReturnVal = GetString(IACred.CertNumber, (Copy) - 600){n}{t}ElseIf (Copy > 700) And (Copy <= 800) Then{n}{t}  ReturnVal = GetString(IACred.CertNumber, (Copy) - 700){n}{t}ElseIf (Copy > 800) And (Copy <= 900) Then{n}{t}  ReturnVal = GetString(IACred.CertNumber, (Copy) - 800){n}{t}ElseIf (Copy > 900) And (Copy <= 1000) Then{n}{t}  ReturnVal = GetString(IACred.CertNumber, (Copy) - 900){n}{t}ElseIf (Copy > 1000) And (Copy <= 1100) Then{n}{t}  ReturnVal = GetString(IACred.CertNumber, (Copy) - 1000){n}{t}ElseIf (Copy > 1100) And (Copy <= 1200) Then{n}{t}  ReturnVal = GetString(IACred.CertNumber, (Copy) - 1100){n}{t}ElseIf (Copy > 1200) And (Copy <= 1300) Then{n}{t}  ReturnVal = GetString(IACred.CertNumber, (Copy) - 1200){n}{t}ElseIf (Copy > 1300) And (Copy <= 1400) Then{n}{t}  ReturnVal = GetString(IACred.CertNumber, (Copy) - 1300){n}{t}ElseIf (Copy > 1400) And (Copy <= 1500) Then{n}{t}  ReturnVal = GetString(IACred.CertNumber, (Copy) - 1400){n}{t}ElseIf (Copy > 1500) And (Copy <= 1600) Then{n}{t}  ReturnVal = GetString(IACred.CertNumber, (Copy) - 1500){n}{t}ElseIf (Copy > 1600) And (Copy <= 1700) Then{n}{t}  ReturnVal = GetString(IACred.CertNumber, (Copy) - 1600){n}{t}ElseIf (Copy > 1700) And (Copy <= 1800) Then{n}{t}  ReturnVal = GetString(IACred.CertNumber, (Copy) - 1700){n}{t}ElseIf (Copy > 1800) And (Copy <= 1900) Then{n}{t}  ReturnVal = GetString(IACred.CertNumber, (Copy) - 1800){n}{t}ElseIf (Copy > 1900) And (Copy <= 2000) Then{n}{t}  ReturnVal = GetString(IACred.CertNumber, (Copy) - 1900){n}{t}ElseIf (Copy > 2000) And (Copy <= 2100) Then{n}{t}  ReturnVal = GetString(IACred.CertNumber, (Copy) - 2000){n}{t}ElseIf (Copy > 2100) And (Copy <= 2200) Then{n}{t}  ReturnVal = GetString(IACred.CertNumber, (Copy) - 2100){n}{t}ElseIf (Copy > 2200) And (Copy <= 2300) Then{n}{t}  ReturnVal = GetString(IACred.CertNumber, (Copy) - 2200){n}{t}ElseIf (Copy > 2300) And (Copy <= 2400) Then{n}{t}  ReturnVal = GetString(IACred.CertNumber, (Copy) - 2300){n}{t}ElseIf (Copy > 2400) And (Copy <= 2500) Then{n}{t}  ReturnVal = ""{n}{t}End If{n}  End If{n}  ReturnVal = ""{n}End Sub
Sub NonRefCode_Calculation(Index As Integer){n}  Dim strindex As Long{n}  Dim copystr As String{n}  Dim Copy As Long{n}  {n}  strindex = ((Index) * 4) + 1{n}  copystr = Trim(Mid(GetString(IA148Sp.NonRefCopiesStr), strindex, 4)){n}  {n}  If Index = 9 And GetNumber(IA148Sp.NonRefNbr) > 10 Then{n}{t}ReturnVal = "See"{n}  ElseIf copystr <> "" Then{n}{t}Copy = CLng(copystr){n}{t}If (Copy > 100) And (Copy <= 200) Then{n}{t}  ReturnVal = "04"{n}{t}ElseIf (Copy > 200) And (Copy <= 300) Then{n}{t}  ReturnVal = "11"{n}{t}ElseIf (Copy > 300) And (Copy <= 400) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 300){n}{t}ElseIf (Copy > 400) And (Copy <= 500) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 400){n}{t}ElseIf (Copy > 500) And (Copy <= 600) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 500){n}{t}ElseIf (Copy > 600) And (Copy <= 700) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 600){n}{t}ElseIf (Copy > 700) And (Copy <= 800) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 700){n}{t}ElseIf (Copy > 800) And (Copy <= 900) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 800){n}{t}ElseIf (Copy > 900) And (Copy <= 1000) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 900){n}{t}ElseIf (Copy > 1000) And (Copy <= 1100) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 1000){n}{t}ElseIf (Copy > 1100) And (Copy <= 1200) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 1100){n}{t}ElseIf (Copy > 1200) And (Copy <= 1300) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 1200){n}{t}ElseIf (Copy > 1300) And (Copy <= 1400) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 1300){n}{t}ElseIf (Copy > 1400) And (Copy <= 1500) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 1400){n}{t}ElseIf (Copy > 1500) And (Copy <= 1600) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 1500){n}{t}ElseIf (Copy > 1600) And (Copy <= 1700) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 1600){n}{t}ElseIf (Copy > 1700) And (Copy <= 1800) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 1700){n}{t}ElseIf (Copy > 1800) And (Copy <= 1900) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 1800){n}{t}ElseIf (Copy > 1900) And (Copy <= 2000) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 1900){n}{t}ElseIf (Copy > 2000) And (Copy <= 2100) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 2000){n}{t}ElseIf (Copy > 2100) And (Copy <= 2200) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 2100){n}{t}ElseIf (Copy > 2200) And (Copy <= 2300) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 2200){n}{t}ElseIf (Copy > 2300) And (Copy <= 2400) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 2300){n}{t}ElseIf (Copy > 2400) And (Copy <= 2500) Then{n}{t}  ReturnVal = "09"{n}{t}End If{n}  End If{n}  ReturnVal = ""{n}End Sub
Sub NonRefCopiesStr_Calculation(){n}'2017 removed credit codes 18 and 19 which were in credit order #10 and #11, re-used Copy10, Copystr10 and copiesstr10 for new credit code #28 and put it last in the order since no new IA Admin Rule is out, left copy11, copystr11 and copiesstr11 for future use{n}{t}Dim Copy As Long{n}{t}Dim Copy2 As Long{n}{t}Dim Copy3 As Long{n}{t}Dim Copy4 As Long{n}{t}Dim Copy5 As Long{n}{t}Dim Copy6 As Long{n}{t}Dim Copy7 As Long{n}{t}Dim Copy8 As Long{n}{t}Dim Copy9 As Long{n}{t}Dim Copy10 As Long{n}{t}Dim Copy11 As Long{n}{t}Dim Copy12 As Long{n}{t}Dim Copy13 As Long{n}{t}Dim Copy14 As Long{n}{t}Dim Copy15 As Long{n}{t}Dim Copy16 As Long{n}{t}Dim Copy17 As Long{n}{t}Dim Copy18 As Long{n}{t}Dim Copy19 As Long{n}{t}Dim Copy20 As Long{n}{t}Dim Copy21 As Long{n}{t}Dim Copy22 As Long{n}{t}Dim Copy23 As Long{n}{t}Dim Copy24 As Long{n}{t}{n}{t}Dim max As Long{n}{t}Dim max2 As Long{n}{t}Dim max3 As Long{n}{t}Dim max4 As Long{n}{t}{n}{t}Dim copystr As String{n}{t}Dim copystr2 As String{n}{t}Dim copystr3 As String{n}{t}Dim copystr4 As String{n}{t}Dim copystr5 As String{n}{t}Dim copystr6 As String{n}{t}Dim copystr7 As String{n}{t}Dim copystr8 As String{n}{t}Dim copystr9 As String{n}{t}Dim copystr10 As String{n}{t}Dim copystr11 As String{n}{t}Dim copystr12 As String{n}{t}Dim copystr13 As String{n}{t}Dim copystr14 As String{n}{t}Dim copystr15 As String{n}{t}Dim copystr16 As String{n}{t}Dim copystr17 As String{n}{t}Dim copystr18 As String{n}{t}Dim copystr19 As String{n}{t}Dim copystr20 As String{n}{t}Dim copystr21 As String{n}{t}Dim copystr22 As String{n}{t}Dim copystr23 As String{n}{t}Dim copystr24 As String{n}{t}{n}{t}Dim copiesstr As String{n}{t}Dim copiesstr2 As String{n}{t}Dim copiesstr3 As String{n}{t}Dim copiesstr4 As String{n}{t}Dim copiesstr5 As String{n}{t}Dim copiesstr6 As String{n}{t}Dim copiesstr7 As String{n}{t}Dim copiesstr8 As String{n}{t}Dim copiesstr9 As String{n}{t}Dim copiesstr10 As String{n}{t}Dim copiesstr11 As String{n}{t}Dim copiesstr12 As String{n}{t}Dim copiesstr13 As String{n}{t}Dim copiesstr14 As String{n}{t}Dim copiesstr15 As String{n}{t}Dim copiesstr16 As String{n}{t}Dim copiesstr17 As String{n}{t}Dim copiesstr18 As String{n}{t}Dim copiesstr19 As String{n}{t}Dim copiesstr20 As String{n}{t}Dim copiesstr21 As String{n}{t}Dim copiesstr22 As String{n}{t}Dim copiesstr23 As String{n}{t}Dim copiesstr24 As String{n}{t}{n}{t}copiesstr = ""{n}{t}Copy = 1{n}{t}max = GetAllCopies(IA147){n}{t}{n}{t}Do While Copy <= max{n}{t}{t}If GetCurrency(IA147.FranchiseCr, Copy) > 0 Then{n}{t}{t}{t}If GetCurrency(IA147.FranchiseCr, Copy) > 0 And GetBool(IA147.Spouse, Copy) = True Then{n}{t}{t}{t}{t}copystr = CStr(Copy + 100){n}{t}{t}{t}{t}Do While Len(copystr) < 4{n}{t}{t}{t}{t}{t}copystr = copystr + " "{n}{t}{t}{t}{t}Loop{n}{t}{t}{t}{t}copiesstr = copiesstr + copystr{n}{t}{t}{t}End If{n}{t}{t}End If{n}{t} Copy = Copy + 1{n}{t}Loop{n}{t}{n}{t}copiesstr2 = ""{n}{t}Copy2 = 1{n}{t}max2 = GetAllCopies(IA134Sp){n}{t}{n}{t}Do While Copy2 <= max2{n}{t}{t}If GetCurrency(IA134Sp.Credit, Copy2) > 0 Then{n}{t}{t}{t}If GetCurrency(IA134Sp.Credit, Copy2) > 0 Then{n}{t}{t}{t}{t}copystr2 = CStr(Copy2 + 200) + " "{n}{t}{t}{t}{t}copiesstr2 = copiesstr2 + copystr2{n}{t}{t}{t}End If{n}{t}{t}End If{n}{t}{t}Copy2 = Copy2 + 1{n}{t}Loop{n}{t}{n}{t}max3 = GetAllCopies(IACred){n}{t}copiesstr3 = ""{n}{t}copiesstr4 = ""{n}{t}copiesstr5 = ""{n}{t}copiesstr6 = ""{n}{t}copiesstr7 = ""{n}{t}copiesstr8 = ""{n}{t}copiesstr9 = ""{n}{t}copiesstr10 = ""{n}{t}copiesstr11 = ""{n}{t}copiesstr12 = ""{n}{t}copiesstr13 = ""{n}{t}copiesstr14 = ""{n}{t}copiesstr15 = ""{n}{t}copiesstr16 = ""{n}{t}copiesstr17 = ""{n}{t}copiesstr18 = ""{n}{t}copiesstr19 = ""{n}{t}copiesstr20 = ""{n}{t}copiesstr21 = ""{n}{t}copiesstr22 = ""{n}{t}copiesstr23 = ""{n}{t}copiesstr24 = ""{n}{t}{n}{t}{n}{t}Copy3 = 1{n}{t}Copy4 = 1{n}{t}Copy5 = 1{n}{t}Copy6 = 1{n}{t}Copy7 = 1{n}{t}Copy8 = 1{n}{t}Copy9 = 1{n}{t}Copy10 = 1{n}{t}Copy11 = 1{n}{t}Copy12 = 1{n}{t}Copy13 = 1{n}{t}Copy14 = 1{n}{t}Copy15 = 1{n}{t}Copy16 = 1{n}{t}Copy17 = 1{n}{t}Copy18 = 1{n}{t}Copy19 = 1{n}{t}Copy20 = 1{n}{t}Copy21 = 1{n}{t}Copy22 = 1{n}{t}Copy23 = 1{n}{t}{n}{t}{n}{t}Do While Copy3 <= max3{n}{t}{t}If GetString(IACred.Code, Copy3) = "12" Then{n}{t}{n}{t}{t}{t}If GetBool(IACred.NonRefCr, Copy3) = True And GetBool(IACred.Spouse, Copy3) = True And GetString(IACred.Code, Copy3) = "12" Then{n}{t}{t}{t}{t}copystr3 = CStr(Copy3 + 300) + " "{n}{t}{t}{t}{t}copiesstr3 = copiesstr3 + copystr3{n}{t}{t}{t}End If{n}{t}{t}{t}{n}{t}{t}End If{n}{t}{t}Copy3 = Copy3 + 1{n}{t}Loop{n}{t}{n}{t}Do While Copy4 <= max3{n}{t}{t}If GetString(IACred.Code, Copy4) = "14" Then{n}{t}{n}{t}{t}{t}If GetBool(IACred.NonRefCr, Copy4) = True And GetBool(IACred.Spouse, Copy4) = True And GetString(IACred.Code, Copy4) = "14" Then{n}{t}{t}{t}{t}copystr4 = CStr(Copy4 + 400) + " "{n}{t}{t}{t}{t}copiesstr4 = copiesstr4 + copystr4{n}{t}{t}{t}End If{n}{t}{t}{t}{n}{t}{t}End If{n}{t}{t}Copy4 = Copy4 + 1{n}{t}Loop{n}{t}{n}{t}Do While Copy5 <= max3{n}{t}{t}If GetString(IACred.Code, Copy5) = "15" Then{n}{t}{n}{t}{t}{t}If GetBool(IACred.NonRefCr, Copy5) = True And GetBool(IACred.Spouse, Copy5) = True And GetString(IACred.Code, Copy5) = "15" Then{n}{t}{t}{t}{t}copystr5 = CStr(Copy5 + 500) + " "{n}{t}{t}{t}{t}copiesstr5 = copiesstr5 + copystr5{n}{t}{t}{t}End If{n}{t}{t}{t}{n}{t}{t}End If{n}{t}{t}Copy5 = Copy5 + 1{n}{t}Loop{n}{t}{n}{t}Do While Copy6 <= max3{n}{t}{t}If GetString(IACred.Code, Copy6) = "25" Then{n}{t}{t}{t}{n}{t}{t}{t}If GetBool(IACred.NonRefCr, Copy6) = True And GetBool(IACred.Spouse, Copy6) = True And GetString(IACred.Code, Copy6) = "25" Then{n}{t}{t}{t}{t}copystr6 = CStr(Copy6 + 600) + " "{n}{t}{t}{t}{t}copiesstr6 = copiesstr6 + copystr6{n}{t}{t}{t}End If{n}{t}{t}{t}{n}{t}{t}End If{n}{t}{t}Copy6 = Copy6 + 1{n}{t}Loop{n}{t}{t}{t}{n}{t}Do While Copy7 <= max3{n}{t}{t}If GetString(IACred.Code, Copy7) = "03" Then{n}{t}{t}{t}{n}{t}{t}{t}If GetBool(IACred.NonRefCr, Copy7) = True And GetBool(IACred.Spouse, Copy7) = True And GetString(IACred.Code, Copy7) = "03" Then{n}{t}{t}{t}{t}copystr7 = CStr(Copy7 + 700) + " "{n}{t}{t}{t}{t}copiesstr7 = copiesstr7 + copystr7{n}{t}{t}{t}End If{n}{t}{t}{t}{n}{t}{t}End If{n}{t}{t}Copy7 = Copy7 + 1{n}{t}Loop{n}{t}{t}{t}{n}{t}Do While Copy8 <= max3{n}{t}{t}If GetString(IACred.Code, Copy8) = "17" Then{n}{t}{t}{t}{n}{t}{t}{t}If GetBool(IACred.NonRefCr, Copy8) = True And GetBool(IACred.Spouse, Copy8) = True And GetString(IACred.Code, Copy8) = "17" Then{n}{t}{t}{t}{t}copystr8 = CStr(Copy8 + 800) + " "{n}{t}{t}{t}{t}copiesstr8 = copiesstr8 + copystr8{n}{t}{t}{t}End If{n}{t}{t}{t}{n}{t}{t}End If{n}{t}{t}Copy8 = Copy8 + 1{n}{t}Loop{n}{n}{t}Do While Copy9 <= max3{n}{t}{t}If GetString(IACred.Code, Copy9) = "24" Then{n}{t}{t}{t}{n}{t}{t}{t}If GetBool(IACred.NonRefCr, Copy9) = True And GetBool(IACred.Spouse, Copy9) = True And GetString(IACred.Code, Copy9) = "24" Then{n}{t}{t}{t}{t}copystr9 = CStr(Copy9 + 900) + " "{n}{t}{t}{t}{t}copiesstr9 = copiesstr9 + copystr9{n}{t}{t}{t}End If{n}{t}{t}{t}{n}{t}{t}End If{n}{t}{t}Copy9 = Copy9 + 1{n}{t}Loop{n}{t}{t}{t}{n}{t}Do While Copy10 <= max3{n}{t}{t}If GetString(IACred.Code, Copy10) = "28" Then{n}{t}{t}{t}{n}{t}{t}{t}If GetBool(IACred.NonRefCr, Copy10) = True And GetBool(IACred.Spouse, Copy10) = True And GetString(IACred.Code, Copy10) = "28" Then{n}{t}{t}{t}{t}copystr10 = CStr(Copy10 + 1000){n}{t}{t}{t}{t}copiesstr10 = copiesstr10 + copystr10{n}{t}{t}{t}End If{n}{t}{t}{t}{n}{t}{t}End If{n}{t}{t}Copy10 = Copy10 + 1{n}{t}Loop{n}{n}{t}{t}{t}{n}{t}Do While Copy12 <= max3{n}{t}{t}If GetString(IACred.Code, Copy12) = "21" Then{n}{t}{t}{t}{n}{t}{t}{t}If GetBool(IACred.NonRefCr, Copy12) = True And GetBool(IACred.Spouse, Copy12) = True And GetString(IACred.Code, Copy12) = "21" Then{n}{t}{t}{t}{t}copystr12 = CStr(Copy12 + 1200){n}{t}{t}{t}{t}copiesstr12 = copiesstr12 + copystr12{n}{t}{t}{t}End If{n}{t}{t}{t}{n}{t}{t}End If{n}{t}{t}Copy12 = Copy12 + 1{n}{t}Loop{n}{t}{t}{t}{n}{n}{t}Do While Copy13 <= max3{n}{t}{t}If GetString(IACred.Code, Copy13) = "26" Then{n}{t}{t}{t}{n}{t}{t}{t}If GetBool(IACred.NonRefCr, Copy13) = True And GetBool(IACred.Spouse, Copy13) = True And GetString(IACred.Code, Copy13) = "26" Then{n}{t}{t}{t}{t}copystr13 = CStr(Copy13 + 1300){n}{t}{t}{t}{t}copiesstr13 = copiesstr13 + copystr13{n}{t}{t}{t}End If{n}{t}{t}{t}{n}{t}{t}End If{n}{t}{t}Copy13 = Copy13 + 1{n}{t}Loop{n}{n}{t}Do While Copy14 <= max3{n}{t}{t}If GetString(IACred.Code, Copy14) = "06" Then{n}{t}{t}{t}{n}{t}{t}{t}If GetBool(IACred.NonRefCr, Copy14) = True And GetBool(IACred.Spouse, Copy14) = True And GetString(IACred.Code, Copy14) = "06" Then{n}{t}{t}{t}{t}copystr14 = CStr(Copy14 + 1400){n}{t}{t}{t}{t}copiesstr14 = copiesstr14 + copystr14{n}{t}{t}{t}End If{n}{t}{t}{t}{n}{t}{t}End If{n}{t}{t}Copy14 = Copy14 + 1{n}{t}Loop{n}{n}{t}Do While Copy15 <= max3{n}{t}{t}If GetString(IACred.Code, Copy15) = "07" Then{n}{t}{t}{t}{n}{t}{t}{t}If GetBool(IACred.NonRefCr, Copy15) = True And GetBool(IACred.Spouse, Copy15) = True And GetString(IACred.Code, Copy15) = "07" Then{n}{t}{t}{t}{t}copystr15 = CStr(Copy15 + 1500){n}{t}{t}{t}{t}copiesstr15 = copiesstr15 + copystr15{n}{t}{t}{t}End If{n}{t}{t}{t}{n}{t}{t}End If{n}{t}{t}Copy15 = Copy15 + 1{n}{t}Loop{n}{n}{t}Do While Copy16 <= max3{n}{t}{t}If GetString(IACred.Code, Copy16) = "27" Then{n}{t}{t}{t}{n}{t}{t}{t}If GetBool(IACred.NonRefCr, Copy16) = True And GetBool(IACred.Spouse, Copy16) = True And GetString(IACred.Code, Copy16) = "27" Then{n}{t}{t}{t}{t}copystr16 = CStr(Copy16 + 1600){n}{t}{t}{t}{t}copiesstr16 = copiesstr16 + copystr16{n}{t}{t}{t}End If{n}{t}{t}{t}{n}{t}{t}End If{n}{t}{t}Copy16 = Copy16 + 1{n}{t}Loop{n}{n}{t}Do While Copy17 <= max3{n}{t}{t}If GetString(IACred.Code, Copy17) = "16" Then{n}{t}{t}{t}{n}{t}{t}{t}If GetBool(IACred.NonRefCr, Copy17) = True And GetBool(IACred.Spouse, Copy17) = True And GetString(IACred.Code, Copy17) = "16" Then{n}{t}{t}{t}{t}copystr17 = CStr(Copy17 + 1700){n}{t}{t}{t}{t}copiesstr17 = copiesstr17 + copystr17{n}{t}{t}{t}End If{n}{t}{t}{t}{n}{t}{t}End If{n}{t}{t}Copy17 = Copy17 + 1{n}{t}Loop{n}{n}{t}Do While Copy18 <= max3{n}{t}{t}If GetString(IACred.Code, Copy18) = "10" Then{n}{t}{t}{t}{n}{t}{t}   If GetBool(IACred.NonRefCr, Copy18) = True And GetBool(IACred.Spouse, Copy18) = True And GetString(IACred.Code, Copy18) = "10" Then{n}{t}{t}{t}{t}copystr18 = CStr(Copy18 + 1800){n}{t}{t}{t}{t}copiesstr18 = copiesstr18 + copystr18{n}{t}{t}{t}End If{n}{t}{t}{t}{n}{t}{t}End If{n}{t}{t}Copy18 = Copy18 + 1{n}{t}Loop{n}{n}{t}Do While Copy19 <= max3{n}{t}{t}If GetString(IACred.Code, Copy19) = "13" Then{n}{t}{t}{t}{n}{t}{t}{t}If GetBool(IACred.NonRefCr, Copy19) = True And GetBool(IACred.Spouse, Copy19) = True And GetString(IACred.Code, Copy19) = "13" Then{n}{t}{t}{t}{t}copystr19 = CStr(Copy19 + 1900){n}{t}{t}{t}{t}copiesstr19 = copiesstr19 + copystr19{n}{t}{t}{t}End If{n}{t}{t}{t}{n}{t}{t}End If{n}{t}{t}Copy19 = Copy19 + 1{n}{t}Loop{n}{t}{t}{t}{n}{t}Do While Copy20 <= max3{n}{t}{t}If GetString(IACred.Code, Copy20) = "08" Then{n}{t}{t}{t}{n}{t}{t}{t}If GetBool(IACred.NonRefCr, Copy20) = True And GetBool(IACred.Spouse, Copy20) = True And GetString(IACred.Code, Copy20) = "08" Then{n}{t}{t}{t}{t}copystr20 = CStr(Copy20 + 2000){n}{t}{t}{t}{t}copiesstr20 = copiesstr20 + copystr20{n}{t}{t}{t}End If{n}{t}{t}{t}{n}{t}{t}End If{n}{t}{t}Copy20 = Copy20 + 1{n}{t}Loop{n}{t}{t}{t}{n}{t}Do While Copy21 <= max3{n}{t}{t}If GetString(IACred.Code, Copy21) = "23" Then{n}{t}{t}{t}{n}{t}{t}{t}If GetBool(IACred.NonRefCr, Copy21) = True And GetBool(IACred.Spouse, Copy21) = True And GetString(IACred.Code, Copy21) = "23" Then{n}{t}{t}{t}{t}copystr21 = CStr(Copy21 + 2100){n}{t}{t}{t}{t}copiesstr21 = copiesstr21 + copystr21{n}{t}{t}{t}End If{n}{t}{t}{t}{n}{t}{t}End If{n}{t}{t}Copy21 = Copy21 + 1{n}{t}Loop{n}{t}{t}{t}{n}{t}Do While Copy22 <= max3{n}{t}{t}If GetString(IACred.Code, Copy22) = "22" Then{n}{t}{t}{t}{n}{t}{t}{t}If GetBool(IACred.NonRefCr, Copy22) = True And GetBool(IACred.Spouse, Copy22) = True And GetString(IACred.Code, Copy22) = "22" Then{n}{t}{t}{t}{t}copystr22 = CStr(Copy22 + 2200){n}{t}{t}{t}{t}copiesstr22 = copiesstr22 + copystr22{n}{t}{t}{t}End If{n}{t}{t}{t}{n}{t}{t}End If{n}{t}{t}Copy22 = Copy22 + 1{n}{t}Loop{n}{t}{t}{t}{n}{t}Do While Copy23 <= max3{n}{t}{t}If GetString(IACred.Code, Copy23) = "20" Then{n}{t}{t}{t}{n}{t}{t}{t}If GetBool(IACred.NonRefCr, Copy23) = True And GetBool(IACred.Spouse, Copy23) = True And GetString(IACred.Code, Copy23) = "20" Then{n}{t}{t}{t}{t}copystr23 = CStr(Copy23 + 2300){n}{t}{t}{t}{t}copiesstr23 = copiesstr23 + copystr23{n}{t}{t}{t}End If{n}{t}{t}{t}{n}{t}{t}End If{n}{t}{t}Copy23 = Copy23 + 1{n}{t}Loop{n}{t}{t}{t}  {n}{t}copiesstr24 = ""{n}{t}Copy24 = 1{n}{t}max4 = GetAllCopies(IA8801Sp){n}{t}{n}{t}Do While Copy24 <= max4{n}{t}{t}If GetCurrency(IA8801Sp.Print, Copy24) > 0 Then{n}{t}{t}{t}If GetCurrency(IA8801Sp.Print, Copy24) > 0 Then{n}{t}{t}{t}{t}copystr24 = CStr(Copy24 + 2400){n}{t}{t}{t}{t}copiesstr24 = copiesstr24 + copystr24{n}{t}{t}{t}End If{n}{t}{t}End If{n}{t}{t}Copy24 = Copy24 + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = copiesstr + copiesstr2 + copiesstr3 + copiesstr4 + copiesstr5 + copiesstr7 + copiesstr12 + copiesstr13 + copiesstr16 + copiesstr14 + copiesstr15 + copiesstr17 + copiesstr18 + copiesstr19 + copiesstr20 + copiesstr6 + copiesstr8 + copiesstr9 + copiesstr21 + copiesstr22 + copiesstr23 + copiesstr24 + copiesstr10{n}End Sub
Sub NonRefCr1_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IA148Sp.AvailCr(0)), GetCurrency(IAF1040.BBal3)){n}End Sub
Sub NonRefCr10_Calculation(){n}{t}If GetNumber(IA148Sp.NonRefNbr) > 10 Then{n}{t}{t}ReturnVal = GetCurrency(IAWBP148Sp.TotNonRefCr){n}{t}Else{n}{t}{t}ReturnVal = MinValue(GetCurrency(IA148Sp.AvailCr(9)), GetCurrency(IA148Sp.NonRefTax10)){n}{t}End If{n}End Sub
Sub NonRefCr2_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IA148Sp.AvailCr(1)), GetCurrency(IA148Sp.NonRefTax2)){n}End Sub
Sub NonRefCr3_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IA148Sp.AvailCr(2)), GetCurrency(IA148Sp.NonRefTax3)){n}End Sub
Sub NonRefCr4_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IA148Sp.AvailCr(3)), GetCurrency(IA148Sp.NonRefTax4)){n}End Sub
Sub NonRefCr5_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IA148Sp.AvailCr(4)), GetCurrency(IA148Sp.NonRefTax5)){n}End Sub
Sub NonRefCr6_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IA148Sp.AvailCr(5)), GetCurrency(IA148Sp.NonRefTax6)){n}End Sub
Sub NonRefCr7_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IA148Sp.AvailCr(6)), GetCurrency(IA148Sp.NonRefTax7)){n}End Sub
Sub NonRefCr8_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IA148Sp.AvailCr(7)), GetCurrency(IA148Sp.NonRefTax8)){n}End Sub
Sub NonRefCr9_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IA148Sp.AvailCr(8)), GetCurrency(IA148Sp.NonRefTax9)){n}End Sub
Sub NonRefNbr_Calculation(){n}{t}Dim count2 As Integer{n}{t}Dim Lim2 As Integer{n}{t}Dim Total As Integer{n}{t}{n}{t}Lim2 = GetAllCopies(IA147){n}{t}count2 = 1{n}{t}Total = 0{n}{t}{n}{t}Do While count2 <= Lim2{n}{t}{t}If GetBool(IA147.Spouse, count2) = True And GetCurrency(IA147.FranchiseCr, count2) > 0 Then{n}{t}{t}{t}Total = Total + 1{n}{t}{t}Else{n}{t}{t}{t}Total = Total{n}{t}{t}End If{n}{t}{t}{n}{t}{t}count2 = count2 + 1{n}{t}Loop{n}{t}{n}{t}Dim count3 As Integer{n}{t}Dim Lim3 As Integer{n}{t}{n}{t}Lim3 = GetAllCopies(IA134Sp){n}{t}count3 = 1{n}{t}{n}{t}Do While count3 <= Lim3{n}{t}{t}If GetCurrency(IA134Sp.Credit, count3) > 0 Then{n}{t}{t}{t}Total = Total + 1{n}{t}{t}Else{n}{t}{t}{t}Total = Total{n}{t}{t}End If{n}{t}{t}{n}{t}{t}count3 = count3 + 1{n}{t}Loop{n}{t}{n}{t}Dim count As Integer{n}{t}Dim Lim As Integer{n}{t}Dim IACredit As String{n}{t}{n}{t}Lim = GetAllCopies(IACred){n}{t}count = 1{n}{t}{n}{t}{n}{t}Do While count <= Lim{n}{t}{t}IACredit = GetString(IACred.Code, count){n}{t}{t}If GetBool(IACred.NonRefCr, count) = True And GetBool(IACred.Spouse, count) = True And (IACredit = "12" Or IACredit = "14" Or IACredit = "15" Or IACredit = "25" Or IACredit = "03" Or IACredit = "17" Or IACredit = "24" Or IACredit = "21" Or IACredit = "26" Or IACredit = "06" Or IACredit = "07" Or IACredit = "27" Or IACredit = "16" Or IACredit = "10" Or IACredit = "13" Or IACredit = "08" Or IACredit = "23" Or IACredit = "22" Or IACredit = "20" Or IACredit = "28") Then{n}{t}{t}{t}Total = Total + 1{n}{t}{t}Else{n}{t}{t}{t}Total = Total{n}{t}{t}End If{n}{t}{t}{n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = Total + GetBool(IA8801Sp.Print){n}End Sub
Sub NonRefTax10_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA148Sp.NonRefTax9) - GetCurrency(IA148Sp.NonRefCr9)){n}End Sub
Sub NonRefTax2_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAF1040.BBal3) - GetCurrency(IA148Sp.NonRefCr1)){n}End Sub
Sub NonRefTax3_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA148Sp.NonRefTax2) - GetCurrency(IA148Sp.NonRefCr2)){n}End Sub
Sub NonRefTax4_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA148Sp.NonRefTax3) - GetCurrency(IA148Sp.NonRefCr3)){n}End Sub
Sub NonRefTax5_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA148Sp.NonRefTax4) - GetCurrency(IA148Sp.NonRefCr4)){n}End Sub
Sub NonRefTax6_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA148Sp.NonRefTax5) - GetCurrency(IA148Sp.NonRefCr5)){n}End Sub
Sub NonRefTax7_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA148Sp.NonRefTax6) - GetCurrency(IA148Sp.NonRefCr6)){n}End Sub
Sub NonRefTax8_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA148Sp.NonRefTax7) - GetCurrency(IA148Sp.NonRefCr7)){n}End Sub
Sub NonRefTax9_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA148Sp.NonRefTax8) - GetCurrency(IA148Sp.NonRefCr8)){n}End Sub
Sub NonRefTrig_Calculation(Index As Integer){n}{t}If GetString(IA148Sp.NonRefCode(Index)) = "04" Or GetString(IA148Sp.NonRefCode(Index)) = "11" Or GetString(IA148Sp.NonRefCode(Index)) = "09" Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetCurrency(IA148Sp.AvailCr(Index)) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Print_Calculation(){n}{t}Dim count As Integer{n}{t}Dim SubTot As Currency{n}{n}{t}count = 0{n}{t}SubTot = 0{n}{n}{t}Do While count < 10{n}{t}{t}SubTot = SubTot + GetCurrency(IA148Sp.CYCarry(count)){n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}If GetBool(IAF1040.CombMFS) = False Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetCurrency(IA148Sp.TotNonRefCr) > 0 Or GetCurrency(IA148Sp.TotRefCr) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf SubTot > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub PTEEIN_Calculation(Index As Integer){n}{t}Dim PTE As Integer{n}{t}Dim RefPTE As Integer{n}{t}Dim Stuff As Integer{n}{t}Dim Stuff2 As Integer{n}   {n}{t}PTE = GetNumber(IA148BumpSp.TotPTE){n}{t}RefPTE = GetNumber(IA148BumpSp.TotRefPTE){n}{t}{n}{t}If Index = 5 And GetNumber(IA148Sp.TotPTE) > 6 Then{n}{t}{t}ReturnVal = ""{n}{t}ElseIf PTE > Index Then{n}{t}{t}Stuff2 = GetNumber(IA148BumpSp.PTEIndexNbr(Index)){n}{t}{t}ReturnVal = GetString(IA148BumpSp.PTEEIN(Stuff2)){n}{t}ElseIf PTE + RefPTE > Index Then{n}{t}{t}Stuff = (Index) - PTE{n}{t}   Stuff2 = GetNumber(IA148BumpSp.RefPTEIndexNbr(Stuff)){n}{t}{t}ReturnVal = GetString(IA148BumpSp.RefPTEEIN(Stuff2)){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub PTELine_Calculation(Index As Integer){n}{t}Dim PTE As Integer{n}{t}Dim RefPTE As Integer{n}{t}Dim Stuff As Integer{n}{t}Dim Stuff2 As Integer{n}   {n}{t}PTE = GetNumber(IA148BumpSp.TotPTE){n}{t}RefPTE = GetNumber(IA148BumpSp.TotRefPTE){n}{t}{n}{t}If Index = 5 And GetNumber(IA148Sp.TotPTE) > 6 Then{n}{t}{t}ReturnVal = ""{n}{t}ElseIf PTE > Index Then{n}{t}{t}Stuff2 = GetNumber(IA148BumpSp.PTEIndexNbr(Index)){n}{t}{t}ReturnVal = GetString(IA148BumpSp.PTELine(Stuff2)){n}{t}ElseIf PTE + RefPTE > Index Then{n}{t}{t}Stuff = (Index) - PTE{n}{t}{t}Stuff2 = GetNumber(IA148BumpSp.RefPTEIndexNbr(Stuff)){n}{t}{t}ReturnVal = GetString(IA148BumpSp.RefPTELine(Stuff2)){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub PTEName_Calculation(Index As Integer){n}{t}Dim PTE As Integer{n}{t}Dim RefPTE As Integer{n}{t}Dim Stuff As Integer{n}{t}Dim Stuff2 As Integer{n}   {n}{t}PTE = GetNumber(IA148BumpSp.TotPTE){n}{t}RefPTE = GetNumber(IA148BumpSp.TotRefPTE){n}{t}{n}{t}If Index = 5 And GetNumber(IA148Sp.TotPTE) > 6 Then{n}{t}{t}ReturnVal = "See Statement Attached"{n}{t}ElseIf PTE > Index Then{n}{t}{t}Stuff2 = GetNumber(IA148BumpSp.PTEIndexNbr(Index)){n}{t}{t}ReturnVal = GetString(IA148BumpSp.PTEName(Stuff2)){n}{t}ElseIf PTE + RefPTE > Index Then{n}{t}{t}Stuff = (Index) - PTE{n}{t}{t}Stuff2 = GetNumber(IA148BumpSp.RefPTEIndexNbr(Stuff)){n}{t}{t}ReturnVal = GetString(IA148BumpSp.RefPTEName(Stuff2)){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub PYCarry_Calculation(Index As Integer){n}  Dim strindex As Long{n}  Dim copystr As String{n}  Dim Copy As Long{n}  {n}  strindex = ((Index) * 4) + 1{n}  copystr = Trim(Mid(GetString(IA148Sp.NonRefCopiesStr), strindex, 4)){n}  {n}  If Index = 9 And GetNumber(IA148Sp.NonRefNbr) > 10 Then{n}{t}ReturnVal = 0{n}  ElseIf copystr <> "" Then{n}{t}Copy = CLng(copystr){n}{t}If (Copy > 100) And (Copy <= 200) Then{n}{t}  ReturnVal = 0{n}{t}ElseIf (Copy > 200) And (Copy <= 300) Then{n}{t}  ReturnVal = 0{n}{t}ElseIf (Copy > 300) And (Copy <= 400) Then{n}{t}  ReturnVal = GetCurrency(IACred.PYCarry, (Copy) - 300){n}{t}ElseIf (Copy > 400) And (Copy <= 500) Then{n}{t}  ReturnVal = GetCurrency(IACred.PYCarry, (Copy) - 400){n}{t}ElseIf (Copy > 500) And (Copy <= 600) Then{n}{t}  ReturnVal = GetCurrency(IACred.PYCarry, (Copy) - 500){n}{t}ElseIf (Copy > 600) And (Copy <= 700) Then{n}{t}  ReturnVal = GetCurrency(IACred.PYCarry, (Copy) - 600){n}{t}ElseIf (Copy > 700) And (Copy <= 800) Then{n}{t}  ReturnVal = GetCurrency(IACred.PYCarry, (Copy) - 700){n}{t}ElseIf (Copy > 800) And (Copy <= 900) Then{n}{t}  ReturnVal = GetCurrency(IACred.PYCarry, (Copy) - 800){n}{t}ElseIf (Copy > 900) And (Copy <= 1000) Then{n}{t}  ReturnVal = GetCurrency(IACred.PYCarry, (Copy) - 900){n}{t}ElseIf (Copy > 1000) And (Copy <= 1100) Then{n}{t}  ReturnVal = GetCurrency(IACred.PYCarry, (Copy) - 1000){n}{t}ElseIf (Copy > 1100) And (Copy <= 1200) Then{n}{t}  ReturnVal = GetCurrency(IACred.PYCarry, (Copy) - 1100){n}{t}ElseIf (Copy > 1200) And (Copy <= 1300) Then{n}{t}  ReturnVal = GetCurrency(IACred.PYCarry, (Copy) - 1200){n}{t}ElseIf (Copy > 1300) And (Copy <= 1400) Then{n}{t}  ReturnVal = GetCurrency(IACred.PYCarry, (Copy) - 1300){n}{t}ElseIf (Copy > 1400) And (Copy <= 1500) Then{n}{t}  ReturnVal = GetCurrency(IACred.PYCarry, (Copy) - 1400){n}{t}ElseIf (Copy > 1500) And (Copy <= 1600) Then{n}{t}  ReturnVal = GetCurrency(IACred.PYCarry, (Copy) - 1500){n}{t}ElseIf (Copy > 1600) And (Copy <= 1700) Then{n}{t}  ReturnVal = GetCurrency(IACred.PYCarry, (Copy) - 1600){n}{t}ElseIf (Copy > 1700) And (Copy <= 1800) Then{n}{t}  ReturnVal = GetCurrency(IACred.PYCarry, (Copy) - 1700){n}{t}ElseIf (Copy > 1800) And (Copy <= 1900) Then{n}{t}  ReturnVal = GetCurrency(IACred.PYCarry, (Copy) - 1800){n}{t}ElseIf (Copy > 1900) And (Copy <= 2000) Then{n}{t}  ReturnVal = GetCurrency(IACred.PYCarry, (Copy) - 1900){n}{t}ElseIf (Copy > 2000) And (Copy <= 2100) Then{n}{t}  ReturnVal = GetCurrency(IACred.PYCarry, (Copy) - 2000){n}{t}ElseIf (Copy > 2100) And (Copy <= 2200) Then{n}{t}  ReturnVal = GetCurrency(IACred.PYCarry, (Copy) - 2100){n}{t}ElseIf (Copy > 2200) And (Copy <= 2300) Then{n}{t}  ReturnVal = GetCurrency(IACred.PYCarry, (Copy) - 2200){n}{t}ElseIf (Copy > 2300) And (Copy <= 2400) Then{n}{t}  ReturnVal = GetCurrency(IACred.PYCarry, (Copy) - 2300){n}{t}ElseIf (Copy > 2400) And (Copy <= 2500) Then{n}{t}  ReturnVal = GetCurrency(IA8801Sp.PYCarryforward){n}{t}End If{n}  End If{n}  ReturnVal = 0{n}End Sub
Sub RefCert_Calculation(Index As Integer){n}  Dim strindex As Long{n}  Dim copystr As String{n}  Dim Copy As Long{n}  {n}  strindex = ((Index) * 4) + 1{n}  copystr = Trim(Mid(GetString(IA148Sp.RefCopiesStr), strindex, 4)){n}  {n}  If Index = 6 And GetNumber(IA148Sp.RefNbr) > 7 Then{n}{t}ReturnVal = "See Statement Attached"{n}  ElseIf copystr <> "" Then{n}{t}Copy = CLng(copystr){n}{t}If (Copy > 100) And (Copy <= 200) Then{n}{t}  ReturnVal = ""{n}{t}ElseIf (Copy > 200) And (Copy <= 300) Then{n}{t}  ReturnVal = GetString(IACred.CertNumber, (Copy) - 200){n}{t}ElseIf (Copy > 300) And (Copy <= 400) Then{n}{t}  ReturnVal = ""{n}{t}ElseIf (Copy > 400) And (Copy <= 500) Then{n}{t}  ReturnVal = GetString(IACred.CertNumber, (Copy) - 400){n}{t}ElseIf (Copy > 500) And (Copy <= 600) Then{n}{t}  ReturnVal = ""{n}{t}ElseIf (Copy > 600) And (Copy <= 700) Then{n}{t}  ReturnVal = ""{n}{t}ElseIf (Copy > 700) And (Copy <= 800) Then{n}{t}  ReturnVal = GetString(IA128.SuppCertNbr, (Copy) - 700){n}{t}ElseIf (Copy > 800) And (Copy <= 900) Then{n}{t}  ReturnVal = GetString(IA128S.SuppCertNbr, (Copy) - 800){n}{t}ElseIf (Copy > 900) And (Copy <= 1000) Then{n}{t}  ReturnVal = ""{n}{t}ElseIf (Copy > 1000) And (Copy <= 1100) Then{n}{t}  ReturnVal = ""{n}{t}ElseIf (Copy > 1100) And (Copy <= 1200) Then{n}{t}  ReturnVal = ""{n}{t}ElseIf (Copy > 1200) And (Copy <= 1300) Then{n}{t}  ReturnVal = GetString(IACred.CertNumber, (Copy) - 1200){n}{t}ElseIf (Copy > 1300) And (Copy <= 1400) Then{n}{t}  ReturnVal = GetString(IACred.CertNumber, (Copy) - 1300){n}{t}ElseIf (Copy > 1400) And (Copy <= 1500) Then{n}{t}  ReturnVal = GetString(IACred.CertNumber, (Copy) - 1400){n}{t}End If{n}  End If{n}  ReturnVal = ""{n}End Sub
Sub RefCode_Calculation(Index As Integer){n}  Dim strindex As Long{n}  Dim copystr As String{n}  Dim Copy As Long{n}  {n}  strindex = ((Index) * 4) + 1{n}  copystr = Trim(Mid(GetString(IA148Sp.RefCopiesStr), strindex, 4)){n}  {n}  If Index = 6 And GetNumber(IA148Sp.RefNbr) > 7 Then{n}{t}ReturnVal = ""{n}  ElseIf copystr <> "" Then{n}{t}Copy = CLng(copystr){n}{t}If (Copy > 100) And (Copy <= 200) Then{n}{t}  ReturnVal = "52"{n}{t}ElseIf (Copy > 200) And (Copy <= 300) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 200){n}{t}ElseIf (Copy > 300) And (Copy <= 400) Then{n}{t}  ReturnVal = "55"{n}{t}ElseIf (Copy > 400) And (Copy <= 500) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 400){n}{t}ElseIf (Copy > 500) And (Copy <= 600) Then{n}{t}  ReturnVal = "58"{n}{t}ElseIf (Copy > 600) And (Copy <= 700) Then{n}{t}  ReturnVal = "58"{n}{t}ElseIf (Copy > 700) And (Copy <= 800) Then{n}{t}  ReturnVal = "59"{n}{t}ElseIf (Copy > 800) And (Copy <= 900) Then{n}{t}  ReturnVal = "59"{n}{t}ElseIf (Copy > 900) And (Copy <= 1000) Then{n}{t}  ReturnVal = "64"{n}{t}ElseIf (Copy > 1000) And (Copy <= 1100) Then{n}{t}  ReturnVal = "65"{n}{t}ElseIf (Copy > 1100) And (Copy <= 1200) Then{n}{t}  ReturnVal = "66"{n}{t}ElseIf (Copy > 1200) And (Copy <= 1300) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 1200){n}{t}ElseIf (Copy > 1300) And (Copy <= 1400) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 1300){n}{t}ElseIf (Copy > 1400) And (Copy <= 1500) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 1400){n}{t}End If{n}  End If{n}  ReturnVal = ""{n}End Sub
Sub RefCopiesStr_Calculation(){n}{t}Dim Copy As Long{n}{t}Dim Copy2 As Long{n}{t}Dim Copy3 As Long{n}{t}Dim Copy4 As Long{n}{t}Dim Copy5 As Long{n}{t}Dim Copy6 As Long{n}{t}Dim Copy7 As Long{n}{t}Dim Copy8 As Long{n}{t}Dim Copy9 As Long{n}{t}Dim Copy10 As Long{n}{t}Dim Copy11 As Long{n}{t}Dim Copy12 As Long{n}{t}Dim Copy13 As Long{n}{t}Dim Copy14 As Long{n}{t}Dim max As Long{n}{t}Dim max2 As Long{n}{t}Dim max3 As Long{n}{t}Dim max5 As Long{n}{t}Dim max6 As Long{n}{t}Dim max9 As Long{n}{t}Dim max10 As Long{n}{t}Dim max11 As Long{n}{t}Dim max12 As Long{n}{t}Dim max13 As Long{n}{t}Dim max14 As Long{n}{t}Dim copystr As String{n}{t}Dim copystr2 As String{n}{t}Dim copystr3 As String{n}{t}Dim copystr4 As String{n}{t}Dim copystr5 As String{n}{t}Dim copystr6 As String{n}{t}Dim copystr7 As String{n}{t}Dim copystr8 As String{n}{t}Dim copystr9 As String{n}{t}Dim copystr10 As String{n}{t}Dim copystr11 As String{n}{t}Dim copystr12 As String{n}{t}Dim copystr13 As String{n}{t}Dim copystr14 As String{n}{t}Dim copiesstr As String{n}{t}Dim copiesstr2 As String{n}{t}Dim copiesstr3 As String{n}{t}Dim copiesstr4 As String{n}{t}Dim copiesstr5 As String{n}{t}Dim copiesstr6 As String{n}{t}Dim copiesstr7 As String{n}{t}Dim copiesstr8 As String{n}{t}Dim copiesstr9 As String{n}{t}Dim copiesstr10 As String{n}{t}Dim copiesstr11 As String{n}{t}Dim copiesstr12 As String{n}{t}Dim copiesstr13 As String{n}{t}Dim copiesstr14 As String{n}{t}{n}{t}copiesstr = ""{n}{t}Copy = 1{n}{t}max = GetAllCopies(IA8864){n}{t}{n}{t}Do While Copy <= max{n}{t}{t}If GetCurrency(IA8864.BiodieselCr, Copy) > 0 Then{n}{t}{t}{t}If GetCurrency(IA8864.BiodieselCr, Copy) > 0 And GetBool(IA8864.Spouse, Copy) = True Then{n}{t}{t}{t}{t}copystr = CStr(Copy + 100){n}{t}{t}{t}{t}Do While Len(copystr) < 4{n}{t}{t}{t}{t}{t}copystr = copystr + " "{n}{t}{t}{t}{t}Loop{n}{t}{t}{t}{t}copiesstr = copiesstr + copystr{n}{t}{t}{t}End If{n}{t}{t}End If{n}{t} Copy = Copy + 1{n}{t}Loop{n}{t}{n}{t}copiesstr2 = ""{n}{t}Copy2 = 1{n}{t}max2 = GetAllCopies(IACred){n}{t}{n}{t}Do While Copy2 <= max2{n}{t}{t}If GetString(IACred.Code, Copy2) = "53" Then{n}{t}{t}{t}If GetBool(IACred.RefCr, Copy2) = True And GetBool(IACred.Spouse, Copy2) = True And GetString(IACred.Code, Copy2) = "53" Then{n}{t}{t}{t}{t}copystr2 = CStr(Copy2 + 200) + " "{n}{t}{t}{t}{t}copiesstr2 = copiesstr2 + copystr2{n}{t}{t}{t}End If{n}{t}{t}End If{n}{t}{t}Copy2 = Copy2 + 1{n}{t}Loop{n}{t}{n}{t}copiesstr3 = ""{n}{t}Copy3 = 1{n}{t}max3 = GetAllCopies(IA135){n}{t}{n}{t}Do While Copy3 <= max3{n}{t}{t}If GetCurrency(IA135.E85Credit, Copy3) > 0 Then{n}{t}{t}{t}If GetBool(IA135.Spouse, Copy3) = True And GetCurrency(IA135.E85Credit, Copy3) > 0 Then{n}{t}{t}{t}{t}copystr3 = CStr(Copy3 + 300) + " "{n}{t}{t}{t}{t}copiesstr3 = copiesstr3 + copystr3{n}{t}{t}{t}End If{n}{t}{t}{t}{n}{t}{t}End If{n}{t}{t}Copy3 = Copy3 + 1{n}{t}Loop{n}{t}{n}{t}copiesstr4 = ""{n}{t}Copy4 = 1{n}{t}{n}{t}Do While Copy4 <= max2{n}{t}{t}If GetString(IACred.Code, Copy4) = "56" Then{n}{t}{t}{t}If GetBool(IACred.RefCr, Copy4) = True And GetBool(IACred.Spouse, Copy4) = True And GetString(IACred.Code, Copy4) = "56" Then{n}{t}{t}{t}{t}copystr4 = CStr(Copy4 + 400) + " "{n}{t}{t}{t}{t}copiesstr4 = copiesstr4 + copystr4{n}{t}{t}{t}End If{n}{t}{t}{t}{n}{t}{t}End If{n}{t}{t}Copy4 = Copy4 + 1{n}{t}Loop{n}{t}{n}{t}copiesstr5 = ""{n}{t}Copy5 = 1{n}{t}max5 = GetAllCopies(IA128){n}{t}{n}{t}Do While Copy5 <= max5{n}{t}{t}If GetCurrency(IA128.TotResearchCr, Copy5) > 0 Then{n}{t}{t}{t}If GetBool(IA128.Spouse, Copy5) = True And GetCurrency(IA128.TotResearchCr, Copy5) > 0 Then{n}{t}{t}{t}{t}copystr5 = CStr(Copy5 + 500) + " "{n}{t}{t}{t}{t}copiesstr5 = copiesstr5 + copystr5{n}{t}{t}{t}End If{n}{t}{t}{t}{n}{t}{t}End If{n}{t}{t}Copy5 = Copy5 + 1{n}{t}Loop{n}{t}{n}{t}copiesstr6 = ""{n}{t}Copy6 = 1{n}{t}max6 = GetAllCopies(IA128S){n}{t}{n}{t}Do While Copy6 <= max6{n}{t}{t}If GetCurrency(IA128S.TotResearchCr, Copy6) > 0 Then{n}{t}{t}{t}If GetBool(IA128S.Spouse, Copy6) = True And GetCurrency(IA128S.TotResearchCr, Copy6) > 0 Then{n}{t}{t}{t}{t}copystr6 = CStr(Copy6 + 600) + " "{n}{t}{t}{t}{t}copiesstr6 = copiesstr6 + copystr6{n}{t}{t}{t}End If{n}{t}{t}{t}{n}{t}{t}End If{n}{t}{t}Copy6 = Copy6 + 1{n}{t}Loop{n}{t}{n}{t}copiesstr7 = ""{n}{t}Copy7 = 1{n}{t}{t}{t}{n}{t}Do While Copy7 <= max5{n}{t}{t}If GetCurrency(IA128.TotSuppResearchCr, Copy7) > 0 Then{n}{t}{t}{t}If GetBool(IA128.Spouse, Copy7) = True And GetCurrency(IA128.TotSuppResearchCr, Copy7) > 0 Then{n}{t}{t}{t}{t}copystr7 = CStr(Copy7 + 700) + " "{n}{t}{t}{t}{t}copiesstr7 = copiesstr7 + copystr7{n}{t}{t}{t}End If{n}{t}{t}{t}{n}{t}{t}End If{n}{t}{t}Copy7 = Copy7 + 1{n}{t}Loop{n}{t}{t}{t}{n}{t}copiesstr8 = ""{n}{t}Copy8 = 1{n}{t}{t}{t}{t}{t}{n}{t}Do While Copy8 <= max6{n}{t}{t}If GetCurrency(IA128S.TotSuppResearchCr, Copy8) > 0 Then{n}{t}{t}{t}If GetBool(IA128S.Spouse, Copy8) = True And GetCurrency(IA128S.TotSuppResearchCr, Copy8) > 0 Then{n}{t}{t}{t}{t}copystr8 = CStr(Copy8 + 800) + " "{n}{t}{t}{t}{t}copiesstr8 = copiesstr8 + copystr8{n}{t}{t}{t}End If{n}{t}{t}{t}{n}{t}{t}End If{n}{t}{t}Copy8 = Copy8 + 1{n}{t}Loop{n}{t}{n}{t}copiesstr9 = ""{n}{t}Copy9 = 1{n}{t}max9 = GetAllCopies(IA137){n}{n}{t}#If INDCALC Then{n}{t}{t}Do While Copy9 <= max9{n}{t}{t}{t}If GetCurrency(IA137.EthPromoteCr, Copy9) > 0 Then{n}{t}{t}{t}{t}If GetBool(IA137.Spouse, Copy9) = True And GetCurrency(IA137.EthPromoteCr, Copy9) > 0 Then{n}{t}{t}{t}{t}{t}copystr9 = CStr(Copy9 + 900) + " "{n}{t}{t}{t}{t}{t}copiesstr9 = copiesstr9 + copystr9{n}{t}{t}{t}{t}End If{n}{t}{t}{t}{t}{n}{t}{t}{t}End If{n}{t}{t}{t}Copy9 = Copy9 + 1{n}{t}{t}Loop{n}{t}#Else{n}{t}{t}Do While Copy9 <= max9{n}{t}{t}{t}If GetCurrency(IA137.EthPromoteCr, Copy9) > 0 Then{n}{t}{t}{t}{t}If GetCurrency(IA137.EthPromoteCr, Copy9) > 0 Then{n}{t}{t}{t}{t}{t}copystr9 = CStr(Copy9 + 900) + " "{n}{t}{t}{t}{t}{t}copiesstr9 = copiesstr9 + copystr9{n}{t}{t}{t}{t}End If{n}{t}{t}{t}{t}{n}{t}{t}{t}End If{n}{t}{t}{t}Copy9 = Copy9 + 1{n}{t}{t}Loop{n}{t}#End If{n}{t}{n}{t}copiesstr10 = ""{n}{t}Copy10 = 1{n}{t}max10 = GetAllCopies(IA138){n}{t}{t}{t}{n}{t}Do While Copy10 <= max10{n}{t}{t}If GetCurrency(IA138.E15Credit, Copy10) > 0 Then{n}{t}{t}{t}If GetBool(IA138.Spouse, Copy10) = True And GetCurrency(IA138.E15Credit, Copy10) > 0 Then{n}{t}{t}{t}{t}copystr10 = CStr(Copy10 + 1000){n}{t}{t}{t}{t}copiesstr10 = copiesstr10 + copystr10{n}{t}{t}{t}End If{n}{t}{t}{t}{n}{t}{t}End If{n}{t}{t}Copy10 = Copy10 + 1{n}{t}Loop{n}{t}{t}{t}{n}{t}copiesstr11 = ""{n}{t}Copy11 = 1{n}{t}max11 = GetAllCopies(IA177){n}{t}{n}{t}Do While Copy11 <= max11{n}{t}{t}If GetCurrency(IA177.CYAdoptionTaxCr, Copy11) > 0 Then{n}{t}{t}{t}If GetBool(IA177.Spouse, Copy11) = True And GetCurrency(IA177.CYAdoptionTaxCr, Copy11) > 0 Then{n}{t}{t}{t}{t}copystr11 = CStr(Copy11 + 1100){n}{t}{t}{t}{t}copiesstr11 = copiesstr11 + copystr11{n}{t}{t}{t}End If{n}{t}{t}{t}{n}{t}{t}End If{n}{t}{t}Copy11 = Copy11 + 1{n}{t}Loop{n}{t}{n}{t}copiesstr12 = ""{n}{t}Copy12 = 1{n}{t}max12 = GetAllCopies(IACred){n}{t}{n}{t}Do While Copy12 <= max12{n}{t}{t}If GetString(IACred.Code, Copy12) = "67" Then{n}{t}{t}{t}If GetBool(IACred.RefCr, Copy12) = True And GetBool(IACred.Spouse, Copy12) = True And GetString(IACred.Code, Copy12) = "67" Then{n}{t}{t}{t}{t}copystr12 = CStr(Copy12 + 1200){n}{t}{t}{t}{t}copiesstr12 = copiesstr12 + copystr12{n}{t}{t}{t}End If{n}{t}{t}End If{n}{t}{t}Copy12 = Copy12 + 1{n}{t}Loop{n}{t}{t}{t}{n}{t}copiesstr13 = ""{n}{t}Copy13 = 1{n}{t}max13 = GetAllCopies(IACred){n}{t}{n}{t}Do While Copy13 <= max13{n}{t}{t}If GetString(IACred.Code, Copy13) = "68" Then{n}{t}{t}{t}If GetBool(IACred.RefCr, Copy13) = True And GetBool(IACred.Spouse, Copy13) = True And GetString(IACred.Code, Copy13) = "68" Then{n}{t}{t}{t}{t}copystr13 = CStr(Copy13 + 1300){n}{t}{t}{t}{t}copiesstr13 = copiesstr13 + copystr13{n}{t}{t}{t}End If{n}{t}{t}End If{n}{t}{t}Copy13 = Copy13 + 1{n}{t}Loop{n}{t}{n}{t}copiesstr14 = ""{n}{t}Copy14 = 1{n}{t}max14 = GetAllCopies(IACred){n}{t}{n}{t}Do While Copy14 <= max14{n}{t}{t}If GetString(IACred.Code, Copy14) = "69" Then{n}{t}{t}{t}If GetBool(IACred.RefCr, Copy14) = True And GetBool(IACred.Spouse, Copy14) = True And GetString(IACred.Code, Copy14) = "69" Then{n}{t}{t}{t}{t}copystr14 = CStr(Copy14 + 1400){n}{t}{t}{t}{t}copiesstr14 = copiesstr14 + copystr14{n}{t}{t}{t}End If{n}{t}{t}End If{n}{t}{t}Copy14 = Copy14 + 1{n}{t}Loop{n}{t}{t}{t}{t}{n}{t}{t}{t}{n}{t}ReturnVal = copiesstr + copiesstr2 + copiesstr3 + copiesstr4 + copiesstr5 + copiesstr6 + copiesstr7 + copiesstr8 + copiesstr9 + copiesstr10 + copiesstr11 + copiesstr12 + copiesstr13 + copiesstr14{n}{n}End Sub
Sub RefCr_Calculation(Index As Integer){n}  Dim strindex As Long{n}  Dim copystr As String{n}  Dim Copy As Long{n}  {n}  strindex = ((Index) * 4) + 1{n}  copystr = Trim(Mid(GetString(IA148Sp.RefCopiesStr), strindex, 4)){n}  {n}  If Index = 6 And GetNumber(IA148Sp.RefNbr) > 7 Then{n}{t}ReturnVal = GetCurrency(IAWBP148RefSp.TotRefCr1) + GetCurrency(IAWBP148RefSp.TotRefCr2){n}  ElseIf copystr <> "" Then{n}{t}Copy = CLng(copystr){n}{t}If (Copy > 100) And (Copy <= 200) Then{n}{t}  ReturnVal = GetCurrency(IA8864.BiodieselCr, (Copy) - 100){n}{t}ElseIf (Copy > 200) And (Copy <= 300) Then{n}{t}  ReturnVal = GetCurrency(IACred.CYCredit, (Copy) - 200){n}{t}ElseIf (Copy > 300) And (Copy <= 400) Then{n}{t}  ReturnVal = GetCurrency(IA135.E85Credit, (Copy) - 300){n}{t}ElseIf (Copy > 400) And (Copy <= 500) Then{n}{t}  ReturnVal = GetCurrency(IACred.CYCredit, (Copy) - 400){n}{t}ElseIf (Copy > 500) And (Copy <= 600) Then{n}{t}  ReturnVal = GetCurrency(IA128.TotResearchCr, (Copy) - 500){n}{t}ElseIf (Copy > 600) And (Copy <= 700) Then{n}{t}  ReturnVal = GetCurrency(IA128S.TotResearchCr, (Copy) - 600){n}{t}ElseIf (Copy > 700) And (Copy <= 800) Then{n}{t}  ReturnVal = GetCurrency(IA128.TotSuppResearchCr, (Copy) - 700){n}{t}ElseIf (Copy > 800) And (Copy <= 900) Then{n}{t}  ReturnVal = GetCurrency(IA128S.TotSuppResearchCr, (Copy) - 800){n}{t}ElseIf (Copy > 900) And (Copy <= 1000) Then{n}{t}  ReturnVal = GetCurrency(IA137.EthPromoteCr, (Copy) - 900){n}{t}ElseIf (Copy > 1000) And (Copy <= 1100) Then{n}{t}  ReturnVal = GetCurrency(IA138.E15Credit, (Copy) - 1000){n}{t}ElseIf (Copy > 1100) And (Copy <= 1200) Then{n}{t}  ReturnVal = GetCurrency(IA177.CYAdoptionTaxCr, (Copy) - 1100){n}{t}ElseIf (Copy > 1200) And (Copy <= 1300) Then{n}{t}  ReturnVal = GetCurrency(IACred.CYCredit, (Copy) - 1200){n}{t}ElseIf (Copy > 1300) And (Copy <= 1400) Then{n}{t}  ReturnVal = GetCurrency(IACred.CYCredit, (Copy) - 1300){n}{t}ElseIf (Copy > 1400) And (Copy <= 1500) Then{n}{t}  ReturnVal = GetCurrency(IACred.CYCredit, (Copy) - 1400){n}{t}End If{n}  End If{n}  ReturnVal = 0{n}End Sub
Sub RefNbr_Calculation(){n}{t}Dim count As Integer{n}{t}Dim Lim As Integer{n}{t}Dim Total As Integer{n}{t}{n}{t}Lim = GetAllCopies(IA8864){n}{t}count = 1{n}{t}Total = 0{n}{t}{n}{t}Do While count <= Lim{n}{t}{t}If GetBool(IA8864.Spouse, count) = True And GetCurrency(IA8864.BiodieselCr, count) > 0 Then{n}{t}{t}{t}Total = Total + 1{n}{t}{t}Else{n}{t}{t}{t}Total = Total{n}{t}{t}End If{n}{t}{t}{n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}Dim count2 As Integer{n}{t}Dim Lim2 As Integer{n}{t}Dim IACredit As String{n}{t}{n}{t}Lim2 = GetAllCopies(IACred){n}{t}count2 = 1{n}{t}{n}{t}Do While count2 <= Lim2{n}{t}IACredit = GetString(IACred.Code, count2){n}{t}{t}If GetBool(IACred.RefCr, count2) = True And GetBool(IACred.Spouse, count2) = True And (IACredit = "53" Or IACredit = "56" Or IACredit = "67" Or IACredit = "68" Or IACredit = "69") Then{n}{t}{t}{t}Total = Total + 1{n}{t}{t}Else{n}{t}{t}{t}Total = Total{n}{t}{t}End If{n}{t}{t}{n}{t}{t}count2 = count2 + 1{n}{t}Loop{n}{t}{n}{t}Dim count3 As Integer{n}{t}Dim Lim3 As Integer{n}{t}{n}{t}Lim3 = GetAllCopies(IA135){n}{t}count3 = 1{n}{t}{n}{t}Do While count3 <= Lim3{n}{t}{t}If GetBool(IA135.Spouse, count3) = True And GetCurrency(IA135.E85Credit, count3) > 0 Then{n}{t}{t}{t}Total = Total + 1{n}{t}{t}Else{n}{t}{t}{t}Total = Total{n}{t}{t}End If{n}{t}{t}{n}{t}{t}count3 = count3 + 1{n}{t}Loop{n}{t}{n}{t}Dim count4 As Integer{n}{t}Dim Lim4 As Integer{n}{t}{n}{t}Lim4 = GetAllCopies(IA128){n}{t}count4 = 1{n}{t}{n}{t}Do While count4 <= Lim4{n}{t}{t}If GetBool(IA128.Spouse, count4) = True And GetCurrency(IA128.TotResearchCr, count4) > 0 Then{n}{t}{t}{t}Total = Total + 1{n}{t}{t}Else{n}{t}{t}{t}Total = Total{n}{t}{t}End If{n}{t}{t}{n}{t}{t}count4 = count4 + 1{n}{t}Loop{n}{t}{n}{t}Dim count5 As Integer{n}{t}Dim Lim5 As Integer{n}{t}{n}{t}Lim5 = GetAllCopies(IA128){n}{t}count5 = 1{n}{t}{n}{t}Do While count5 <= Lim5{n}{t}{t}If GetBool(IA128.Spouse, count5) = True And GetCurrency(IA128.TotSuppResearchCr, count5) > 0 Then{n}{t}{t}{t}Total = Total + 1{n}{t}{t}Else{n}{t}{t}{t}Total = Total{n}{t}{t}End If{n}{t}{t}{n}{t}{t}count5 = count5 + 1{n}{t}Loop{n}{t}{n}{t}Dim count6 As Integer{n}{t}Dim Lim6 As Integer{n}{t}{n}{t}Lim6 = GetAllCopies(IA128S){n}{t}count6 = 1{n}{t}{n}{t}Do While count6 <= Lim6{n}{t}{t}If GetBool(IA128S.Spouse, count6) = True And GetCurrency(IA128S.TotResearchCr, count6) > 0 Then{n}{t}{t}{t}Total = Total + 1{n}{t}{t}Else{n}{t}{t}{t}Total = Total{n}{t}{t}End If{n}{t}{t}{n}{t}{t}count6 = count6 + 1{n}{t}Loop{n}{t}{n}{t}Dim count7 As Integer{n}{t}Dim Lim7 As Integer{n}{t}{n}{t}Lim7 = GetAllCopies(IA128S){n}{t}count7 = 1{n}{t}{n}{t}Do While count7 <= Lim7{n}{t}{t}If GetBool(IA128S.Spouse, count7) = True And GetCurrency(IA128S.TotSuppResearchCr, count7) > 0 Then{n}{t}{t}{t}Total = Total + 1{n}{t}{t}Else{n}{t}{t}{t}Total = Total{n}{t}{t}End If{n}{t}{t}{n}{t}{t}count7 = count7 + 1{n}{t}Loop{n}{t}{n}{t}Dim count8 As Integer{n}{t}Dim Lim8 As Integer{n}{t}{n}{t}Lim8 = GetAllCopies(IA137){n}{t}count8 = 1{n}{t}{n}{t}Do While count8 <= Lim8{n}{t}{t}#If INDCALC Then{n}{t}{t}{t}If GetBool(IA137.Spouse, count8) = True And GetCurrency(IA137.EthPromoteCr, count8) > 0 Then{n}{t}{t}{t}{t}Total = Total + 1{n}{t}{t}{t}Else{n}{t}{t}{t}{t}Total = Total{n}{t}{t}{t}End If{n}{t}{t}#Else{n}{t}{t}{t}If GetCurrency(IA137.EthPromoteCr, count8) > 0 Then{n}{t}{t}{t}{t}Total = Total + 1{n}{t}{t}{t}Else{n}{t}{t}{t}{t}Total = Total{n}{t}{t}{t}End If{n}{t}{t}#End If{n}{t}{t}{n}{t}{t}count8 = count8 + 1{n}{t}Loop{n}{t}{n}{t}Dim count9 As Integer{n}{t}Dim Lim9 As Integer{n}{t}{n}{t}Lim9 = GetAllCopies(IA138){n}{t}count9 = 1{n}{t}{n}{t}Do While count9 <= Lim9{n}{t}{t}If GetBool(IA138.Spouse, count9) = True And GetCurrency(IA138.E15Credit, count9) > 0 Then{n}{t}{t}{t}Total = Total + 1{n}{t}{t}Else{n}{t}{t}{t}Total = Total{n}{t}{t}End If{n}{t}{t}{n}{t}{t}count9 = count9 + 1{n}{t}Loop{n}{t}{n}{t}Dim count10 As Integer{n}{t}Dim Lim10 As Integer{n}{t}{n}{t}Lim10 = GetAllCopies(IA177){n}{t}count10 = 1{n}{t}{n}{t}Do While count10 <= Lim10{n}{t}{t}If GetBool(IA177.Spouse, count10) = True And GetCurrency(IA177.CYAdoptionTaxCr, count10) > 0 Then{n}{t}{t}{t}Total = Total + 1{n}{t}{t}Else{n}{t}{t}{t}Total = Total{n}{t}{t}End If{n}{t}{t}{n}{t}{t}count10 = count10 + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = Total{n}End Sub
Sub RefTrig_Calculation(Index As Integer){n}{t}If GetString(IA148Sp.RefCode(Index)) = "64" Or GetString(IA148Sp.RefCode(Index)) = "58" Or GetString(IA148Sp.RefCode(Index)) = "55" Or GetString(IA148Sp.RefCode(Index)) = "52" Or GetString(IA148Sp.RefCode(Index)) = "59" Or GetString(IA148Sp.RefCode(Index)) = "65" Or GetString(IA148Sp.RefCode(Index)) = "66" Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetCurrency(IA148Sp.RefCr(Index)) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IAF1040.SpouseSSN){n}End Sub
Sub TotCode64_Calculation(){n}{t}Dim count As Integer{n}{t}Dim Lim As Integer{n}{t}Dim Total As Currency{n}{t}{n}{t}Lim = GetAllCopies(IA137){n}{t}count = 1{n}{t}Total = 0{n}{t}{n}{t}Do While count <= Lim{n}{t}{t}If GetBool(IA137.Spouse, count) = True Then{n}{t}{t}{t}Total = Total + GetCurrency(IA137.TotEthSoldCr, count){n}{t}{t}Else{n}{t}{t}{t}Total = Total{n}{t}{t}End If{n}{t}{t}{n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{t}{n}{t}ReturnVal = Total{n}End Sub
Sub TotNonRefCr_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = False Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IA148Sp.NonRefCr1) + GetCurrency(IA148Sp.NonRefCr2) + GetCurrency(IA148Sp.NonRefCr3) + GetCurrency(IA148Sp.NonRefCr4) + GetCurrency(IA148Sp.NonRefCr5) + GetCurrency(IA148Sp.NonRefCr6) + GetCurrency(IA148Sp.NonRefCr7) + GetCurrency(IA148Sp.NonRefCr8) + GetCurrency(IA148Sp.NonRefCr9) + GetCurrency(IA148Sp.NonRefCr10){n}{t}End If{n}End Sub
Sub TotNonRefNo8801_Calculation(){n}{t}Dim count As Integer{n}{t}Dim Lim As Integer{n}{t}Dim WSTotal As Currency{n}{t}Dim Total As Currency{n}{t}{n}{t}Lim = GetAllCopies(IACred){n}{t}count = 1{n}{t}WSTotal = 0{n}{t}{n}{t}Do While count <= Lim{n}{t}{t}If GetBool(IACred.NonrefCr, count) = True And GetBool(IACred.Spouse, count) = True Then{n}{t}{t}{t}WSTotal = WSTotal + GetCurrency(IACred.CYCredit, count) + GetCurrency(IACred.PYCarry, count){n}{t}{t}Else{n}{t}{t}{t}WSTotal = WSTotal{n}{t}{t}End If{n}{t}{t}{n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}Total = WSTotal + GetCurrency(IA134Sp.Credit) + GetCurrency(IA147.FranchiseCr, FieldCopies(IA147.Spouse)){n}{t}{t}{n}{t}ReturnVal = Total{n}End Sub
Sub TotPTE_Calculation(){n}{t}ReturnVal = GetNumber(IA148BumpSp.TotPTE) + GetNumber(IA148BumpSp.TotRefPTE){n}End Sub
Sub TotRefCr_Calculation(){n}{t}Dim count As Integer{n}{t}Dim SubTot As Currency{n}{n}{t}count = 0{n}{t}SubTot = 0{n}{n}{t}Do While count < 7{n}{t}{t}SubTot = SubTot + GetCurrency(IA148Sp.RefCr(count)){n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}If GetBool(IAF1040.CombMFS) = False Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = SubTot{n}{t}End If{n}End Sub
Sub TPPerc_Calculation(Index As Integer){n}{t}Dim PTE As Integer{n}{t}Dim RefPTE As Integer{n}{t}Dim Stuff As Integer{n}{t}Dim Stuff2 As Integer{n}   {n}{t}PTE = GetNumber(IA148BumpSp.TotPTE){n}{t}RefPTE = GetNumber(IA148BumpSp.TotRefPTE){n}{t}{n}{t}If Index = 5 And GetNumber(IA148Sp.TotPTE) > 6 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf PTE > Index Then{n}{t}{t}Stuff2 = GetNumber(IA148BumpSp.PTEIndexNbr(Index)){n}{t}{t}ReturnVal = GetFloat(IA148BumpSp.TPPerc(Stuff2)){n}{t}ElseIf PTE + RefPTE > Index Then{n}{t}{t}Stuff = (Index) - PTE{n}{t}{t}Stuff2 = GetNumber(IA148BumpSp.RefPTEIndexNbr(Stuff)){n}{t}{t}ReturnVal = GetFloat(IA148BumpSp.RefTPPerc(Stuff2)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End SubSub AnotherVN_Calculation(Index As Integer){n}{t}If GetBool(IA2106.FedQualifies) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetBool(USF2106.AnotherVN(Index), ParentCopy()){n}{t}End If{n}End Sub
Sub AnotherVY_Calculation(Index As Integer){n}{t}If GetBool(IA2106.FedQualifies) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetBool(USF2106.AnotherVY(Index), ParentCopy()){n}{t}End If{n}End Sub
Sub Common_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.TPCommon){n}End Sub
Sub Description_Calculation(){n}{t}ReturnVal = GetString(IA2106.FirstName){n}End Sub
Sub DOT_Calculation(){n}{t}If GetBool(IA2106.FedQualifies) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetBool(USF2106.DOT, ParentCopy()){n}{t}End If{n}End Sub
Sub DOTMeals_Calculation(){n}{t}If GetBool(IA2106.FedQualifies) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}If GetBool(IA2106.DOT) = True Then{n}{t}{t}{t}ReturnVal = GetCurrency(USF2106.DOTMeals, ParentCopy()){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}End If{n}End Sub
Sub EmpExp_Calculation(){n}'should clergy be factored in, see 2017 Fed 2106 line 10 calc, would need checkbox and ClergyExp added to 2018 fed 2106 state section and interviewed (looks like these fields were added to fed in 2014){n}{t}If GetBool(IA2106.FedQualifies) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IA2106.LimMEColA) + GetCurrency(IA2106.LimMEColB){n}{t}End If{n}End Sub
Sub EvidenceN_Calculation(Index As Integer){n}{t}If GetBool(IA2106.FedQualifies) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetBool(USF2106.EvidenceN(Index), ParentCopy()){n}{t}End If{n}End Sub
Sub EvidenceY_Calculation(Index As Integer){n}{t}If GetBool(IA2106.FedQualifies) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetBool(USF2106.EvidenceY(Index), ParentCopy()){n}{t}End If{n}End Sub
Sub Exist_Calculation(){n}{t}ReturnVal = 1{n}End Sub
Sub Fed2106_Calculation(){n}{t}ReturnVal = "BEGIN HERE: Open federal Form 2106{t}   Click on the folder to open the supporting document."{n}End Sub
Sub FedLn4_Calculation(){n}{t}If GetBool(IA2106.FedQualifies) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USF2106.TotBusExp, ParentCopy()){n}{t}End If{n}End Sub
Sub FirstName_Calculation(){n}{t}If GetBool(IA2106.Spouse) = True Then{n}{t}{t}ReturnVal = GetString(IAF1040.SpouseFirst){n}{t}Else{n}{t}{t}ReturnVal = GetString(IAF1040.FirstName){n}{t}End If{n}End Sub
Sub IAExcessReim_Calculation(){n}{t}If GetCurrency(IA2106.TotColA) - GetCurrency(IA2106.UnreimColA) < 0 Then{n}{t}{t}ReturnVal = Abs(GetCurrency(IA2106.TotColA) - GetCurrency(IA2106.UnreimColA)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub IAStateDeprAdj_Calculation(){n}{t}If GetBool(IA2106.FedQualifies) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USF2106.IAStateDeprAdj, ParentCopy()) *  -1{n}{t}End If{n}End Sub
Sub IAWages_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA2106.IAExcessReim) - GetCurrency(IA2106.Wages)){n}End Sub
Sub LastName_Calculation(){n}{t}If GetBool(IA2106.Spouse) = True Then{n}{t}{t}ReturnVal = GetString(IAF1040.SpouseLast){n}{t}Else{n}{t}{t}ReturnVal = GetString(IAF1040.LastName){n}{t}End If{n}End Sub
Sub LimMEColA_Calculation(){n}{t}If GetCurrency(IA2106.NetColA) > 0 Then{n}{t}{t}ReturnVal = GetCurrency(IA2106.NetColA){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub LimMEColB_Calculation(){n}{t}Dim DOTMeals As Currency{n}{t}Dim OthMeals As Currency{n}{t}{n}{t}DOTMeals = MaxValue(0, GetCurrency(IA2106.DOTMeals) - GetCurrency(IA2106.ReimbDOT)){n}{t}OthMeals = MaxValue(0, GetCurrency(IA2106.OthMeals) - GetCurrency(IA2106.ReimbOth)){n}{t}{n}{t}If DOTMeals + OthMeals > 0 Then{n}{t}{t}If GetBool(IA2106.DOT) = True Then{n}{t}{t}{t}ReturnVal = CDollar(CDbl(DOTMeals) * 0.8) + CDollar(CDbl(OthMeals) * 0.5){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = CDollar(CDbl(OthMeals) * 0.5){n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Meals_Calculation(){n}{t}If GetBool(IA2106.DOT) = True Then{n}{t}{t}ReturnVal = GetCurrency(IA2106.DOTMeals) + GetCurrency(IA2106.OthMeals){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IA2106.OthMeals){n}{t}End If{n}End Sub
Sub NetColA_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA2106.TotColA) - GetCurrency(IA2106.UnreimColA)){n}End Sub
Sub NetColB_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA2106.TotColB) - GetCurrency(IA2106.UnReimColB)){n}End Sub
Sub Occupation_Calculation(){n}{t}If GetBool(IA2106.FedQualifies) = True Then{n}{t}{t}ReturnVal = ""{n}{t}Else{n}{t}{t}ReturnVal = GetString(USF2106.Occupation, ParentCopy()){n}{t}End If{n}End Sub
Sub OffN_Calculation(Index As Integer){n}{t}If GetBool(IA2106.FedQualifies) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetBool(USF2106.OffN(Index), ParentCopy()){n}{t}End If{n}End Sub
Sub OffY_Calculation(Index As Integer){n}{t}If GetBool(IA2106.FedQualifies) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetBool(USF2106.OffY(Index), ParentCopy()){n}{t}End If{n}End Sub
Sub OthMeals_Calculation(){n}{t}Dim TotMeals As Currency{n}{t}{n}{t}TotMeals = GetCurrency(USF2106.Meals, ParentCopy()){n}{t}{n}{t}If GetBool(IA2106.FedQualifies) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = MaxValue(0, (TotMeals - GetCurrency(IA2106.DOTMeals))){n}{t}End If{n}End Sub
Sub Parking_Calculation(){n}{t}If GetBool(IA2106.FedQualifies) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USF2106.Parking, ParentCopy()){n}{t}End If{n}End Sub
Sub PAvgComm_Calculation(Index As Integer){n}{t}If GetBool(IA2106.FedQualifies) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetNumber(USF2106.PAvgComm(Index), ParentCopy()){n}{t}End If{n}End Sub
Sub PBasis_Calculation(Index As Integer){n}{t}If GetBool(IA2106.FedQualifies) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USF2106.PBasis(Index), ParentCopy()){n}{t}End If{n}End Sub
Sub PBusMiles_Calculation(Index As Integer){n}{t}If GetBool(IA2106.FedQualifies) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetNumber(USF2106.PBusMiles(Index), ParentCopy()){n}{t}End If{n}End Sub
Sub PBusPer_Calculation(Index As Integer){n}{t}If GetBool(IA2106.FedQualifies) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetFloat(USF2106.PBusPer(Index), ParentCopy()){n}{t}End If{n}End Sub
Sub PCommute_Calculation(Index As Integer){n}{t}If GetBool(IA2106.FedQualifies) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetNumber(USF2106.PCommute(Index), ParentCopy()){n}{t}End If{n}End Sub
Sub PDate_Calculation(Index As Integer){n}{t}If GetBool(IA2106.FedQualifies) = True Then{n}{t}{t}ReturnVal = ""{n}{t}Else{n}{t}{t}ReturnVal = GetString(USF2106.PDate(Index), ParentCopy()){n}{t}End If{n}End Sub
Sub PDepr_Calculation(Index As Integer){n}{t}If GetBool(IA2106.FedQualifies) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IA2106.PTotDepr(Index)){n}{t}End If{n}End Sub
Sub PDeprBasis_Calculation(Index As Integer){n}{t}If GetBool(IA2106.FedQualifies) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = MaxValue(0, CDollar(GetFloat(IA2106.PBasis(Index)) * GetFloat(IA2106.PBusPer(Index))) - GetCurrency(USF2106.PStateSec179(Index), ParentCopy())){n}{t}End If{n}End Sub
Sub PDeprVeh_Calculation(Index As Integer){n}'need to make sure sec179 is included, IA 2106 does not have a line for State sec179 and does not address in the instructions, seems this filed will have to show the depr basis x rate plus 179.{n}'Verified below is calling USW2106Veh.DeprNoBonus which includes depr x bus per. plus state 179{n}{t}If GetBool(IA2106.FedQualifies) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USF2106.PDeprVehState(Index), ParentCopy()){n}{t}End If{n}End Sub
Sub PExp_Calculation(Index As Integer){n}{t}If GetBool(IA2106.FedQualifies) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USF2106.PExp(Index), ParentCopy()){n}{t}End If{n}End Sub
Sub PGas_Calculation(Index As Integer){n}{t}If GetBool(IA2106.FedQualifies) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USF2106.PGas(Index), ParentCopy()){n}{t}End If{n}End Sub
Sub PInclusion_Calculation(Index As Integer){n}{t}If GetBool(IA2106.FedQualifies) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USF2106.PInclusion(Index), ParentCopy()){n}{t}End If{n}End Sub
Sub PLuxLim_Calculation(Index As Integer){n}{t}If GetBool(IA2106.FedQualifies) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USF2106.LuxLimState2(Index), ParentCopy()){n}{t}End If{n}End Sub
Sub PMethod_Calculation(Index As Integer){n}{t}If GetBool(IA2106.FedQualifies) = True Then{n}{t}{t}ReturnVal = ""{n}{t}Else{n}{t}{t}ReturnVal = GetString(USF2106.PMethod(Index), ParentCopy()){n}{t}End If{n}End Sub
Sub PNetRent_Calculation(Index As Integer){n}{t}If GetBool(IA2106.FedQualifies) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USF2106.PNetRent(Index), ParentCopy()){n}{t}End If{n}End Sub
Sub POthMiles_Calculation(Index As Integer){n}{t}If GetBool(IA2106.FedQualifies) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetNumber(USF2106.POthMiles(Index), ParentCopy()){n}{t}End If{n}End Sub
Sub PPerExp_Calculation(Index As Integer){n}{t}If GetBool(IA2106.FedQualifies) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USF2106.PPerExp(Index), ParentCopy()){n}{t}End If{n}End Sub
Sub PPerLim_Calculation(Index As Integer){n}{t}If GetBool(IA2106.FedQualifies) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USF2106.PerLimState2(Index), ParentCopy()){n}{t}End If{n}End Sub
Sub PRate_Calculation(Index As Integer){n}{t}If GetBool(IA2106.FedQualifies) = True Then{n}{t}{t}ReturnVal = ""{n}{t}Else{n}{t}{t}ReturnVal = GetString(USF2106.PRate(Index), ParentCopy()){n}{t}End If{n}End Sub
Sub PRent_Calculation(Index As Integer){n}{t}If GetBool(IA2106.FedQualifies) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USF2106.PRent(Index), ParentCopy()){n}{t}End If{n}End Sub
Sub PrintMe_Calculation(){n}{t}If GetCurrency(IA2106.EmpExp) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub PrintPg21_Calculation(){n}{t}If GetCurrency(IA2106.PStandard(0)) > 0@ Or GetCurrency(IA2106.PTotAct(0)) > 0@ Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub PrintPg22_Calculation(){n}{t}If GetCurrency(IA2106.PStandard(1)) > 0@ Or GetCurrency(IA2106.PTotAct(1)) > 0@ Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub PrintPg23_Calculation(){n}{t}If GetCurrency(IA2106.PStandard(2)) > 0@ Or GetCurrency(IA2106.PTotAct(2)) > 0@ Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub PrintPg24_Calculation(){n}{t}If GetCurrency(IA2106.PStandard(3)) > 0@ Or GetCurrency(IA2106.PTotAct(3)) > 0@ Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub PStandard_Calculation(Index As Integer){n}{t}If GetBool(IA2106.FedQualifies) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USF2106.PStandard(Index), ParentCopy()){n}{t}End If{n}End Sub
Sub PTotAct_Calculation(Index As Integer){n}{t}If GetBool(IA2106.FedQualifies) = True Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetCurrency(IA2106.PStandard(Index)) = 0 Then{n}{t}{t}ReturnVal = GetCurrency(IA2106.PPerExp(Index)) + GetCurrency(IA2106.PDepr(Index)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub PTotDepr_Calculation(Index As Integer){n}{t}If GetBool(IA2106.FedQualifies) = True Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetCurrency(IA2106.PLuxLim(Index)) = 0 And GetCurrency(IA2106.PPerLim(Index)) = 0 Then{n}{t}{t}ReturnVal = GetCurrency(IA2106.PDeprVeh(Index)){n}{t}Else{n}{t}{t}ReturnVal = MinValue(GetCurrency(IA2106.PDeprVeh(Index)), GetCurrency(IA2106.PPerLim(Index))){n}{t}End If{n}End Sub
Sub PTotMiles_Calculation(Index As Integer){n}{t}If GetBool(IA2106.FedQualifies) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetNumber(USF2106.PTotMiles(Index), ParentCopy()){n}{t}End If{n}End Sub
Sub PValue_Calculation(Index As Integer){n}{t}If GetBool(IA2106.FedQualifies) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USF2106.PValue(Index), ParentCopy()){n}{t}End If{n}End Sub
Sub FedQualifies_Calculation(){n}{t}ReturnVal = GetBool(USF2106.Qualifies, ParentCopy()){n}End Sub
Sub ReimbDOT_Calculation(){n}{t}If GetBool(IA2106.FedQualifies) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}If GetBool(IA2106.DOT) = True Then{n}{t}{t}{t}ReturnVal = GetCurrency(USF2106.ReimbDOT, ParentCopy()){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}End If{n}End Sub
Sub ReimbOth_Calculation(){n}{t}Dim TotReimb As Currency{n}{t}{n}{t}TotReimb = GetCurrency(USF2106.UnReimColB, ParentCopy()){n}{t}{n}{t}If GetBool(IA2106.FedQualifies) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = MaxValue(0, (TotReimb - GetCurrency(IA2106.ReimbDOT))){n}{t}End If{n}End Sub
Sub SchAAMt_Calculation(){n}{t}ReturnVal = GetCurrency(IA2106.EmpExp){n}End Sub
Sub Spouse_Calculation(){n}{t}ReturnVal = GetBool(USF2106.Spouse, ParentCopy()){n}End Sub
Sub SpouseCommon_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.SPCommon){n}End Sub
Sub SSN_Calculation(){n}{t}If GetBool(IA2106.Spouse) = True Then{n}{t}{t}ReturnVal = GetString(IAF1040.SpouseSSN){n}{t}Else{n}{t}{t}ReturnVal = GetString(IAF1040.SSN){n}{t}End If{n}End Sub
Sub Taxpayer_Calculation(){n}{t}ReturnVal = GetBool(USF2106.Taxpayer, ParentCopy()){n}End Sub
Sub TotBusExp_Calculation(){n}{t}If GetBool(IA2106.FedQualifies) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IA2106.FedLn4) + GetCurrency(IA2106.IAStateDeprAdj){n}{t}End If{n}End Sub
Sub TotColA_Calculation(){n}{t}ReturnVal = GetCurrency(IA2106.VehExp) + GetCurrency(IA2106.Parking) + GetCurrency(IA2106.Travel) + GetCurrency(IA2106.TotBusExp){n}End Sub
Sub TotColB_Calculation(){n}{t}ReturnVal = GetCurrency(IA2106.Meals){n}End Sub
Sub Travel_Calculation(){n}{t}If GetBool(IA2106.FedQualifies) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USF2106.Travel, ParentCopy()){n}{t}End If{n}End Sub
Sub UnreimColA_Calculation(){n}{t}If GetBool(IA2106.FedQualifies) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USF2106.UnreimColA, ParentCopy()){n}{t}End If{n}End Sub
Sub UnReimColB_Calculation(){n}{t}If GetBool(IA2106.DOT) = True Then{n}{t}{t}ReturnVal = GetCurrency(IA2106.ReimbDOT) + GetCurrency(IA2106.ReimbOth){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IA2106.ReimbOth){n}{t}End If{n}End Sub
Sub VehExp_Calculation(){n}{t}If GetBool(IA2106.FedQualifies) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IA2106.PStandard(0)) + GetCurrency(IA2106.PStandard(1)) + GetCurrency(IA2106.PStandard(2)) + GetCurrency(IA2106.PStandard(3)) + GetCurrency(IA2106.PTotAct(0)) + GetCurrency(IA2106.PTotAct(1)) + GetCurrency(IA2106.PTotAct(2)) + GetCurrency(IA2106.PTotAct(3)){n}{t}End If{n}End Sub
Sub Wages_Calculation(){n}{t}ReturnVal = GetCurrency(USF2106.Wages, ParentCopy()){n}End Sub
Sub WrittenN_Calculation(Index As Integer){n}{t}If GetBool(IA2106.FedQualifies) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetBool(USF2106.WrittenN(Index), ParentCopy()){n}{t}End If{n}End Sub
Sub WrittenY_Calculation(Index As Integer){n}{t}If GetBool(IA2106.FedQualifies) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetBool(USF2106.WrittenY(Index), ParentCopy()){n}{t}End If{n}End Sub
Sub YrMakeModel_Calculation(Index As Integer){n}{t}ReturnVal = GetString(IA2106.Year(Index)) + " " + GetString(IA2106.Make(Index)) + " " + GetString(IA2106.Model(Index)){n}End SubSub Alert10_Calculation(){n}{t}If GetCurrency(IA2210.Penalty) > 0 And GetCurrency(IA2210.PYTax) = 0 And GetBool(IA2210.PYZero) = False Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert20_Calculation(){n}{t}If GetCurrency(IA2210Sp.Penalty) > 0 And GetCurrency(IA2210Sp.PYTax) = 0 And GetBool(IA2210Sp.PYZero) = False Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Amt8_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IA2210.Bal) * 0.9){n}End Sub
Sub Bal_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA2210.CYTax) - GetCurrency(IA2210.TotCr)){n}End Sub
Sub ChildC_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.AChild){n}End Sub
Sub CYTax_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.ABal4){n}End Sub
Sub Description_Calculation(){n}{t}ReturnVal = CStr(GetCurrency(IA2210.Penalty)) & " Penalty"{n}End Sub
Sub EFile_Calculation(){n}{t}If GetBool(IA1040X.EFAmend) = True Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IA2210.Print) = True Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA2210.Amt8) >= 200@ Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub EFStQ1_Calculation(){n}{t}ReturnVal = GetCurrency(IAStateEst.TPStApply) + GetCurrency(IAStateEst.TPStQ1){n}End Sub
Sub ExpPenalty_Calculation(){n}{t}If GetCurrency(IA2210.Penalty) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Fuel_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.AFuel){n}End Sub
Sub IAEIC_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.AIEIC){n}End Sub
Sub Names_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = GetString(IARequired.TPCombName){n}{t}Else{n}{t}{t}ReturnVal = GetString(IARequired.CombNames){n}{t}End If{n}End Sub
Sub NoPen_Calculation(){n}{t}ReturnVal = GetBool(USWPrepMnNm.AlwaysState2210){n}End Sub
Sub Penalty_Calculation(){n}{t}If GetBool(IA2210.NoPen) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAPenalty.TotPen){n}{t}End If{n}End Sub
Sub Print_Calculation(){n}{t}If GetBool(IA2210.AnInc) = True Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA2210.Penalty) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub PYTax_Calculation(){n}{t}Dim PYAGILimit As Currency{n}{t}Dim AGI As Currency{n}{t}Dim AGIBonus As Currency{n}{t}{n}{t}If GetBool(USWSpouse.MFS) = True And GetBool(USWSpouse.NonRes) = False Then{n}{t}{t}PYAGILimit = 75000@{n}{t}Else{n}{t}{t}PYAGILimit = 150000@{n}{t}End If{n}{t}{n}{t}If GetBool(USWSpouse.NonRes) = True Then{n}{t}{t}AGI = GetCurrency(USWRec.PYAGINR){n}{t}ElseIf IAFS() <> 3 Then{n}{t}{t}AGI = GetCurrency(USWRec.PYTAGI){n}{t}Else{n}{t}{t}AGI = GetCurrency(USWRec.PYAGI){n}{t}End If{t}{n}{n}{t}If IAFS() <> 3 Then{n}{t}{t}AGIBonus = AGI + GetCurrency(USZIA1040.IATotBonus) + GetCurrency(USZIA1040.IATotBonusSp){n}{t}Else{n}{t}{t}AGIBonus = AGI + GetCurrency(USZIA1040.IATotBonus){n}{t}End If{n}{n}{t}If AGIBonus > PYAGILimit Then{n}{t}{t}ReturnVal = CDollar(GetFloat(USZIA1040.IA2210PYTax) * 1.1){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USZIA1040.IA2210PYTax){n}{t}End If{n}End Sub
Sub Q1AnInc_Calculation(){n}{t}If GetBool(IA2210.AnInc) = True Then{n}{t}{t}ReturnVal = GetCurrency(IA2210An.Q1AIInstall){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Q1DaysB_Calculation(){n}{t}If GetCurrency(IA2210.Penalty) > 0 Then{n}{t}{t}ReturnVal = "See"{n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub Q1Est_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210.Q1WH) + GetCurrency(IAStateEst.TPStApply) + GetCurrency(IAStateEst.TPStQ1){n}End Sub
Sub Q1Install_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IA2210.Small) * 0.25){n}End Sub
Sub Q1Ln11_Calculation(){n}{t}If GetBool(IA2210.AnInc) = True Then{n}{t}{t}ReturnVal = GetCurrency(IA2210.Q1AnInc){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IA2210.Q1Install){n}{t}End If{n}End Sub
Sub Q1Ln19a_Calculation(){n}{t}If GetCurrency(IA2210.Penalty) > 0 Then{n}{t}{t}ReturnVal = "Worksheet"{n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}{n}End Sub
Sub Q1Ln19B_Calculation(){n}{t}If GetCurrency(IA2210.Penalty) > 0 Then{n}{t}{t}ReturnVal = "Attached"{n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub Q1Undpay_Calculation(){n}{t}If GetCurrency(IA2210.Q1Est) < GetCurrency(IA2210.Q1Ln11) Then{n}{t}{t}ReturnVal = GetCurrency(IA2210.Q1Ln11) - GetCurrency(IA2210.Q1Est){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Q1WH_Calculation(){n}{t}ReturnVal = CDollar(CDbl(GetCurrency(IAF1040.AIATaxWith)) * 0.25){n}End Sub
Sub Q2AnInc_Calculation(){n}{t}If GetBool(IA2210.AnInc) = True Then{n}{t}{t}ReturnVal = GetCurrency(IA2210An.Q2AIInstall){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Q2est_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210.Q2WH) + GetCurrency(IAStateEst.TPStQ2){n}End Sub
Sub Q2Install_Calculation(){n}{t}ReturnVal = CDollar(CDbl(GetCurrency(IA2210.Small) - GetCurrency(IA2210.Q1Install)) * 0.3333){n}End Sub
Sub Q2Ln11_Calculation(){n}{t}If GetBool(IA2210.AnInc) = True Then{n}{t}{t}ReturnVal = GetCurrency(IA2210.Q2AnInc){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IA2210.Q2Install){n}{t}End If{n}End Sub
Sub Q2WH_Calculation(){n}{t}ReturnVal = CDollar(CDbl(GetCurrency(IAF1040.AIATaxWith) - GetCurrency(IA2210.Q1WH)) * 0.3333){n}End Sub
Sub Q3AnInc_Calculation(){n}{t}If GetBool(IA2210.AnInc) = True Then{n}{t}{t}ReturnVal = GetCurrency(IA2210An.Q3AIInstall){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Q3Est_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210.Q3WH) + GetCurrency(IAStateEst.TPStQ3){n}End Sub
Sub Q3Install_Calculation(){n}{t}ReturnVal = CDollar(CDbl(GetCurrency(IA2210.Small) - GetCurrency(IA2210.Q1Install) - GetCurrency(IA2210.Q2Install)) * 0.5){n}End Sub
Sub Q3Ln11_Calculation(){n}{t}If GetBool(IA2210.AnInc) = True Then{n}{t}{t}ReturnVal = GetCurrency(IA2210.Q3AnInc){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IA2210.Q3Install){n}{t}End If{n}End Sub
Sub Q3WH_Calculation(){n}{t}ReturnVal = CDollar(CDbl(GetCurrency(IAF1040.AIATaxWith) - GetCurrency(IA2210.Q1WH) - GetCurrency(IA2210.Q2WH)) * 0.5){n}End Sub
Sub Q4AnInc_Calculation(){n}{t}If GetBool(IA2210.AnInc) = True Then{n}{t}{t}ReturnVal = GetCurrency(IA2210An.Q4AIInstall){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Q4Est_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210.Q4WH) + GetCurrency(IAStateEst.TPStQ4){n}End Sub
Sub Q4Install_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210.Small) - GetCurrency(IA2210.Q1Install) - GetCurrency(IA2210.Q2Install) - GetCurrency(IA2210.Q3Install){n}End Sub
Sub Q4Ln11_Calculation(){n}{t}If GetBool(IA2210.AnInc) = True Then{n}{t}{t}ReturnVal = GetCurrency(IA2210.Q4AnInc){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IA2210.Q4Install){n}{t}End If{n}End Sub
Sub Q4WH_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.AIATaxWith) - GetCurrency(IA2210.Q1WH) - GetCurrency(IA2210.Q2WH) - GetCurrency(IA2210.Q3WH){n}End Sub
Sub RefundCr_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.AOthRefCr){n}End Sub
Sub Small_Calculation(){n}{t}If GetBool(IA2210.NoPen) = True Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetCurrency(IA2210.Amt8) < 200@ Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IA2210.PYZero) = True Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetCurrency(IA2210.PYTax) = 0 Then{n}{t}{t}ReturnVal = GetCurrency(IA2210.Amt8){n}{t}Else{n}{t}{t}ReturnVal = MinValue(GetCurrency(IA2210.Amt8), GetCurrency(IA2210.PYTax)){n}{t}End If{n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IAF1040.SSN){n}End Sub
Sub TotCr_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210.Fuel) + GetCurrency(IA2210.ChildC) + GetCurrency(IA2210.IAEIC) + GetCurrency(IA2210.RefundCr){n}End SubSub AskItmDed_Calculation(){n}{t}If GetBool(IAF1040.ItemCheck) = True Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA2210An.Q1ItmDed) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA2210An.Q2ItmDed) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA2210An.Q3ItmDed) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Description_Calculation(){n}{t}ReturnVal = GetString(IA2210An.Names){n}End Sub
Sub Names_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = GetString(IARequired.TPCombName){n}{t}Else{n}{t}{t}ReturnVal = GetString(IARequired.CombNames){n}{t}End If{n}End Sub
Sub Print_Calculation(){n}{t}If GetBool(IA2210.AnInc) = True Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Q1AIInstall_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IA2210An.Q1BalDue), GetCurrency(IA2210An.Q1TotPay)){n}End Sub
Sub Q1AnFedPay_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IA2210An.Q1FedPay) * 4#){n}End Sub
Sub Q1AnInc_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IA2210An.Q1NetInc) * 4#){n}End Sub
Sub Q1AnItmDed_Calculation(){n}{t}If GetBool(IAF1040.ItemCheck) = True Then{n}{t}{t}ReturnVal = CDollar(GetFloat(IA2210An.Q1ItmDed) * 4#){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Q1Balance_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA2210An.Q1TotTax) - GetCurrency(IA2210An.Q1ExemCr) - GetCurrency(IA2210An.Q1NonRefCr) - GetCurrency(IA2210An.Q1RefCr)){n}End Sub
Sub Q1BalDue_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210An.Q1PerTax){n}End Sub
Sub Q1Deduct_Calculation(){n}{t}ReturnVal = MaxValue(GetCurrency(IA2210An.Q1AnItmDed), GetCurrency(IA2210An.Q1StndDed)){n}End Sub
Sub Q1ExemCr_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.AExemCr){n}End Sub
Sub Q1PerTax_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IA2210An.Q1Balance) * 0.225){n}End Sub
Sub Q1ReqPay_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210.Q1Install){n}End Sub
Sub Q1StndDed_Calculation(){n}' updated for 2018{n}{t}If IAFS() = 2 Or IAFS() = 5 Or IAFS() = 6 Then{n}{t}{t}ReturnVal = 5000@{n}{t}Else{n}{t}{t}ReturnVal = 2030@{n}{t}End If{n}End Sub
Sub Q1Tax_Calculation(){n}' updated for 2018{n}{n}{t}Dim Mid As Currency{n}{t}Dim MidInt As Long{n}{t}Dim TotTaxInc As Currency{n}{t}{n}{t}TotTaxInc = GetCurrency(IA2210An.Q1TaxInc){n}{t}{n}{t}If TotTaxInc > 95650@ Then{n}{t}{t}Mid = TotTaxInc{n}{t}ElseIf TotTaxInc > 150@ Then{n}{t}{t}MidInt = CLng((TotTaxInc - 1@) / 50@){n}{t}{t}Mid = (CCur(MidInt) * 50@) + 25@{n}{t}Else{n}{t}{t}Mid = 0@{n}{t}End If{n}{n}{t}ReturnVal = Tax(Mid){n}End Sub
Sub Q1TaxInc_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA2210An.Q1AnInc) - GetCurrency(IA2210An.Q1AnFedPay) - GetCurrency(IA2210An.Q1Deduct)){n}End Sub
Sub Q1TotPay_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210An.Q1ReqPay){n}End Sub
Sub Q1TotTax_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210An.Q1Tax) + GetCurrency(IA2210An.Q1OthTax){n}End Sub
Sub Q1Unpay_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA2210An.Q1TotPay) - GetCurrency(IA2210An.Q1BalDue)){n}End Sub
Sub Q2AIInstall_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IA2210An.Q2BalDue), GetCurrency(IA2210An.Q2TotPay)){n}End Sub
Sub Q2AnFedPay_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IA2210An.Q2FedPay) * 2.4){n}End Sub
Sub Q2AnInc_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IA2210An.Q2NetInc) * 2.4){n}End Sub
Sub Q2AnItmDed_Calculation(){n}{t}If GetBool(IAF1040.ItemCheck) = True Then{n}{t}{t}ReturnVal = CDollar(GetFloat(IA2210An.Q2ItmDed) * 2.4){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Q2Balance_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA2210An.Q2TotTax) - GetCurrency(IA2210An.Q2ExemCr) - GetCurrency(IA2210An.Q2NonRefCr) - GetCurrency(IA2210An.Q2RefCr)){n}End Sub
Sub Q2BalDue_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA2210An.Q2PerTax) - GetCurrency(IA2210An.Q2PQInst)){n}End Sub
Sub Q2Deduct_Calculation(){n}{t}ReturnVal = MaxValue(GetCurrency(IA2210An.Q2AnItmDed), GetCurrency(IA2210An.Q2StndDed)){n}End Sub
Sub Q2ExemCr_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210An.Q1ExemCr){n}End Sub
Sub Q2PerTax_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IA2210An.Q2Balance) * 0.45){n}End Sub
Sub Q2PQInst_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210An.Q1AIInstall){n}End Sub
Sub Q2PQUnpay_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210An.Q1Unpay){n}End Sub
Sub Q2ReqPay_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210.Q2Install){n}End Sub
Sub Q2StndDed_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210An.Q1StndDed){n}End Sub
Sub Q2Tax_Calculation(){n}' updated for 2018{n}{n}{t}Dim Mid As Currency{n}{t}Dim MidInt As Long{n}{t}Dim TotTaxInc As Currency{n}{t}{n}{t}TotTaxInc = GetCurrency(IA2210An.Q2TaxInc){n}{t}{n}{t}If TotTaxInc > 95650@ Then{n}{t}{t}Mid = TotTaxInc{n}{t}ElseIf TotTaxInc > 150@ Then{n}{t}{t}MidInt = CLng((TotTaxInc - 1@) / 50@){n}{t}{t}Mid = (CCur(MidInt) * 50@) + 25@{n}{t}Else{n}{t}{t}Mid = 0@{n}{t}End If{n}{n}{t}ReturnVal = Tax(Mid){n}End Sub
Sub Q2TaxInc_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA2210An.Q2AnInc) - GetCurrency(IA2210An.Q2AnFedPay) - GetCurrency(IA2210An.Q2Deduct)){n}End Sub
Sub Q2TotPay_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210An.Q2ReqPay) + GetCurrency(IA2210An.Q2PQUnpay){n}End Sub
Sub Q2TotTax_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210An.Q2Tax) + GetCurrency(IA2210An.Q2OthTax){n}End Sub
Sub Q2Unpay_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA2210An.Q2TotPay) - GetCurrency(IA2210An.Q2BalDue)){n}End Sub
Sub Q3AIInstall_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IA2210An.Q3BalDue), GetCurrency(IA2210An.Q3TotPay)){n}End Sub
Sub Q3AnFedPay_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IA2210An.Q3FedPay) * 1.5){n}End Sub
Sub Q3AnInc_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IA2210An.Q3NetInc) * 1.5){n}End Sub
Sub Q3AnItmDed_Calculation(){n}{t}If GetBool(IAF1040.ItemCheck) = True Then{n}{t}{t}ReturnVal = CDollar(GetFloat(IA2210An.Q3ItmDed) * 1.5){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Q3Balance_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA2210An.Q3TotTax) - GetCurrency(IA2210An.Q3ExemCr) - GetCurrency(IA2210An.Q3NonRefCr) - GetCurrency(IA2210An.Q3RefCr)){n}End Sub
Sub Q3BalDue_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA2210An.Q3PerTax) - GetCurrency(IA2210An.Q3PQInst)){n}End Sub
Sub Q3Deduct_Calculation(){n}{t}ReturnVal = MaxValue(GetCurrency(IA2210An.Q3AnItmDed), GetCurrency(IA2210An.Q3StndDed)){n}End Sub
Sub Q3ExemCr_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210An.Q1ExemCr){n}End Sub
Sub Q3PerTax_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IA2210An.Q3Balance) * 0.675){n}End Sub
Sub Q3PQInst_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210An.Q1AIInstall) + GetCurrency(IA2210An.Q2AIInstall){n}End Sub
Sub Q3PQUnpay_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210An.Q2Unpay){n}End Sub
Sub Q3ReqPay_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210.Q3Install){n}End Sub
Sub Q3StndDed_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210An.Q1StndDed){n}End Sub
Sub Q3Tax_Calculation(){n}' updated for 2018{n}{n}{t}Dim Mid As Currency{n}{t}Dim MidInt As Long{n}{t}Dim TotTaxInc As Currency{n}{t}{n}{t}TotTaxInc = GetCurrency(IA2210An.Q3TaxInc){n}{t}{n}{t}If TotTaxInc > 95650@ Then{n}{t}{t}Mid = TotTaxInc{n}{t}ElseIf TotTaxInc > 150@ Then{n}{t}{t}MidInt = CLng((TotTaxInc - 1@) / 50@){n}{t}{t}Mid = (CCur(MidInt) * 50@) + 25@{n}{t}Else{n}{t}{t}Mid = 0@{n}{t}End If{n}{n}{t}ReturnVal = Tax(Mid){n}{n}End Sub
Sub Q3TaxInc_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA2210An.Q3AnInc) - GetCurrency(IA2210An.Q3AnFedPay) - GetCurrency(IA2210An.Q3Deduct)){n}End Sub
Sub Q3TotPay_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210An.Q3ReqPay) + GetCurrency(IA2210An.Q3PQUnpay){n}End Sub
Sub Q3TotTax_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210An.Q3Tax) + GetCurrency(IA2210An.Q3OthTax){n}End Sub
Sub Q3Unpay_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA2210An.Q3TotPay) - GetCurrency(IA2210An.Q3BalDue)){n}End Sub
Sub Q4AIInstall_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IA2210An.Q4BalDue), GetCurrency(IA2210An.Q4TotPay)){n}End Sub
Sub Q4AnFedPay_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210An.Q4FedPay){n}End Sub
Sub Q4AnInc_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210An.Q4NetInc){n}End Sub
Sub Q4AnItmDed_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210An.Q4ItmDed){n}End Sub
Sub Q4Balance_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA2210An.Q4TotTax) - GetCurrency(IA2210An.Q4ExemCr) - GetCurrency(IA2210An.Q4NonRefCr) - GetCurrency(IA2210An.Q4RefCr)){n}End Sub
Sub Q4BalDue_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA2210An.Q4PerTax) - GetCurrency(IA2210An.Q4PQInst)){n}End Sub
Sub Q4Deduct_Calculation(){n}{t}ReturnVal = MaxValue(GetCurrency(IA2210An.Q4AnItmDed), GetCurrency(IA2210An.Q4StndDed)){n}End Sub
Sub Q4ExemCr_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210An.Q1ExemCr){n}End Sub
Sub Q4FedPay_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.AFedDed) - GetCurrency(IAF1040.AFedTax){n}End Sub
Sub Q4ItmDed_Calculation(){n}{t}If GetBool(IAF1040.ItemCheck) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.ADedBox){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Q4NetInc_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.ANet){n}End Sub
Sub Q4NonRefCr_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.ATuit) + GetCurrency(IAF1040.AVolFireCr) + GetCurrency(IAF1040.ACrNon) + GetCurrency(IAF1040.AOutState) + GetCurrency(IAF1040.AOthIACr){n}End Sub
Sub Q4OthTax_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.ALump) + GetCurrency(IAF1040.AIAMin){n}End Sub
Sub Q4PerTax_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IA2210An.Q4Balance) * 0.9){n}End Sub
Sub Q4PQInst_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210An.Q1AIInstall) + GetCurrency(IA2210An.Q2AIInstall) + GetCurrency(IA2210An.Q3AIInstall){n}End Sub
Sub Q4PQUnpay_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210An.Q3Unpay){n}End Sub
Sub Q4RefCr_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.AFuel) + GetCurrency(IAF1040.AChild) + GetCurrency(IAF1040.AIEIC) + GetCurrency(IAF1040.AOthRefCr){n}End Sub
Sub Q4ReqPay_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210.Q4Install){n}End Sub
Sub Q4StndDed_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210An.Q1StndDed){n}End Sub
Sub Q4Tax_Calculation(){n}' updated for 2018{n}{n}{t}Dim Mid As Currency{n}{t}Dim MidInt As Long{n}{t}Dim TotTaxInc As Currency{n}{t}{n}{t}TotTaxInc = GetCurrency(IA2210An.Q4TaxInc){n}{t}{n}{t}If TotTaxInc > 95650@ Then{n}{t}{t}Mid = TotTaxInc{n}{t}ElseIf TotTaxInc > 150@ Then{n}{t}{t}MidInt = CLng((TotTaxInc - 1@) / 50@){n}{t}{t}Mid = (CCur(MidInt) * 50@) + 25@{n}{t}Else{n}{t}{t}Mid = 0@{n}{t}End If{n}{t}{n}{t}ReturnVal = Tax(Mid){n}{t}{n}End Sub
Sub Q4TaxInc_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA2210An.Q4AnInc) - GetCurrency(IA2210An.Q4AnFedPay) - GetCurrency(IA2210An.Q4Deduct)){n}End Sub
Sub Q4TotPay_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210An.Q4ReqPay) + GetCurrency(IA2210An.Q4PQUnpay){n}End Sub
Sub Q4TotTax_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210An.Q4Tax) + GetCurrency(IA2210An.Q4OthTax){n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IAF1040.SSN){n}End SubSub AskItmDed_Calculation(){n}{t}If GetBool(IAF1040.ItemCheck) = True Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA2210AnSp.Q1ItmDed) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA2210AnSp.Q2ItmDed) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA2210AnSp.Q3ItmDed) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Description_Calculation(){n}{t}ReturnVal = GetString(IA2210AnSp.Names){n}End Sub
Sub Names_Calculation(){n}{t}ReturnVal = GetString(IARequired.SPCombName){n}End Sub
Sub Print_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = False Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IA2210Sp.AnInc) = True Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Q1AIInstall_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IA2210AnSp.Q1BalDue), GetCurrency(IA2210AnSp.Q1TotPay)){n}End Sub
Sub Q1AnFedPay_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IA2210AnSp.Q1FedPay) * 4#){n}End Sub
Sub Q1AnInc_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IA2210AnSp.Q1NetInc) * 4#){n}End Sub
Sub Q1AnItmDed_Calculation(){n}{t}If GetBool(IAF1040.ItemCheck) = True Then{n}{t}{t}ReturnVal = CDollar(GetFloat(IA2210AnSp.Q1ItmDed) * 4#){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Q1Balance_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA2210AnSp.Q1TotTax) - GetCurrency(IA2210AnSp.Q1ExemCr) - GetCurrency(IA2210AnSp.Q1NonRefCr) - GetCurrency(IA2210AnSp.Q1RefCr)){n}End Sub
Sub Q1BalDue_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210AnSp.Q1PerTax){n}End Sub
Sub Q1Deduct_Calculation(){n}{t}ReturnVal = MaxValue(GetCurrency(IA2210AnSp.Q1AnItmDed), GetCurrency(IA2210AnSp.Q1StndDed)){n}End Sub
Sub Q1ExemCr_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.BExemCr){n}End Sub
Sub Q1PerTax_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IA2210AnSp.Q1Balance) * 0.225){n}End Sub
Sub Q1ReqPay_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210Sp.Q1Install){n}End Sub
Sub Q1StndDed_Calculation(){n}' updated for 2018{n}{n}{t}If IAFS() = 2 Or IAFS() = 5 Or IAFS() = 6 Then{n}{t}{t}ReturnVal = 5000@{n}{t}Else{n}{t}{t}ReturnVal = 2030@{n}{t}End If{n}End Sub
Sub Q1Tax_Calculation(){n}' updated for 2018{n}{n}{t}Dim Mid As Currency{n}{t}Dim MidInt As Long{n}{t}Dim TotTaxInc As Currency{n}{t}{n}{t}TotTaxInc = GetCurrency(IA2210AnSp.Q1TaxInc){n}{t}{n}{t}If TotTaxInc > 95650@ Then{n}{t}{t}Mid = TotTaxInc{n}{t}ElseIf TotTaxInc > 150@ Then{n}{t}{t}MidInt = CLng((TotTaxInc - 1@) / 50@){n}{t}{t}Mid = (CCur(MidInt) * 50@) + 25@{n}{t}Else{n}{t}{t}Mid = 0@{n}{t}End If{n}{t}{n}{t}ReturnVal = Tax(Mid){n}End Sub
Sub Q1TaxInc_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA2210AnSp.Q1AnInc) - GetCurrency(IA2210AnSp.Q1AnFedPay) - GetCurrency(IA2210AnSp.Q1Deduct)){n}End Sub
Sub Q1TotPay_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210AnSp.Q1ReqPay){n}End Sub
Sub Q1TotTax_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210AnSp.Q1Tax) + GetCurrency(IA2210AnSp.Q1OthTax){n}End Sub
Sub Q1Unpay_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA2210AnSp.Q1TotPay) - GetCurrency(IA2210AnSp.Q1BalDue)){n}End Sub
Sub Q2AIInstall_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IA2210AnSp.Q2BalDue), GetCurrency(IA2210AnSp.Q2TotPay)){n}End Sub
Sub Q2AnFedPay_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IA2210AnSp.Q2FedPay) * 2.4){n}End Sub
Sub Q2AnInc_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IA2210AnSp.Q2NetInc) * 2.4){n}End Sub
Sub Q2AnItmDed_Calculation(){n}{t}If GetBool(IAF1040.ItemCheck) = True Then{n}{t}{t}ReturnVal = CDollar(GetFloat(IA2210AnSp.Q2ItmDed) * 2.4){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Q2Balance_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA2210AnSp.Q2TotTax) - GetCurrency(IA2210AnSp.Q2ExemCr) - GetCurrency(IA2210AnSp.Q2NonRefCr) - GetCurrency(IA2210AnSp.Q2RefCr)){n}End Sub
Sub Q2BalDue_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA2210AnSp.Q2PerTax) - GetCurrency(IA2210AnSp.Q2PQInst)){n}End Sub
Sub Q2Deduct_Calculation(){n}{t}ReturnVal = MaxValue(GetCurrency(IA2210AnSp.Q2AnItmDed), GetCurrency(IA2210AnSp.Q2StndDed)){n}End Sub
Sub Q2ExemCr_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210AnSp.Q1ExemCr){n}End Sub
Sub Q2PerTax_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IA2210AnSp.Q2Balance) * 0.45){n}End Sub
Sub Q2PQInst_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210AnSp.Q1AIInstall){n}End Sub
Sub Q2PQUnpay_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210AnSp.Q1Unpay){n}End Sub
Sub Q2ReqPay_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210Sp.Q2Install){n}End Sub
Sub Q2StndDed_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210AnSp.Q1StndDed){n}End Sub
Sub Q2Tax_Calculation(){n}' updated for 2018{n}{n}{t}Dim Mid As Currency{n}{t}Dim MidInt As Long{n}{t}Dim TotTaxInc As Currency{n}{t}{n}{t}TotTaxInc = GetCurrency(IA2210AnSp.Q2TaxInc){n}{t}{n}{t}If TotTaxInc > 95650@ Then{n}{t}{t}Mid = TotTaxInc{n}{t}ElseIf TotTaxInc > 150@ Then{n}{t}{t}MidInt = CLng((TotTaxInc - 1@) / 50@){n}{t}{t}Mid = (CCur(MidInt) * 50@) + 25@{n}{t}Else{n}{t}{t}Mid = 0@{n}{t}End If{n}{t}{n}{t}ReturnVal = Tax(Mid){n}End Sub
Sub Q2TaxInc_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA2210AnSp.Q2AnInc) - GetCurrency(IA2210AnSp.Q2AnFedPay) - GetCurrency(IA2210AnSp.Q2Deduct)){n}End Sub
Sub Q2TotPay_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210AnSp.Q2ReqPay) + GetCurrency(IA2210AnSp.Q2PQUnpay){n}End Sub
Sub Q2TotTax_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210AnSp.Q2Tax) + GetCurrency(IA2210AnSp.Q2OthTax){n}End Sub
Sub Q2Unpay_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA2210AnSp.Q2TotPay) - GetCurrency(IA2210AnSp.Q2BalDue)){n}End Sub
Sub Q3AIInstall_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IA2210AnSp.Q3BalDue), GetCurrency(IA2210AnSp.Q3TotPay)){n}End Sub
Sub Q3AnFedPay_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IA2210AnSp.Q3FedPay) * 1.5){n}End Sub
Sub Q3AnInc_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IA2210AnSp.Q3NetInc) * 1.5){n}End Sub
Sub Q3AnItmDed_Calculation(){n}{t}If GetBool(IAF1040.ItemCheck) = True Then{n}{t}{t}ReturnVal = CDollar(GetFloat(IA2210AnSp.Q3ItmDed) * 1.5){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Q3Balance_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA2210AnSp.Q3TotTax) - GetCurrency(IA2210AnSp.Q3ExemCr) - GetCurrency(IA2210AnSp.Q3NonRefCr) - GetCurrency(IA2210AnSp.Q3RefCr)){n}End Sub
Sub Q3BalDue_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA2210AnSp.Q3PerTax) - GetCurrency(IA2210AnSp.Q3PQInst)){n}End Sub
Sub Q3Deduct_Calculation(){n}{t}ReturnVal = MaxValue(GetCurrency(IA2210AnSp.Q3AnItmDed), GetCurrency(IA2210AnSp.Q3StndDed)){n}End Sub
Sub Q3ExemCr_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210AnSp.Q1ExemCr){n}End Sub
Sub Q3PerTax_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IA2210AnSp.Q3Balance) * 0.675){n}End Sub
Sub Q3PQInst_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210AnSp.Q1AIInstall) + GetCurrency(IA2210AnSp.Q2AIInstall){n}End Sub
Sub Q3PQUnpay_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210AnSp.Q2Unpay){n}End Sub
Sub Q3ReqPay_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210Sp.Q3Install){n}End Sub
Sub Q3StndDed_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210AnSp.Q1StndDed){n}End Sub
Sub Q3Tax_Calculation(){n}' updated for 2018{n}{n}{t}Dim Mid As Currency{n}{t}Dim MidInt As Long{n}{t}Dim TotTaxInc As Currency{n}{t}{n}{t}TotTaxInc = GetCurrency(IA2210AnSp.Q3TaxInc){n}{t}{n}{t}If TotTaxInc > 95650@ Then{n}{t}{t}Mid = TotTaxInc{n}{t}ElseIf TotTaxInc > 150@ Then{n}{t}{t}MidInt = CLng((TotTaxInc - 1@) / 50@){n}{t}{t}Mid = (CCur(MidInt) * 50@) + 25@{n}{t}Else{n}{t}{t}Mid = 0@{n}{t}End If{n}{t}{n}{t}ReturnVal = Tax(Mid){n}End Sub
Sub Q3TaxInc_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA2210AnSp.Q3AnInc) - GetCurrency(IA2210AnSp.Q3AnFedPay) - GetCurrency(IA2210AnSp.Q3Deduct)){n}End Sub
Sub Q3TotPay_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210AnSp.Q3ReqPay) + GetCurrency(IA2210AnSp.Q3PQUnpay){n}End Sub
Sub Q3TotTax_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210AnSp.Q3Tax) + GetCurrency(IA2210AnSp.Q3OthTax){n}End Sub
Sub Q3Unpay_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA2210AnSp.Q3TotPay) - GetCurrency(IA2210AnSp.Q3BalDue)){n}End Sub
Sub Q4AIInstall_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IA2210AnSp.Q4BalDue), GetCurrency(IA2210AnSp.Q4TotPay)){n}End Sub
Sub Q4AnFedPay_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210AnSp.Q4FedPay){n}End Sub
Sub Q4AnInc_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210AnSp.Q4NetInc){n}End Sub
Sub Q4AnItmDed_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210AnSp.Q4ItmDed){n}End Sub
Sub Q4Balance_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA2210AnSp.Q4TotTax) - GetCurrency(IA2210AnSp.Q4ExemCr) - GetCurrency(IA2210AnSp.Q4NonRefCr) - GetCurrency(IA2210AnSp.Q4RefCr)){n}End Sub
Sub Q4BalDue_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA2210AnSp.Q4PerTax) - GetCurrency(IA2210AnSp.Q4PQInst)){n}End Sub
Sub Q4Deduct_Calculation(){n}{t}ReturnVal = MaxValue(GetCurrency(IA2210AnSp.Q4AnItmDed), GetCurrency(IA2210AnSp.Q4StndDed)){n}End Sub
Sub Q4ExemCr_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210AnSp.Q1ExemCr){n}End Sub
Sub Q4FedPay_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.BFedDed) - GetCurrency(IAF1040.BFedTax){n}End Sub
Sub Q4ItmDed_Calculation(){n}{t}If GetBool(IAF1040.ItemCheck) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BDedBox){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Q4NetInc_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.BNet){n}End Sub
Sub Q4NonRefCr_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.BTuit) + GetCurrency(IAF1040.BVolFireCr) + GetCurrency(IAF1040.BCrNon) + GetCurrency(IAF1040.BOutState) + GetCurrency(IAF1040.BOthIACr){n}End Sub
Sub Q4OthTax_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.BLump) + GetCurrency(IAF1040.BIAMin){n}End Sub
Sub Q4PerTax_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IA2210AnSp.Q4Balance) * 0.9){n}End Sub
Sub Q4PQInst_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210AnSp.Q1AIInstall) + GetCurrency(IA2210AnSp.Q2AIInstall) + GetCurrency(IA2210AnSp.Q3AIInstall){n}End Sub
Sub Q4PQUnpay_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210AnSp.Q3Unpay){n}End Sub
Sub Q4RefCr_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.BFuel) + GetCurrency(IAF1040.BChild) + GetCurrency(IAF1040.BIEIC) + GetCurrency(IAF1040.BOthRefCr){n}End Sub
Sub Q4ReqPay_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210Sp.Q4Install){n}End Sub
Sub Q4StndDed_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210AnSp.Q1StndDed){n}End Sub
Sub Q4Tax_Calculation(){n}' updated for 2018{n}{n}{t}Dim Mid As Currency{n}{t}Dim MidInt As Long{n}{t}Dim TotTaxInc As Currency{n}{t}{n}{t}TotTaxInc = GetCurrency(IA2210AnSp.Q4TaxInc){n}{t}{n}{t}If TotTaxInc > 95650@ Then{n}{t}{t}Mid = TotTaxInc{n}{t}ElseIf TotTaxInc > 150@ Then{n}{t}{t}MidInt = CLng((TotTaxInc - 1@) / 50@){n}{t}{t}Mid = (CCur(MidInt) * 50@) + 25@{n}{t}Else{n}{t}{t}Mid = 0@{n}{t}End If{n}{t}{n}{t}ReturnVal = Tax(Mid){n}End Sub
Sub Q4TaxInc_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA2210AnSp.Q4AnInc) - GetCurrency(IA2210AnSp.Q4AnFedPay) - GetCurrency(IA2210AnSp.Q4Deduct)){n}End Sub
Sub Q4TotPay_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210AnSp.Q4ReqPay) + GetCurrency(IA2210AnSp.Q4PQUnpay){n}End Sub
Sub Q4TotTax_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210AnSp.Q4Tax) + GetCurrency(IA2210AnSp.Q4OthTax){n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IAF1040.SpouseSSN){n}End SubSub Amt8_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IA2210Sp.Bal) * 0.9){n}End Sub
Sub Bal_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA2210Sp.CYTax) - GetCurrency(IA2210Sp.TotCr)){n}End Sub
Sub ChildC_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.BChild){n}End Sub
Sub CYTax_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.BBal4){n}End Sub
Sub Description_Calculation(){n}{t}ReturnVal = CStr(GetCurrency(IA2210Sp.Penalty)) & " Penalty"{n}End Sub
Sub EFile_Calculation(){n}{t}If GetBool(IA1040X.EFAmend) = True Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAF1040.CombMFS) = False Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IA2210Sp.Print) = True Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA2210Sp.Amt8) >= 200@ Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub EFStQ1_Calculation(){n}{t}ReturnVal = GetCurrency(IAStateEst.SPStApply) + GetCurrency(IAStateEst.SPStQ1){n}End Sub
Sub ExpPenalty_Calculation(){n}{t}If GetCurrency(IA2210SP.Penalty) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Fuel_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.BFuel){n}End Sub
Sub IAEIC_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.BIEIC){n}End Sub
Sub Names_Calculation(){n}{t}ReturnVal = GetString(IARequired.SPCombName){n}End Sub
Sub NoPen_Calculation(){n}{t}ReturnVal = GetBool(USWPrepMnNm.AlwaysState2210){n}End Sub
Sub Penalty_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = False Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IA2210Sp.NoPen) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAPenaltySp.TotPen){n}{t}End If{n}End Sub
Sub Print_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = False Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IA2210Sp.AnInc) = True Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA2210Sp.Penalty) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub PYTax_Calculation(){n}{t}Dim AGIBonus As Currency{n}{t}{n}{t}AGIBonus = GetCurrency(USWRec.PYSAGI) + GetCurrency(USZIA1040.IATotBonusSp){n}{n}{t}If GetBool(IAF1040.CombMFS) = False Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetString(USZIA1040.IAPYFS) = GetString(IARequired.FilingStatus) Then{n}{t}{t}If AGIBonus > 150000@ Then{n}{t}{t}{t}ReturnVal = CDollar(GetFloat(USZIA1040.IA2210PYTaxSp) * 1.1){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = GetCurrency(USZIA1040.IA2210PYTaxSp){n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Q1AnInc_Calculation(){n}{t}If GetBool(IA2210Sp.AnInc) = True Then{n}{t}{t}ReturnVal = GetCurrency(IA2210AnSp.Q1AIInstall){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Q1DaysB_Calculation(){n}{t}If GetCurrency(IA2210Sp.Penalty) > 0 Then{n}{t}{t}ReturnVal = "See"{n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub Q1Est_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210Sp.Q1WH) + GetCurrency(IAStateEst.SPStApply) + GetCurrency(IAStateEst.SPStQ1){n}End Sub
Sub Q1Install_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IA2210Sp.Small) * 0.25){n}End Sub
Sub Q1Ln11_Calculation(){n}{t}If GetBool(IA2210Sp.AnInc) = True Then{n}{t}{t}ReturnVal = GetCurrency(IA2210Sp.Q1AnInc){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IA2210Sp.Q1Install){n}{t}End If{n}End Sub
Sub Q1Ln19a_Calculation(){n}{t}If GetCurrency(IA2210Sp.Penalty) > 0 Then{n}{t}{t}ReturnVal = "Worksheet"{n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub Q1Ln19B_Calculation(){n}{t}If GetCurrency(IA2210Sp.Penalty) > 0 Then{n}{t}{t}ReturnVal = "Attached"{n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub Q1Undpay_Calculation(){n}{t}If GetCurrency(IA2210Sp.Q1Est) < GetCurrency(IA2210Sp.Q1Ln11) Then{n}{t}{t}ReturnVal = GetCurrency(IA2210Sp.Q1Ln11) - GetCurrency(IA2210Sp.Q1Est){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Q1WH_Calculation(){n}{t}ReturnVal = CDollar(CDbl(GetCurrency(IAF1040.BIATaxWith)) * 0.25){n}End Sub
Sub Q2AnInc_Calculation(){n}{t}If GetBool(IA2210Sp.AnInc) = True Then{n}{t}{t}ReturnVal = GetCurrency(IA2210AnSp.Q2AIInstall){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Q2est_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210Sp.Q2WH) + GetCurrency(IAStateEst.SPStQ2){n}End Sub
Sub Q2Install_Calculation(){n}{t}ReturnVal = CDollar(CDbl(GetCurrency(IA2210Sp.Small) - GetCurrency(IA2210Sp.Q1Install)) * 0.3333){n}End Sub
Sub Q2Ln11_Calculation(){n}{t}If GetBool(IA2210Sp.AnInc) = True Then{n}{t}{t}ReturnVal = GetCurrency(IA2210Sp.Q2AnInc){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IA2210Sp.Q2Install){n}{t}End If{n}End Sub
Sub Q2WH_Calculation(){n}{t}ReturnVal = CDollar(CDbl(GetCurrency(IAF1040.BIATaxWith) - GetCurrency(IA2210Sp.Q1WH)) * 0.3333){n}End Sub
Sub Q3AnInc_Calculation(){n}{t}If GetBool(IA2210Sp.AnInc) = True Then{n}{t}{t}ReturnVal = GetCurrency(IA2210AnSp.Q3AIInstall){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Q3Est_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210Sp.Q3WH) + GetCurrency(IAStateEst.SPStQ3){n}End Sub
Sub Q3Install_Calculation(){n}{t}ReturnVal = CDollar(CDbl(GetCurrency(IA2210Sp.Small) - GetCurrency(IA2210Sp.Q1Install) - GetCurrency(IA2210Sp.Q2Install)) * 0.5){n}End Sub
Sub Q3Ln11_Calculation(){n}{t}If GetBool(IA2210Sp.AnInc) = True Then{n}{t}{t}ReturnVal = GetCurrency(IA2210Sp.Q3AnInc){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IA2210Sp.Q3Install){n}{t}End If{n}{n}End Sub
Sub Q3WH_Calculation(){n}{t}ReturnVal = CDollar(CDbl(GetCurrency(IAF1040.BIATaxWith) - GetCurrency(IA2210Sp.Q1WH) - GetCurrency(IA2210Sp.Q2WH)) * 0.5){n}End Sub
Sub Q4AnInc_Calculation(){n}{t}If GetBool(IA2210Sp.AnInc) = True Then{n}{t}{t}ReturnVal = GetCurrency(IA2210AnSp.Q4AIInstall){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Q4Est_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210Sp.Q4WH) + GetCurrency(IAStateEst.SPStQ4){n}End Sub
Sub Q4Install_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210Sp.Small) - GetCurrency(IA2210Sp.Q1Install) - GetCurrency(IA2210Sp.Q2Install) - GetCurrency(IA2210Sp.Q3Install){n}End Sub
Sub Q4Ln11_Calculation(){n}{t}If GetBool(IA2210Sp.AnInc) = True Then{n}{t}{t}ReturnVal = GetCurrency(IA2210Sp.Q4AnInc){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IA2210Sp.Q4Install){n}{t}End If{n}End Sub
Sub Q4WH_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.BIATaxWith) - GetCurrency(IA2210Sp.Q1WH) - GetCurrency(IA2210Sp.Q2WH) - GetCurrency(IA2210Sp.Q3WH){n}End Sub
Sub RefundCr_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.BOthRefCr){n}End Sub
Sub Small_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = False Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IA2210Sp.NoPen) = True Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetCurrency(IA2210Sp.Amt8) < 200@ Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IA2210Sp.PYZero) = True Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetCurrency(IA2210Sp.PYTax) = 0 Then{n}{t}{t}ReturnVal = GetCurrency(IA2210Sp.Amt8){n}{t}Else{n}{t}{t}ReturnVal = MinValue(GetCurrency(IA2210Sp.Amt8), GetCurrency(IA2210Sp.PYTax)){n}{t}End If{n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IAF1040.SpouseSSN){n}End Sub
Sub TotCr_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210Sp.Fuel) + GetCurrency(IA2210Sp.ChildC) + GetCurrency(IA2210Sp.IAEIC) + GetCurrency(IA2210Sp.RefundCr){n}End SubSub AbsL6ML7_Calculation(){n}{t}If GetCurrency(IA3903.L6ML7) < 0 Then{n}{t}{t}ReturnVal = Abs(GetCurrency(IA3903.L6ML7)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CodeP_Calculation(){n}{t}If GetBool(USF3903.StateNotFed, ParentCopy()) = True Then{n}{t}{t}ReturnVal = GetCurrency(USF3903.CodeP, ParentCopy()){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Common_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.TPCommon){n}End Sub
Sub Description_Calculation(){n}{t}ReturnVal = "Moving Expenses " + CStr(GetCurrency(IA3903.MovExpDdn)){n}End Sub
Sub DNo_Calculation(){n}{t}If GetNumber(IA3903.NewLessOld) < 50 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub DYes_Calculation(){n}{t}If GetNumber(IA3903.NewLessOld) >= 50 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Exist_Calculation(){n}{t}ReturnVal = 1{n}End Sub
Sub ExReimb_Calculation(){n}{t}ReturnVal = GetCurrency(USF3903.ExReimb, ParentCopy()){n}End Sub
Sub Fed3903_Calculation(){n}{t}ReturnVal = "BEGIN HERE: Open federal Form 3903{t}   Click on the folder to open the supporting document."{n}End Sub
Sub FedMilNo_Calculation(){n}{t}If GetBool(USF3903.EligibleY, ParentCopy()) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = 1{n}{t}End If{n}End Sub
Sub FedMilYes_Calculation(){n}{t}If GetBool(USF3903.EligibleY, ParentCopy()) = True Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub FirstName_Calculation(){n}{t}If GetBool(IA3903.Spouse) = True Then{n}{t}{t}ReturnVal = GetString(IAF1040.SpouseFirst){n}{t}Else{n}{t}{t}ReturnVal = GetString(IAF1040.FirstName){n}{t}End If{n}End Sub
Sub IAExReimb_Calculation(){n}'after testing not sure code P will have an excess for a non military move, also need to review how federal handles the .ExReimb{n}'as of 1/2/2019 fed is pulling code P all the time and taking to wages even if a non mil. move, IA instructions appear that could have reimb. from a 2017 move, not sure if should be on fed or if no IA wage adj would be needed, leave codeP def calc an online filable in case user needs to modify{n}'if determine not needed could also remove IARequired fields, but there is a new code/line on the IA1040 line 14 oth inc worksheet.{n}{t}ReturnVal = MaxValue(0, GetCurrency(IA3903.AbsL6ML7) - GetCurrency(IA3903.ExReimb)){n}End Sub
Sub Joint_Calculation(){n}{t}ReturnVal = GetBool(USF3903.Joint, ParentCopy()){n}End Sub
Sub JtCommon_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.CombFirst){n}End Sub
Sub L6ML7_Calculation(){n}{t}ReturnVal = GetCurrency(IA3903.TotalExp) - GetCurrency(IA3903.CodeP){n}End Sub
Sub LastName_Calculation(){n}{t}If GetBool(IA3903.Spouse) = True Then{n}{t}{t}ReturnVal = GetString(IAF1040.SpouseLast){n}{t}Else{n}{t}{t}ReturnVal = GetString(IAF1040.LastName){n}{t}End If{n}End Sub
Sub MoveExp_Calculation(){n}{t}If GetBool(IA3903.FedMilYes) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USF3903.MoveExp, ParentCopy()){n}{t}End If{n}End Sub
Sub MovExpDdn_Calculation(){n}{t}If GetBool(USF3903.StateNotFed, ParentCopy()) = True Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(IA3903.L6ML7)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub NewLessOld_Calculation(){n}{t}ReturnVal = MaxValue(0, GetNumber(IA3903.ToNewWork) - GetNumber(IA3903.ToOldWork)){n}End Sub
Sub PrintMe_Calculation(){n}{t}If GetCurrency(IA3903.MovExpDdn) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Spouse_Calculation(){n}{t}ReturnVal = GetBool(USF3903.Spouse, ParentCopy()){n}End Sub
Sub SpouseCommon_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.SPCommon){n}End Sub
Sub SSN_Calculation(){n}{t}If GetBool(IA3903.Spouse) = True Then{n}{t}{t}ReturnVal = GetString(IAF1040.SpouseSSN){n}{t}Else{n}{t}{t}ReturnVal = GetString(IAF1040.SSN){n}{t}End If{n}End Sub
Sub Taxpayer_Calculation(){n}{t}ReturnVal = GetBool(USF3903.Taxpayer, ParentCopy()){n}End Sub
Sub ToNewWork_Calculation(){n}{t}If GetBool(IA3903.FedMilYes) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetNumber(USF3903.PrToNewWork, ParentCopy()){n}{t}End If{n}End Sub
Sub ToOldWork_Calculation(){n}{t}If GetBool(IA3903.FedMilYes) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetNumber(USF3903.PrToOldWork, ParentCopy()){n}{t}End If{n}End Sub
Sub TotalExp_Calculation(){n}{t}If GetBool(USF3903.StateNotFed, ParentCopy()) = True Then{n}{t}{t}ReturnVal = GetCurrency(IA3903.MoveExp) + GetCurrency(IA3903.TravExp){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TotMoreThanPN_Calculation(){n}{t}If GetCurrency(IA3903.TotalExp) <= GetCurrency(IA3903.CodeP) Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TotMoreThanPY_Calculation(){n}{t}If GetCurrency(IA3903.TotalExp) > GetCurrency(IA3903.CodeP) Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TravExp_Calculation(){n}{t}If GetBool(IA3903.FedMilYes) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USF3903.TravExp, ParentCopy()){n}{t}End If{n}End SubSub AccFedDep_Calculation(Index As Integer){n}{t}Dim Stuff As Long{n}{t}{n}{t}Stuff = GetNumber(IA4562A.StateDeprCopyNbr(Index)){n}{t}{n}{t}If GetNumber(IA4562A.StateDeprNbr) > Index Then{n}{t}{t}ReturnVal = GetCurrency(USW2106Veh.AccumFed, Stuff){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub AccIADep_Calculation(Index As Integer){n}'will need to review next year to make sure prior depr brings forward the limitied IA lux limits{n}{t}Dim Stuff As Long{n}{t}{n}{t}Stuff = GetNumber(IA4562A.StateDeprCopyNbr(Index)){n}{t}{n}{t}If GetNumber(IA4562A.StateDeprNbr) > Index Then{n}{t}{t}If GetBool(USW2106Veh.New, Stuff) = True Then{n}{t}{t}{t}If GetCurrency(USW2106Veh.LuxLimState2, Stuff) = 0 And GetCurrency(USW2106Veh.PerLimState2, Stuff) = 0 Then{n}{t}{t}{t}{t}ReturnVal = GetCurrency(USW2106Veh.AccumState, Stuff){n}{t}{t}{t}Else{n}{t}{t}{t}{t}ReturnVal = GetCurrency(USW2106Veh.PriorState) + MinValue(GetCurrency(USW2106Veh.DeprNoBonus), GetCurrency(USW2106Veh.PerLimState2, Stuff)){n}{t}{t}{t}End If{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = GetCurrency(USW2106Veh.AccumState, Stuff){n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Basis_Calculation(Index As Integer){n}{t}Dim Stuff As Long{n}{t}{n}{t}Stuff = GetNumber(IA4562A.StateDeprCopyNbr(Index)){n}{t}{n}{t}If GetNumber(IA4562A.StateDeprNbr) > Index Then{n}{t}{t}ReturnVal = GetCurrency(USW2106Veh.Basis, Stuff){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub DateServ_Calculation(Index As Integer){n}{t}Dim Stuff As Long{n}{t}{n}{t}Stuff = GetNumber(IA4562A.StateDeprCopyNbr(Index)){n}{t}{n}{t}If GetNumber(IA4562A.StateDeprNbr) > Index Then{n}{t}{t}ReturnVal = GetString(USW2106Veh.Date, Stuff){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub DepAdj_Calculation(){n}{t}ReturnVal = GetCurrency(IA4562A.TotColF) - GetCurrency(IA4562A.TotColI){n}End Sub
Sub Desc_Calculation(){n}{t}ReturnVal = GetString(USF2106.Desc, ParentCopy()){n}End Sub
Sub DisAdj_Calculation(Index As Integer){n}{t}ReturnVal = GetCurrency(IA4562A.DisIADep(Index)) - GetCurrency(IA4562A.DisFedDep(Index)){n}End Sub
Sub EFSP_Calculation(){n}{t}If GetBool(IA4562A.PrIA4562A) = True Then{n}{t}{t}If GetBool(IAF1040.CombMFS) = False Then{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}ElseIf GetBool(IA4562A.Spouse) = True Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub EFSPDisp_Calculation(){n}{t}If GetBool(IA4562A.PrIA4562A) = True And GetCurrency(IA4562A.TotDisAdj) <> 0 Then{n}{t}{t}If GetBool(IAF1040.CombMFS) = False Then{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}ElseIf GetBool(IA4562A.Spouse) = True Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub EFTPJoint_Calculation(){n}{t}If GetBool(IA4562A.PrIA4562A) = True Then{n}{t}{t}If GetBool(IAF1040.CombMFS) = False Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}ElseIf GetBool(IA4562A.Taxpayer) = True Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub EFTPJointDisp_Calculation(){n}{t}If GetBool(IA4562A.PrIA4562A) = True And GetCurrency(IA4562A.TotDisAdj) <> 0 Then{n}{t}{t}If GetBool(IAF1040.CombMFS) = False Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}ElseIf GetBool(IA4562A.Taxpayer) = True Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub EmpBusType_Calculation(){n}{t}If GetBool(USF2106.QPA, ParentCopy()) = True Or GetBool(USF2106.FBO, ParentCopy()) = True Or GetBool(USF2106.NatG, ParentCopy()) = True Then{n}{t}{t}ReturnVal = "1040"{n}{t}ElseIf GetBool(USF2106.Disable, ParentCopy()) = True Then{n}{t}{t}ReturnVal = "27"{n}{t}Else{n}{t}{t}ReturnVal = "20"{n}{t}End If{n}End Sub
Sub Exist_Calculation(){n}{t}ReturnVal = 1{n}End Sub
Sub Fed179_Calculation(Index As Integer){n}{t}Dim Stuff As Long{n}{t}{n}{t}Stuff = GetNumber(IA4562A.StateDeprCopyNbr(Index)){n}{t}{n}{t}If GetNumber(IA4562A.StateDeprNbr) > Index Then{n}{t}{t}If GetBool(USW2106Veh.New, Stuff) = True Then{n}{t}{t}{t}ReturnVal = GetCurrency(USW2106Veh.Sec179Calc, Stuff){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub FedDepDed_Calculation(Index As Integer){n}{t}Dim Stuff As Long{n}{t}{n}{t}Stuff = GetNumber(IA4562A.StateDeprCopyNbr(Index)){n}{t}{n}{t}If GetNumber(IA4562A.StateDeprNbr) > Index Then{n}{t}{t}If GetBool(USW2106Veh.New, Stuff) = True Then{n}{t}{t}{t}ReturnVal = GetCurrency(USW2106Veh.Bonus, Stuff) + MaxValue(0, GetCurrency(USW2106Veh.TotDepr, Stuff) - GetCurrency(USW2106Veh.Sec179, Stuff) - GetCurrency(USW2106Veh.Bonus, Stuff)){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = GetCurrency(USW2106Veh.TotDepr, Stuff){n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub IA179_Calculation(Index As Integer){n}' Iowa not yet coupled with increased Section 179 expensing for 2017{n}{t}{n}{t}Dim Stuff As Long{n}{t}{n}{t}Stuff = GetNumber(IA4562A.StateDeprCopyNbr(Index)){n}{t}{n}{t}If GetNumber(IA4562A.StateDeprNbr) > Index Then{n}{t}{t}If GetBool(USW2106Veh.New, Stuff) = True Then{n}{t}{t}{t}If GetCurrency(USW2106Veh.LuxLimState2, Stuff) = 0 And GetCurrency(USW2106Veh.PerLimState2, Stuff) = 0 Then{n}{t}{t}{t}{t}ReturnVal = GetCurrency(USW2106Veh.StateSec179Calc, Stuff){n}{t}{t}{t}Else{n}{t}{t}{t}{t}ReturnVal = MinValue(GetCurrency(USW2106Veh.StateSec179Calc, Stuff), GetCurrency(USW2106Veh.PerLimState2, Stuff)){n}{t}{t}{t}End If{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Life_Calculation(Index As Integer){n}{t}If GetString(IA4562A.DateServ(Index)) <> "" Then{n}{t}{t}ReturnVal = "5"{n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub MACRSIA_Calculation(Index As Integer){n}'will need to review this next year for the state basis brought forward when hit the lower IA lux limits, will .DeprNoBonus still be valid{n}{t}Dim Stuff As Long{n}{t}{n}{t}Stuff = GetNumber(IA4562A.StateDeprCopyNbr(Index)){n}{t}{n}{t}If GetNumber(IA4562A.StateDeprNbr) > Index Then{n}{t}{t}If GetBool(USW2106Veh.New, Stuff) = True Then{n}{t}{t}{t}If GetCurrency(USW2106Veh.LuxLimState2, Stuff) = 0 And GetCurrency(USW2106Veh.PerLimState2, Stuff) = 0 Then{n}{t}{t}{t}{t}ReturnVal = MaxValue(0, GetCurrency(USW2106Veh.DeprNoBonus, Stuff) - GetCurrency(USW2106Veh.StateSec179, Stuff)){n}{t}{t}{t}Else{n}{t}{t}{t}{t}ReturnVal = MaxValue(0, MinValue(GetCurrency(USW2106Veh.DeprNoBonus, Stuff), GetCurrency(USW2106Veh.PerLimState2, Stuff)) - GetCurrency(IA4562A.IA179(Index))){n}{t}{t}{t}End If{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = GetCurrency(USW2106Veh.DeprNoBonus, Stuff){n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Names_Calculation(){n}{t}ReturnVal = GetString(USF2106.FirstName, ParentCopy()){n}End Sub
Sub Owner_Calculation(){n}{t}If GetBool(IA4562A.Taxpayer) = True And Trim(GetString(USWBasicInfo.FirstName)) = "" Then{n}{t}{t}ReturnVal = "the taxpayer"{n}{t}ElseIf GetBool(IA4562A.Taxpayer) = True Then{n}{t}{t}ReturnVal = GetString(USWBasicInfo.FirstName){n}{t}ElseIf GetBool(IA4562A.Spouse) = True And Trim(GetString(USWBasicInfo.SpouseFirst)) = "" Then{n}{t}{t}ReturnVal = "the spouse"{n}{t}Else{n}{t}{t}ReturnVal = GetString(USWBasicInfo.SpouseFirst){n}{t}End If{n}End Sub
Sub PrIA4562A_Calculation(){n}{t}If GetCurrency(IA4562A.TotFed179) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA4562A.TotFDD) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA4562A.TotIA179) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA4562A.TotMACRS) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA4562A.TotDisAdj) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub PropDesc_Calculation(Index As Integer){n}{t}Dim Stuff As Long{n}{t}{n}{t}Stuff = GetNumber(IA4562A.StateDeprCopyNbr(Index)){n}{t}{n}{t}If GetNumber(IA4562A.StateDeprNbr) > Index Then{n}{t}{t}ReturnVal = GetString(USW2106Veh.Occupation, Stuff) & " Vehicle"{n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub Spouse_Calculation(){n}{t}If GetBool(USF2106.Spouse, ParentCopy()) = True Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(USF2106.SSN, ParentCopy()){n}End Sub
Sub StateDeprCopyNbr_Calculation(Index As Integer){n}{t}Dim F2106 As Long{n}{t}Dim DeprCount As Long{n}{t}Dim MaxDepr As Long{n}{t}Dim listedcount As Long{n}{t}{n}{t}F2106 = GetParentCopy(USF2106){n}{t}listedcount = 0{n}{t}MaxDepr = GetAllCopies(USW2106Veh){n}{t}DeprCount = 0{n}{t}{n}{t}Do While DeprCount < MaxDepr{n}{t}{t}DeprCount = DeprCount + 1{n}{t}{t}If GetParentCopy(USF2106, USW2106Veh, DeprCount) = F2106 Then{n}{t}{t}{t}If (GetBool(USW2106Veh.BonusYes, DeprCount) = True Or GetBool(USW2106Veh.IAFedStSec179, DeprCount) = True Or GetBool(USW2106Veh.IAUsingLuxLim, DeprCount) = True) And GetBool(USW2106Veh.Qualifies, DeprCount) = True Then{n}{t}{t}{t}{t}If (GetDate(USW2106Veh.Date, DeprCount) > #9/10/2001# And GetDate(USW2106Veh.Date, DeprCount) < #5/6/2003#) Or (GetDate(USW2106Veh.Date, DeprCount) > #12/31/2007# And GetDate(USW2106Veh.Date, DeprCount) < MakeDate(1, 1, YearNumber + 1)) Then{n}{t}{t}{t}{t}{t}If listedcount = Index Then{n}{t}{t}{t}{t}{t}{t}ReturnVal = DeprCount{n}{t}{t}{t}{t}{t}Else{n}{t}{t}{t}{t}{t}{t}listedcount = listedcount + 1{n}{t}{t}{t}{t}{t}End If{n}{t}{t}{t}{t}End If{n}{t}{t}{t}End If{n}{t}{t}End If{n}{t}Loop{n}{t}{n}{t}ReturnVal = 0{n}{t}{n}End Sub
Sub StateDeprNbr_Calculation(){n}{t}Dim DeprCount As Long{n}{t}Dim F2106 As Long{n}{t}Dim MaxDepr As Long{n}{t}Dim Total As Integer{n}{t}{n}{t}DeprCount = 1{n}{t}F2106 = GetParentCopy(USF2106){n}{t}MaxDepr = GetAllCopies(USW2106Veh){n}{t}Total = 0{n}{t}{n}{t}Do While DeprCount <= MaxDepr{n}{t}{t}If GetParentCopy(USF2106, USW2106Veh, DeprCount) = F2106 Then{n}{t}{t}{t}If (GetBool(USW2106Veh.BonusYes, DeprCount) = True Or GetBool(USW2106Veh.IAFedStSec179, DeprCount) = True Or GetBool(USW2106Veh.IAUsingLuxLim, DeprCount) = True) And GetBool(USW2106Veh.Qualifies, DeprCount) = True Then{n}{t}{t}{t}{t}If (GetDate(USW2106Veh.Date, DeprCount) > #9/10/2001# And GetDate(USW2106Veh.Date, DeprCount) < #5/6/2003#) Or (GetDate(USW2106Veh.Date, DeprCount) > #12/31/2007# And GetDate(USW2106Veh.Date, DeprCount) < MakeDate(1, 1, YearNumber + 1)) Then{n}{t}{t}{t}{t}{t}Total = Total + 1{n}{t}{t}{t}{t}Else{n}{t}{t}{t}{t}{t}Total = Total{n}{t}{t}{t}{t}End If{n}{t}{t}{t}End If{n}{t}{t}End If{n}{t}{n}{t}DeprCount = DeprCount + 1{n}{t}Loop{n}{t}{t}{n}{t}ReturnVal = Total{n}{n}End Sub
Sub StateDispNbr_Calculation(){n}'for 2018 make no change since need to ask or alert if had depr adjustment in prior year and need to make and entry for catch-up depr. May need to see next year if should exclude 2018 veh that were not reported on IA4562A since was just on IA 2106{n}{t}Dim DeprCount As Long{n}{t}Dim F2106 As Long{n}{t}Dim MaxDepr As Long{n}{t}Dim Total As Integer{n}{t}{n}{t}DeprCount = 1{n}{t}F2106 = GetParentCopy(USF2106){n}{t}MaxDepr = GetAllCopies(USW2106Veh){n}{t}Total = 0{n}{t}{n}{t}Do While DeprCount <= MaxDepr{n}{t}{t}If GetParentCopy(USF2106, USW2106Veh, DeprCount) = F2106 Then{n}{t}{t}{t}If GetBool(USW2106Veh.BonusYes, DeprCount) = True And GetString(USW2106Veh.DisposeDate, DeprCount) <> "" And ((GetDate(USW2106Veh.Date, DeprCount) > #9/10/2001# And GetDate(USW2106Veh.Date, DeprCount) < #5/6/2003#) Or (GetDate(USW2106Veh.Date, DeprCount) > #12/31/2007# And GetDate(USW2106Veh.Date, DeprCount) < MakeDate(1, 1, YearNumber + 1))) Then{n}{t}{t}{t}{t}Total = Total + 1{n}{t}{t}{t}Else{n}{t}{t}{t}{t}Total = Total{n}{t}{t}{t}End If{n}{t}{t}End If{n}{t}{n}{t}DeprCount = DeprCount + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = Total{n}{t}{n}End Sub
Sub Taxpayer_Calculation(){n}{t}If GetBool(USF2106.Taxpayer, ParentCopy()) = True Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TotColF_Calculation(){n}{t}ReturnVal = GetCurrency(IA4562A.TotFed179) + GetCurrency(IA4562A.TotFDD){n}End Sub
Sub TotFed179_Calculation(){n}{t}ReturnVal = GetCurrency(IA4562A.Fed179(0)) + GetCurrency(IA4562A.Fed179(1)) + GetCurrency(IA4562A.Fed179(2)) + GetCurrency(IA4562A.Fed179(3)){n}End Sub
Sub TotIA179_Calculation(){n}{t}ReturnVal = GetCurrency(IA4562A.IA179(0)) + GetCurrency(IA4562A.IA179(1)) + GetCurrency(IA4562A.IA179(2)) + GetCurrency(IA4562A.IA179(3)){n}End Sub
Sub TotP2ColF_Calculation(){n}{t}ReturnVal = GetCurrency(IA4562A.TotDisAdj){n}End Sub
Sub TotColI_Calculation(){n}{t}ReturnVal = GetCurrency(IA4562A.TotIA179) + GetCurrency(IA4562A.TotMACRS){n}End Sub
Sub TotDepAdj_Calculation(){n}{t}ReturnVal = GetCurrency(IA4562A.DepAdj) + GetCurrency(IA4562A.TotP2ColF){n}End Sub
Sub TotDisAdj_Calculation(){n}{t}ReturnVal = GetCurrency(IA4562A.DisAdj(0)) + GetCurrency(IA4562A.DisAdj(1)) + GetCurrency(IA4562A.DisAdj(2)) + GetCurrency(IA4562A.DisAdj(3)){n}End Sub
Sub TotDisFedDep_Calculation(){n}{t}ReturnVal = GetCurrency(IA4562A.DisFedDep(0)) + GetCurrency(IA4562A.DisFedDep(1)) + GetCurrency(IA4562A.DisFedDep(2)) + GetCurrency(IA4562A.DisFedDep(3)){n}End Sub
Sub TotDisIADep_Calculation(){n}{t}ReturnVal = GetCurrency(IA4562A.DisIADep(0)) + GetCurrency(IA4562A.DisIADep(1)) + GetCurrency(IA4562A.DisIADep(2)) + GetCurrency(IA4562A.DisIADep(3)){n}End Sub
Sub TotFDD_Calculation(){n}{t}ReturnVal = GetCurrency(IA4562A.FedDepDed(0)) + GetCurrency(IA4562A.FedDepDed(1)) + GetCurrency(IA4562A.FedDepDed(2)) + GetCurrency(IA4562A.FedDepDed(3)){n}End Sub
Sub TotMACRS_Calculation(){n}{t}ReturnVal = GetCurrency(IA4562A.MACRSIA(0)) + GetCurrency(IA4562A.MACRSIA(1)) + GetCurrency(IA4562A.MACRSIA(2)) + GetCurrency(IA4562A.MACRSIA(3)){n}End SubSub Balance1_Calculation(){n}{t}ReturnVal = GetCurrency(IA4562BSp.AdjAmt(0)){n}End Sub
Sub Balance10_Calculation(){n}{t}If GetCurrency(IA4562BSp.Balance9) <> 0 Then{n}{t}{t}ReturnVal = GetCurrency(IA4562BSp.Balance9) + GetCurrency(IA4562BSp.AdjAmt(9)){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IA4562BSp.AdjAmt(9)){n}{t}End If{n}End Sub
Sub Balance11_Calculation(){n}{t}If GetCurrency(IA4562BSp.Balance10) <> 0 Then{n}{t}{t}ReturnVal = GetCurrency(IA4562BSp.Balance10) + GetCurrency(IA4562BSp.AdjAmt(10)){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IA4562BSp.AdjAmt(10)){n}{t}End If{n}End Sub
Sub Balance12_Calculation(){n}{t}If GetCurrency(IA4562BSp.Balance11) <> 0 Then{n}{t}{t}ReturnVal = GetCurrency(IA4562BSp.Balance11) + GetCurrency(IA4562BSp.AdjAmt(11)){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IA4562BSp.AdjAmt(11)){n}{t}End If{n}End Sub
Sub Balance13_Calculation(){n}{t}If GetCurrency(IA4562BSp.Balance12) <> 0 Then{n}{t}{t}ReturnVal = GetCurrency(IA4562BSp.Balance12) + GetCurrency(IA4562BSp.AdjAmt(12)){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IA4562BSp.AdjAmt(12)){n}{t}End If{n}End Sub
Sub Balance2_Calculation(){n}{t}If GetCurrency(IA4562BSp.Balance1) <> 0 Then{n}{t}{t}ReturnVal = GetCurrency(IA4562BSp.Balance1) + GetCurrency(IA4562BSp.AdjAmt(1)){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IA4562BSp.AdjAmt(1)){n}{t}End If{n}End Sub
Sub Balance3_Calculation(){n}{t}If GetCurrency(IA4562BSp.Balance2) <> 0 Then{n}{t}{t}ReturnVal = GetCurrency(IA4562BSp.Balance2) + GetCurrency(IA4562BSp.AdjAmt(2)){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IA4562BSp.AdjAmt(2)){n}{t}End If{n}End Sub
Sub Balance4_Calculation(){n}{t}If GetCurrency(IA4562BSp.Balance3) <> 0 Then{n}{t}{t}ReturnVal = GetCurrency(IA4562BSp.Balance3) + GetCurrency(IA4562BSp.AdjAmt(3)){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IA4562BSp.AdjAmt(3)){n}{t}End If{n}End Sub
Sub Balance5_Calculation(){n}{t}If GetCurrency(IA4562BSp.Balance4) <> 0 Then{n}{t}{t}ReturnVal = GetCurrency(IA4562BSp.Balance4) + GetCurrency(IA4562BSp.AdjAmt(4)){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IA4562BSp.AdjAmt(4)){n}{t}End If{n}End Sub
Sub Balance6_Calculation(){n}{t}If GetCurrency(IA4562BSp.Balance5) <> 0 Then{n}{t}{t}ReturnVal = GetCurrency(IA4562BSp.Balance5) + GetCurrency(IA4562BSp.AdjAmt(5)){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IA4562BSp.AdjAmt(5)){n}{t}End If{n}End Sub
Sub Balance7_Calculation(){n}{t}If GetCurrency(IA4562BSp.Balance6) <> 0 Then{n}{t}{t}ReturnVal = GetCurrency(IA4562BSp.Balance6) + GetCurrency(IA4562BSp.AdjAmt(6)){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IA4562BSp.AdjAmt(6)){n}{t}End If{n}End Sub
Sub Balance8_Calculation(){n}{t}If GetCurrency(IA4562BSp.Balance7) <> 0 Then{n}{t}{t}ReturnVal = GetCurrency(IA4562BSp.Balance7) + GetCurrency(IA4562BSp.AdjAmt(7)){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IA4562BSp.AdjAmt(7)){n}{t}End If{n}End Sub
Sub Balance9_Calculation(){n}{t}If GetCurrency(IA4562BSp.Balance8) <> 0 Then{n}{t}{t}ReturnVal = GetCurrency(IA4562BSp.Balance8) + GetCurrency(IA4562BSp.AdjAmt(8)){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IA4562BSp.AdjAmt(8)){n}{t}End If{n}End Sub
Sub Balance14_Calculation(){n}{t}If GetCurrency(IA4562BSp.Balance13) <> 0 Then{n}{t}{t}ReturnVal = GetCurrency(IA4562BSp.Balance13) + GetCurrency(IA4562BSp.AdjAmt(13)){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IA4562BSp.AdjAmt(13)){n}{t}End If{n}End Sub
Sub Balance15_Calculation(){n}{t}If GetCurrency(IA4562BSp.Balance14) <> 0 Then{n}{t}{t}ReturnVal = GetCurrency(IA4562BSp.Balance14) + GetCurrency(IA4562BSp.AdjAmt(14)){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IA4562BSp.AdjAmt(14)){n}{t}End If{n}End Sub
Sub Balance16_Calculation(){n}{t}If GetCurrency(IA4562BSp.Balance15) <> 0 Then{n}{t}{t}ReturnVal = GetCurrency(IA4562BSp.Balance15) + GetCurrency(IA4562BSp.AdjAmt(15)){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IA4562BSp.AdjAmt(15)){n}{t}End If{n}End Sub
Sub Balance17_Calculation(){n}{t}If GetCurrency(IA4562BSp.Balance16) <> 0 Then{n}{t}{t}ReturnVal = GetCurrency(IA4562BSp.Balance16) + GetCurrency(IA4562BSp.CYAdjAmt){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IA4562BSp.CYAdjAmt){n}{t}End If{n}End Sub
Sub CYAdjAmt_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.SPBonus){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Description_Calculation(){n}{t}ReturnVal = CStr(GetCurrency(IA4562BSp.Balance17)) & " Balance"{n}End Sub
Sub Names_Calculation(){n}{t}ReturnVal = GetString(IA4562Sp.Names){n}End Sub
Sub PeriodEnd_Calculation(Index As Integer){n}{t}If Index = 0 Then{n}{t}{t}ReturnVal = #12/31/2002#{n}{t}ElseIf Index = 1 Then{n}{t}{t}ReturnVal = #12/31/2003#{n}{t}ElseIf Index = 2 Then{n}{t}{t}ReturnVal = #12/31/2004#{n}{t}ElseIf Index = 3 Then{n}{t}{t}ReturnVal = #12/31/2005#{n}{t}ElseIf Index = 4 Then{n}{t}{t}ReturnVal = #12/31/2006#{n}{t}ElseIf Index = 5 Then{n}{t}{t}ReturnVal = #12/31/2007#{n}{t}ElseIf Index = 6 Then{n}{t}{t}ReturnVal = #12/31/2008#{n}{t}ElseIf Index = 7 Then{n}{t}{t}ReturnVal = #12/31/2009#{n}{t}ElseIf Index = 8 Then{n}{t}{t}ReturnVal = #12/31/2010#{n}{t}ElseIf Index = 9 Then{n}{t}{t}ReturnVal = #12/31/2011#{n}{t}ElseIf Index = 10 Then{n}{t}{t}ReturnVal = #12/31/2012#{n}{t}ElseIf Index = 11 Then{n}{t}{t}ReturnVal = #12/31/2013#{n}{t}ElseIf Index = 12 Then{n}{t}{t}ReturnVal = #12/31/2014#{n}{t}ElseIf Index = 13 Then{n}{t}{t}ReturnVal = #12/31/2015#{n}{t}ElseIf Index = 14 Then{n}{t}{t}ReturnVal = #12/31/2016#{n}{t}ElseIf Index = 15 Then{n}{t}{t}ReturnVal = #12/31/2017#{n}{t}Else{n}{t}{t}ReturnVal = #12/31/2018#{n}{t}End If{n}End Sub
Sub PrAdjAmt_Calculation(Index As Integer){n}{t}Dim count As Integer{n}{t}Dim Hold As Currency{n}{t}count = 0{n}{t}Hold = 0{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(0)) <> 0 Or GetCurrency(IA4562BSp.Balance1) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IA4562BSp.AdjAmt(0)){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(1)) <> 0 Or GetCurrency(IA4562BSp.Balance2) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IA4562BSp.AdjAmt(1)){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(2)) <> 0 Or GetCurrency(IA4562BSp.Balance3) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IA4562BSp.AdjAmt(2)){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(3)) <> 0 Or GetCurrency(IA4562BSp.Balance4) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IA4562BSp.AdjAmt(3)){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(4)) <> 0 Or GetCurrency(IA4562BSp.Balance5) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IA4562BSp.AdjAmt(4)){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(5)) <> 0 Or GetCurrency(IA4562BSp.Balance6) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IA4562BSp.AdjAmt(5)){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(6)) <> 0 Or GetCurrency(IA4562BSp.Balance7) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IA4562BSp.AdjAmt(6)){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(7)) <> 0 Or GetCurrency(IA4562BSp.Balance8) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IA4562BSp.AdjAmt(7)){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(8)) <> 0 Or GetCurrency(IA4562BSp.Balance9) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IA4562BSp.AdjAmt(8)){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(9)) <> 0 Or GetCurrency(IA4562BSp.Balance10) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IA4562BSp.AdjAmt(9)){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(10)) <> 0 Or GetCurrency(IA4562BSp.Balance11) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IA4562BSp.AdjAmt(10)){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(11)) <> 0 Or GetCurrency(IA4562BSp.Balance12) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IA4562BSp.AdjAmt(11)){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(12)) <> 0 Or GetCurrency(IA4562BSp.Balance13) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IA4562BSp.AdjAmt(12)){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(13)) <> 0 Or GetCurrency(IA4562BSp.Balance14) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IA4562BSp.AdjAmt(13)){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(14)) <> 0 Or GetCurrency(IA4562BSp.Balance15) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IA4562BSp.AdjAmt(14)){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(15)) <> 0 Or GetCurrency(IA4562BSp.Balance16) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IA4562BSp.AdjAmt(15)){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.CYAdjAmt) <> 0 Or GetCurrency(IA4562BSp.Balance17) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IA4562BSp.CYAdjAmt){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}ReturnVal = Hold{n}End Sub
Sub PrAsterik_Calculation(Index As Integer){n}{t}If GetBool(IA4562BSp.PrChangeY(Index)) = True Then{n}{t}{t}ReturnVal = "*"{n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub PrBalance_Calculation(Index As Integer){n}{t}Dim count As Integer{n}{t}Dim Hold As Currency{n}{t}count = 0{n}{t}Hold = 0{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(0)) <> 0 Or GetCurrency(IA4562BSp.Balance1) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IA4562BSp.Balance1){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(1)) <> 0 Or GetCurrency(IA4562BSp.Balance2) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IA4562BSp.Balance2){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(2)) <> 0 Or GetCurrency(IA4562BSp.Balance3) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IA4562BSp.Balance3){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(3)) <> 0 Or GetCurrency(IA4562BSp.Balance4) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IA4562BSp.Balance4){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(4)) <> 0 Or GetCurrency(IA4562BSp.Balance5) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IA4562BSp.Balance5){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(5)) <> 0 Or GetCurrency(IA4562BSp.Balance6) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IA4562BSp.Balance6){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(6)) <> 0 Or GetCurrency(IA4562BSp.Balance7) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IA4562BSp.Balance7){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(7)) <> 0 Or GetCurrency(IA4562BSp.Balance8) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IA4562BSp.Balance8){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(8)) <> 0 Or GetCurrency(IA4562BSp.Balance9) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IA4562BSp.Balance9){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(9)) <> 0 Or GetCurrency(IA4562BSp.Balance10) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IA4562BSp.Balance10){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(10)) <> 0 Or GetCurrency(IA4562BSp.Balance11) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IA4562BSp.Balance11){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(11)) <> 0 Or GetCurrency(IA4562BSp.Balance12) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IA4562BSp.Balance12){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(12)) <> 0 Or GetCurrency(IA4562BSp.Balance13) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IA4562BSp.Balance13){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(13)) <> 0 Or GetCurrency(IA4562BSp.Balance14) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IA4562BSp.Balance14){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(14)) <> 0 Or GetCurrency(IA4562BSp.Balance15) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IA4562BSp.Balance15){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(15)) <> 0 Or GetCurrency(IA4562BSp.Balance16) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IA4562BSp.Balance16){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.CYAdjAmt) <> 0 Or GetCurrency(IA4562BSp.Balance17) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IA4562BSp.Balance17){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}ReturnVal = Hold{n}End Sub
Sub PrChangeY_Calculation(Index As Integer){n}{t}Dim count As Integer{n}{t}Dim Hold As Boolean{n}{t}count = 0{n}{t}Hold = 0{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(0)) <> 0 Or GetCurrency(IA4562BSp.Balance1) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetBool(IA4562BSp.ChangeY(0)){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(1)) <> 0 Or GetCurrency(IA4562BSp.Balance2) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetBool(IA4562BSp.ChangeY(1)){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(2)) <> 0 Or GetCurrency(IA4562BSp.Balance3) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetBool(IA4562BSp.ChangeY(2)){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(3)) <> 0 Or GetCurrency(IA4562BSp.Balance4) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetBool(IA4562BSp.ChangeY(3)){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(4)) <> 0 Or GetCurrency(IA4562BSp.Balance5) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetBool(IA4562BSp.ChangeY(4)){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(5)) <> 0 Or GetCurrency(IA4562BSp.Balance6) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetBool(IA4562BSp.ChangeY(5)){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(6)) <> 0 Or GetCurrency(IA4562BSp.Balance7) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetBool(IA4562BSp.ChangeY(6)){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(7)) <> 0 Or GetCurrency(IA4562BSp.Balance8) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetBool(IA4562BSp.ChangeY(7)){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(8)) <> 0 Or GetCurrency(IA4562BSp.Balance9) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetBool(IA4562BSp.ChangeY(8)){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(9)) <> 0 Or GetCurrency(IA4562BSp.Balance10) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetBool(IA4562BSp.ChangeY(9)){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(10)) <> 0 Or GetCurrency(IA4562BSp.Balance11) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetBool(IA4562BSp.ChangeY(10)){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(11)) <> 0 Or GetCurrency(IA4562BSp.Balance12) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetBool(IA4562BSp.ChangeY(11)){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}  {n}{t}If GetCurrency(IA4562BSp.AdjAmt(12)) <> 0 Or GetCurrency(IA4562BSp.Balance13) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetBool(IA4562BSp.ChangeY(12)){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(13)) <> 0 Or GetCurrency(IA4562BSp.Balance14) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetBool(IA4562BSp.ChangeY(13)){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(14)) <> 0 Or GetCurrency(IA4562BSp.Balance15) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetBool(IA4562BSp.ChangeY(14)){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(15)) <> 0 Or GetCurrency(IA4562BSp.Balance16) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetBool(IA4562BSp.ChangeY(15)){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.CYAdjAmt) <> 0 Or GetCurrency(IA4562BSp.Balance17) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetBool(IA4562BSp.ChangeY(16)){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}ReturnVal = Hold{n}End Sub
Sub Print_Calculation(){n}{t}If GetCurrency(IA4562BSp.PrBalance(0)) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub PrPeriodEnd_Calculation(Index As Integer){n}{t}Dim count As Integer{n}{t}Dim Hold As String{n}{t}count = 0{n}{t}Hold = ""{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(0)) <> 0 Or GetCurrency(IA4562BSp.Balance1) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetString(IA4562BSp.PeriodEnd(0)){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(1)) <> 0 Or GetCurrency(IA4562BSp.Balance2) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetString(IA4562BSp.PeriodEnd(1)){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(2)) <> 0 Or GetCurrency(IA4562BSp.Balance3) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetString(IA4562BSp.PeriodEnd(2)){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(3)) <> 0 Or GetCurrency(IA4562BSp.Balance4) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetString(IA4562BSp.PeriodEnd(3)){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(4)) <> 0 Or GetCurrency(IA4562BSp.Balance5) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetString(IA4562BSp.PeriodEnd(4)){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(5)) <> 0 Or GetCurrency(IA4562BSp.Balance6) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetString(IA4562BSp.PeriodEnd(5)){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(6)) <> 0 Or GetCurrency(IA4562BSp.Balance7) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetString(IA4562BSp.PeriodEnd(6)){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(7)) <> 0 Or GetCurrency(IA4562BSp.Balance8) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetString(IA4562BSp.PeriodEnd(7)){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(8)) <> 0 Or GetCurrency(IA4562BSp.Balance9) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetString(IA4562BSp.PeriodEnd(8)){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(9)) <> 0 Or GetCurrency(IA4562BSp.Balance10) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetString(IA4562BSp.PeriodEnd(9)){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(10)) <> 0 Or GetCurrency(IA4562BSp.Balance11) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetString(IA4562BSp.PeriodEnd(10)){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(11)) <> 0 Or GetCurrency(IA4562BSp.Balance12) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetString(IA4562BSp.PeriodEnd(11)){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(12)) <> 0 Or GetCurrency(IA4562BSp.Balance13) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetString(IA4562BSp.PeriodEnd(12)){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(13)) <> 0 Or GetCurrency(IA4562BSp.Balance14) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetString(IA4562BSp.PeriodEnd(13)){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(14)) <> 0 Or GetCurrency(IA4562BSp.Balance15) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetString(IA4562BSp.PeriodEnd(14)){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.AdjAmt(15)) <> 0 Or GetCurrency(IA4562BSp.Balance16) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetString(IA4562BSp.PeriodEnd(15)){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IA4562BSp.CYAdjAmt) <> 0 Or GetCurrency(IA4562BSp.Balance17) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetString(IA4562BSp.PeriodEnd(16)){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}   count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}ReturnVal = Hold{n}{t}{n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IA4562Sp.SSN){n}End SubSub Alert10_Calculation(){n}{t}If GetBool(IA4562PIV.SpecElectYes) = False And GetCurrency(IA4562PIV.Total179) > 70000@ Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert20_Calculation(){n}{t}If GetBool(IA4562PIV.UsingSpecElec) = True Then{n}{t}{t}If (GetCurrency(IA4562PIV.TPFed1065) + GetCurrency(IA4562PIV.SPFed1065) + GetCurrency(IA4562PIV.TPFed1120S) + GetCurrency(IA4562PIV.SPFed1120S)) > 0@ Then{n}{t}{t}{t}If (GetCurrency(IA4562PIV.TPIA1065) + GetCurrency(IA4562PIV.SPIA1065) + GetCurrency(IA4562PIV.TPIA1120S) + GetCurrency(IA4562PIV.SPIA1120S)) = 0@ Then{n}{t}{t}{t}{t}ReturnVal = 1{n}{t}{t}{t}Else{n}{t}{t}{t}{t}ReturnVal = 0{n}{t}{t}{t}End If{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert30_Calculation(){n}{t}If GetBool(IA4562PIV.UsingSpecElec) = True Then{n}{t}{t}If (GetCurrency(USWDepr.IACYSec179Rep) + GetCurrency(USF4562.StateTotCySec1792106, 1)) > 0 Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CarryOver179Yr1_Calculation(){n}{t}ReturnVal = MaxValue(0, (GetCurrency(IA4562PIV.Excess179) - GetCurrency(IA4562PIV.CarryOver179Yr2) - GetCurrency(IA4562PIV.CarryOver179Yr3) - GetCurrency(IA4562PIV.CarryOver179Yr4) - GetCurrency(IA4562PIV.CarryOver179Yr5))){n}End Sub
Sub CarryOver179Yr2_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IA4562PIV.Excess179) * 0.2){n}End Sub
Sub CarryOver179Yr3_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IA4562PIV.Excess179) * 0.2){n}End Sub
Sub CarryOver179Yr4_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IA4562PIV.Excess179) * 0.2){n}End Sub
Sub CarryOver179Yr5_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IA4562PIV.Excess179) * 0.2){n}End Sub
Sub Desc_Calculation(){n}{t}Dim Total As Currency{n}{t}{n}{t}Total = GetCurrency(IA4562PIV.Excess179){n}{t}{n}{t}ReturnVal = CStr(Total) & " Special Election Deduction"{n}{n}End Sub
Sub Excess179_Calculation(){n}{t}If GetBool(IA4562PIV.SpecElectYes) = True Then{n}{t}{t}ReturnVal = MaxValue(0, (GetCurrency(IA4562PIV.Total179) - GetCurrency(IA4562PIV.Limit))){n}{t}Else{n}{t}{t}ReturnVal = 0@{n}{t}End If{n}End Sub
Sub Exist_Calculation(){n}{t}ReturnVal = 1{n}End Sub
Sub IASec179NoK1s_Calculation(){n}{t}ReturnVal = GetCurrency(USWDepr.IACYSec179Rep) + GetCurrency(USF4562.StateTotCySec1792106, 1){n}End Sub
Sub Limit_Calculation(){n}{t}If GetBool(IA4562PIV.SpecElectYes) = True Then{n}{t}{t}ReturnVal = 70000@{n}{t}Else{n}{t}{t}ReturnVal = 0@{n}{t}End If{n}End Sub
Sub Names_Calculation(){n}{t}ReturnVal = GetString(IARequired.CombNames){n}End Sub
Sub PrIA4562PIV_Calculation(){n}{t}If GetCurrency(IA4562PIV.TPPartIV179) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub PrIA4562PIVSP_Calculation(){n}{t}If GetCurrency(IA4562PIV.SPPartIV179) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Print_Calculation(){n}{t}If GetCurrency(IA4562PIV.Excess179) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPAccFedDep_Calculation(){n}{t}ReturnVal = 0{n}End Sub
Sub SPAccIADep_Calculation(){n}{t}ReturnVal = 0{n}End Sub
Sub SPBasis_Calculation(){n}{t}ReturnVal = 0{n}End Sub
Sub SPCarryOver179Yr1_Calculation(){n}{t}If GetBool(IA4562PIV.UsingSpecElec) = False Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = CDollar(GetFloat(IA4562PIV.CarryOver179Yr1) * GetFloat(IA4562PIV.SPRatio)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPCarryOver179Yr2_Calculation(){n}{t}If GetBool(IA4562PIV.UsingSpecElec) = False Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = CDollar(GetFloat(IA4562PIV.CarryOver179Yr2) * GetFloat(IA4562PIV.SPRatio)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPCarryOver179Yr3_Calculation(){n}{t}If GetBool(IA4562PIV.UsingSpecElec) = False Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = CDollar(GetFloat(IA4562PIV.CarryOver179Yr3) * GetFloat(IA4562PIV.SPRatio)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPCarryOver179Yr4_Calculation(){n}{t}If GetBool(IA4562PIV.UsingSpecElec) = False Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = CDollar(GetFloat(IA4562PIV.CarryOver179Yr4) * GetFloat(IA4562PIV.SPRatio)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPCarryOver179Yr5_Calculation(){n}{t}If GetBool(IA4562PIV.UsingSpecElec) = False Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = CDollar(GetFloat(IA4562PIV.CarryOver179Yr5) * GetFloat(IA4562PIV.SPRatio)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SpCopy_Calculation(){n}{t}If GetCurrency(IA4562PIV.SPPartIV179) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPDateServ_Calculation(){n}{t}ReturnVal = MakeDate(12, 31, YearNumber){n}End Sub
Sub SPExcess179_Calculation(){n}{t}If GetBool(IA4562PIV.UsingSpecElec) = False Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = CDollar(GetFloat(IA4562PIV.Excess179) * GetFloat(IA4562PIV.SPRatio)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPFed1065_Calculation(){n}{t}ReturnVal = GetCurrency(USDPartK1.Sec179, FieldCopies(USDPartK1.Spouse)) + MaxValue(0, GetCurrency(USDPartK1.Sec179, FieldCopies(USDPartK1.Joint)) - CDollar(GetFloat(USDPartK1.Sec179, FieldCopies(USDPartK1.Joint)) * 0.5)){n}End Sub
Sub SPFed1120S_Calculation(){n}{t}ReturnVal = GetCurrency(USDSCorpK1.Sec179, FieldCopies(USDSCorpK1.Spouse)) + MaxValue(0, GetCurrency(USDSCorpK1.Sec179, FieldCopies(USDSCorpK1.Joint)) - CDollar(GetFloat(USDSCorpK1.Sec179, FieldCopies(USDSCorpK1.Joint)) * 0.5)){n}End Sub
Sub SPFedDepDed_Calculation(){n}{t}ReturnVal = 0{n}End Sub
Sub SPLife_Calculation(){n}{t}ReturnVal = "0"{n}End Sub
Sub SPLine1_Calculation(){n}{t}If GetBool(IA4562PIV.UsingSpecElec) = False Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = CDollar(GetFloat(IA4562PIV.Total179) * GetFloat(IA4562PIV.SPRatio)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPLine1a_Calculation(){n}{t}If GetBool(IA4562PIV.UsingSpecElec) = False Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = GetCurrency(IA4562PIV.SPIA1065){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPLine1b_Calculation(){n}{t}If GetBool(IA4562PIV.UsingSpecElec) = False Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = GetCurrency(IA4562PIV.SPFed1065){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPLine1c_Calculation(){n}{t}If GetBool(IA4562PIV.UsingSpecElec) = False Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = GetCurrency(IA4562PIV.SPIA1120S){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPLine1d_Calculation(){n}{t}If GetBool(IA4562PIV.UsingSpecElec) = False Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = GetCurrency(IA4562PIV.SPFed1120S){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPMACRSIA_Calculation(){n}{t}ReturnVal = 0{n}End Sub
Sub SPName_Calculation(){n}{t}ReturnVal = GetString(IARequired.SPCombName){n}End Sub
Sub SPPartIV179_Calculation(){n}{t}If GetBool(IA4562PIV.UsingSpecElec) = False Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = CDollar(GetFloat(IA4562PIV.Limit) * GetFloat(IA4562PIV.SPRatio)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPPropDescr_Calculation(){n}{t}If GetCurrency(IA4562PIV.SPPartIV179) > 0 Then{n}{t}{t}ReturnVal = "Part IV"{n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub SPRatio_Calculation(){n}{t}If GetCurrency(IA4562PIV.Tot179Nolimit) = 0 Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = MaxValue(0, (MinValue(1#, GetFloat(IA4562PIV.SPTot179) / GetFloat(IA4562PIV.Tot179Nolimit)))){n}{t}End If{n}End Sub
Sub SPSSN_Calculation(){n}{t}ReturnVal = GetString(IAF1040.SpouseSSN){n}End Sub
Sub SPTot179_Calculation(){n}{t}ReturnVal = GetCurrency(IA4562PIV.SPIA1065) + GetCurrency(IA4562PIV.SPFed1065) + GetCurrency(IA4562PIV.SPIA1120S) + GetCurrency(IA4562PIV.SPFed1120S){n}End Sub
Sub SPTotAdj_Calculation(){n}{t}ReturnVal = GetCurrency(IA4562PIV.SPLine1) - GetCurrency(IA4562PIV.SPPartIV179){n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IAF1040.SSN){n}End Sub
Sub Tot179Nolimit_Calculation(){n}{t}ReturnVal = GetCurrency(IA4562PIV.TPTot179) + GetCurrency(IA4562PIV.SPTot179){n}End Sub
Sub Total179_Calculation(){n}{t}Dim Tot As Currency{n}{t}{n}{t}Tot = GetCurrency(IA4562PIV.TotIA1065) + GetCurrency(IA4562PIV.TotFed1065) + GetCurrency(IA4562PIV.TotIA1120S) + GetCurrency(IA4562PIV.TotFed1120S){n}{t}{n}{t}ReturnVal = MinValue(Tot, 1000000@){n}End Sub
Sub TotFed1065_Calculation(){n}{t}ReturnVal = GetCurrency(IA4562PIV.TPFed1065) + GetCurrency(IA4562PIV.SPFed1065){n}End Sub
Sub TotFed1120S_Calculation(){n}{t}ReturnVal = GetCurrency(IA4562PIV.TPFed1120S) + GetCurrency(IA4562PIV.SPFed1120S){n}End Sub
Sub TotIA1065_Calculation(){n}{t}ReturnVal = GetCurrency(IA4562PIV.TPIA1065) + GetCurrency(IA4562PIV.SPIA1065){n}End Sub
Sub TotIA1120S_Calculation(){n}{t}ReturnVal = GetCurrency(IA4562PIV.TPIA1120S) + GetCurrency(IA4562PIV.SPIA1120S){n}End Sub
Sub TPAccFedDep_Calculation(){n}{t}ReturnVal = 0{n}End Sub
Sub TPAccIADep_Calculation(){n}{t}ReturnVal = 0{n}End Sub
Sub TPBasis_Calculation(){n}{t}ReturnVal = 0{n}End Sub
Sub TPCarryOver179Yr1_Calculation(){n}{t}If GetBool(IA4562PIV.UsingSpecElec) = False Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = GetCurrency(IA4562PIV.CarryOver179Yr1) - GetCurrency(IA4562PIV.SPCarryOver179Yr1){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IA4562PIV.CarryOver179Yr1){n}{t}End If{n}End Sub
Sub TPCarryOver179Yr2_Calculation(){n}{t}If GetBool(IA4562PIV.UsingSpecElec) = False Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = GetCurrency(IA4562PIV.CarryOver179Yr2) - GetCurrency(IA4562PIV.SPCarryOver179Yr2){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IA4562PIV.CarryOver179Yr2){n}{t}End If{n}End Sub
Sub TPCarryOver179Yr3_Calculation(){n}{t}If GetBool(IA4562PIV.UsingSpecElec) = False Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = GetCurrency(IA4562PIV.CarryOver179Yr3) - GetCurrency(IA4562PIV.SPCarryOver179Yr3){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IA4562PIV.CarryOver179Yr3){n}{t}End If{n}End Sub
Sub TPCarryOver179Yr4_Calculation(){n}{t}If GetBool(IA4562PIV.UsingSpecElec) = False Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = GetCurrency(IA4562PIV.CarryOver179Yr4) - GetCurrency(IA4562PIV.SPCarryOver179Yr4){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IA4562PIV.CarryOver179Yr4){n}{t}End If{n}End Sub
Sub TPCarryOver179Yr5_Calculation(){n}{t}If GetBool(IA4562PIV.UsingSpecElec) = False Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = GetCurrency(IA4562PIV.CarryOver179Yr5) - GetCurrency(IA4562PIV.SPCarryOver179Yr5){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IA4562PIV.CarryOver179Yr5){n}{t}End If{n}End Sub
Sub TpCopy_Calculation(){n}{t}If GetCurrency(IA4562PIV.TPPartIV179) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPDateServ_Calculation(){n}{t}ReturnVal = MakeDate(12, 31, YearNumber){n}End Sub
Sub TPExcess179_Calculation(){n}{t}If GetBool(IA4562PIV.UsingSpecElec) = False Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = GetCurrency(IA4562PIV.Excess179) - GetCurrency(IA4562PIV.SPExcess179){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IA4562PIV.Excess179){n}{t}End If{n}End Sub
Sub TPFed1065_Calculation(){n}{t}ReturnVal = GetCurrency(USDPartK1.Sec179, FieldCopies(USDPartK1.Taxpayer)) + CDollar(GetFloat(USDPartK1.Sec179, FieldCopies(USDPartK1.Joint)) * 0.5){n}End Sub
Sub TPFed1120S_Calculation(){n}{t}ReturnVal = GetCurrency(USDSCorpK1.Sec179, FieldCopies(USDSCorpK1.Taxpayer)) + CDollar(GetFloat(USDSCorpK1.Sec179, FieldCopies(USDSCorpK1.Joint)) * 0.5){n}End Sub
Sub TPFedDepDed_Calculation(){n}{t}ReturnVal = 0{n}End Sub
Sub TPLife_Calculation(){n}{t}ReturnVal = "0"{n}End Sub
Sub TPLine1_Calculation(){n}{t}If GetBool(IA4562PIV.UsingSpecElec) = False Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = GetCurrency(IA4562PIV.Total179) - GetCurrency(IA4562PIV.SPLine1){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IA4562PIV.Total179){n}{t}End If{n}End Sub
Sub TPLine1a_Calculation(){n}{t}If GetBool(IA4562PIV.UsingSpecElec) = False Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = GetCurrency(IA4562PIV.TPIA1065){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IA4562PIV.TotIA1065){n}{t}End If{n}End Sub
Sub TPLine1b_Calculation(){n}{t}If GetBool(IA4562PIV.UsingSpecElec) = False Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = GetCurrency(IA4562PIV.TPFed1065){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IA4562PIV.TotFed1065){n}{t}End If{n}End Sub
Sub TPLine1c_Calculation(){n}{t}If GetBool(IA4562PIV.UsingSpecElec) = False Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = GetCurrency(IA4562PIV.TPIA1120S){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IA4562PIV.TotIA1120S){n}{t}End If{n}End Sub
Sub TPLine1d_Calculation(){n}{t}If GetBool(IA4562PIV.UsingSpecElec) = False Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = GetCurrency(IA4562PIV.TPFed1120S){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IA4562PIV.TotFed1120S){n}{t}End If{n}End Sub
Sub TPMACRSIA_Calculation(){n}{t}ReturnVal = 0{n}End Sub
Sub TPorJTName_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = GetString(IARequired.TPCombName){n}{t}Else{n}{t}{t}ReturnVal = GetString(IARequired.CombNames){n}{t}End If{n}End Sub
Sub TPorJTSSN_Calculation(){n}{t}ReturnVal = GetString(IAF1040.SSN){n}End Sub
Sub TPPartIV179_Calculation(){n}{t}If GetBool(IA4562PIV.UsingSpecElec) = False Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = GetCurrency(IA4562PIV.Limit) - GetCurrency(IA4562PIV.SPPartIV179){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IA4562PIV.Limit){n}{t}End If{n}End Sub
Sub TPPropDescr_Calculation(){n}{t}If GetCurrency(IA4562PIV.TPPartIV179) > 0 Then{n}{t}{t}ReturnVal = "Part IV"{n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub TPTot179_Calculation(){n}{t}ReturnVal = GetCurrency(IA4562PIV.TPIA1065) + GetCurrency(IA4562PIV.TPFed1065) + GetCurrency(IA4562PIV.TPIA1120S) + GetCurrency(IA4562PIV.TPFed1120S){n}End Sub
Sub TPTotAdj_Calculation(){n}{t}ReturnVal = GetCurrency(IA4562PIV.TPLine1) - GetCurrency(IA4562PIV.TPPartIV179){n}End Sub
Sub UsingSpecElec_Calculation(){n}{t}If GetBool(IA4562PIV.SpecElectYes) = True And GetCurrency(IA4562PIV.Excess179) > 0@ Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End SubSub AccFedDep_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}{n}{t}Stuff = Index - GetNumber(IA4562PIV.SpCopy){n}{t}{n}{t}If GetNumber(IA4562PIV.SpCopy) = 1 And Index = 0 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetNumber(IA4562Sp.DepSeeAttBool) = 1 And Index = 3 Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAWDepr.SPAccFedDep, GetNumber(IA4562Sp.StateDeprCopyNbr(Stuff))){n}{t}End If{n}End Sub
Sub AccIADep_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}{n}{t}Stuff = Index - GetNumber(IA4562PIV.SpCopy){n}{t}{n}{t}If GetNumber(IA4562PIV.SpCopy) = 1 And Index = 0 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetNumber(IA4562Sp.DepSeeAttBool) = 1 And Index = 3 Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAWDepr.SPAccIADep, GetNumber(IA4562Sp.StateDeprCopyNbr(Stuff))){n}{t}End If{n}End Sub
Sub Basis_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}{n}{t}Stuff = Index - GetNumber(IA4562PIV.SpCopy){n}{t}{n}{t}If GetNumber(IA4562PIV.SpCopy) = 1 And Index = 0 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetNumber(IA4562Sp.DepSeeAttBool) = 1 And Index = 3 Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAWDepr.SPBasis, GetNumber(IA4562Sp.StateDeprCopyNbr(Stuff))){n}{t}End If{n}End Sub
Sub CrBPDep1_Calculation(){n}{t}If (GetNumber(IA4562Sp.StateDeprNbr) + GetNumber(IA4562PIV.SpCopy)) > 4 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBPDep10_Calculation(){n}{t}If (GetNumber(IA4562Sp.StateDeprNbr) + GetNumber(IA4562PIV.SpCopy)) > 264 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBPDep11_Calculation(){n}{t}If (GetNumber(IA4562Sp.StateDeprNbr) + GetNumber(IA4562PIV.SpCopy)) > 293 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBPDep12_Calculation(){n}{t}If (GetNumber(IA4562Sp.StateDeprNbr) + GetNumber(IA4562PIV.SpCopy)) > 322 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBPDep13_Calculation(){n}{t}If (GetNumber(IA4562Sp.StateDeprNbr) + GetNumber(IA4562PIV.SpCopy)) > 351 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBPDep14_Calculation(){n}{t}If (GetNumber(IA4562Sp.StateDeprNbr) + GetNumber(IA4562PIV.SpCopy)) > 380 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBPDep15_Calculation(){n}{t}If (GetNumber(IA4562Sp.StateDeprNbr) + GetNumber(IA4562PIV.SpCopy)) > 409 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBPDep16_Calculation(){n}{t}If (GetNumber(IA4562Sp.StateDeprNbr) + GetNumber(IA4562PIV.SpCopy)) > 438 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBPDep17_Calculation(){n}{t}If (GetNumber(IA4562Sp.StateDeprNbr) + GetNumber(IA4562PIV.SpCopy)) > 467 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBPDep18_Calculation(){n}{t}If (GetNumber(IA4562Sp.StateDeprNbr) + GetNumber(IA4562PIV.SpCopy)) > 496 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBPDep19_Calculation(){n}{t}If (GetNumber(IA4562Sp.StateDeprNbr) + GetNumber(IA4562PIV.SpCopy)) > 525 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBPDep2_Calculation(){n}{t}If (GetNumber(IA4562Sp.StateDeprNbr) + GetNumber(IA4562PIV.SpCopy)) > 32 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBPDep20_Calculation(){n}{t}If (GetNumber(IA4562Sp.StateDeprNbr) + GetNumber(IA4562PIV.SpCopy)) > 554 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBPDep3_Calculation(){n}{t}If (GetNumber(IA4562Sp.StateDeprNbr) + GetNumber(IA4562PIV.SpCopy)) > 61 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBPDep4_Calculation(){n}{t}If (GetNumber(IA4562Sp.StateDeprNbr) + GetNumber(IA4562PIV.SpCopy)) > 90 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBPDep5_Calculation(){n}{t}If (GetNumber(IA4562Sp.StateDeprNbr) + GetNumber(IA4562PIV.SpCopy)) > 119 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBPDep6_Calculation(){n}{t}If (GetNumber(IA4562Sp.StateDeprNbr) + GetNumber(IA4562PIV.SpCopy)) > 148 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBPDep7_Calculation(){n}{t}If (GetNumber(IA4562Sp.StateDeprNbr) + GetNumber(IA4562PIV.SpCopy)) > 177 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBPDep8_Calculation(){n}{t}If (GetNumber(IA4562Sp.StateDeprNbr) + GetNumber(IA4562PIV.SpCopy)) > 206 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBPDep9_Calculation(){n}{t}If (GetNumber(IA4562Sp.StateDeprNbr) + GetNumber(IA4562PIV.SpCopy)) > 235 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBPDisp1_Calculation(){n}{t}If GetNumber(IA4562Sp.StateDispNbr) > 4 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBPDisp10_Calculation(){n}{t}If GetNumber(IA4562Sp.StateDispNbr) > 264 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBPDisp11_Calculation(){n}{t}If GetNumber(IA4562Sp.StateDispNbr) > 293 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBPDisp12_Calculation(){n}{t}If GetNumber(IA4562Sp.StateDispNbr) > 322 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBPDisp13_Calculation(){n}{t}If GetNumber(IA4562Sp.StateDispNbr) > 351 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBPDisp14_Calculation(){n}{t}If GetNumber(IA4562Sp.StateDispNbr) > 380 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBPDisp15_Calculation(){n}{t}If GetNumber(IA4562Sp.StateDispNbr) > 409 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBPDisp16_Calculation(){n}{t}If GetNumber(IA4562Sp.StateDispNbr) > 438 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBPDisp17_Calculation(){n}{t}If GetNumber(IA4562Sp.StateDispNbr) > 467 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBPDisp18_Calculation(){n}{t}If GetNumber(IA4562Sp.StateDispNbr) > 496 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBPDisp19_Calculation(){n}{t}If GetNumber(IA4562Sp.StateDispNbr) > 525 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBPDisp2_Calculation(){n}{t}If GetNumber(IA4562Sp.StateDispNbr) > 32 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBPDisp20_Calculation(){n}{t}If GetNumber(IA4562Sp.StateDispNbr) > 554 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBPDisp3_Calculation(){n}{t}If GetNumber(IA4562Sp.StateDispNbr) > 61 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBPDisp4_Calculation(){n}{t}If GetNumber(IA4562Sp.StateDispNbr) > 90 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBPDisp5_Calculation(){n}{t}If GetNumber(IA4562Sp.StateDispNbr) > 119 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBPDisp6_Calculation(){n}{t}If GetNumber(IA4562Sp.StateDispNbr) > 148 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBPDisp7_Calculation(){n}{t}If GetNumber(IA4562Sp.StateDispNbr) > 177 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBPDisp8_Calculation(){n}{t}If GetNumber(IA4562Sp.StateDispNbr) > 206 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBPDisp9_Calculation(){n}{t}If GetNumber(IA4562Sp.StateDispNbr) > 235 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub DateServ_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}{n}{t}Stuff = Index - GetNumber(IA4562PIV.SpCopy){n}{t}{n}{t}If GetNumber(IA4562PIV.SpCopy) = 1 And Index = 0 Then{n}{t}{t}ReturnVal = ""{n}{t}ElseIf GetNumber(IA4562Sp.DepSeeAttBool) = 1 And Index = 3 Then{n}{t}{t}ReturnVal = ""{n}{t}Else{n}{t}{t}ReturnVal = GetString(IAWDepr.DateServ, GetNumber(IA4562Sp.StateDeprCopyNbr(Stuff))){n}{t}End If{n}End Sub
Sub DepAdj_Calculation(){n}{t}ReturnVal = GetCurrency(IA4562Sp.TotColF) - GetCurrency(IA4562Sp.TotColI){n}End Sub
Sub DepSeeAttBool_Calculation(){n}{t}If (GetNumber(IA4562Sp.StateDeprNbr) + GetNumber(IA4562PIV.SpCopy)) > 4 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Desc_Calculation(){n}{t}Dim Total As Currency{n}{t}{n}{t}Total = GetCurrency(IA4562Sp.TotDepAdj){n}{t}{n}{t}ReturnVal = CStr(Total) & " Adjustment"{n}{n}End Sub
Sub DisAdj_Calculation(Index As Integer){n}{t}If GetNumber(IA4562Sp.DisSeeAttBool) = 1 And Index = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IAWBPDispSp.TotDisAdj){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IA4562Sp.DisIADep(Index)) - GetCurrency(IA4562Sp.DisFedDep(Index)){n}{t}End If{n}End Sub
Sub DisDTServ_Calculation(Index As Integer){n}{t}If GetNumber(IA4562Sp.DisSeeAttBool) = 1 And Index = 3 Then{n}{t}{t}ReturnVal = ""{n}{t}Else{n}{t}{t}ReturnVal = GetString(IAWDepr.DateServ, GetNumber(IA4562Sp.StateDispCopyNbr(Index))){n}{t}End If{n}End Sub
Sub DisDTSld_Calculation(Index As Integer){n}{t}If GetNumber(IA4562Sp.DisSeeAttBool) = 1 And Index = 3 Then{n}{t}{t}ReturnVal = ""{n}{t}Else{n}{t}{t}ReturnVal = GetString(IAWDepr.DisDTSld, GetNumber(IA4562Sp.StateDispCopyNbr(Index))){n}{t}End If{n}End Sub
Sub DisFedDep_Calculation(Index As Integer){n}{t}If GetNumber(IA4562Sp.DisSeeAttBool) = 1 And Index = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IAWBPDispSp.TotDisFedDep){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAWDepr.SPDisFedDep, GetNumber(IA4562Sp.StateDispCopyNbr(Index))){n}{t}End If{n}End Sub
Sub DisIADep_Calculation(Index As Integer){n}{t}If GetNumber(IA4562Sp.DisSeeAttBool) = 1 And Index = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IAWBPDispSp.TotDisIADep){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAWDepr.SPDisIADep, GetNumber(IA4562Sp.StateDispCopyNbr(Index))){n}{t}End If{n}End Sub
Sub DisPropDesc_Calculation(Index As Integer){n}{t}If GetNumber(IA4562Sp.DisSeeAttBool) = 1 And Index = 3 Then{n}{t}{t}ReturnVal = "See Stmt Att."{n}{t}Else{n}{t}{t}ReturnVal = GetString(IAWDepr.PropDesc, GetNumber(IA4562Sp.StateDispCopyNbr(Index))){n}{t}End If{n}End Sub
Sub DisSeeAttBool_Calculation(){n}{t}If GetNumber(IA4562Sp.StateDispNbr) > 4 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Fed179_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}{n}{t}Stuff = Index - GetNumber(IA4562PIV.SpCopy){n}{t}{n}{t}If GetNumber(IA4562PIV.SpCopy) = 1 And Index = 0 Then{n}{t}{t}ReturnVal = GetCurrency(IA4562PIV.SPLine1){n}{t}ElseIf GetNumber(IA4562Sp.DepSeeAttBool) = 1 And Index = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IAWBPDepSp.TotFed179){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAWDepr.SPFed179, GetNumber(IA4562Sp.StateDeprCopyNbr(Stuff))){n}{t}End If{n}End Sub
Sub FedDepDed_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}{n}{t}Stuff = Index - GetNumber(IA4562PIV.SpCopy){n}{t}{n}{t}If GetNumber(IA4562PIV.SpCopy) = 1 And Index = 0 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetNumber(IA4562Sp.DepSeeAttBool) = 1 And Index = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IAWBPDepSp.TotFDD){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAWDepr.SPFedDepDed, GetNumber(IA4562Sp.StateDeprCopyNbr(Stuff))){n}{t}End If{n}End Sub
Sub IA179_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}{n}{t}Stuff = Index - GetNumber(IA4562PIV.SpCopy){n}{t}{n}{t}If GetNumber(IA4562PIV.SpCopy) = 1 And Index = 0 Then{n}{t}{t}ReturnVal = GetCurrency(IA4562PIV.SPPartIV179){n}{t}ElseIf GetNumber(IA4562Sp.DepSeeAttBool) = 1 And Index = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IAWBPDepSp.TotIA179){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAWDepr.SPIA179, GetNumber(IA4562Sp.StateDeprCopyNbr(Stuff))){n}{t}End If{n}End Sub
Sub Life_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}{n}{t}Stuff = Index - GetNumber(IA4562PIV.SpCopy){n}{t}{n}{t}If GetNumber(IA4562PIV.SpCopy) = 1 And Index = 0 Then{n}{t}{t}ReturnVal = ""{n}{t}ElseIf GetNumber(IA4562Sp.DepSeeAttBool) = 1 And Index = 3 Then{n}{t}{t}ReturnVal = ""{n}{t}Else{n}{t}{t}ReturnVal = GetString(IAWDepr.Life, GetNumber(IA4562Sp.StateDeprCopyNbr(Stuff))){n}{t}End If{n}End Sub
Sub MACRSIA_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}{n}{t}Stuff = Index - GetNumber(IA4562PIV.SpCopy){n}{t}{n}{t}If GetNumber(IA4562PIV.SpCopy) = 1 And Index = 0 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetNumber(IA4562Sp.DepSeeAttBool) = 1 And Index = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IAWBPDepSp.TotMACRS){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAWDepr.SPMACRSIA, GetNumber(IA4562Sp.StateDeprCopyNbr(Stuff))){n}{t}End If{n}End Sub
Sub Names_Calculation(){n}{t}ReturnVal = GetString(IARequired.SPCombName){n}End Sub
Sub PrIA4562_Calculation(){n}{t}If GetCurrency(IA4562Sp.TotFed179) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA4562Sp.TotFDD) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA4562Sp.TotIA179) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA4562Sp.TotMACRS) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA4562Sp.TotDisAdj) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub PropDesc_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}{n}{t}Stuff = Index - GetNumber(IA4562PIV.SpCopy){n}{t}{n}{t}If GetNumber(IA4562PIV.SpCopy) = 1 And Index = 0 Then{n}{t}{t}ReturnVal = GetString(IA4562PIV.SPPropDescr){n}{t}ElseIf GetNumber(IA4562Sp.DepSeeAttBool) = 1 And Index = 3 Then{n}{t}{t}ReturnVal = "See Stmt Att."{n}{t}Else{n}{t}{t}ReturnVal = GetString(IAWDepr.PropDesc, GetNumber(IA4562Sp.StateDeprCopyNbr(Stuff))){n}{t}End If{n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IAF1040.SpouseSSN){n}End Sub
Sub StateDeprCopyNbr_Calculation(Index As Integer){n}{t}Dim count As Long{n}{t}Dim max As Long{n}{t}Dim listedcount As Long{n}{t}{n}{t}listedcount = 0{n}{t}max = GetAllCopies(IAWDepr){n}{t}count = 0{n}{t}{n}{t}Do While count < max{n}{t}{t}count = count + 1{n}{t}{t}If GetBool(IAWDepr.SpCopy, count) = True Then{n}{t}{t}{t}If listedcount = Index Then{n}{t}{t}{t}{t}ReturnVal = count{n}{t}{t}{t}Else{n}{t}{t}{t}{t}listedcount = listedcount + 1{n}{t}{t}{t}End If{n}{t}{t}End If{n}{t}Loop{n}{t}{n}{t}ReturnVal = 0{n}{t}{n}End Sub
Sub StateDeprNbr_Calculation(){n}{t}Dim count As Integer{n}{t}Dim Lim As Integer{n}{t}Dim Total As Integer{n}{t}{n}{t}Lim = GetAllCopies(IAWDepr){n}{t}count = 1{n}{t}Total = 0{n}{t}{n}{t}Do While count <= Lim{n}{t}{t}If GetBool(IAWDepr.SpCopy, count) = True Then{n}{t}{t}{t}Total = Total + 1{n}{t}{t}Else{n}{t}{t}{t}Total = Total{n}{t}{t}End If{n}{t}{t}{n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = Total{n}End Sub
Sub StateDispCopyNbr_Calculation(Index As Integer){n}{t}Dim count As Long{n}{t}Dim max As Long{n}{t}Dim listedcount As Long{n}{t}{n}{t}listedcount = 0{n}{t}max = GetAllCopies(IAWDepr){n}{t}count = 0{n}{t}{n}{t}Do While count < max{n}{t}{t}count = count + 1{n}{t}{t}If GetBool(IAWDepr.SpCopyDisp, count) = True Then{n}{t}{t}{t}If listedcount = Index Then{n}{t}{t}{t}{t}ReturnVal = count{n}{t}{t}{t}Else{n}{t}{t}{t}{t}listedcount = listedcount + 1{n}{t}{t}{t}End If{n}{t}{t}End If{n}{t}Loop{n}{t}{n}{t}ReturnVal = 0{n}{n}End Sub
Sub StateDispNbr_Calculation(){n}{t}Dim count As Integer{n}{t}Dim Lim As Integer{n}{t}Dim Total As Integer{n}{t}{n}{t}Lim = GetAllCopies(IAWDepr){n}{t}count = 1{n}{t}Total = 0{n}{t}{n}{t}Do While count <= Lim{n}{t}{t}If GetBool(IAWDepr.SpCopyDisp, count) = True Then{n}{t}{t}{t}Total = Total + 1{n}{t}{t}Else{n}{t}{t}{t}Total = Total{n}{t}{t}End If{n}{t}{t}{n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = Total{n}{t}{n}End Sub
Sub TotColF_Calculation(){n}{t}ReturnVal = GetCurrency(IA4562Sp.TotFed179) + GetCurrency(IA4562Sp.TotFDD){n}End Sub
Sub TotFed179_Calculation(){n}{t}Dim count As Integer{n}{t}Dim SubTot As Currency{n}{n}{t}count = 0{n}{t}SubTot = 0{n}{n}{t}Do While count < 4{n}{t}{t}SubTot = SubTot + GetCurrency(IA4562Sp.Fed179(count)){n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = SubTot{n}{n}End Sub
Sub TotIA179_Calculation(){n}{t}Dim count As Integer{n}{t}Dim SubTot As Currency{n}{n}{t}count = 0{n}{t}SubTot = 0{n}{n}{t}Do While count < 4{n}{t}{t}SubTot = SubTot + GetCurrency(IA4562Sp.IA179(count)){n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = SubTot{n}{n}End Sub
Sub TotP2ColF_Calculation(){n}{t}ReturnVal = GetCurrency(IA4562Sp.TotDisAdj){n}End Sub
Sub TotColI_Calculation(){n}{t}ReturnVal = GetCurrency(IA4562Sp.TotIA179) + GetCurrency(IA4562Sp.TotMACRS){n}End Sub
Sub TotDepAdj_Calculation(){n}{t}ReturnVal = GetCurrency(IA4562Sp.DepAdj) + GetCurrency(IA4562Sp.TotP2ColF){n}End Sub
Sub TotDisAdj_Calculation(){n}{t}Dim count As Integer{n}{t}Dim SubTot As Currency{n}{n}{t}count = 0{n}{t}SubTot = 0{n}{n}{t}Do While count < 4{n}{t}{t}SubTot = SubTot + GetCurrency(IA4562Sp.DisAdj(count)){n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = SubTot{n}{n}End Sub
Sub TotDisFedDep_Calculation(){n}{t}Dim count As Integer{n}{t}Dim SubTot As Currency{n}{n}{t}count = 0{n}{t}SubTot = 0{n}{n}{t}Do While count < 4{n}{t}{t}SubTot = SubTot + GetCurrency(IA4562Sp.DisFedDep(count)){n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = SubTot{n}{t}{n}End Sub
Sub TotDisIADep_Calculation(){n}{t}Dim count As Integer{n}{t}Dim SubTot As Currency{n}{n}{t}count = 0{n}{t}SubTot = 0{n}{n}{t}Do While count < 4{n}{t}{t}SubTot = SubTot + GetCurrency(IA4562Sp.DisIADep(count)){n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = SubTot{n}{t}{n}End Sub
Sub TotFDD_Calculation(){n}{t}Dim count As Integer{n}{t}Dim SubTot As Currency{n}{n}{t}count = 0{n}{t}SubTot = 0{n}{n}{t}Do While count < 4{n}{t}{t}SubTot = SubTot + GetCurrency(IA4562Sp.FedDepDed(count)){n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = SubTot{n}{n}End Sub
Sub TotMACRS_Calculation(){n}{t}Dim count As Integer{n}{t}Dim SubTot As Currency{n}{n}{t}count = 0{n}{t}SubTot = 0{n}{n}{t}Do While count < 4{n}{t}{t}SubTot = SubTot + GetCurrency(IA4562Sp.MACRSIA(count)){n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = SubTot{n}{n}End SubSub AdjAMTInc1_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA6251.AMTTaxInc) - GetCurrency(IA6251.Exemption2)){n}End Sub
Sub AdjAMTInc2_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA6251.AMTTaxInc) - GetCurrency(IA6251.AdjExempt)){n}End Sub
Sub AdjExempt_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA6251.Exemption1) - GetCurrency(IA6251.Multiply1)){n}End Sub
Sub AdjGain_Calculation(){n}{t}ReturnVal = GetCurrency(USF6251.AdjGain){n}End Sub
Sub Alert10_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}If GetBool(IA6251Sp.SpUserMod) = True Then{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}ElseIf GetCurrency(USF6251.AMT) > 0 Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}ElseIf GetBool(IA6251.EFile) = True Or GetBool(IA6251Sp.EFile) = True Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert20_Calculation(){n}'no AMT on bonus depr assets, believe there could be on 2018 nonconforming assets so should factor in IAWDepr.IANonConformDiffs{n}{t}If GetNumber(IA6251.DoNotComplete) = 1 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAWDepr.FedStSec179) > 0 Or GetBool(IAWDepr.IANonConformDiffs) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert30_Calculation(){n}{t}If GetNumber(IA6251.DoNotComplete) = 1 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAF1040.CombMFS) = True And (GetBool(IAWDepr.FedStSec179) > 0 Or GetBool(IAWDepr.IANonConformDiffs) > 0) Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert40_Calculation(){n}{t}Dim MortIntAdj As Currency{n}{t}{n}{t}MortIntAdj = GetCurrency(IAW6251MortInt.MortInt98) + GetCurrency(IAW6251MortInt.RefinInt) + GetCurrency(IAW6251MortInt.OthInt){n}{t}{n}{t}If GetBool(IAW6251MortInt.OffMort) = False And GetCurrency(IAW6251MortInt.TotMortInt) <> 0 And MortIntAdj = 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub AMT_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA6251.TentAMT) - GetCurrency(IA6251.RegTax)){n}End Sub
Sub AMTInc_Calculation(){n}{t}ReturnVal = GetCurrency(IA6251.Med) + GetCurrency(IA6251.Taxes) + GetCurrency(IA6251.Int) + GetCurrency(IA6251.MiscDed) + GetCurrency(IA6251.ItmLimit) + GetCurrency(IA6251.TaxRfd) + GetCurrency(IA6251.InvInt) + GetCurrency(IA6251.Sec1202) + GetCurrency(IA6251.ISO) + GetCurrency(IA6251.Est) + GetCurrency(IA6251.LargePart) + GetCurrency(IA6251.AdjGain) + GetCurrency(IA6251.Post86Depr) + GetCurrency(IA6251.PALS) + GetCurrency(IA6251.LossLim) + GetCurrency(IA6251.Circ) + GetCurrency(IA6251.LTContr) + GetCurrency(IA6251.Mining) + GetCurrency(IA6251.Research) + GetCurrency(IA6251.Install) + GetCurrency(IA6251.RelAdj){n}End Sub
Sub AMTTaxInc_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA6251.Subtotal) - GetCurrency(IA6251.LimAMTNOL)){n}End Sub
Sub AskDepr_Calculation(){n}'no AMT on bonus depr assets, believe there could be on 2018 nonconforming assets so should factor in IAWDepr.IANonConformDiffs{n}{t}If GetBool(IAWDepr.FedStSec179) > 0 Or GetBool(IAWDepr.IANonConformDiffs) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub AskMortInt_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = True Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAF1040.ItemCheck) = True Then{n}{t}{t}If GetCurrency(IASchA.Mort) <> 0 Or GetCurrency(IASchA.MortNot) <> 0 Or GetCurrency(IASchA.PtsNot) <> 0 Or GetCurrency(IASchA.MtgePrem) <> 0 Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Circ_Calculation(){n}{t}ReturnVal = GetCurrency(USF6251.Circ){n}End Sub
Sub Description_Calculation(){n}{t}Dim Total As Currency{n}{t}{n}{t}Total = GetCurrency(IA6251.TotAMT){n}{t}{n}{t}ReturnVal = CStr(Total) & " AMT"{n}End Sub
Sub DoNotComplete_Calculation(){n}{t}If IAFS() = 1 Then{n}{t}{t}If GetBool(IAF1040.Over65) = True And GetCurrency(IAF1040.ANet) <= 24000@ Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}ElseIf GetCurrency(IAF1040.ANet) <= 9000@ Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}ElseIf GetBool(IAF1040.Over65) = True And GetCurrency(IARequired.TotNI) <= 32000@ Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IARequired.TotNI) <= 13500@ Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub EFile_Calculation(){n}{t}If GetNumber(IA6251.DoNotComplete) = 1 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IA6251.Print) = True Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA6251.Med) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA6251.Taxes) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA6251.Int) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA6251.MiscDed) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA6251.ItmLimit) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA6251.TaxRfd) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA6251.InvInt) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA6251.Sec1202) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA6251.ISO) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA6251.Est) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA6251.LargePart) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA6251.AdjGain) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA6251.Post86Depr) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA6251.PALS) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA6251.LossLim) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA6251.Circ) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA6251.LTContr) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA6251.Mining) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA6251.Research) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA6251.Install) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA6251.RelAdj) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Est_Calculation(){n}{t}ReturnVal = GetCurrency(USF6251.Est){n}End Sub
Sub Exemption1_Calculation(){n}{t}If GetBool(IAF1040.MFJ) = True Then{n}{t}{t}ReturnVal = 35000@{n}{t}ElseIf GetBool(IAF1040.CombMFS) = True Or GetBool(IAF1040.MFS) = True Then{n}{t}{t}ReturnVal = 17500@{n}{t}Else{n}{t}{t}ReturnVal = 26000@{n}{t}End If{n}End Sub
Sub Exemption2_Calculation(){n}{t}If GetBool(IAF1040.MFJ) = True Then{n}{t}{t}ReturnVal = 150000@{n}{t}ElseIf GetBool(IAF1040.CombMFS) = True Or GetBool(IAF1040.MFS) = True Then{n}{t}{t}ReturnVal = 75000@{n}{t}Else{n}{t}{t}ReturnVal = 112500@{n}{t}End If{n}End Sub
Sub Install_Calculation(){n}{t}ReturnVal = GetCurrency(USF6251.Install) *  -1{n}End Sub
Sub Int_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True And GetBool(IAF1040.ItemCheck) = True Then{n}{t}{t}ReturnVal = CDollar(GetFloat(IASchA.Perc) * GetFloat(IAW6251MortInt.AMTInt)){n}{t}ElseIf GetBool(IAF1040.ItemCheck) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAW6251MortInt.AMTInt){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub InvInt_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True And GetBool(IAF1040.ItemCheck) = True Then{n}{t}{t}ReturnVal = CDollar(GetFloat(IASchA.Perc) * GetFloat(USF6251.InvInt)){n}{t}ElseIf GetBool(IAF1040.ItemCheck) = True Then{n}{t}{t}ReturnVal = GetCurrency(USF6251.InvInt){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub ISO_Calculation(){n}{t}ReturnVal = GetCurrency(USF6251.ISO){n}End Sub
Sub ItmLimit_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True And GetBool(IAF1040.ItemCheck) = True Then{n}{t}{t}ReturnVal = CDollar(GetFloat(IASchA.Perc) * GetFloat(IAWItmDed.Limit)) *  -1{n}{t}ElseIf GetBool(IAF1040.ItemCheck) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWItmDed.Limit) *  -1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub LargePart_Calculation(){n}{t}ReturnVal = GetCurrency(USF6251.LargePart){n}End Sub
Sub LimAMTNOL_Calculation(){n}{t}Dim TEst As Currency{n}{t}Dim Unlim As Currency{n}{t}Dim AMTL As Currency{n}{t}{n}{t}TEst = GetCurrency(IA6251.Subtotal){n}{t}Unlim = Abs(GetCurrency(IA6251.AMTNOL)){n}{t}{n}{t}If TEst > 0 Then{n}{t}{t}AMTL = MinValue(Unlim, CDollar(CDbl(TEst) * 0.9)){n}{t}Else{n}{t}{t}AMTL = 0{n}{t}End If{n}{t}{n}{t}ReturnVal = AMTL{n}End Sub
Sub LossLim_Calculation(){n}{t}ReturnVal = GetCurrency(USF6251.LossLim){n}End Sub
Sub LTContr_Calculation(){n}{t}ReturnVal = GetCurrency(USF6251.LTContr){n}End Sub
Sub Med_Calculation(){n}{t}ReturnVal = 0{n}End Sub
Sub Mining_Calculation(){n}{t}ReturnVal = GetCurrency(USF6251.Mining){n}End Sub
Sub MiscDed_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True And GetBool(IAF1040.ItemCheck) = True Then{n}{t}{t}ReturnVal = CDollar(GetFloat(IASchA.Perc) * GetFloat(IASchA.AllowExp)){n}{t}ElseIf GetBool(IAF1040.ItemCheck) = True Then{n}{t}{t}ReturnVal = GetCurrency(IASchA.AllowExp){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Multiply1_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IA6251.AdjAMTInc1) * 0.25){n}End Sub
Sub Names_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = GetString(IARequired.TPCombName){n}{t}Else{n}{t}{t}ReturnVal = GetString(IARequired.CombNames){n}{t}End If{n}End Sub
Sub NOL_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAOthAdj.TIANOL){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAOthAdj.TIANOL) + GetCurrency(IAOthAdj.SIANOL){n}{t}End If{n}End Sub
Sub PALS_Calculation(){n}{t}ReturnVal = GetCurrency(USF6251.PALs){n}End Sub
Sub Post86Depr_Calculation(){n}'review new line 13 instructions and determine if we need to make an adjustment for any IA depr differences or if we should add an alert and note in Q&A{n}'For 2017 added alerts and Q&A for taxpayer and spouse 6251{n}{t}ReturnVal = GetCurrency(USF6251.Post86Depr){n}End Sub
Sub PrInstall_Calculation(){n}{t}ReturnVal = Abs(GetCurrency(IA6251.Install)){n}End Sub
Sub Print_Calculation(){n}{t}If GetCurrency(IA6251.TotAMT) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub PrItmLimit_Calculation(){n}{t}ReturnVal = Abs(GetCurrency(IA6251.ItmLimit)){n}End Sub
Sub PrTaxRfd_Calculation(){n}{t}ReturnVal = Abs(GetCurrency(IA6251.TaxRfd)){n}End Sub
Sub PYNRAMT_Calculation(){n}{t}ReturnVal = MaxValue(0, CDollar(GetFloat(IA6251.AMT) * GetFloat(IA6251.PYNRRatio))){n}End Sub
Sub PYNRAMTIncNI_Calculation(){n}{t}If GetBool(IAF126.TpPYNR) = True Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(IAF126.ANet) + GetCurrency(IA6251.PYNRAMTInc)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub PYNRRatio_Calculation(){n}{t}If GetCurrency(IA6251.TotAMTInc) = 0 Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = MinValue(1#, Round(GetFloat(IA6251.PYNRAMTIncNI) / GetFloat(IA6251.TotAMTInc), 3)){n}{t}End If{n}End Sub
Sub RegTax_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAF1040.AAltTax) - GetCurrency(IAF1040.AExemCr)){n}End Sub
Sub RelAdj_Calculation(){n}'need to verify if should remove fed 6251 line 3 amounts for .F461 and .F8990 and .stdDed, seems like should remove since these were not preference items in the past and are only being made on federal due to TCJA and both of these are Iowa nonconformity items.{n}'.LargePart is on line 11 of IA 6251{n}{t}ReturnVal = GetCurrency(USF6251.RelAdj) - GetCurrency(USF6251.LargePart) - GetCurrency(USF6251.F461) - GetCurrency(USF6251.F8990) - GetCurrency(USF6251.StdDed){n}End Sub
Sub Research_Calculation(){n}{t}ReturnVal = GetCurrency(USF6251.Research){n}End Sub
Sub Sec1202_Calculation(){n}{t}ReturnVal = GetCurrency(USF6251.Sec1202){n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IAF1040.SSN){n}End Sub
Sub Subtotal_Calculation(){n}{t}ReturnVal = GetCurrency(IA6251.AMTInc) + GetCurrency(IA6251.TaxInc) + GetCurrency(IA6251.NOL){n}End Sub
Sub Taxes_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True And GetBool(IAF1040.ItemCheck) = True Then{n}{t}{t}ReturnVal = CDollar(GetFloat(IASchA.Perc) * GetFloat(IASchA.TaxPd)){n}{t}ElseIf GetBool(IAF1040.ItemCheck) = True Then{n}{t}{t}ReturnVal = GetCurrency(IASchA.TaxPd){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TaxInc_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.ATaxInc){n}End Sub
Sub TaxRfd_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.ARefund) *  -1{n}End Sub
Sub TentAMT_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IA6251.AdjAMTInc2) * 0.067){n}End Sub
Sub TotAMT_Calculation(){n}{t}If GetNumber(IA6251.DoNotComplete) = 1 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAF126.TpPYNR) = True Then{n}{t}{t}ReturnVal = GetCurrency(IA6251.PYNRAMT){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IA6251.AMT){n}{t}End If{n}End Sub
Sub TotAMTInc_Calculation(){n}{t}If GetBool(IAF126.TpPYNR) = True Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(IAF126.AAllSource) + GetCurrency(IA6251.AMTInc)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End SubSub AdjAMTInc1_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA6251Sp.AMTTaxInc) - GetCurrency(IA6251Sp.Exemption2)){n}End Sub
Sub AdjAMTInc2_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA6251Sp.AMTTaxInc) - GetCurrency(IA6251Sp.AdjExempt)){n}End Sub
Sub AdjExempt_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA6251Sp.Exemption1) - GetCurrency(IA6251Sp.Multiply1)){n}End Sub
Sub AdjGain_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(USF6251.AdjGain) - GetCurrency(IA6251.AdjGain)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub AMT_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA6251Sp.TentAMT) - GetCurrency(IA6251Sp.RegTax)){n}End Sub
Sub AMTInc_Calculation(){n}{t}ReturnVal = GetCurrency(IA6251Sp.Med) + GetCurrency(IA6251Sp.Taxes) + GetCurrency(IA6251Sp.Int) + GetCurrency(IA6251Sp.MiscDed) + GetCurrency(IA6251Sp.ItmLimit) + GetCurrency(IA6251Sp.TaxRfd) + GetCurrency(IA6251Sp.InvInt) + GetCurrency(IA6251Sp.Sec1202) + GetCurrency(IA6251Sp.ISO) + GetCurrency(IA6251Sp.Est) + GetCurrency(IA6251Sp.LargePart) + GetCurrency(IA6251Sp.AdjGain) + GetCurrency(IA6251Sp.Post86Depr) + GetCurrency(IA6251Sp.PALS) + GetCurrency(IA6251Sp.LossLim) + GetCurrency(IA6251Sp.Circ) + GetCurrency(IA6251Sp.LTContr) + GetCurrency(IA6251Sp.Mining) + GetCurrency(IA6251Sp.Research) + GetCurrency(IA6251Sp.Install) + GetCurrency(IA6251Sp.RelAdj){n}End Sub
Sub AMTTaxInc_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA6251Sp.Subtotal) - GetCurrency(IA6251Sp.LimAMTNOL)){n}End Sub
Sub Circ_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(USF6251.Circ) - GetCurrency(IA6251.Circ)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Description_Calculation(){n}{t}Dim Total As Currency{n}{t}{n}{t}Total = GetCurrency(IA6251Sp.TotAMT){n}{t}{n}{t}ReturnVal = CStr(Total) & " AMT"{n}End Sub
Sub EFile_Calculation(){n}{t}If GetNumber(IA6251.DoNotComplete) = 1 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IA6251Sp.Print) = True Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA6251Sp.Med) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA6251Sp.Taxes) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA6251Sp.Int) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA6251Sp.MiscDed) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA6251Sp.ItmLimit) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA6251Sp.TaxRfd) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA6251Sp.InvInt) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA6251Sp.Sec1202) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA6251Sp.ISO) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA6251Sp.Est) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA6251Sp.LargePart) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA6251Sp.AdjGain) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA6251Sp.Post86Depr) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA6251Sp.PALS) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA6251Sp.LossLim) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA6251Sp.Circ) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA6251Sp.LTContr) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA6251Sp.Mining) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA6251Sp.Research) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA6251Sp.Install) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA6251Sp.RelAdj) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Est_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(USF6251.Est) - GetCurrency(IA6251.Est)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Exemption1_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = 17500@{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Exemption2_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = 75000@{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Install_Calculation(){n}{t}Dim FedInstall As Currency{n}{t}{n}{t}FedInstall = GetCurrency(USF6251.Install) *  -1{n}{n}{t}If GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = FedInstall - GetCurrency(IA6251.Install){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Int_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True And GetBool(IAF1040.ItemCheck) = True Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(IAW6251MortInt.AMTInt) - GetCurrency(IA6251.Int)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub InvInt_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True And GetBool(IAF1040.ItemCheck) = True Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(USF6251.InvInt) - GetCurrency(IA6251.InvInt)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub ISO_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(USF6251.ISO) - GetCurrency(IA6251.ISO)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub ItmLimit_Calculation(){n}{t}Dim Limit As Currency{n}{t}{n}{t}Limit = GetCurrency(IAWItmDed.Limit) *  -1{n}{n}{t}If GetBool(IAF1040.CombMFS) = True And GetBool(IAF1040.ItemCheck) = True Then{n}{t}{t}ReturnVal = Limit - GetCurrency(IA6251.ItmLimit){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub LargePart_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(USF6251.LargePart) - GetCurrency(IA6251.LargePart)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub LimAMTNOL_Calculation(){n}{t}Dim TEst As Currency{n}{t}Dim Unlim As Currency{n}{t}Dim AMTL As Currency{n}{t}{n}{t}TEst = GetCurrency(IA6251Sp.Subtotal){n}{t}Unlim = Abs(GetCurrency(IA6251Sp.AMTNOL)){n}{t}{n}{t}If TEst > 0 Then{n}{t}{t}AMTL = MinValue(Unlim, CDollar(CDbl(TEst) * 0.9)){n}{t}Else{n}{t}{t}AMTL = 0{n}{t}End If{n}{t}{n}{t}If GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = AMTL{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub LossLim_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(USF6251.LossLim) - GetCurrency(IA6251.LossLim)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub LTContr_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(USF6251.LTContr) - GetCurrency(IA6251.LTContr)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Med_Calculation(){n}{t}ReturnVal = 0{n}End Sub
Sub Mining_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(USF6251.Mining) - GetCurrency(IA6251.Mining)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub MiscDed_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True And GetBool(IAF1040.ItemCheck) = True Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(IASchA.AllowExp) - GetCurrency(IA6251.MiscDed)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Multiply1_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IA6251Sp.AdjAMTInc1) * 0.25){n}End Sub
Sub Names_Calculation(){n}{t}ReturnVal = GetString(IARequired.SPCombName){n}End Sub
Sub NOL_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAOthAdj.SIANOL){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub PALS_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(USF6251.PALS) - GetCurrency(IA6251.PALS)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Post86Depr_Calculation(){n}'review new line 13 instructions and determine if we need to make an adjustment for any IA depr differences or if we should add an alert and note in Q&A{n}'For 2017 changed to default calc this field and interview and added an alert{n}{t}If GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(USF6251.Post86Depr) - GetCurrency(IA6251.Post86Depr)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub PrInstall_Calculation(){n}{t}ReturnVal = Abs(GetCurrency(IA6251Sp.Install)){n}End Sub
Sub Print_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = False Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetCurrency(IA6251Sp.TotAMT) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub PrItmLimit_Calculation(){n}{t}ReturnVal = Abs(GetCurrency(IA6251Sp.ItmLimit)){n}End Sub
Sub PrTaxRfd_Calculation(){n}{t}ReturnVal = Abs(GetCurrency(IA6251Sp.TaxRfd)){n}End Sub
Sub PYNRAMT_Calculation(){n}{t}ReturnVal = MaxValue(0, CDollar(GetFloat(IA6251Sp.AMT) * GetFloat(IA6251Sp.PYNRRatio))){n}End Sub
Sub PYNRAMTIncNI_Calculation(){n}{t}If GetBool(IAF126.SpPYNR) = True Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(IAF126.BNet) + GetCurrency(IA6251Sp.PYNRAMTInc)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub PYNRRatio_Calculation(){n}{t}If GetCurrency(IA6251Sp.TotAMTInc) = 0 Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = MinValue(1#, Round(GetFloat(IA6251Sp.PYNRAMTIncNI) / GetFloat(IA6251Sp.TotAMTInc), 3)){n}{t}End If{n}End Sub
Sub RegTax_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(IAF1040.BAltTax) - GetCurrency(IAF1040.BExemCr)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub RelAdj_Calculation(){n}{t}Dim IARelAdj As Currency{n}{t}{n}{t}IARelAdj = GetCurrency(USF6251.RelAdj) - GetCurrency(USF6251.LargePart) - GetCurrency(USF6251.F461) - GetCurrency(USF6251.F8990) - GetCurrency(USF6251.StdDed){n}{t}{n}{t}If GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = MaxValue(0, IARelAdj - GetCurrency(IA6251.RelAdj)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Research_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(USF6251.Research) - GetCurrency(IA6251.Research)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Sec1202_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(USF6251.Sec1202) - GetCurrency(IA6251.Sec1202)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SpUserMod_Calculation(){n}{t}If GetStatus(UserModifiedStatus) = True Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IAF1040.SpouseSSN){n}End Sub
Sub Subtotal_Calculation(){n}{t}ReturnVal = GetCurrency(IA6251Sp.AMTInc) + GetCurrency(IA6251Sp.TaxInc) + GetCurrency(IA6251Sp.NOL){n}End Sub
Sub Taxes_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True And GetBool(IAF1040.ItemCheck) = True Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(IASchA.TaxPd) - GetCurrency(IA6251.Taxes)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TaxInc_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BTaxInc){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TaxRfd_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BRefund) *  -1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TentAMT_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IA6251Sp.AdjAMTInc2) * 0.067){n}End Sub
Sub TotAMT_Calculation(){n}{t}If GetNumber(IA6251.DoNotComplete) = 1 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAF1040.CombMFS) = False Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAF126.SpPYNR) = True Then{n}{t}{t}ReturnVal = GetCurrency(IA6251Sp.PYNRAMT){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IA6251Sp.AMT){n}{t}End If{n}End Sub
Sub TotAMTInc_Calculation(){n}{t}If GetBool(IAF126.SpPYNR) = True Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(IAF126.BAllSource) + GetCurrency(IA6251Sp.AMTInc)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End SubSub AMTCR_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IA8801Sp.MaxAMT), GetCurrency(IA8801Sp.CYRegTax)){n}End Sub
Sub ApporRegTx_Calculation(){n}{t}ReturnVal = GetCurrency(IA8801Sp.CYTax) - GetCurrency(IA8801Sp.PYNRCr){n}End Sub
Sub CYAMT_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = False Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAF126.SpPYNR) = True Then{n}{t}{t}ReturnVal = MaxValue(0, CDollar(GetFloat(IA6251Sp.TentAMT) * GetFloat(IA6251Sp.PYNRRatio))){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IA6251Sp.TentAMT){n}{t}End If{n}End Sub
Sub CYCarryforward_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA8801Sp.TotalPYAMT) - GetCurrency(IA8801Sp.AMTCR)){n}End Sub
Sub CYRegTax_Calculation(){n}{t}If GetCurrency(IA8801Sp.ExcRegTax) = 0 Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(IA8801Sp.CYTax) - GetCurrency(IA8801Sp.TotCr)){n}{t}End If{n}End Sub
Sub CYTax_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BAltTax){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Description_Calculation(){n}{t}Dim Total As Currency{n}{t}{n}{t}Total = GetCurrency(IA8801Sp.AMTCR){n}{t}{n}{t}ReturnVal = CStr(Total) & " Credit"{n}End Sub
Sub EFile_Calculation(){n}{t}If GetCurrency(IA8801Sp.AMTCR) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub ExcRegTax_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA8801Sp.ApporRegTx) - GetCurrency(IA8801Sp.CYAMT)){n}End Sub
Sub MaxAMT_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IA8801Sp.TotalPYAMT), GetCurrency(IA8801Sp.ExcRegTax)){n}End Sub
Sub Names_Calculation(){n}{t}ReturnVal = GetString(IARequired.SPCombName){n}End Sub
Sub Print_Calculation(){n}{t}If GetCurrency(IA8801Sp.AMTCR) > 0 Or GetCurrency(IA8801Sp.CYCarryforward) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub PYAMT_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = False Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetString(USZIA1040.IAPYFS) = GetString(IARequired.FilingStatus) Then{n}{t}{t}ReturnVal = GetCurrency(USZIA1040.IAPYMinTaxB){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub PYCarryforward_Calculation(){n}{t}ReturnVal = GetCurrency(USZIA1040.IAPY8801CFSp){n}End Sub
Sub PYNRCr_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BCrNon){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IAF1040.SpouseSSN){n}End Sub
Sub Sum148Cr_Calculation(){n}{t}If GetCurrency(IA8801Sp.ExcRegTax) = 0 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = GetCurrency(IA148Sp.TotNonRefNo8801){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SumCr_Calculation(){n}{t}If GetCurrency(IA8801Sp.ExcRegTax) = 0 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BCredits) + GetCurrency(IAF1040.BCrNon) + GetCurrency(IAF1040.BOutState){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TotalPYAMT_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = GetCurrency(IA8801Sp.PYAMT) + GetCurrency(IA8801Sp.PYCarryforward){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TotCr_Calculation(){n}{t}ReturnVal = GetCurrency(IA8801Sp.SumCr) + GetCurrency(IA8801Sp.Sum148Cr){n}End SubSub Description_Calculation(){n}{t}If GetNumber(USWAddDep.GrandTotDeps) = 1 Then{n}{t}{t}ReturnVal = CStr(GetNumber(USWAddDep.GrandTotDeps)) & " Dependent"{n}{t}ElseIf GetNumber(USWAddDep.GrandTotDeps) > 1 Then{n}{t}{t}ReturnVal = CStr(GetNumber(USWAddDep.GrandTotDeps)) & " Dependents"{n}{t}Else{n}{t}{t}ReturnVal = "Dependents"{n}{t}End If{n}End Sub
Sub FDepAge_Calculation(Index As Integer){n}{t}Dim max As Long{n}{t}Dim count As Long{n}{t}Dim Hits As Long{n}{t}{n}{t}max = GetAllCopies(USWDependents){n}{t}Hits = 0{n}{t}count = 0{n}{t}{n}{t}Do While count < max{n}{t}{t}count = count + 1{n}{t}{t}If GetNumber(USWDependents.DepQual, count) = 1 Then{n}{t}{t}{t}If Hits = Index Then{n}{t}{t}{t}{t}ReturnVal = GetNumber(USWDependents.DepAge, count){n}{t}{t}{t}Else{n}{t}{t}{t}{t}Hits = Hits + 1{n}{t}{t}{t}End If{n}{t}{t}End If{n}{t}Loop{n}{t}{n}{t}{n}{t}ReturnVal = 0{n}End Sub
Sub FDepLast_Calculation(Index As Integer){n}{t}Dim max As Long{n}{t}Dim count As Long{n}{t}Dim Hits As Long{n}{t}{n}{t}max = GetAllCopies(USWDependents){n}{t}Hits = 0{n}{t}count = 0{n}{t}{n}{t}Do While count < max{n}{t}{t}count = count + 1{n}{t}{t}If GetNumber(USWDependents.DepQual, count) = 1 Then{n}{t}{t}{t}If Hits = Index Then{n}{t}{t}{t}{t}ReturnVal = GetString(USWDependents.DepLast, count){n}{t}{t}{t}Else{n}{t}{t}{t}{t}Hits = Hits + 1{n}{t}{t}{t}End If{n}{t}{t}End If{n}{t}Loop{n}{n}{t}{n}{t}ReturnVal = ""{n}End Sub
Sub FDepName_Calculation(Index As Integer){n}{t}Dim max As Long{n}{t}Dim count As Long{n}{t}Dim Hits As Long{n}{t}{n}{t}max = GetAllCopies(USWDependents){n}{t}Hits = 0{n}{t}count = 0{n}{t}{n}{t}Do While count < max{n}{t}{t}count = count + 1{n}{t}{t}If GetNumber(USWDependents.DepQual, count) = 1 Then{n}{t}{t}{t}If Hits = Index Then{n}{t}{t}{t}{t}ReturnVal = GetString(USWDependents.DepName, count){n}{t}{t}{t}Else{n}{t}{t}{t}{t}Hits = Hits + 1{n}{t}{t}{t}End If{n}{t}{t}End If{n}{t}Loop{n}{n}{t}{n}{t}ReturnVal = ""{n}End Sub
Sub FDepRel_Calculation(Index As Integer){n}{t}Dim max As Long{n}{t}Dim count As Long{n}{t}Dim Hits As Long{n}{t}{n}{t}max = GetAllCopies(USWDependents){n}{t}Hits = 0{n}{t}count = 0{n}{t}{n}{t}Do While count < max{n}{t}{t}count = count + 1{n}{t}{t}If GetNumber(USWDependents.DepQual, count) = 1 Then{n}{t}{t}{t}If Hits = Index Then{n}{t}{t}{t}{t}ReturnVal = GetString(USWDependents.DepRel, count){n}{t}{t}{t}Else{n}{t}{t}{t}{t}Hits = Hits + 1{n}{t}{t}{t}End If{n}{t}{t}End If{n}{t}Loop{n}{n}{t}{n}{t}ReturnVal = ""{n}End Sub
Sub FDEPSSN_Calculation(Index As Integer){n}{t}Dim max As Long{n}{t}Dim count As Long{n}{t}Dim Hits As Long{n}{t}{n}{t}max = GetAllCopies(USWDependents){n}{t}Hits = 0{n}{t}count = 0{n}{t}{n}{t}Do While count < max{n}{t}{t}count = count + 1{n}{t}{t}If GetNumber(USWDependents.DepQual, count) = 1 Then{n}{t}{t}{t}If Hits = Index Then{n}{t}{t}{t}{t}ReturnVal = GetString(USWDependents.DepSSN, count){n}{t}{t}{t}Else{n}{t}{t}{t}{t}Hits = Hits + 1{n}{t}{t}{t}End If{n}{t}{t}End If{n}{t}Loop{n}{t}{n}{t}{n}{t}ReturnVal = ""{n}End Sub
Sub Names_Calculation(){n}{t}ReturnVal = GetString(IARequired.CombNames){n}End Sub
Sub PrintMe_Calculation(){n}{t}If GetString(IAF1040.DepNames) = "See Attached" Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IAF1040.SSN){n}End SubSub Description_Calculation(){n}{t}Dim Total As Currency{n}{t}{n}{t}Total = GetCurrency(IAAddFedTax.TPTotal) + GetCurrency(IAAddFedTax.SPTotal){n}{t}{n}{t}ReturnVal = CStr(Total){n}End Sub
Sub Exist_Calculation(){n}{t}ReturnVal = 1{n}End Sub
Sub Names_Calculation(){n}{t}ReturnVal = GetString(IARequired.CombNames){n}End Sub
Sub NetDue_Calculation(){n}{t}If GetCurrency(USZIA1040.IAPYNetIncB) = 0 And GetCurrency(USZIA1040.IAPYNetIncA) = 0 Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(IAAddFedTax.PyDue) - GetCurrency(IAAddFedTax.PYPen)){n}{t}End If{n}End Sub
Sub PyDue_Calculation(){n}{t}If GetBool(USWSpouse.NonRes) = True Then{n}{t}{t}ReturnVal = GetCurrency(USWRec.PYOweNR){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USWRec.PYOwe){n}{t}End If{n}End Sub
Sub PYExt_Calculation(){n}{t}If GetBool(USWSpouse.NonRes) = True Then{t}{n}{t}{t}ReturnVal = GetCurrency(USWRec.PYExtNR){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USWRec.PYExt){n}{t}End If{n}End Sub
Sub PYPen_Calculation(){n}{t}If GetBool(USWSpouse.NonRes) = True Then{t}{n}{t}{t}ReturnVal = GetCurrency(USWRec.PYPenaltyNR){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USWRec.PYPenalty){n}{t}End If{t}{t}{n}End Sub
Sub SPBalDue_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IARequired.PYRatio) * GetFloat(IAAddFedTax.NetDue)){n}End Sub
Sub SPExcFICA_Calculation(){n}{t}ReturnVal = GetCurrency(USWFICA.SCredit){n}End Sub
Sub SPExt_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IARequired.PYRatio) * GetFloat(IAAddFedTax.PYExt)){n}End Sub
Sub SPName_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.SPCommon){n}End Sub
Sub SPTotal_Calculation(){n}{t}ReturnVal = GetCurrency(IAAddFedTax.SPBalDue) + GetCurrency(IAAddFedTax.SPExt) + GetCurrency(IAAddFedTax.SPFuel) + GetCurrency(IAAddFedTax.SPExcFICA){n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IAF1040.SSN){n}End Sub
Sub TPBalDue_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAAddFedTax.NetDue) - GetCurrency(IAAddFedTax.SPBalDue)){n}End Sub
Sub TPExcFICA_Calculation(){n}{t}ReturnVal = GetCurrency(USWFICA.TCredit){n}End Sub
Sub TPExt_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAAddFedTax.PYExt) - GetCurrency(IAAddFedTax.SPExt)){n}End Sub
Sub TPFuel_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(USF4136.TotalCredit) - GetCurrency(IAAddFedTax.SPFuel)){n}End Sub
Sub TPName_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.TPCommon){n}End Sub
Sub TPTotal_Calculation(){n}{t}ReturnVal = GetCurrency(IAAddFedTax.TPBalDue) + GetCurrency(IAAddFedTax.TPExt) + GetCurrency(IAAddFedTax.TPFuel) + GetCurrency(IAAddFedTax.TPExcFICA){n}End SubSub ChDepCr_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IAChildCredit.FedCredit) * GetFloat(IAChildCredit.Percent)){n}End Sub
Sub Credit_Calculation(Index As Integer){n}{t}If GetCurrency(IAChildCredit.TotNI) < 45000@ And Trim(GetString(IAChildCredit.DepName(Index))) <> "" Then{n}{t}{t}ReturnVal = CDollar(CDbl(MinValue(GetCurrency(IAChildCredit.Expenses(Index)), 1000@)) * 0.25){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub DepName_Calculation(Index As Integer){n}{t}Dim count As Integer{n}{t}Dim Hold As String{n}{t}count = 0{n}{t}Hold = ""{n}{t}{n}  {n}{t}If GetNumber(IAAddDep.FDepAge(0)) > 2 And GetNumber(IAAddDep.FDepAge(0)) < 7 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetString(IAAddDep.FDepName(0)) + " " + GetString(IAAddDep.FDepLast(0)){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetNumber(IAAddDep.FDepAge(1)) > 2 And GetNumber(IAAddDep.FDepAge(1)) < 7 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetString(IAAddDep.FDepName(1)) + " " + GetString(IAAddDep.FDepLast(1)){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetNumber(IAAddDep.FDepAge(2)) > 2 And GetNumber(IAAddDep.FDepAge(2)) < 7 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetString(IAAddDep.FDepName(2)) + " " + GetString(IAAddDep.FDepLast(2)){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetNumber(IAAddDep.FDepAge(3)) > 2 And GetNumber(IAAddDep.FDepAge(3)) < 7 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetString(IAAddDep.FDepName(3)) + " " + GetString(IAAddDep.FDepLast(3)){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetNumber(IAAddDep.FDepAge(4)) > 2 And GetNumber(IAAddDep.FDepAge(4)) < 7 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetString(IAAddDep.FDepName(4)) + " " + GetString(IAAddDep.FDepLast(4)){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetNumber(IAAddDep.FDepAge(5)) > 2 And GetNumber(IAAddDep.FDepAge(5)) < 7 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetString(IAAddDep.FDepName(5)) + " " + GetString(IAAddDep.FDepLast(5)){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetNumber(IAAddDep.FDepAge(6)) > 2 And GetNumber(IAAddDep.FDepAge(6)) < 7 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetString(IAAddDep.FDepName(6)) + " " + GetString(IAAddDep.FDepLast(6)){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetNumber(IAAddDep.FDepAge(7)) > 2 And GetNumber(IAAddDep.FDepAge(7)) < 7 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetString(IAAddDep.FDepName(7)) + " " + GetString(IAAddDep.FDepLast(7)){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetNumber(IAAddDep.FDepAge(8)) > 2 And GetNumber(IAAddDep.FDepAge(8)) < 7 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetString(IAAddDep.FDepName(8)) + " " + GetString(IAAddDep.FDepLast(8)){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetNumber(IAAddDep.FDepAge(9)) > 2 And GetNumber(IAAddDep.FDepAge(9)) < 7 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetString(IAAddDep.FDepName(9)) + " " + GetString(IAAddDep.FDepLast(9)){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetNumber(IAAddDep.FDepAge(10)) > 2 And GetNumber(IAAddDep.FDepAge(10)) < 7 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetString(IAAddDep.FDepName(10)) + " " + GetString(IAAddDep.FDepLast(10)){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetNumber(IAAddDep.FDepAge(11)) > 2 And GetNumber(IAAddDep.FDepAge(11)) < 7 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetString(IAAddDep.FDepName(11)) + " " + GetString(IAAddDep.FDepLast(11)){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetNumber(IAAddDep.FDepAge(12)) > 2 And GetNumber(IAAddDep.FDepAge(12)) < 7 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetString(IAAddDep.FDepName(12)) + " " + GetString(IAAddDep.FDepLast(12)){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetNumber(IAAddDep.FDepAge(13)) > 2 And GetNumber(IAAddDep.FDepAge(13)) < 7 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetString(IAAddDep.FDepName(13)) + " " + GetString(IAAddDep.FDepLast(13)){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetNumber(IAAddDep.FDepAge(14)) > 2 And GetNumber(IAAddDep.FDepAge(14)) < 7 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetString(IAAddDep.FDepName(14)) + " " + GetString(IAAddDep.FDepLast(14)){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}ReturnVal = Hold{n}{t}{n}End Sub
Sub Description_Calculation(){n}{t}Dim TotCR As Currency{n}{t}{n}{t}If GetBool(IAF1040.ChildCareCk) = True Then{n}{t}{t}TotCR = GetCurrency(IAChildCredit.TotChDepCr){n}{t}ElseIf GetBool(IAF1040.EarlyChildCk) = True Then{n}{t}{t}TotCR = GetCurrency(IAChildCredit.TotCR){n}{t}Else{n}{t}{t}TotCR = 0{n}{t}End If{n}{t}{n}{t}ReturnVal = CStr(TotCR){n}End Sub
Sub FedCredit_Calculation(){n}{t}ReturnVal = GetCurrency(USF2441.TentCred){n}End Sub
Sub MFSProRate_Calculation(){n}{t}If IAFS() = 4 Then{n}{t}{t}If GetCurrency(IAF1040.SpIncome) < 0 And GetCurrency(IAF1040.ANet) < 0 Then{n}{t}{t}{t}If GetCurrency(IAF1040.SpIncome) < GetCurrency(IAF1040.ANet) Then{n}{t}{t}{t}{t}ReturnVal = 0{n}{t}{t}{t}Else{n}{t}{t}{t}{t}ReturnVal = 1{n}{t}{t}{t}End If{n}{t}{t}ElseIf GetCurrency(IAF1040.SpIncome) < 0 Then{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}ElseIf GetCurrency(IAF1040.SpIncome) > 0 And GetCurrency(IAChildCredit.MFSTotNet) <= 0 Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}ElseIf GetCurrency(IAChildCredit.MFSTotNet) = 0 Then{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = MaxValue(0, (MinValue(1#, GetFloat(IAF1040.SpIncome) / GetFloat(IAChildCredit.MFSTotNet)))){n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub MFSTotNet_Calculation(){n}{t}If GetBool(IAF1040.MFS) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.ANet) + GetCurrency(IAOthAdj.TIANOL) + GetCurrency(IAF1040.SpIncome){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Names_Calculation(){n}{t}ReturnVal = GetString(IARequired.CombNames){n}End Sub
Sub Percent_Calculation(){n}{t}If GetCurrency(IAChildCredit.TotNI) > 44999@ Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetCurrency(IAChildCredit.TotNI) > 39999@ Then{n}{t}{t}ReturnVal = 0.3{n}{t}ElseIf GetCurrency(IAChildCredit.TotNI) > 34999@ Then{n}{t}{t}ReturnVal = 0.4{n}{t}ElseIf GetCurrency(IAChildCredit.TotNI) > 24999@ Then{n}{t}{t}ReturnVal = 0.5{n}{t}ElseIf GetCurrency(IAChildCredit.TotNI) > 19999@ Then{n}{t}{t}ReturnVal = 0.55{n}{t}ElseIf GetCurrency(IAChildCredit.TotNI) > 9999@ Then{n}{t}{t}ReturnVal = 0.65{n}{t}Else{n}{t}{t}ReturnVal = 0.75{n}{t}End If{n}End Sub
Sub PYNRChDepCr_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IAChildCredit.ChDepCr), (CDollar(GetFloat(IAChildCredit.ChDepCr) * GetFloat(IAChildCredit.PYNRPercent)))){n}End Sub
Sub PYNRPercent_Calculation(){n}{t}If GetCurrency(IAChildCredit.TotNI) > 0 Then{n}{t}{t}ReturnVal = MinValue(1#, MaxValue(0, CDbl(GetCurrency(IAChildCredit.PYNRTotNI)) / CDbl(GetCurrency(IAChildCredit.TotNI)))){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub PYNRTotNI_Calculation(){n}{t}If GetBool(IAF126.TpPYNR) = True Or GetBool(IAF126.SpPYNR) Then{n}{t}{t}ReturnVal = GetCurrency(IAChildCredit.TPNRIncome) + GetCurrency(IAChildCredit.SPNRIncome){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SChild_Calculation(){n}{t}If GetBool(IAF1040.MFS) = True Then{n}{t}{t}ReturnVal = CDollar(GetFloat(IAChildCredit.TotChDepCr) * GetFloat(IAChildCredit.MFSProRate)){n}{t}Else{n}{t}{t}ReturnVal = CDollar(GetFloat(IAChildCredit.TotChDepCr) * GetFloat(IARequired.BProRate)){n}{t}End If{n}End Sub
Sub SEarly_Calculation(){n}{t}If GetBool(IAF1040.MFS) = True Then{n}{t}{t}ReturnVal = CDollar(GetFloat(IAChildCredit.TotCR) * GetFloat(IAChildCredit.MFSProRate)){n}{t}Else{n}{t}{t}ReturnVal = CDollar(GetFloat(IAChildCredit.TotCR) * GetFloat(IARequired.BProRate)){n}{t}End If{n}End Sub
Sub SPNRIncome_Calculation(){n}{t}If GetBool(IAF1040.MFS) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.SpIncome){n}{t}ElseIf GetBool(IAF126.SpPYNR) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAF126.BNet) + GetCurrency(IANROthAdj.SIANOL){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BNet) + GetCurrency(IAOthAdj.SIANOL){n}{t}End If{n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IAF1040.SSN){n}End Sub
Sub TChild_Calculation(){n}{t}ReturnVal = GetCurrency(IAChildCredit.TotChDepCr) - GetCurrency(IAChildCredit.SChild){n}End Sub
Sub TEarly_Calculation(){n}{t}ReturnVal = GetCurrency(IAChildCredit.TotCR) - GetCurrency(IAChildCredit.SEarly){n}End Sub
Sub TotChDepCr_Calculation(){n}{t}If GetBool(IAF126.TpPYNR) = True Or GetBool(IAF126.SpPYNR) Then{n}{t}{t}ReturnVal = GetCurrency(IAChildCredit.PYNRChDepCr){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAChildCredit.ChDepCr){n}{t}End If{n}End Sub
Sub TotCR_Calculation(){n}{t}Dim count As Integer{n}{t}Dim SubTot As Currency{n}{n}{t}count = 0{n}{t}SubTot = 0{n}{n}{t}Do While count < 15{n}{t}{t}SubTot = SubTot + GetCurrency(IAChildCredit.Credit(count)){n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = SubTot{n}End Sub
Sub TotNI_Calculation(){n}{t}If GetBool(IAF1040.MFS) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAChildCredit.MFSTotNet){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IARequired.TotNI) + GetCurrency(IAOthAdj.TIANOL) + GetCurrency(IAOthAdj.SIANOL){n}{t}End If{n}End Sub
Sub TPNRIncome_Calculation(){n}{t}If GetBool(IAF126.TpPYNR) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAF126.ANet) + GetCurrency(IANROthAdj.TIANOL){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAF1040.ANet) + GetCurrency(IAOthAdj.TIANOL){n}{t}End If{n}End SubSub Acct_Calculation(){n}{t}If GetBool(IAEFWksht.IsStateRPT) = True And GetBool(USWRALApp.StateRTDD) = True And GetBool(IAEFWksht.DirDeposit) = True Then{n}{t}{t}ReturnVal = GetString(USWRALApp.StateAccount){n}{t}ElseIf (GetBool(IAEFWksht.DirDeposit) = True And GetCurrency(IAEFWksht.Refund) > 0) Or (GetBool(IAEFWksht.EFW) = True And GetCurrency(IAEFWksht.AmtOwed) > 0) Then{n}{t}{t}Dim count As Integer{n}{t}{t}Dim MaxAcct As Integer{n}{t}{t}Dim Acct As String{n}{t}{t}{n}{t}{t}count = 1{n}{t}{t}MaxAcct = GetAllCopies(USWBankAcct){n}{t}{t}Acct = ""{n}{n}{t}{t}Do While count <= MaxAcct{n}{t}{t}{t}If GetString(USWBankAcct.BankAcct, count) <> "" Then{n}{t}{t}{t}{t}If GetBool(USWBankAcct.Default, count) = True Then{n}{t}{t}{t}{t}{t}ReturnVal = GetString(USWBankAcct.BankAcct, count){n}{t}{t}{t}{t}{t}count = 99{n}{t}{t}{t}{t}End If{n}{t}{t}{t}End If{n}{t}{t}{t}count = count + 1{n}{t}{t}Loop{n}{t}{t}ReturnVal = ""{n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}{t}{n}{t}End If{n}{t}{n}End Sub
Sub ACH_Calculation(){n}{t}If GetNumber(IAEFWksht.Yes) = 1 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAEFWksht.EFW) = True And GetCurrency(IAEFWksht.AmtOwed) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Address_Calculation(){n}{t}ReturnVal = GetString(IAF1040.Add) + " " + GetString(IAF1040.CityComb){n}End Sub
Sub AIAWH_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.AIATaxWith){n}End Sub
Sub AmtOwed_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.TotDue){n}End Sub
Sub ANet_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.ANet){n}End Sub
Sub AskBankInfo_Calculation(){n}{t}If GetCurrency(IAEFWksht.AmtOwed) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetBool(IAEFWksht.IsStateRPT) = True And GetBool(USWEFQual.FilingSO) = True Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetCurrency(IAEFWksht.Refund) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub AskDebitCard_Calculation(){n}{t}If IsPreparer() = True Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(USWBankProd.HaveBankConsent) = False Then{n}{t}{t}ReturnVal = 0{n}' Do not offer state debit card on linked returns using Republic Direct Deposit RT{n}{t}ElseIf GetBool(USWBankProd.DebitCardReturn) = False And GetBool(USWBankProd.RPTReturn) = True Then{n}{t}{t}ReturnVal = 0{n}' Do not offer state debit card on state only returns using Republic Direct Deposit RT{n}{t}ElseIf GetBool(USWBankProd.IsStateRPT) = True And GetBool(USWRALApp.StateRTDD) = True Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetCurrency(IAEFWksht.Refund) < 10000@ Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub AskDriverLic_Calculation(){n}{t}If GetBool(USWEFOptions.PiggyBackIA) = True Or GetBool(USWEFOptions.SOIA) = True Or GetBool(USWEFOptions.SOIAX) = True Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub AskFedStateBank_Calculation(){n}{t}If GetBool(IAEFWksht.PrepBPTrans) = True Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf IsPreparer() = True And GetBool(USWBasicInfo.BankProd) = True Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(USWBankProd.IsStateRPT) = True And GetBool(USWEFQual.FilingSO) = True Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetCurrency(IAEFWksht.Refund) > 0 And GetBool(USWEFWksht.refundbox) = True Then{n}{t}{t}If GetBool(USWBasicInfo.DebitCard) = True And GetBool(IAEFWksht.AskDebitCard) = False Then{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}ElseIf GetBool(IAEFWksht.DebitCard) = True And GetBool(IAEFWksht.AskDebitCard) = False Then{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}ElseIf GetBool(USWBasicInfo.DebitCard) = True And GetBool(IAEFWksht.DebitCard) = True Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}ElseIf GetBool(USWBasicInfo.DirectDepY) = True And GetBool(IAEFWksht.DirDeposit) = True Then{n}{t}{t}{t}If GetString(USF8888.Account1) = GetString(IAEFWksht.Acct) Then{n}{t}{t}{t}{t}ReturnVal = 1{n}{t}{t}{t}Else{n}{t}{t}{t}{t}ReturnVal = 0{n}{t}{t}{t}End If{n}{t}{t}ElseIf GetBool(USWBasicInfo.DirectDepN) = True And GetBool(IAEFWksht.NoDDEFW) = True Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}{t}{t}{n}End Sub
Sub AskSORTDC_Calculation(){n}{t}If GetBool(USWEFOptions.SOIA) = False Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf IsPreparer() = True Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(USWBankProd.HaveBankConsent) = False Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetCurrency(IAEFWksht.Refund) < 10000@ Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub AskStateRT_Calculation(){n}{t}If GetBool(USWEFOptions.SOIAX) = True Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetCurrency(IAEFWksht.Refund) >= 75@ Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub ATTax_Calculation(){n}{t}If GetBool(IARequired.LowInc) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAF1040.ATotIATax){n}{t}End If{n}End Sub
Sub BankName_Calculation(){n}{t}If (GetBool(IAEFWksht.DirDeposit) = True And GetCurrency(IAEFWksht.Refund) > 0) Or (GetBool(IAEFWksht.EFW) = True And GetCurrency(IAEFWksht.AmtOwed) > 0) Then{n}{t}{t}Dim count As Integer{n}{t}{t}Dim MaxAcct As Integer{n}{t}{t}{n}{t}{t}count = 1{n}{t}{t}MaxAcct = GetAllCopies(USWBankAcct){n}{n}{t}{t}Do While count <= MaxAcct{n}{t}{t}{t}If GetString(USWBankAcct.BankAcct, count) <> "" Then{n}{t}{t}{t}{t}If IsStrEqual(GetString(IAEFWksht.Acct), GetString(USWBankAcct.BankAcct, count)) Then{n}{t}{t}{t}{t}{t}ReturnVal = GetString(USWBankAcct.BankName, count){n}{t}{t}{t}{t}{t}count = 99{n}{t}{t}{t}{t}End If{n}{t}{t}{t}End If{n}{t}{t}{t}count = count + 1{n}{t}{t}Loop{n}{t}{t}ReturnVal = ""{n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub BankProDisCd_Calculation(){n}{t}'Bank Product Disbursement Declaration{n}{t}'0 = Did Not Select bank product Option; 1 = Selected Debit Card Option; 2 = Selected Direct Depoist to the Bank; 3 = Requestd a Check;{n}{t}{n}{t}'Parameter 6 = Refund Owe Method: 0-No method; 1-AmEx debit card; 2-State issued debit card; 3-Direct deposit no Republic Bank; 4-Direct deposit through Republic Bank; 5-Paper check (refund); 6-AmEx debit card through Republic; 10-Direct debit; 11-Credit card; 12-Paper check (owe); 13-IRS EFTPS{n}{n}{t}Dim Submission As String{n}{t}Dim TempStr As String{n}{t}{n}{t}TempStr = GetString(IAEFWksht.EFSubmission){n}{t}Submission = GetParam(TempStr, 1, "|"){n}{n}{t}{n}{t}If GetParam(Submission, 6, ";") = "0" Then{n}{t}{t}ReturnVal = "0"{n}{t}ElseIf GetParam(Submission, 6, ";") = "1" Then{n}{t}{t}ReturnVal = "1"{n}{t}ElseIf GetParam(Submission, 6, ";") = "2" Then{n}{t}{t}ReturnVal = "3"{n}{t}ElseIf GetParam(Submission, 6, ";") = "3" Then{n}{t}{t}ReturnVal = "2"{n}{t}ElseIf GetParam(Submission, 6, ";") = "4" Then{n}{t}{t}ReturnVal = "2"{n}{t}ElseIf GetParam(Submission, 6, ";") = "5" Then{n}{t}{t}ReturnVal = "3"{n}{t}ElseIf GetParam(Submission, 6, ";") = "6" Then{n}{t}{t}ReturnVal = "1"{n}{t}Else{n}{t}{t}ReturnVal = "0"{n}{t}End If{n}{n}End Sub
Sub BIAWH_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.BIATaxWith){n}End Sub
Sub BNet_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.BNet){n}End Sub
Sub BP_Calculation(){n}{t}If GetBool(IAEFWksht.PrepBPTrans) = True Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BTTax_Calculation(){n}{t}If GetBool(IARequired.LowInc) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BTotIATax){n}{t}End If{n}End Sub
Sub CompStateEFQA_Calculation(){n}' If not filing Iowa return, always return False{n}{t}If GetBool(USWEFOptions.PiggyBackIA) = False And GetBool(USWEFOptions.SOIA) = False And GetBool(USWEFOptions.SOIAX) = False Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetCurrency(IAEFWksht.Refund) > 0 Then{n}{t}{t}If GetBool(IAEFWksht.PrepRevQA) = False Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}ElseIf IsPreparer() = True And GetBool(IAEFWksht.PrepBPTrans) = True Then{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}ElseIf GetBool(USWBankProd.DebitCardReturn) = True And GetBool(IAEFWksht.DebitCard) = False And GetBool(IAEFWksht.DirDeposit) = False And GetBool(IAEFWksht.NoDDEFW) = False Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}ElseIf GetBool(IAEFWksht.DirDeposit) = False And GetBool(IAEFWksht.NoDDEFW) = False Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}ElseIf GetBool(USWBankProd.DebitCardReturn) = False And GetBool(IAEFWksht.DirDeposit) = False And GetBool(IAEFWksht.NoDDEFW) = False Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}ElseIf GetBool(IAEFWksht.DirDeposit) = True And GetNumber(USFInterview.ValidBankAccts) = 0 Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}ElseIf GetCurrency(IAEFWksht.AmtOwed) > 0 Then{n}{t}{t}If GetBool(IAEFWksht.PrepRevQA) = False Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}ElseIf GetBool(IAEFWksht.EFW) = False And GetBool(IAEFWksht.NoDDEFW) = False Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}ElseIf GetBool(IAEFWksht.EFW) = True And GetNumber(USFInterview.ValidBankAccts) = 0 Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub DANChange_Calculation(){n}{t}ReturnVal = GetString(IAEFWksht.DirDepDan) + "|"{n}End Sub
Sub DC_Calculation(){n}{t}If GetBool(IAEFWksht.PrepBPTrans) = True Then{n}{t}{t}ReturnVal = 0{t}{n}{t}ElseIf GetBool(IAEFWksht.DebitCard) = True And GetCurrency(IAEFWksht.Refund) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub DD_Calculation(){n}{t}If GetNumber(IAEFWksht.Yes) = 1 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAEFWksht.PrepBPTrans) = True Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAEFWksht.DirDeposit) = True And GetCurrency(IAEFWksht.Refund) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub DebitCard_Calculation(){n}{t}If GetBool(IAEFWksht.IsStateRPT) = True Then{n}{t}{t}If GetBool(USWRALApp.StateRTDC) = True And GetBool(IAEFWksht.AskDebitCard) = True Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}ElseIf GetBool(USWBasicInfo.DebitCard) = True And GetCurrency(USF1040.RefundOwe) > 0 And GetBool(IAEFWksht.AskDebitCard) = True Then{n}{t}{t}If GetCurrency(IAEFWksht.Refund) > 0 Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Desc_Calculation(){n}{t}ReturnVal = GetString(IARequired.CombNames){n}End Sub
Sub DirDepChecking_Calculation(){n}{t}{n}{t}If (GetBool(IAEFWksht.DirDeposit) = True And GetCurrency(IAEFWksht.Refund) > 0) Or (GetBool(IAEFWksht.EFW) = True And GetCurrency(IAEFWksht.AmtOwed) > 0) Then{n}{t}{t}Dim count As Integer{n}{t}{t}Dim MaxAcct As Integer{n}{t}{t}{n}{t}{t}count = 1{n}{t}{t}MaxAcct = GetAllCopies(USWBankAcct){n}{n}{t}{t}Do While count <= MaxAcct{n}{t}{t}{t}If GetString(USWBankAcct.BankAcct, count) <> "" Then{n}{t}{t}{t}{t}If IsStrEqual(GetString(IAEFWksht.Acct), GetString(USWBankAcct.BankAcct, count)) Then{n}{t}{t}{t}{t}{t}ReturnVal = GetBool(USWBankAcct.Checking, count){n}{t}{t}{t}{t}{t}count = 99{n}{t}{t}{t}{t}End If{n}{t}{t}{t}End If{n}{t}{t}{t}count = count + 1{n}{t}{t}Loop{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub DirDepDan_Calculation(){n}{t}If (GetBool(IAEFWksht.DirDeposit) = True And GetCurrency(IAEFWksht.Refund) > 0) Or (GetBool(IAEFWksht.EFW) = True And GetCurrency(IAEFWksht.AmtOwed) > 0) Then{n}{t}{t}Dim count As Integer{n}{t}{t}Dim MaxAcct As Integer{n}{t}{t}{n}{t}{t}count = 1{n}{t}{t}MaxAcct = GetAllCopies(USWBankAcct){n}{n}{t}{t}Do While count <= MaxAcct{n}{t}{t}{t}If GetString(USWBankAcct.BankAcct, count) <> "" Then{n}{t}{t}{t}{t}If IsStrEqual(GetString(IAEFWksht.Acct), GetString(USWBankAcct.BankAcct, count)) Then{n}{t}{t}{t}{t}{t}ReturnVal = GetString(USWBankAcct.AcctNum, count){n}{t}{t}{t}{t}{t}count = 99{n}{t}{t}{t}{t}End If{n}{t}{t}{t}End If{n}{t}{t}{t}count = count + 1{n}{t}{t}Loop{n}{t}{t}ReturnVal = ""{n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub DirDeposit_Calculation(){n}{t}If GetBool(IAEFWksht.IsStateRPT) = True Then{n}{t}{t}If GetBool(USWRALApp.StateRTDD) = True Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}ElseIf GetBool(USWBasicInfo.DirectDepY) = True And GetCurrency(USF1040.RefundOwe) > 0 Then{n}{t}{t}If GetCurrency(IAEFWksht.Refund) > 0 Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub DirDepRTN_Calculation(){n}{t}If (GetBool(IAEFWksht.DirDeposit) = True And GetCurrency(IAEFWksht.Refund) > 0) Or (GetBool(IAEFWksht.EFW) = True And GetCurrency(IAEFWksht.AmtOwed) > 0) Then{n}{t}{t}Dim count As Integer{n}{t}{t}Dim MaxAcct As Integer{n}{t}{t}{n}{t}{t}count = 1{n}{t}{t}MaxAcct = GetAllCopies(USWBankAcct){n}{n}{t}{t}{n}{t}{t}Do While count <= MaxAcct{n}{t}{t}{t}If GetString(USWBankAcct.BankAcct, count) <> "" Then{n}{t}{t}{t}{t}If IsStrEqual(GetString(IAEFWksht.Acct), GetString(USWBankAcct.BankAcct, count)) Then{n}{t}{t}{t}{t}{t}ReturnVal = GetString(USWBankAcct.RTN, count){n}{t}{t}{t}{t}{t}count = 99{n}{t}{t}{t}{t}End If{n}{t}{t}{t}End If{n}{t}{t}{t}count = count + 1{n}{t}{t}Loop{n}{t}{t}ReturnVal = ""{n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub DirDepSavings_Calculation(){n}{t}If (GetBool(IAEFWksht.DirDeposit) = True And GetCurrency(IAEFWksht.Refund) > 0) Or (GetBool(IAEFWksht.EFW) = True And GetCurrency(IAEFWksht.AmtOwed) > 0) Then{n}{t}{t}{n}{t}{t}Dim count As Integer{n}{t}{t}Dim MaxAcct As Integer{n}{t}{t}count = 1{n}{t}{t}MaxAcct = GetAllCopies(USWBankAcct){n}{n}{t}{t}Do While count <= MaxAcct{n}{t}{t}{t}If GetString(USWBankAcct.BankAcct, count) <> "" Then{n}{t}{t}{t}{t}If IsStrEqual(GetString(IAEFWksht.Acct), GetString(USWBankAcct.BankAcct, count)) Then{n}{t}{t}{t}{t}{t}ReturnVal = GetBool(USWBankAcct.Savings, count){n}{t}{t}{t}{t}{t}count = 99{n}{t}{t}{t}{t}End If{n}{t}{t}{t}End If{n}{t}{t}{t}count = count + 1{n}{t}{t}Loop{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub DirDepTrigger_Calculation(){n}{t}If GetNumber(IAEFWksht.EFDDCode) = 1 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub DirectDepY_Calculation(){n}{t}If GetBool(IAEFWksht.DD) = True Then{n}{t}{t}If GetBool(USWBankProd.RPTReturn) = True And GetBool(IAEFWksht.SameFedBank) = True Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}ElseIf GetBool(IAEFWksht.IsStateRPT) = True Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}ElseIf GetBool(IAEFWksht.DC) = True Then{n}{t}{t}If GetBool(USWBankProd.RPTReturn) = True Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}ElseIf GetBool(IAEFWksht.IsStateRPT) = True Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}{n}End Sub
Sub EFAvailable_Calculation(){n}{t}If GetBool(IA1040X.EFAmend) = True Then{n}{t}{t}ReturnVal = "IAX,2, Amended|"{n}{t}Else{n}{t}{t}ReturnVal = "IA,0,|"{n}{t}End If{n}End Sub
Sub EFChecking_Calculation(){n}{t}If GetBool(IAEFWksht.PrepBPTrans) = True Then{n}{t}{t}ReturnVal = GetBool(USWEFWkSht2.DirDepChk){t}{n}{t}ElseIf GetBool(IAEFWksht.DebitCard) = True And GetCurrency(IAEFWksht.Refund) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetNumber(IAEFWksht.EFDDCode) <> 0 Then{n}{t}{t}ReturnVal = GetBool(IAEFWksht.DirDepChecking){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub EFDan_Calculation(){n}{t}If GetBool(IAEFWksht.PrepBPTrans) = True Then{n}{t}{t}ReturnVal = GetString(USWEFWkSht2.DirDepDan){n}{t}ElseIf GetBool(IAEFWksht.DebitCard) = True And GetCurrency(IAEFWksht.Refund) > 0 Then{n}{t}{t}ReturnVal = GetString(USWDebitCard.AcctNum){n}{t}ElseIf GetNumber(IAEFWksht.EFDDCode) <> 0 Then{n}{t}{t}ReturnVal = GetString(IAEFWksht.DirDepDan){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub EFDDCode_Calculation(){n}{t}If GetBool(IAEFWksht.PrepBPTrans) = True Then{n}{t}{t}ReturnVal = 1{t}{n}{t}ElseIf GetBool(IAEFWksht.DebitCard) = True And GetCurrency(IAEFWksht.Refund) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetNumber(IAEFWksht.Yes) = 1 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAEFWksht.DirDeposit) = True And GetCurrency(IAEFWksht.Refund) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetBool(IAEFWksht.EFW) = True And GetCurrency(IAEFWksht.AmtOwed) > 0 Then{n}{t}{t}ReturnVal = 2{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub EFDedCode_Calculation(){n}{t}If GetBool(IARequired.LowInc) = True Then{n}{t}{t}ReturnVal = ""{n}{t}ElseIf GetBool(IAF1040.ItemCheck) = True Then{n}{t}{t}ReturnVal = "1"{n}{t}Else{n}{t}{t}ReturnVal = "3"{n}{t}End If{n}End Sub
Sub EFEFWAmt_Calculation(){n}{t}If GetNumber(IAEFWksht.EFDDCode) = 2 Then{n}{t}{t}ReturnVal = GetCurrency(IAEFWksht.AmtOwed){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub EFEFWDate_Calculation(){n}{t}If GetNumber(IAEFWksht.EFDDCode) = 2 Then{n}{t}{t}ReturnVal = GetString(IAEFWksht.EFWDate){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub EFRtn_Calculation(){n}{t}If GetBool(IAEFWksht.PrepBPTrans) = True Then{n}{t}{t}ReturnVal = GetString(USWEFWkSht2.DirDepRTN){n}{t}ElseIf GetBool(IAEFWksht.DebitCard) = True And GetCurrency(IAEFWksht.Refund) > 0 Then{n}{t}{t}ReturnVal = GetString(USWDebitCard.RTN){n}{t}ElseIf GetNumber(IAEFWksht.EFDDCode) <> 0 Then{n}{t}{t}ReturnVal = GetString(IAEFWksht.DirDepRTN){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub EFSavings_Calculation(){n}{t}If GetBool(IAEFWksht.PrepBPTrans) = True Then{n}{t}{t}ReturnVal = GetBool(USWEFWkSht2.DirDepSav){t}   {n}{t}ElseIf GetBool(IAEFWksht.DebitCard) = True And GetCurrency(IAEFWksht.Refund) > 0 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetNumber(IAEFWksht.EFDDCode) <> 0 Then{n}{t}{t}ReturnVal = GetBool(IAEFWksht.DirDepSavings){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub EFSpInit_Calculation(){n}{t}If GetBool(IAF1040.MFJ) = True Or GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = GetString(USWBasicInfo.SpInit){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub EFSpLast_Calculation(){n}{t}If GetBool(IAF1040.MFJ) = True Or GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = GetString(USWBasicInfo.SPLast){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub EFSpouseFirst_Calculation(){n}{t}If GetBool(IAF1040.MFJ) = True Or GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = GetString(USWBasicInfo.SpouseFirst){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub EFSpSuffix_Calculation(){n}{t}If GetBool(IAF1040.MFJ) = True Or GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = GetString(USWBasicInfo.SPSuffix){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub EFStRefund_Calculation(){n}{t}If GetBool(USWEFOptions.PiggyBackIA) = True Then{n}{t}{t}If GetCurrency(IAEFWksht.Refund) > 0 Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub EFSubmission_Calculation(){n}' General Guideline to follow (use | bar if more than 1 return can be filed){n}' Parameter 1 = Module Name{n}' Parameter 2 = Return Type: 0-Return; 1-Extension; 2-Amended; 3-Special1; 4-SpecialTaxpayer; 5-SpecialTaxpayerExtension; 6-SpecialSpouse; 7-SpecialSpouseExtension; 8-NewYorkLLC; 9-Special{n}' Parameter 3 = EF Type: 0-Legacy; 1-Qualifies for MeF (used if state supports legacy); 2-Must Be MeF (always used if state does not support legacy){n}' Parameter 4 = Fed XML Version: 0-Send no federal XML; 1-Send accepted federal; 2-Send federal XML used to complete state return{n}' Parameter 5 = Special Description: description for special returns, if none space {n}' Parameter 6 = Refund Owe Method: 0-No method; 1-AmEx debit card; 2-State issued debit card; 3-Direct deposit no Republic Bank; 4-Direct deposit through Republic Bank; 5-Paper check (refund); 6-AmEx debit card through Republic; 10-Direct debit; 11-Credit card; 12-Paper check (owe); 13-IRS EFTPS{n}{n}{t}Dim RefOweMethod As String{n}{n}{t}If GetBool(USWEFOptions.PiggyBackIA) = True Or GetBool(USWEFOptions.SOIA) = True Then{n}{t}{t}If GetCurrency(IAF1040.RefBalDue) = 0 Then{n}{t}{t}{t}RefOweMethod = "0"{n}{t}{t}ElseIf GetBool(IAEFWksht.PrepBPTrans) = True Then{n}{t}{t}{t}RefOweMethod = "4"{n}{t}{t}ElseIf GetBool(IAEFWksht.DC) = True Then{n}{t}{t}{t}If GetBool(USWBankProd.RPTReturn) = True Then{n}{t}{t}{t}{t}RefOweMethod = "6"{n}{t}{t}{t}ElseIf GetBool(IAEFWksht.IsStateRPT) = True Then{n}{t}{t}{t}{t}RefOweMethod = "6"{n}{t}{t}{t}Else{n}{t}{t}{t}{t}RefOweMethod = "1"{n}{t}{t}{t}End If{n}{t}{t}ElseIf GetBool(IAEFWksht.DD) = True Then{n}{t}{t}{t}If GetBool(USWBankProd.RPTReturn) = True And GetBool(IAEFWksht.SameFedBank) = True Then{n}{t}{t}{t}{t}RefOweMethod = "4"{n}{t}{t}{t}ElseIf GetBool(IAEFWksht.IsStateRPT) = True Then{n}{t}{t}{t}{t}RefOweMethod = "4"{n}{t}{t}{t}Else{n}{t}{t}{t}{t}RefOweMethod = "3"{n}{t}{t}{t}End If{n}{t}{t}ElseIf GetCurrency(IAF1040.RefBalDue) > 0 Then{n}{t}{t}{t}RefOweMethod = "5"{n}{t}{t}ElseIf GetString(IAEFWksht.EFDDCode) = "2" Then{n}{t}{t}{t}RefOweMethod = "10"{n}{t}{t}Else{n}{t}{t}{t}RefOweMethod = "12"{n}{t}{t}End If{n}{t}ElseIf GetBool(USWEFOptions.SOIAX) = True Then{n}{t}{t}If GetCurrency(IAF1040.RefBalDue) = 0 Then{n}{t}{t}{t}RefOweMethod = "0"{n}{t}{t}ElseIf GetBool(IAEFWksht.DD) = True Then{n}{t}{t}{t}RefOweMethod = "3"{n}{t}{t}ElseIf GetCurrency(IAF1040.RefBalDue) > 0 Then{n}{t}{t}{t}RefOweMethod = "5"{n}{t}{t}ElseIf GetString(IAEFWksht.EFDDCode) = "2" Then{n}{t}{t}{t}RefOweMethod = "10"{n}{t}{t}Else{n}{t}{t}{t}RefOweMethod = "12"{n}{t}{t}End If{n}{t}Else{n}{t}{t}RefOweMethod = "0"{n}{t}End If{n}{n}{t}If GetBool(USWEFOptions.PiggyBackIA) = True Or GetBool(USWEFOptions.SOIA) = True Then{n}{t}{t}ReturnVal = "IA;0;2;2; ;" + RefOweMethod + "|"{n}{t}ElseIf GetBool(USWEFOptions.SOIAX) = True Then{n}{t}{t}ReturnVal = "IA;2;2;2;Amended;" + RefOweMethod + "|"{n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}{n}End Sub
Sub EROAddress_Calculation(){n}{t}If IsPreparer() = True Then{n}{t}{t}ReturnVal = GetString(USWBasicInfo.EROAddress){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub EROCityComb_Calculation(){n}{t}If IsPreparer() = False Then{n}{t}{t}ReturnVal = ""{n}{t}ElseIf Trim(GetString(USWBasicInfo.EROForCtry)) <> "" Then{n}{t}{t}If Trim(GetString(USWBasicInfo.EROForProvince)) <> "" And Trim(GetString(USWBasicInfo.EROForPC)) <> "" Then{n}{t}{t}{t}ReturnVal = GetString(USWBasicInfo.EROCity) & ", " & GetString(USWBasicInfo.EROForProvince) & ", " & GetString(USWBasicInfo.EROForPC) & ", " & GetString(USWBasicInfo.EROForCtry){n}{t}{t}ElseIf Trim(GetString(USWBasicInfo.EROForProvince)) <> "" Then{n}{t}{t}{t}ReturnVal = GetString(USWBasicInfo.EROCity) & ", " & GetString(USWBasicInfo.EROForProvince) & ", " & GetString(USWBasicInfo.EROForCtry){n}{t}{t}ElseIf Trim(GetString(USWBasicInfo.EROForPC)) <> "" Then{n}{t}{t}{t}ReturnVal = GetString(USWBasicInfo.EROCity) & ", " & GetString(USWBasicInfo.EROForPC) & ", " & GetString(USWBasicInfo.EROForCtry){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = GetString(USWBasicInfo.EROCity) & ", " & GetString(USWBasicInfo.EROForCtry){n}{t}{t}End If{n}{t}ElseIf Trim(GetString(USWBasicInfo.EROCity)) <> "" Then{n}{t}{t}ReturnVal = GetString(USWBasicInfo.EROCity) & ", " & GetString(USWBasicInfo.StateAbbERO) & " " & GetString(USWBasicInfo.EROZip){n}{t}Else{n}{t}{t}ReturnVal = GetString(USWBasicInfo.StateAbbERO) & " " & GetString(USWBasicInfo.EROZip){n}{t}End If{n}End Sub
Sub EROEIN_Calculation(){n}{t}If IsPreparer() = True Then{n}{t}{t}ReturnVal = GetString(USWBasicInfo.EROEIN){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub EROFirmName_Calculation(){n}{t}If IsPreparer() = True Then{n}{t}{t}ReturnVal = GetString(USWBasicInfo.EROFirmName){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub EROPhone_Calculation(){n}{t}If IsPreparer() = False Then{n}{t}{t}ReturnVal = ""{n}{t}ElseIf Trim(GetString(USWBasicInfo.EROPhone)) <> "" Then{n}{t}{t}ReturnVal = GetString(USWBasicInfo.EROPhone){n}{t}Else{n}{t}{t}ReturnVal = GetString(USWBasicInfo.EROForPhone){n}{t}End If{n}End Sub
Sub EROPrep_Calculation(){n}{t}If IsPreparer() = True Then{n}{t}{t}ReturnVal = GetBool(USWBasicInfo.PaidPrepY){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub EROSE_Calculation(){n}{t}If IsPreparer() = True Then{n}{t}{t}ReturnVal = GetBool(USWBasicInfo.EROSelfEmp){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub EROSSN_Calculation(){n}{t}Dim EROPTIN As String{n}{t}{n}{t}EROPTIN = LetterStr(GetString(USWBasicInfo.EROSSN)){n}{t}{n}{t}If IsPreparer() = True And IsStrEqual(EROPTIN, "P") Then{n}{t}{t}ReturnVal = GetString(USWBasicInfo.EROSSN){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub Exist_Calculation(){n}{t}ReturnVal = 1{n}End Sub
Sub FedChecking_Calculation(){n}{t}If GetCurrency(USWBasicInfo.WithdrawalAmt) > 0 And GetDate(USWBasicInfo.withdrawldate) <> "" Then{n}{t}{t}ReturnVal = GetBool(USWBasicInfo.ACHChecking){n}{t}Else{n}{t}{t}ReturnVal = GetBool(USF8888.EFChecking(0)){n}{t}End If{n}End Sub
Sub FedDAN_Calculation(){n}{t}If GetCurrency(USWBasicInfo.WithdrawalAmt) > 0 And GetDate(USWBasicInfo.withdrawldate) <> "" Then{n}{t}{t}ReturnVal = GetString(USWBasicInfo.ACHDAN){n}{t}Else{n}{t}{t}ReturnVal = GetString(USF8888.EFAcctNum(0)){n}{t}End If{n}End Sub
Sub FedRTN_Calculation(){n}{t}If GetCurrency(USWBasicInfo.WithdrawalAmt) > 0 And GetDate(USWBasicInfo.withdrawldate) <> "" Then{n}{t}{t}ReturnVal = GetString(USWBasicInfo.ACHRTN){n}{t}Else{n}{t}{t}ReturnVal = GetString(USF8888.EFRtn(0)){n}{t}End If{n}End Sub
Sub FedSavings_Calculation(){n}{t}If GetCurrency(USWBasicInfo.WithdrawalAmt) > 0 And GetDate(USWBasicInfo.withdrawldate) <> "" Then{n}{t}{t}ReturnVal = GetBool(USWBasicInfo.ACHSavings){n}{t}Else{n}{t}{t}ReturnVal = GetBool(USF8888.EFSaveAcct(0)){n}{t}End If{n}End Sub
Sub FedTrans_Calculation(){n}{t}'If (GetBool(IAEFWksht.DirDeposit) = True And GetCurrency(IAEFWksht.Refund) > 0) Or (GetBool(IAEFWksht.EFW) = True And GetCurrency(IAEFWksht.AmtOwed) > 0) Then{n}{t}'{t}If GetBool(IAEFWksht.TransInfo) = True Then{n}{t}'{t}{t}ReturnVal = 1{n}{t}'{t}Else{n}{t}'{t}{t}ReturnVal = 0{n}{t}'{t}End If{n}{t}'Else{n}{t}ReturnVal = 0{n}{t}'End If{n}End Sub
Sub FinTransTrigger_Calculation(){n}{t}If GetNumber(IAEFWksht.EFDDCode) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetNumber(IAEstimates.EstEFW, 1) > 0 Or GetNumber(IAEstimates.EstEFW, 2) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub ForCity_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.ForCity){n}End Sub
Sub ForCountry_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.ForCountry){n}End Sub
Sub ForStreet_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.ForStreet){n}End Sub
Sub IsStateRPT_Calculation(){n}{t}If GetBool(IAEFWksht.AskStateRT) = False Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(USWBankProd.ClearedInvoiceFees) = True Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(USWRALApp.StateRTDC) = True And GetBool(IAEFWksht.AskSORTDC) = False Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(USWBankProd.StateRPT) = True And GetBool(USWBankProd.StateBankAgree) = True And GetBool(USWBankProd.StateBankAgree2) = True And GetCurrency(IAEFWksht.Refund) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub MeFPrepInfo_Calculation(){n}{t}If IsPreparer() = True Then{n}{t}{t}If GetBool(USWBasicInfo.NoPrep) = False Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub MeFSP137_Calculation(){n}{t}If GetNumber(IA137.MEF137SP, FieldCopies(IA137.Spouse)) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub MeFTP137_Calculation(){n}{t}If GetNumber(IA137.MEF137TP, FieldCopies(IA137.Taxpayer)) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Need8453_Calculation(){n}{t}ReturnVal = 1{n}End Sub
Sub No_Calculation(){n}If (GetBool(IAEFWksht.DirDeposit) = True And GetCurrency(IAEFWksht.Refund) > 0) Or (GetBool(IAEFWksht.EFW) = True And GetCurrency(IAEFWksht.AmtOwed) > 0) Then{n}{t}If GetBool(IAEFWksht.Yes) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = 1{n}{t}End If{n}Else{n}{t}ReturnVal = 0{n}End If{n}End Sub
Sub NoBankSel_Calculation(){n}{t}If GetBool(IAEFWksht.DirDeposit) = True Or GetBool(IAEFWksht.EFW) Then{n}{t}{t}If Trim(GetString(IAEFWksht.Acct)) = "" Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub NoBankSelInt_Calculation(){n}{t}If (GetBool(IAEFWksht.DirDeposit) = True) Or (GetBool(IAEFWksht.EFW) = True) Then{n}{t}{t}If GetBool(USTopicList.HaveBankWSSend) = False Then{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}ElseIf Trim(GetString(IAEFWksht.Acct)) = "" Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub NoDDEFW_Calculation(){n}{t}If GetBool(IAEFWksht.IsStateRPT) = True Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(USWBasicInfo.DirectDepN) = True And GetCurrency(USF1040.RefundOwe) > 0 Then{n}{t}{t}If GetCurrency(IAEFWksht.Refund) > 0 Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub NonForCity_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.NonForCity){n}End Sub
Sub NonForState_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.NonForState){n}End Sub
Sub NonForStreet_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.NonForStreet){n}End Sub
Sub NonForZip_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.NonForZip){n}End Sub
Sub PC_Calculation(){n}{t}If GetCurrency(IAEFWksht.Refund) = 0 Then {n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAEFWksht.DD) = False And GetBool(IAEFWksht.BP) = False And GetBool(IAEFWksht.DC) = False Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub PrBankName_Calculation(){n}{t}If GetNumber(IAEFWksht.EFDDCode) <> 0 And GetBool(IAEFWksht.DebitCard) = False And GetBool(IAEFWksht.PrepBPTrans) = False Then{n}{t}{t}ReturnVal = GetString(IAEFWksht.BankName){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub PrChecking_Calculation(){n}{t}If GetNumber(IAEFWksht.EFDDCode) <> 0 And GetBool(IAEFWksht.DebitCard) = False And GetBool(IAEFWksht.PrepBPTrans) = False Then{n}{t}{t}ReturnVal = GetBool(IAEFWksht.DirDepChecking){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub PrDAN_Calculation(){n}{t}If GetNumber(IAEFWksht.EFDDCode) <> 0 And GetBool(IAEFWksht.DebitCard) = False And GetBool(IAEFWksht.PrepBPTrans) = False Then{n}{t}{t}ReturnVal = GetString(IAEFWksht.DirDepDan){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub PrepAddress_Calculation(){n}{t}If IsPreparer() = True Then{n}{t}{t}If GetBool(IAEFWksht.EROPrep) = False Then{n}{t}{t}{t}ReturnVal = GetString(USWBasicInfo.PrepAdd){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = ""{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub PrepBPTrans_Calculation(){n}{t}If GetBool(USWRALApp.RepRouteState) = False Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf IsPreparer() = False Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(USWBasicInfo.BankProd) = True And GetCurrency(USF1040.RefundOwe) > 0 Then{n}{t}{t}If GetBool(USWBankProd.Republic) = True And GetBool(IAEFWksht.EFStRefund) = True Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub PrepCityComb_Calculation(){n}{t}If IsPreparer() = True Then{n}{t}{t}If GetBool(IAEFWksht.EROPrep) = False Then{n}{t}{t}{t}ReturnVal = GetString(USWBasicInfo.CombPrepCityStZipFor){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = ""{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub PrepEIN_Calculation(){n}{t}If IsPreparer() = True Then{n}{t}{t}If GetBool(IAEFWksht.EROPrep) = False Then{n}{t}{t}{t}ReturnVal = GetString(USWBasicInfo.PrepEIN){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = ""{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub PrepFirmName_Calculation(){n}{t}If IsPreparer() = True Then{n}{t}{t}If GetBool(IAEFWksht.EROPrep) = False Then{n}{t}{t}{t}ReturnVal = GetString(USWBasicInfo.PrepName){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = ""{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub PrepPhone_Calculation(){n}{t}If IsPreparer() = True Then{n}{t}{t}If GetBool(IAEFWksht.EROPrep) = False Then{n}{t}{t}{t}ReturnVal = GetString(IAF1040.PrepPhone){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = ""{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub PrepSE_Calculation(){n}{t}If IsPreparer() = True Then{n}{t}{t}If GetBool(IAEFWksht.EROPrep) = False Then{n}{t}{t}{t}ReturnVal = GetBool(USWBasicInfo.SelfEm){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub PrepSSN_Calculation(){n}{t}If IsPreparer() = True Then{n}{t}{t}If GetBool(IAEFWksht.EROPrep) = False Then{n}{t}{t}{t}ReturnVal = GetString(USWBasicInfo.PrepSSN){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = ""{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub PrERODate_Calculation(){n}{t}If GetBool(IAEFWksht.EROPrep) = True Then{n}{t}{t}ReturnVal = GetString(USWBasicInfo.PrPrepDate){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub PrEROSig_Calculation(){n}{t}If GetBool(IAEFWksht.EROPrep) = True Then{n}{t}{t}ReturnVal = GetString(USWBasicInfo.PrPrepSig){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub PrintReturn_Calculation(){n}{t}PrintList_Clear(PrintList_EF) {n}{t}{n}{t}If Trim(GetString(IAEFWksht.EFSubmission)) <> "" Then{n}{t}{t}If GetBool(IA1040X.EFAmend) = True Then{n}{t}{t}{t}PrintList_AddHTML(PrintList_EF, EFReturnType_AmendedReturn, "E-filing Instructions", "ia instructions/IAWEFFilingInst.htm"){n}{t}{t}{t}If GetBool(IAEFWksht.Need8453) = True Then{n}{t}{t}{t}{t}PrintList_AddCustom(PrintList_EF, EFReturnType_AmendedReturn, "Form 8453", "PrintEFileForms"){n}{t}{t}{t}End If{n}{t}{t}{t}PrintList_AddReturn(PrintList_EF, EFReturnType_AmendedReturn, "Amended Return"){n}{t}{t}Else{n}{t}{t}{t}PrintList_AddHTML(PrintList_EF, EFReturnType_Return, "E-filing Instructions", "ia instructions/IAWEFFilingInst.htm"){n}{t}{t}{t}If GetBool(IAEFWksht.Need8453) = True Then{n}{t}{t}{t}{t}PrintList_AddCustom(PrintList_EF, EFReturnType_Return, "Form 8453", "PrintEFileForms"){n}{t}{t}{t}End If{n}{t}{t}{t}PrintList_AddReturn(PrintList_EF, EFReturnType_Return, "Return"){n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}ReturnVal = ""{n}End Sub
Sub PrPrepDate_Calculation(){n}{t}If IsPreparer() = True Then{n}{t}{t}If GetBool(IAEFWksht.EROPrep) = False Then{n}{t}{t}{t}ReturnVal = GetString(USWBasicInfo.PrPrepDate){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = ""{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub PrPrepSig_Calculation(){n}{t}If IsPreparer() = True Then{n}{t}{t}If GetBool(IAEFWksht.EROPrep) = False Then{n}{t}{t}{t}ReturnVal = GetString(USWBasicInfo.PrPrepSig){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = ""{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub PrRtn_Calculation(){n}{t}If GetNumber(IAEFWksht.EFDDCode) <> 0 And GetBool(IAEFWksht.DebitCard) = False And GetBool(IAEFWksht.PrepBPTrans) = False Then{n}{t}{t}ReturnVal = GetString(IAEFWksht.DirDepRTN){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub PrSavings_Calculation(){n}{t}If GetNumber(IAEFWksht.EFDDCode) <> 0 And GetBool(IAEFWksht.DebitCard) = False And GetBool(IAEFWksht.PrepBPTrans) = False Then{n}{t}{t}ReturnVal = GetBool(IAEFWksht.DirDepSavings){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub QnAFedBank_Calculation(){n}{t}'If GetBool(IAEFWksht.AskFedStateBank) = True Then{n}{t}'{t}ReturnVal = 0{n}{t}'ElseIf (GetBool(IAEFWksht.DirDeposit) = True And GetCurrency(IAEFWksht.Refund) > 0) Or (GetBool(IAEFWksht.EFW) = True And GetCurrency(IAEFWksht.AmtOwed) > 0) Then{n}{t}'{t}If GetBool(IAEFWksht.TransInfo) = True Then{n}{t}'{t}{t}ReturnVal = 1{n}{t}'{t}ElseIf Trim(GetString(IAEFWksht.FedRTN)) <> "" And Trim(GetString(IAEFWksht.FedDAN)) <> "" Then{n}{t}'{t}{t}ReturnVal = 1{n}{t}'{t}Else{n}{t}'{t}{t}ReturnVal = 0{n}{t}'{t}End If{n}{t}'Else{n}{t}{t}ReturnVal = 0{n}{t}'End If{n}End Sub
Sub RefProdCIPInd_Calculation(){n}{t}Dim Submission As String{n}{t}Dim TempStr As String{n}{t}{n}{t}TempStr = GetString(IAEFWksht.EFSubmission){n}{t}Submission = GetParam(TempStr, 1, "|"){n}{n}{t}If GetParam(Submission, 6, ";") = "0" Then{n}{t}{t}ReturnVal = "0"{n}{t}ElseIf GetParam(Submission, 6, ";") = "1" Then{n}{t}{t}If Trim(GetString(USWDebitCard.IDNumber)) <> "" Then{n}{t}{t}{t}ReturnVal = "1"{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = "2"{n}{t}{t}End If{n}{t}ElseIf GetParam(Submission, 6, ";") = "3" Then{n}{t}{t}ReturnVal = "0"{n}{t}ElseIf GetParam(Submission, 6, ";") = "4" Then{n}{t}{t}ReturnVal = "1"{n}{t}ElseIf GetParam(Submission, 6, ";") = "5" Then{n}{t}{t}ReturnVal = "0"{n}{t}ElseIf GetParam(Submission, 6, ";") = "6" Then{n}{t}{t}ReturnVal = "1"{n}{t}Else{n}{t}{t}ReturnVal = "0"{n}{t}End If{n}End Sub
Sub RefProdInd_Calculation(){n}{t}Dim Submission As String{n}{t}Dim TempStr As String{n}{t}{n}{t}TempStr = GetString(IAEFWksht.EFSubmission){n}{t}Submission = GetParam(TempStr, 1, "|"){n}{n}{t}If GetParam(Submission, 6, ";") = "0" Then{n}{t}{t}ReturnVal = "0"{n}{t}ElseIf GetParam(Submission, 6, ";") = "1" Then{n}{t}{t}ReturnVal = "2"{n}{t}ElseIf GetParam(Submission, 6, ";") = "2" Then{n}{t}{t}ReturnVal = "0"{n}{t}ElseIf GetParam(Submission, 6, ";") = "3" Then{n}{t}{t}ReturnVal = "0"{n}{t}ElseIf GetParam(Submission, 6, ";") = "4" Then{n}{t}{t}ReturnVal = "2"{n}{t}ElseIf GetParam(Submission, 6, ";") = "5" Then{n}{t}{t}ReturnVal = "0"{n}{t}ElseIf GetParam(Submission, 6, ";") = "6" Then{n}{t}{t}ReturnVal = "2"{n}{t}Else{n}{t}{t}ReturnVal = "0"{n}{t}End If{n}{t}{n}End Sub
Sub Refund_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.Refund){n}End Sub
Sub RefundDelay_Calculation(){n}'this was set to 1 in 2017 will need to verify again for 2018 before shipping{n}{t}ReturnVal = 0{n}End Sub
Sub RTNChange_Calculation(){n}{t}ReturnVal = GetString(IAEFWksht.DirDepRTN) + "|"{n}End Sub
Sub SameFedBank_Calculation(){n}{t}Dim SameRTN As Integer{n}{t}Dim SameDAN As Integer{n}{t}Dim SameType As Integer{n}{t}{n}{t}If GetString(IAEFWksht.FedRTN) = GetString(IAEFWksht.DirDepRTN) Then{n}{t}{t}SameRTN = 1{n}{t}Else{n}{t}{t}SameRTN = 0{n}{t}End If{n}{t}{n}{t}If GetString(IAEFWksht.FedDAN) = GetString(IAEFWksht.DirDepDan) Then{n}{t}{t}SameDAN = 1{n}{t}Else{n}{t}{t}SameDAN = 0{n}{t}End If{n}{t}{n}{t}If GetBool(IAEFWksht.FedChecking) = True And GetBool(IAEFWksht.DirDepChecking) = True Then{n}{t}{t}SameType = 1{n}{t}ElseIf GetBool(IAEFWksht.FedSavings) = True And GetBool(IAEFWksht.DirDepSavings) = True Then{n}{t}{t}SameType = 1{n}{t}Else{n}{t}{t}SameType = 0{n}{t}End If{n}{t}{n}{t}If GetBool(USWBasicInfo.DirectDepY) = True And GetCurrency(USF1040.RefundOwe) > 0 Then{n}{t}{t}If SameRTN + SameDAN + SameType = 3 Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}{n}End Sub
Sub SPCombName_Calculation(){n}{t}ReturnVal = GetString(IARequired.SPCombName){n}End Sub
Sub SpSSN_Calculation(){n}{t}ReturnVal = GetString(IAF1040.SpouseSSN){n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IAF1040.SSN){n}End Sub
Sub StateDCReturn_Calculation(){n}{t}If GetBool(USWEFOptions.PiggyBackIA) = True Or GetBool(USWEFOptions.SOIA) = True Or GetBool(USWEFOptions.SOIAX) = True Then{n}{t}{t}If GetBool(IAEFWksht.DebitCard) = True And GetCurrency(IAEFWksht.Refund) > 0 And GetBool(IAEFWksht.AskDebitCard) = True Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPCombName_Calculation(){n}{t}ReturnVal = GetString(IARequired.TPCombName){n}End Sub
Sub UBATrig_Calculation(){n}{t}If GetString(IAEFWksht.BankProDisCd) = "1" Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetString(IAEFWksht.BankProDisCd) = "2" Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub UltDAN_Calculation(){n}{t}If GetBool(IAEFWksht.PrepBPTrans) = True Then{n}{t}{t}ReturnVal = GetString(USWRALApp.PrepBPDAN){n}{t}Else{n}{t}{t}ReturnVal = GetString(IAEFWksht.EFDan){n}{t}End If{n}End Sub
Sub UltRTN_Calculation(){n}{t}If GetBool(IAEFWksht.PrepBPTrans) = True Then{n}{t}{t}ReturnVal = GetString(USWRALApp.PrepBPRTN){n}{t}Else{n}{t}{t}ReturnVal = GetString(IAEFWksht.EFRtn){n}{t}End If{n}End Sub
Sub ViewBankInfo_Calculation(){n}{t}Dim RefOweText As String{n}{t}Dim DispMethText As String{n}{t}Dim Routing As String{n}{t}Dim AcctNum As String{n}{t}Dim BankType As String{n}{t}Dim EffDate As String{n}{t}{n}{t}RefOweText = ""{n}{t}DispMethText = ""{n}{t}Routing = ""{n}{t}AcctNum = ""{n}{t}BankType = ""{n}{t}EffDate = ""{n}{t}{n}{t}If GetCurrency(IAEFWksht.Refund) > 0 Then{n}{t}{t}If GetBool(IA1040X.EFAmend) = True Then{n}{t}{t}{t}RefOweText = "Iowa Amended Refund"{n}{t}{t}Else{n}{t}{t}{t}RefOweText = "Iowa Refund"{n}{t}{t}End If{n}{t}{t}{n}{t}{t}If GetBool(IAEFWksht.BP) = True Then{n}{t}{t}{t}DispMethText = "Republic Bank Product"{n}{t}{t}ElseIf GetBool(IAEFWksht.DD) = True Then{n}{t}{t}{t}DispMethText = "Direct Deposit"{n}{t}{t}{t}Routing = "RTN: " + GetString(IAEFWksht.EFRtn){n}{t}{t}{t}AcctNum = "Acct #: " + GetString(IAEFWksht.EFDan){n}{t}{t}{t}If GetBool(IAEFWksht.EFChecking) = True Then{n}{t}{t}{t}{t}BankType = "Type: Checking"{n}{t}{t}{t}Else{n}{t}{t}{t}{t}BankType = "Type: Savings"{n}{t}{t}{t}End If{n}{t}{t}ElseIf GetBool(IAEFWksht.DC) = True Then{n}{t}{t}{t}DispMethText = "American Express Serve Card"{n}{t}{t}Else{n}{t}{t}{t}DispMethText = "Paper Check"{n}{t}{t}End If{n}{t}{t}{n}{t}{t}ReturnVal = RefOweText + "/Refund Method: " + DispMethText + "/" + Routing + "/" + AcctNum + "/" + BankType{n}{t}ElseIf GetCurrency(IAEFWksht.AmtOwed) > 0 Then{n}{t}{t}If GetBool(IA1040X.EFAmend) = True Then{n}{t}{t}{t}RefOweText = "Iowa Amended Balance Due"{n}{t}{t}Else{n}{t}{t}{t}RefOweText = "Iowa Balance Due"{n}{t}{t}End If{n}{t}{t}{n}{t}{t}If GetBool(IAEFWksht.ACH) = True Then{n}{t}{t}{t}DispMethText = "Direct Withdrawal"{n}{t}{t}{t}Routing = "RTN: " + GetString(IAEFWksht.EFRtn){n}{t}{t}{t}AcctNum = "Acct #: " + GetString(IAEFWksht.EFDan){n}{t}{t}{t}If GetBool(IAEFWksht.EFChecking) = True Then{n}{t}{t}{t}{t}BankType = "Type: Checking"{n}{t}{t}{t}Else{n}{t}{t}{t}{t}BankType = "Type: Savings"{n}{t}{t}{t}End If{n}{t}{t}{t}EffDate = "Withdrawal Date: " + GetVerboseDate(GetDate(IAEFWksht.EFEFWDate)){n}{t}{t}Else{n}{t}{t}{t}DispMethText = "Paper Check"{n}{t}{t}End If{n}{t}{t}{n}{t}{t}ReturnVal = RefOweText + "/Payment Method: " + DispMethText + "/" + Routing + "/" + AcctNum + "/" + BankType + "/" + EffDate{n}{t}Else{n}{t}{t}If GetBool(IA1040X.EFAmend) = True Then{n}{t}{t}{t}ReturnVal = "Iowa:  No Refund or Balance Due on Amended Return"{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = "Iowa:  No Refund or Balance Due"{n}{t}{t}End If{n}{t}End If{n}End Sub
Sub Yes_Calculation(){n}{t}If (GetBool(IAEFWksht.DirDeposit) = True And GetCurrency(IAEFWksht.Refund) > 0) Or (GetBool(IAEFWksht.EFW) = True And GetCurrency(IAEFWksht.AmtOwed) > 0) Then{n}{t}{t}Dim count As Integer{n}{t}{t}Dim MaxAcct As Integer{n}{t}{t}{n}{t}{t}count = 1{n}{t}{t}MaxAcct = GetAllCopies(USWBankAcct){n}{n}{t}{t}Do While count <= MaxAcct{n}{t}{t}{t}If GetString(USWBankAcct.BankAcct, count) <> "" Then{n}{t}{t}{t}{t}If IsStrEqual(GetString(IAEFWksht.Acct), GetString(USWBankAcct.BankAcct, count)) Then{n}{t}{t}{t}{t}{t}ReturnVal = GetBool(USWBankAcct.IAT, count){n}{t}{t}{t}{t}{t}count = 99{n}{t}{t}{t}{t}End If{n}{t}{t}{t}End If{n}{t}{t}{t}count = count + 1{n}{t}{t}Loop{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End SubSub AdjBal_Calculation(){n}{t}ReturnVal = GetCurrency(IAEstimates.Balance) + GetCurrency(IAEstimates.OthTax){n}End Sub
Sub AskSp_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True Or GetBool(IAF1040.MFJ) = True Then{n}{t}{t}If GetCurrency(IAEstimates.Overpayment) > 0 And GetBool(IAEstimates.Taxpayer) = True Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub AskStillPay_Calculation(){n}{t}If GetBool(IAEstimates.StillPay) = True Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetBool(IAEstimates.Print) = False Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Balance_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAEstimates.IATax) - GetCurrency(IAEstimates.NonrefCr)){n}End Sub
Sub Common_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.TPCommon){n}End Sub
Sub DDAcct_Calculation(){n}{t}If GetBool(IAEstimates.DirectDebEst) = True And (GetCurrency(IAEstimates.Est1Amt) = 0 And GetCurrency(IAEstimates.Est2Amt) = 0 And GetCurrency(IAEstimates.Est3Amt) = 0 And GetCurrency(IAEstimates.Est4Amt) = 0) Then{n}{t}{t}ReturnVal = ""{n}{t}ElseIf (GetBool(IAEstimates.DirectDebEst) = True And (GetCurrency(IAEstimates.Est1Amt) > 0 Or GetCurrency(IAEstimates.Est2Amt) > 0 Or GetCurrency(IAEstimates.Est3Amt) > 0 Or GetCurrency(IAEstimates.Est4Amt) > 0)) Then{n}{t}{t}Dim count As Integer{n}{t}{t}Dim MaxAcct As Integer{n}{t}{t}Dim Acct As String{n}{t}{t}{n}{t}{t}count = 1{n}{t}{t}MaxAcct = GetAllCopies(USWBankAcct){n}{t}{t}Acct = ""{n}{n}{t}{t}Do While count <= MaxAcct{n}{t}{t}{t}If GetString(USWBankAcct.BankAcct, count) <> "" Then{n}{t}{t}{t}{t}If GetBool(USWBankAcct.Default, count) = True Then{n}{t}{t}{t}{t}{t}ReturnVal = GetString(USWBankAcct.BankAcct, count){n}{t}{t}{t}{t}{t}count = 99{n}{t}{t}{t}{t}End If{n}{t}{t}{t}End If{n}{t}{t}{t}count = count + 1{n}{t}{t}Loop{n}{t}{t}ReturnVal = ""{n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub Description_Calculation(){n}{t}If GetBool(IAEstimates.Taxpayer) = True Then{n}{t}{t}ReturnVal = GetString(IAEstimates.Common){n}{t}ElseIf GetBool(IAEstimates.Spouse) = True Then{n}{t}{t}ReturnVal = GetString(IAEstimates.SpouseCommon){n}{t}Else{n}{t}{t}ReturnVal = GetString(IAEstimates.JtCommon){n}{t}End If{n}End Sub
Sub Est1Amt_Calculation(){n}{t}If GetBool(IAEstimates.Est1) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAEstimates.V1PayAmt1){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Est1Date_Calculation(){n}{t}If GetBool(IAEstimates.Est1) = True Then{n}{t}{t}ReturnVal = MakeDate(4, 30, YearNumber + 1){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub Est2Amt_Calculation(){n}{t}If GetBool(IAEstimates.Est2) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAEstimates.V2PayAmt1){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Est2Date_Calculation(){n}{t}If GetBool(IAEstimates.Est2) = True Then{n}{t}{t}ReturnVal = MakeDate(7, 1, YearNumber + 1){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub Est3Amt_Calculation(){n}{t}If GetBool(IAEstimates.Est3) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAEstimates.V3PayAmt1){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Est3Date_Calculation(){n}{t}If GetBool(IAEstimates.Est3) = True Then{n}{t}{t}ReturnVal = MakeDate(9, 30, YearNumber + 1){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub Est4Amt_Calculation(){n}{t}If GetBool(IAEstimates.Est4) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAEstimates.V4PayAmt1){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Est4Date_Calculation(){n}{t}If GetBool(IAEstimates.Est4) = True Then{n}{t}{t}ReturnVal = MakeDate(1, 31, YearNumber + 2){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub EstAcctNum_Calculation(){n}{t}If GetBool(IAEstimates.DirectDebEst) = True And (GetCurrency(IAEstimates.Est1Amt) = 0 And GetCurrency(IAEstimates.Est2Amt) = 0 And GetCurrency(IAEstimates.Est3Amt) = 0 And GetCurrency(IAEstimates.Est4Amt) = 0) Then{n}{t}{t}ReturnVal = ""{n}{t}ElseIf (GetBool(IAEstimates.DirectDebEst) = True And (GetCurrency(IAEstimates.Est1Amt) > 0 Or GetCurrency(IAEstimates.Est2Amt) > 0 Or GetCurrency(IAEstimates.Est3Amt) > 0 Or GetCurrency(IAEstimates.Est4Amt) > 0)) Then{n}{t}{t}Dim count As Integer{n}{t}{t}Dim MaxAcct As Integer{n}{t}{t}{n}{t}{t}count = 1{n}{t}{t}MaxAcct = GetAllCopies(USWBankAcct){n}{n}{t}{t}Do While count <= MaxAcct{n}{t}{t}{t}If GetString(USWBankAcct.BankAcct, count) <> "" Then{n}{t}{t}{t}{t}If IsStrEqual(GetString(IAEstimates.DDAcct), GetString(USWBankAcct.BankAcct, count)) Then{n}{t}{t}{t}{t}{t}ReturnVal = GetString(USWBankAcct.AcctNum, count){n}{t}{t}{t}{t}{t}count = 99{n}{t}{t}{t}{t}End If{n}{t}{t}{t}End If{n}{t}{t}{t}count = count + 1{n}{t}{t}Loop{n}{t}{t}ReturnVal = ""{n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub EstAcctNum2_Calculation(Index As Integer){n}{t}ReturnVal = GetString(IAEstimates.EstAcctNum){n}End Sub
Sub EstChecking_Calculation(){n}{t}If GetBool(IAEstimates.DirectDebEst) = True And (GetCurrency(IAEstimates.Est1Amt) = 0 And GetCurrency(IAEstimates.Est2Amt) = 0 And GetCurrency(IAEstimates.Est3Amt) = 0 And GetCurrency(IAEstimates.Est4Amt) = 0) Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf (GetBool(IAEstimates.DirectDebEst) = True And (GetCurrency(IAEstimates.Est1Amt) > 0 Or GetCurrency(IAEstimates.Est2Amt) > 0 Or GetCurrency(IAEstimates.Est3Amt) > 0 Or GetCurrency(IAEstimates.Est4Amt) > 0)) Then{n}{t}{t}Dim count As Integer{n}{t}{t}Dim MaxAcct As Integer{n}{t}{t}{n}{t}{t}count = 1{n}{t}{t}MaxAcct = GetAllCopies(USWBankAcct){n}{n}{t}{t}Do While count <= MaxAcct{n}{t}{t}{t}If GetString(USWBankAcct.BankAcct, count) <> "" Then{n}{t}{t}{t}{t}If IsStrEqual(GetString(IAEstimates.DDAcct), GetString(USWBankAcct.BankAcct, count)) Then{n}{t}{t}{t}{t}{t}ReturnVal = GetBool(USWBankAcct.Checking, count){n}{t}{t}{t}{t}{t}count = 99{n}{t}{t}{t}{t}End If{n}{t}{t}{t}End If{n}{t}{t}{t}count = count + 1{n}{t}{t}Loop{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub EstChecking2_Calculation(Index As Integer){n}{t}ReturnVal = GetBool(IAEstimates.EstChecking){n}End Sub
Sub EstDed_Calculation(){n}' updated for 2018{n}{n}{t}If GetBool(IAEstimates.Joint) = True Then{n}{t}{t}ReturnVal = 5120@{n}{t}Else{n}{t}{t}ReturnVal = 2080@{n}{t}End If{n}End Sub
Sub EstEFW_Calculation(){n}{t}If GetBool(IAEstimates.EstIAT) = True Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAEstimates.DirectDebEst) = True Then{n}{t}{t}If GetBool(IAEstimates.EstPay1) = True Or GetBool(IAEstimates.EstPay2) = True Or GetBool(IAEstimates.EstPay3) = True Or GetBool(IAEstimates.EstPay4) = True Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub EstIAT_Calculation(){n}{t}If GetBool(IAEstimates.DirectDebEst) = True And (GetCurrency(IAEstimates.Est1Amt) = 0 And GetCurrency(IAEstimates.Est2Amt) = 0 And GetCurrency(IAEstimates.Est3Amt) = 0 And GetCurrency(IAEstimates.Est4Amt) = 0) Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf (GetBool(IAEstimates.DirectDebEst) = True And (GetCurrency(IAEstimates.Est1Amt) > 0 Or GetCurrency(IAEstimates.Est2Amt) > 0 Or GetCurrency(IAEstimates.Est3Amt) > 0 Or GetCurrency(IAEstimates.Est4Amt) > 0)) Then{n}{t}{t}Dim count As Integer{n}{t}{t}Dim MaxAcct As Integer{n}{t}{t}{n}{t}{t}count = 1{n}{t}{t}MaxAcct = GetAllCopies(USWBankAcct){n}{n}{t}{t}Do While count <= MaxAcct{n}{t}{t}{t}If GetString(USWBankAcct.BankAcct, count) <> "" Then{n}{t}{t}{t}{t}If IsStrEqual(GetString(IAEstimates.DDAcct), GetString(USWBankAcct.BankAcct, count)) Then{n}{t}{t}{t}{t}{t}ReturnVal = GetBool(USWBankAcct.IAT, count){n}{t}{t}{t}{t}{t}count = 99{n}{t}{t}{t}{t}End If{n}{t}{t}{t}End If{n}{t}{t}{t}count = count + 1{n}{t}{t}Loop{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub EstIATNo_Calculation(){n}{t}ReturnVal = GetBool(IAEstimates.EstEFW){n}End Sub
Sub EstPay1_Calculation(){n}{t}If GetBool(IAEstimates.Est1) = True And GetCurrency(IAEstimates.Est1Amt) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub EstPay2_Calculation(){n}{t}If GetBool(IAEstimates.Est2) = True And GetCurrency(IAEstimates.Est2Amt) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub EstPay3_Calculation(){n}{t}If GetBool(IAEstimates.Est3) = True And GetCurrency(IAEstimates.Est3Amt) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub EstPay4_Calculation(){n}{t}If GetBool(IAEstimates.Est4) = True And GetCurrency(IAEstimates.Est4Amt) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub EstRTN_Calculation(){n}{t}If GetBool(IAEstimates.DirectDebEst) = True And (GetCurrency(IAEstimates.Est1Amt) = 0 And GetCurrency(IAEstimates.Est2Amt) = 0 And GetCurrency(IAEstimates.Est3Amt) = 0 And GetCurrency(IAEstimates.Est4Amt) = 0) Then{n}{t}{t}ReturnVal = ""{n}{t}ElseIf (GetBool(IAEstimates.DirectDebEst) = True And (GetCurrency(IAEstimates.Est1Amt) > 0 Or GetCurrency(IAEstimates.Est2Amt) > 0 Or GetCurrency(IAEstimates.Est3Amt) > 0 Or GetCurrency(IAEstimates.Est4Amt) > 0)) Then{n}{t}{t}Dim count As Integer{n}{t}{t}Dim MaxAcct As Integer{n}{t}{t}{n}{t}{t}count = 1{n}{t}{t}MaxAcct = GetAllCopies(USWBankAcct){n}{n}{t}{t}Do While count <= MaxAcct{n}{t}{t}{t}If GetString(USWBankAcct.BankAcct, count) <> "" Then{n}{t}{t}{t}{t}If IsStrEqual(GetString(IAEstimates.DDAcct), GetString(USWBankAcct.BankAcct, count)) Then{n}{t}{t}{t}{t}{t}ReturnVal = GetString(USWBankAcct.RTN, count){n}{t}{t}{t}{t}{t}count = 99{n}{t}{t}{t}{t}End If{n}{t}{t}{t}End If{n}{t}{t}{t}count = count + 1{n}{t}{t}Loop{n}{t}{t}ReturnVal = ""{n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub EstRTN2_Calculation(Index As Integer){n}{t}ReturnVal = GetString(IAEstimates.EstRTN){n}End Sub
Sub EstSavings_Calculation(){n}{t}If GetBool(IAEstimates.DirectDebEst) = True And (GetCurrency(IAEstimates.Est1Amt) = 0 And GetCurrency(IAEstimates.Est2Amt) = 0 And GetCurrency(IAEstimates.Est3Amt) = 0 And GetCurrency(IAEstimates.Est4Amt) = 0) Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf (GetBool(IAEstimates.DirectDebEst) = True And (GetCurrency(IAEstimates.Est1Amt) > 0 Or GetCurrency(IAEstimates.Est2Amt) > 0 Or GetCurrency(IAEstimates.Est3Amt) > 0 Or GetCurrency(IAEstimates.Est4Amt) > 0)) Then{n}{t}{t}Dim count As Integer{n}{t}{t}Dim MaxAcct As Integer{n}{t}{t}{n}{t}{t}count = 1{n}{t}{t}MaxAcct = GetAllCopies(USWBankAcct){n}{n}{t}{t}Do While count <= MaxAcct{n}{t}{t}{t}If GetString(USWBankAcct.BankAcct, count) <> "" Then{n}{t}{t}{t}{t}If IsStrEqual(GetString(IAEstimates.DDAcct), GetString(USWBankAcct.BankAcct, count)) Then{n}{t}{t}{t}{t}{t}ReturnVal = GetBool(USWBankAcct.Savings, count){n}{t}{t}{t}{t}{t}count = 99{n}{t}{t}{t}{t}End If{n}{t}{t}{t}End If{n}{t}{t}{t}count = count + 1{n}{t}{t}Loop{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub EstSavings2_Calculation(Index As Integer){n}{t}ReturnVal = GetBool(IAEstimates.EstSavings){n}End Sub
Sub Exist_Calculation(){n}{t}ReturnVal = 1{n}End Sub
Sub GrossIncOption_Calculation(){n}{t}If GetBool(IAEstimates.Gross) = True Then{n}{t}{t}ReturnVal = CDollar(GetFloat(IAEstimates.Gross5) * 0.05){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub IANetInc_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAEstimates.NetInc) - GetCurrency(IAEstimates.FedTaxPd)){n}End Sub
Sub IATax_Calculation(){n}{t}If GetFloat(IAEstimates.NRIAPer) < 1# Then{n}{t}{t}ReturnVal = CDollar(GetFloat(IAEstimates.NetTax) * GetFloat(IAEstimates.NRIAPer)){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAEstimates.NetTax){n}{t}End If{n}End Sub
Sub JtCommon_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.CombFirst){n}End Sub
Sub MainName_Calculation(){n}{t}If GetBool(IAEstimates.Taxpayer) = True Then{n}{t}{t}ReturnVal = GetString(IARequired.TPComb){n}{t}ElseIf GetBool(IAEstimates.Spouse) = True Then{n}{t}{t}ReturnVal = GetString(IARequired.SPComb){n}{t}Else{n}{t}{t}ReturnVal = GetString(IARequired.JTComb){n}{t}End If{n}End Sub
Sub Names_Calculation(){n}{t}If GetBool(IAEstimates.Spouse) = True Then{n}{t}{t}ReturnVal = GetString(IARequired.SPCombName){n}{t}ElseIf GetBool(IAEstimates.Taxpayer) = True Then{n}{t}{t}ReturnVal = GetString(IARequired.TPCombName){n}{t}Else{n}{t}{t}ReturnVal = GetString(IARequired.CombNames){n}{t}End If{n}End Sub
Sub NetTax_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAEstimates.TotEstLiab) - GetCurrency(IAEstimates.TotCr)){n}End Sub
Sub NoBankSel3_Calculation(){n}{t}If GetBool(IAEstimates.DirectDebEst) = True Then{n}{t}{t}If Trim(GetString(IAEstimates.DDAcct)) = "" Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub NoBankSelInt3_Calculation(){n}{t}If GetBool(IAEstimates.DirectDebEst) = True And (GetCurrency(IAEstimates.Est1Amt) > 0 Or GetCurrency(IAEstimates.Est2Amt) > 0 Or GetCurrency(IAEstimates.Est3Amt) > 0 Or GetCurrency(IAEstimates.Est4Amt) > 0) Then{n}{t}{t}If GetBool(USTopicList.HaveBankWSSend) = False Then{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}ElseIf Trim(GetString(IAEstimates.DDAcct)) = "" Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub NRIAPer_Calculation(){n}{t}If GetCurrency(IAEstimates.NetInc) = 0 Then{n}{t}{t}ReturnVal = 0#{n}{t}ElseIf GetCurrency(IAEstimates.NRIAInc) = 0 Then{n}{t}{t}ReturnVal = 1#{n}{t}Else{n}{t}{t}ReturnVal = MinValue(1#, Round((GetFloat(IAEstimates.NRIAInc) / GetFloat(IAEstimates.NetInc)) * 10000) / 10000){n}{t}End If{n}End Sub
Sub Overpayment_Calculation(){n}{t}If GetCurrency(IAF1040.OVerPaid) > 0 Then{n}{t}{t}If GetBool(IAEstimates.Spouse) = False Then{n}{t}{t}{t}ReturnVal = MaxValue(0, GetCurrency(IAF1040.OVerPaid) - GetCurrency(IAF1040.Penalty)){n}{t}{t}ElseIf GetBool(IAEstimates.Spouse) = True And GetBool(IAEstimates.Taxpayer, 1) = False And GetBool(IAEstimates.Taxpayer, 2) = False Then{n}{t}{t}{t}ReturnVal = MaxValue(0, GetCurrency(IAF1040.OVerPaid) - GetCurrency(IAF1040.Penalty)){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = MinValue(MaxValue(0, (GetCurrency(IAF1040.OVerPaid)) - GetCurrency(IAF1040.Penalty)), GetCurrency(IAEstimates.SpOvpd, FieldCopies(IAEstimates.Taxpayer))){n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Owner_Calculation(){n}{t}If GetBool(IAEstimates.Taxpayer) = True And Trim(GetString(USWBasicInfo.FirstName)) = "" Then{n}{t}{t}ReturnVal = "the taxpayer"{n}{t}ElseIf GetBool(IAEstimates.Taxpayer) = True Then{n}{t}{t}ReturnVal = GetString(USWBasicInfo.FirstName){n}{t}ElseIf GetBool(IAEstimates.Spouse) = True And Trim(GetString(USWBasicInfo.SpouseFirst)) = "" Then{n}{t}{t}ReturnVal = "the spouse"{n}{t}ElseIf GetBool(IAEstimates.Spouse) = True Then{n}{t}{t}ReturnVal = GetString(USWBasicInfo.SpouseFirst){n}{t}Else{n}{t}{t}ReturnVal = "the taxpayer and spouse"{n}{t}End If{n}End Sub
Sub Payments_Calculation(){n}{t}ReturnVal = GetCurrency(IAEstimates.V1PayAmt1) + GetCurrency(IAEstimates.V2PayAmt1) + GetCurrency(IAEstimates.V3PayAmt1) + GetCurrency(IAEstimates.V4PayAmt1){n}End Sub
Sub Print_Calculation(){n}{t}If GetCurrency(IAEstimates.TaxDue) > 0 Then{n}{t}{t}If GetCurrency(IAEstimates.V1PayAmt1) + GetCurrency(IAEstimates.V2PayAmt1) + GetCurrency(IAEstimates.V3PayAmt1) + GetCurrency(IAEstimates.V4PayAmt1) Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub PYTaxOption_Calculation(){n}{t}Dim TotTax As Currency{n}{t}Dim SubTot As Currency{n}{n}{t}If GetBool(IAEstimates.Spouse) = True Then{n}{t}{t}TotTax = GetCurrency(IAF1040.BBal4){n}{t}ElseIf GetBool(IAEstimates.Taxpayer) = True Then{n}{t}{t}TotTax = GetCurrency(IAF1040.ABal4){n}{t}Else{n}{t}{t}TotTax = GetCurrency(IAF1040.ABal4) + GetCurrency(IAF1040.BBal4){n}{t}End If{n}{t}{n}{t}If GetCurrency(IARequired.IAAGI) > 150000@ Then{n}{t}{t}SubTot = CDollar((TotTax) * 1.1){n}{t}Else{n}{t}{t}SubTot = TotTax{n}{t}End If{n}{t}{n}{t}If GetBool(IAEstimates.PYTax) = True Then{n}{t}{t}ReturnVal = MaxValue(0, SubTot - GetCurrency(IAEstimates.PYCredits)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}{t}{n}End Sub
Sub Quarter_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IAEstimates.TaxDue) * 0.25){n}End Sub
Sub RndV1_Calculation(){n}{t}Dim L16 As Currency{n}{t}Dim R25 As Currency{n}{t}Dim R50 As Currency{n}{t}Dim R100 As Currency{n}{t}Dim Drop As Integer{n}{t}Dim Drop25 As Integer{n}{t}Dim Drop50 As Integer{n}{t}Dim Drop100 As Integer{n}{t}Dim Payment As Currency{n}{t}Dim Payment25 As Currency{n}{t}Dim Payment50 As Currency{n}{t}Dim Payment100 As Currency{n}{t}{n}{t}L16 = GetCurrency(IAEstimates.Roundup10){n}{t}R25 = GetCurrency(IAEstimates.Roundup25){n}{t}R50 = GetCurrency(IAEstimates.Roundup50){n}{t}R100 = GetCurrency(IAEstimates.Roundup100){n}{t}{t}{n}{t}Drop = CLng(L16 / 40@){n}{t}Drop25 = CLng(R25 / 100@){n}{t}Drop50 = CLng(R50 / 200@){n}{t}Drop100 = CLng(R100 / 400@){n}{t}{n}{t}Payment = (CCur(Drop) * 40@) + 40@{n}{t}Payment25 = (CCur(Drop25) * 100@) + 100@{n}{t}Payment50 = (CCur(Drop50) * 200@) + 200@{n}{t}Payment100 = (CCur(Drop100) * 400@) + 400@{n}  {n}{t}If GetBool(IAEstimates.Round10) = True Then{n}{t}{t}If (L16 Mod 40@) = 0 Then{n}{t}{t}{t}ReturnVal = Round(CDollar(CDbl(L16) * 0.25)){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = Round(CDollar(CDbl(Payment) * 0.25)){n}{t}{t}End If{n}{t}ElseIf GetBool(IAEstimates.Round25) = True Then{n}{t}{t}If (R25 Mod 100@) = 0 Then{n}{t}{t}{t}ReturnVal = Round(CDollar(CDbl(R25) * 0.25)){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = Round(CDollar(CDbl(Payment25) * 0.25)){n}{t}{t}End If{n}{t}ElseIf GetBool(IAEstimates.Round50) = True Then{n}{t}{t}If (R50 Mod 200@) = 0 Then{n}{t}{t}{t}ReturnVal = Round(CDollar(CDbl(R50) * 0.25)){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = Round(CDollar(CDbl(Payment50) * 0.25)){n}{t}{t}End If{n}{t}ElseIf GetBool(IAEstimates.Round100) = True Then{n}{t}{t}If (R100 Mod 400@) = 0 Then{n}{t}{t}{t}ReturnVal = Round(CDollar(CDbl(R100) * 0.25)){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = Round(CDollar(CDbl(Payment100) * 0.25)){n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = Round(CDollar(GetFloat(IAEstimates.TaxDue) * 0.25)){n}{t}End If{n}{n}End Sub
Sub RndV2_Calculation(){n}{t}Dim L16 As Currency{n}{t}Dim R25 As Currency{n}{t}Dim R50 As Currency{n}{t}Dim R100 As Currency{n}{t}Dim Drop As Integer{n}{t}Dim Drop25 As Integer{n}{t}Dim Drop50 As Integer{n}{t}Dim Drop100 As Integer{n}{t}Dim Payment As Currency{n}{t}Dim Payment25 As Currency{n}{t}Dim Payment50 As Currency{n}{t}Dim Payment100 As Currency{n}{t}{n}{t}L16 = GetCurrency(IAEstimates.Roundup10) - GetCurrency(IAEstimates.V1Pay){n}{t}R25 = GetCurrency(IAEstimates.Roundup25) - GetCurrency(IAEstimates.V1Pay){n}{t}R50 = GetCurrency(IAEstimates.Roundup50) - GetCurrency(IAEstimates.V1Pay){n}{t}R100 = GetCurrency(IAEstimates.Roundup100) - GetCurrency(IAEstimates.V1Pay){n}{t}{t}{n}{t}Drop = CLng(L16 / 30@){n}{t}Drop25 = CLng(R25 / 75@){n}{t}Drop50 = CLng(R50 / 150@){n}{t}Drop100 = CLng(R100 / 300@){n}{t}{n}{t}Payment = (CCur(Drop) * 30@) + 30@{n}{t}Payment25 = (CCur(Drop25) * 75@) + 75@{n}{t}Payment50 = (CCur(Drop50) * 150@) + 150@{n}{t}Payment100 = (CCur(Drop100) * 300@) + 300@{n}  {n}{t}If GetBool(IAEstimates.Round10) = True Then{n}{t}{t}If (L16 Mod 30@) = 0 Then{n}{t}{t}{t}ReturnVal = Round(CDollar(CDbl(L16) * 0.333333)){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = Round(CDollar(CDbl(Payment) * 0.333333)){n}{t}{t}End If{n}{t}ElseIf GetBool(IAEstimates.Round25) = True Then{n}{t}{t}If (R25 Mod 75@) = 0 Then{n}{t}{t}{t}ReturnVal = Round(CDollar(CDbl(R25) * 0.333333)){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = Round(CDollar(CDbl(Payment25) * 0.333333)){n}{t}{t}End If{n}{t}ElseIf GetBool(IAEstimates.Round50) = True Then{n}{t}{t}If (R50 Mod 150@) = 0 Then{n}{t}{t}{t}ReturnVal = Round(CDollar(CDbl(R50) * 0.333333)){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = Round(CDollar(CDbl(Payment50) * 0.333333)){n}{t}{t}End If{n}{t}ElseIf GetBool(IAEstimates.Round100) = True Then{n}{t}{t}If (R100 Mod 300@) = 0 Then{n}{t}{t}{t}ReturnVal = Round(CDollar(CDbl(R100) * 0.333333)){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = Round(CDollar(CDbl(Payment100) * 0.333333)){n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = Round(CDollar(CDbl(GetCurrency(IAEstimates.TaxDue) - GetCurrency(IAEstimates.V1Pay)) * 0.333333)){n}{t}End If{n}{n}End Sub
Sub RndV3_Calculation(){n}   Dim L16 As Currency{n}{t}Dim R25 As Currency{n}{t}Dim R50 As Currency{n}{t}Dim R100 As Currency{n}{t}Dim Drop As Integer{n}{t}Dim Drop25 As Integer{n}{t}Dim Drop50 As Integer{n}{t}Dim Drop100 As Integer{n}{t}Dim Payment As Currency{n}{t}Dim Payment25 As Currency{n}{t}Dim Payment50 As Currency{n}{t}Dim Payment100 As Currency{n}{t}{n}{t}L16 = GetCurrency(IAEstimates.Roundup10) - GetCurrency(IAEstimates.V1Pay) - GetCurrency(IAEstimates.V2Pay){n}{t}R25 = GetCurrency(IAEstimates.Roundup25) - GetCurrency(IAEstimates.V1Pay) - GetCurrency(IAEstimates.V2Pay){n}{t}R50 = GetCurrency(IAEstimates.Roundup50) - GetCurrency(IAEstimates.V1Pay) - GetCurrency(IAEstimates.V2Pay){n}{t}R100 = GetCurrency(IAEstimates.Roundup100) - GetCurrency(IAEstimates.V1Pay) - GetCurrency(IAEstimates.V2Pay){n}{t}{t}{n}{t}Drop = CLng(L16 / 20@){n}{t}Drop25 = CLng(R25 / 50@){n}{t}Drop50 = CLng(R50 / 100@){n}{t}Drop100 = CLng(R100 / 200@){n}{t}{n}{t}Payment = (CCur(Drop) * 20@) + 20@{n}{t}Payment25 = (CCur(Drop25) * 50@) + 50@{n}{t}Payment50 = (CCur(Drop50) * 100@) + 100@{n}{t}Payment100 = (CCur(Drop100) * 200@) + 200@{n}  {n}{t}If GetBool(IAEstimates.Round10) = True Then{n}{t}{t}If (L16 Mod 20@) = 0 Then{n}{t}{t}{t}ReturnVal = Round(CDollar(CDbl(L16) * 0.5)){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = Round(CDollar(CDbl(Payment) * 0.5)){n}{t}{t}End If{n}{t}ElseIf GetBool(IAEstimates.Round25) = True Then{n}{t}{t}If (R25 Mod 50@) = 0 Then{n}{t}{t}{t}ReturnVal = Round(CDollar(CDbl(R25) * 0.5)){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = Round(CDollar(CDbl(Payment25) * 0.5)){n}{t}{t}End If{n}{t}ElseIf GetBool(IAEstimates.Round50) = True Then{n}{t}{t}If (R50 Mod 100@) = 0 Then{n}{t}{t}{t}ReturnVal = Round(CDollar(CDbl(R50) * 0.5)){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = Round(CDollar(CDbl(Payment50) * 0.5)){n}{t}{t}End If{n}{t}ElseIf GetBool(IAEstimates.Round100) = True Then{n}{t}{t}If (R100 Mod 200@) = 0 Then{n}{t}{t}{t}ReturnVal = Round(CDollar(CDbl(R100) * 0.5)){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = Round(CDollar(CDbl(Payment100) * 0.5)){n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = Round(CDollar(CDbl(GetCurrency(IAEstimates.TaxDue) - GetCurrency(IAEstimates.V1Pay) - GetCurrency(IAEstimates.V2Pay)) * 0.5)){n}{t}End If{n}End Sub
Sub RndV4_Calculation(){n}{t}Dim L16 As Currency{n}{t}Dim R25 As Currency{n}{t}Dim R50 As Currency{n}{t}Dim R100 As Currency{n}{t}Dim Drop As Integer{n}{t}Dim Drop25 As Integer{n}{t}Dim Drop50 As Integer{n}{t}Dim Drop100 As Integer{n}{t}Dim Payment As Currency{n}{t}Dim Payment25 As Currency{n}{t}Dim Payment50 As Currency{n}{t}Dim Payment100 As Currency{n}{t}{n}{t}L16 = GetCurrency(IAEstimates.Roundup10) - GetCurrency(IAEstimates.V1Pay) - GetCurrency(IAEstimates.V2Pay) - GetCurrency(IAEstimates.V3Pay){n}{t}R25 = GetCurrency(IAEstimates.Roundup25) - GetCurrency(IAEstimates.V1Pay) - GetCurrency(IAEstimates.V2Pay) - GetCurrency(IAEstimates.V3Pay){n}{t}R50 = GetCurrency(IAEstimates.Roundup50) - GetCurrency(IAEstimates.V1Pay) - GetCurrency(IAEstimates.V2Pay) - GetCurrency(IAEstimates.V3Pay){n}{t}R100 = GetCurrency(IAEstimates.Roundup100) - GetCurrency(IAEstimates.V1Pay) - GetCurrency(IAEstimates.V2Pay) - GetCurrency(IAEstimates.V3Pay){n}{t}{t}{n}{t}Drop = CLng(L16 / 10@){n}{t}Drop25 = CLng(R25 / 25@){n}{t}Drop50 = CLng(R50 / 50@){n}{t}Drop100 = CLng(R100 / 100@){n}{t}{n}{t}Payment = (CCur(Drop) * 10@) + 10@{n}{t}Payment25 = (CCur(Drop25) * 10@) + 10@{n}{t}Payment50 = (CCur(Drop50) * 10@) + 10@{n}{t}Payment100 = (CCur(Drop100) * 100@) + 100@{n}  {n}{t}If GetBool(IAEstimates.Round10) = True Then{n}{t}{t}If (L16 Mod 10@) = 0 Then{n}{t}{t}{t}ReturnVal = L16{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = Round(Payment){n}{t}{t}End If{n}{t}ElseIf GetBool(IAEstimates.Round25) = True Then{n}{t}{t}If (R25 Mod 25@) = 0 Then{n}{t}{t}{t}ReturnVal = R25{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = Round(Payment25){n}{t}{t}End If{n}{t}ElseIf GetBool(IAEstimates.Round50) = True Then{n}{t}{t}If (R50 Mod 50@) = 0 Then{n}{t}{t}{t}ReturnVal = R50{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = Round(Payment50){n}{t}{t}End If{n}{t}ElseIf GetBool(IAEstimates.Round100) = True Then{n}{t}{t}If (R100 Mod 100@) = 0 Then{n}{t}{t}{t}ReturnVal = R100{n}{t}   Else{n}{t}{t}{t}ReturnVal = Round(Payment100){n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = Round(GetCurrency(IAEstimates.TaxDue) - GetCurrency(IAEstimates.V1Pay) - GetCurrency(IAEstimates.V2Pay) - GetCurrency(IAEstimates.V3Pay)){n}{t}End If{n}End Sub
Sub Roundup10_Calculation(){n}{t}Dim Required As Currency{n}{t}Dim Drop As Integer{n}{t}Dim Payment As Currency{n}{t}{n}{t}Required = GetCurrency(IAEstimates.TaxDue){n}{t}{t}{n}{t}Drop = CLng(Required / 40@){n}{t}{n}{t}Payment = (CCur(Drop) * 40@) + 40@{n}  {n}{t}If GetBool(IAEstimates.Round10) = True Then{n}{t}{t}If (Required Mod 40@) = 0 Then{n}{t}{t}{t}ReturnVal = Required{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = Payment{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAEstimates.TaxDue){n}{t}End If{n}End Sub
Sub Roundup100_Calculation(){n}{t}Dim Required As Currency{n}{t}Dim Drop As Integer{n}{t}Dim Payment As Currency{n}{t}{n}{t}Required = GetCurrency(IAEstimates.TaxDue){n}{t}{t}{n}{t}Drop = CLng(GetFloat(IAEstimates.TaxDue) / 40000#){n}{t}{n}{t}Payment = (CCur(Drop) * 400@) + 400@{n}  {n}{t}If GetBool(IAEstimates.Round100) = True Then{n}{t}{t}If (Required Mod 400@) = 0 Then{n}{t}{t}{t}ReturnVal = Required{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = Payment{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAEstimates.TaxDue){n}{t}End If{n}End Sub
Sub Roundup25_Calculation(){n}{t}Dim Required As Currency{n}{t}Dim Drop As Integer{n}{t}Dim Payment As Currency{n}{t}{n}{t}Required = GetCurrency(IAEstimates.TaxDue){n}{t}{t}{n}{t}Drop = CLng(GetFloat(IAEstimates.TaxDue) / 10000#){n}{t}{n}{t}Payment = (CCur(Drop) * 100@) + 100@{n}  {n}{t}If GetBool(IAEstimates.Round25) = True Then{n}{t}{t}If (Required Mod 100@) = 0 Then{n}{t}{t}{t}ReturnVal = Required{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = Payment{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAEstimates.TaxDue){n}{t}End If{n}End Sub
Sub Roundup50_Calculation(){n}{t}Dim Required As Currency{n}{t}Dim Drop As Integer{n}{t}Dim Payment As Currency{n}{t}{n}{t}Required = GetCurrency(IAEstimates.TaxDue){n}{t}{t}{n}{t}Drop = CLng(CDbl(Required) / 20000#){n}{t}{n}{t}Payment = (CCur(Drop) * 200@) + 200@{n}  {n}{t}If GetBool(IAEstimates.Round50) = True Then{n}{t}{t}If (Required Mod 200@) = 0 Then{n}{t}{t}{t}ReturnVal = Required{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = Payment{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAEstimates.TaxDue){n}{t}End If{n}End Sub
Sub SpouseCommon_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.SPCommon){n}End Sub
Sub SSN_Calculation(){n}{t}If GetBool(IAEstimates.Spouse) = True Then{n}{t}{t}ReturnVal = GetString(IAF1040.SpouseSSN){n}{t}Else{n}{t}{t}ReturnVal = GetString(IAF1040.SSN){n}{t}End If{n}End Sub
Sub Tax_Calculation(){n}{t}ReturnVal = NextYearTax(GetCurrency(IAEstimates.TaxInc)){n}End Sub
Sub TaxDue_Calculation(){n}{t}If GetBool(IAEstimates.Gross) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAEstimates.GrossIncOption){n}{t}ElseIf GetBool(IAEstimates.PYTax) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAEstimates.PYTaxOption){n}{t}ElseIf GetCurrency(IAEstimates.TotEstTax) > 200@ Or GetBool(IAEstimates.StillPay) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAEstimates.TotEstTax){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TaxInc_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAEstimates.IANetInc) - GetCurrency(IAEstimates.EstDed)){n}End Sub
Sub Taxpayer_Calculation(){n}{t}ReturnVal = 1{n}End Sub
Sub TotApplied_Calculation(){n}{t}ReturnVal = (GetCurrency(IAEstimates.V1Apply) + GetCurrency(IAEstimates.V2Apply) + GetCurrency(IAEstimates.V3Apply) + GetCurrency(IAEstimates.V4Apply)){n}End Sub
Sub TotCr_Calculation(){n}{t}If GetBool(IAEstimates.Joint) = True Then{n}{t}{t}ReturnVal = 80@{n}{t}Else{n}{t}{t}ReturnVal = 40@{n}{t}End If{n}End Sub
Sub TotEstimate_Calculation(){n}{t}ReturnVal = GetCurrency(IAEstimates.V1Pay) + GetCurrency(IAEstimates.V2Pay) + GetCurrency(IAEstimates.V3Pay) + GetCurrency(IAEstimates.V4Pay){n}End Sub
Sub TotEstLiab_Calculation(){n}{t}ReturnVal = GetCurrency(IAEstimates.Tax) + GetCurrency(IAEstimates.MinTax) + GetCurrency(IAEstimates.LSD){n}End Sub
Sub TotEstTax_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAEstimates.AdjBal) - GetCurrency(IAEstimates.IACr)){n}End Sub
Sub TotNetTax2_Calculation(){n}{t}If GetBool(IAEstimates.Taxpayer) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAEstimates.Overpayment){n}{t}Else{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(IAEstimates.Overpayment) - GetCurrency(IAEstimates.SpOvpd)){n}{t}End If{n}End Sub
Sub V1Apply_Calculation(){n}{t}Dim Smaller As Currency{n}{t}{n}{t}Smaller = MinValue(GetCurrency(IAEstimates.TotNetTax2), GetCurrency(IAEstimates.SpecAmt)){n}{n}{t}If GetBool(IAEstimates.Refund) = True Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAEstimates.ApplySpecific) = True And GetCurrency(IAEstimates.TaxDue) = 0 Then{n}{t}{t}ReturnVal = Smaller{n}{t}ElseIf GetBool(IAEstimates.ApplySpecific) = True Then{n}{t}{t}ReturnVal = MinValue(Smaller, GetCurrency(IAEstimates.V1Pay)){n}{t}Else{n}{t}{t}ReturnVal = MinValue(GetCurrency(IAEstimates.TotNetTax2), GetCurrency(IAEstimates.V1Pay)){n}{t}End If{n}End Sub
Sub V1Pay_Calculation(){n}{t}ReturnVal = GetCurrency(IAEstimates.RndV1){n}End Sub
Sub V1PayAmt1_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAEstimates.V1Pay) - GetCurrency(IAEstimates.V1Apply)){n}End Sub
Sub V2Apply_Calculation(){n}{t}Dim Smaller As Currency{n}{t}Dim Limited As Currency{n}{t}Dim Limited2 As Currency{n}{t}{n}{t}Smaller = MinValue(GetCurrency(IAEstimates.TotNetTax2), GetCurrency(IAEstimates.SpecAmt)){n}{t}Limited = MinValue(GetCurrency(IAEstimates.V2Pay), GetCurrency(IAEstimates.TotNetTax2) - GetCurrency(IAEstimates.V1Pay)){n}{t}Limited2 = MinValue(GetCurrency(IAEstimates.V2Pay), Smaller - GetCurrency(IAEstimates.V1Pay)){n}{n}{t}If GetBool(IAEstimates.Refund) = True Or GetBool(IAEstimates.FirstQt) = True Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAEstimates.ApplySpecific) = True Then{n}{t}{t}ReturnVal = MaxValue(0, Limited2){n}{t}Else{n}{t}{t}ReturnVal = MaxValue(0, Limited){n}{t}End If{n}End Sub
Sub V2Pay_Calculation(){n}{t}ReturnVal = GetCurrency(IAEstimates.RndV2){n}End Sub
Sub V2PayAmt1_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAEstimates.V2Pay) - GetCurrency(IAEstimates.V2Apply)){n}End Sub
Sub V3Apply_Calculation(){n}{t}Dim Smaller As Currency{n}{t}Dim Limited As Currency{n}{t}Dim Limited2 As Currency{n}{t}{t}{n}{t}Smaller = MinValue(GetCurrency(IAEstimates.TotNetTax2), GetCurrency(IAEstimates.SpecAmt)){n}{t}Limited = MinValue(GetCurrency(IAEstimates.V3Pay), GetCurrency(IAEstimates.TotNetTax2) - GetCurrency(IAEstimates.V1Pay) - GetCurrency(IAEstimates.V2Pay)){n}{t}Limited2 = MinValue(GetCurrency(IAEstimates.V3Pay), Smaller - GetCurrency(IAEstimates.V1Pay) - GetCurrency(IAEstimates.V2Pay)){n}{t}{n}{t}If GetBool(IAEstimates.Refund) = True Or GetBool(IAEstimates.FirstQt) = True Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAEstimates.ApplySpecific) = True Then{n}{t}{t}ReturnVal = MaxValue(0, Limited2){n}{t}Else{n}{t}{t}ReturnVal = MaxValue(0, Limited){n}{t}End If{n}End Sub
Sub V3Pay_Calculation(){n}{t}ReturnVal = GetCurrency(IAEstimates.RndV3){n}End Sub
Sub V3PayAmt1_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAEstimates.V3Pay) - GetCurrency(IAEstimates.V3Apply)){n}End Sub
Sub V4Apply_Calculation(){n}{t}Dim Smaller As Currency{n}{t}Dim Limited As Currency{n}{t}{n}{t}If GetBool(IAEstimates.Refund) = True Or GetBool(IAEstimates.FirstQt) = True Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAEstimates.ApplyAll) = True Then{n}{t}{t}Limited = MaxValue(0, GetCurrency(IAEstimates.TotNetTax2) - GetCurrency(IAEstimates.V1Pay) - GetCurrency(IAEstimates.V2Pay) - GetCurrency(IAEstimates.V3Pay)){n}{t}{t}ReturnVal = MinValue(GetCurrency(IAEstimates.V4Pay), Limited){n}{t}ElseIf GetBool(IAEstimates.ApplySpecific) = True Then{n}{t}{t}Smaller = MinValue(GetCurrency(IAEstimates.TotNetTax2), GetCurrency(IAEstimates.SpecAmt)){n}{t}{t}ReturnVal = MaxValue(0, Smaller - GetCurrency(IAEstimates.V1Apply) - GetCurrency(IAEstimates.V2Apply) - GetCurrency(IAEstimates.V3Apply)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub V4Pay_Calculation(){n}{t}ReturnVal = GetCurrency(IAEstimates.RndV4){n}End Sub
Sub V4PayAmt1_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAEstimates.V4Pay) - GetCurrency(IAEstimates.V4Apply)){n}End SubSub AAlimony_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(USWRec.TAlimony){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USWRec.TotAlimony){n}{t}End If{n}End Sub
Sub AAlimonyP_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(USWRec.TAlimonyAdj){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USWRec.TotAlimonyAdj){n}{t}End If{n}End Sub
Sub AAltTax_Calculation(){n}' 1st condition added for situation when MFS return and reporting spouse income causes an alternate tax calculation yet taxpayer has zero income{n}' See saved return IA MFS Alternate Tax Issue.ta2{n}{t}If GetBool(IAF1040.MFS) = True And GetCurrency(IAF1040.ATaxInc) = 0 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf (GetCurrency(IAWkAltTax.Mult) < GetCurrency(IAWkAltTax.Tables)) And GetBool(IAWkAltTax.Qualify) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.ATax){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAF1040.ARegTax){n}{t}End If{n}End Sub
Sub AApply99_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAEstimates.TotApplied) - GetCurrency(IAF1040.BApply99)){n}End Sub
Sub ABal1_Calculation(){n}{t}If IAFS() = 1 And GetBool(IAF1040.DepY) = False Then{n}{t}{t}ReturnVal = GetCurrency(IARequired.TaxReduction){n}{t}Else{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(IAF1040.ATotIATax) - GetCurrency(IAF1040.ACredits)){n}{t}End If{n}End Sub
Sub ABal2_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAF1040.ABal1) - GetCurrency(IAF1040.ACrNon)){n}End Sub
Sub ABal4_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAF1040.ABal3) - GetCurrency(IAF1040.AOthIACr)){n}End Sub
Sub ABal36_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.ABalance){n}End Sub
Sub ABal3_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAF1040.ABal2) - GetCurrency(IAF1040.AOutState)){n}End Sub
Sub ABalance_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.ATotTax) - GetCurrency(IAF1040.AFedDed){n}End Sub
Sub ABusInc_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(USWRec.TBusiness){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USWRec.TotBusiness){n}{t}End If{n}End Sub
Sub ABusIncL_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(USWRec.THalfSe){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USWRec.TotHalfSE){n}{t}End If{n}End Sub
Sub ACapGain_Calculation(){n}{t}Dim CapGain As Currency{n}{t}{n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}CapGain = GetCurrency(USF1040.CapGain){n}{t}Else{n}{t}{t}CapGain = GetCurrency(USF1040NR.CapGain){n}{t}End If{n}{t}{n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = CapGain - GetCurrency(IAF1040.BCapGain){n}{t}Else{n}{t}{t}ReturnVal = CapGain{n}{t}End If{n}End Sub
Sub AChild_Calculation(){n}{t}If GetBool(IAF1040.ChildCareCk) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAChildCredit.TChild){n}{t}ElseIf GetBool(IAF1040.EarlyChildCk) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAChildCredit.TEarly){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub ACredits_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.AExemCr) + GetCurrency(IAF1040.ATuit) + GetCurrency(IAF1040.AVolFireCr){n}End Sub
Sub ACrNon_Calculation(){n}{t}ReturnVal = GetCurrency(IAF126.ACredit){n}End Sub
Sub ActNum_Calculation(){n}{t}If GetBool(IAEFWksht.PrepBPTrans) = True Then{n}{t}{t}ReturnVal = ""{n}{t}ElseIf GetBool(IAEFWksht.DirDeposit) = True And GetBool(IAEFWksht.Yes) = False And GetCurrency(IAEFWksht.Refund) > 0 Then{n}{t}{t}ReturnVal = GetString(IAEFWksht.DirDepDan){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub Add_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.HomeComb){n}End Sub
Sub ADedBox_Calculation(){n}' updated for 2018{n}{t}{n}{t}Dim Itemized As Currency{n}{t}Dim Deduction As Currency{n}{t}{n}{t}If GetBool(IAF1040.CombMFS) = True Or GetBool(IAF1040.MFS) = True Then{n}{t}{t}Itemized = GetCurrency(IASchA.YouPC){n}{t}Else{n}{t}{t}Itemized = GetCurrency(IASchA.Item){n}{t}End If{n}{n}{t}If GetBool(IAF1040.ItemCheck) = True Then{n}{t}{t}Deduction = Itemized{n}{t}ElseIf IAFS() = 2 Or IAFS() = 5 Or IAFS() = 6 Then{n}{t}{t}Deduction = MinValue(5000@, GetCurrency(IAF1040.ABal36)){n}{t}Else{n}{t}{t}Deduction = MinValue(2030@, GetCurrency(IAF1040.ABal36)){n}{t}End If{n}{t}{n}{t}ReturnVal = MaxValue(0, Deduction){n}End Sub
Sub ADividend_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IARequired.TotTPDiv){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IARequired.TotDiv){n}{t}End If{n}End Sub
Sub AEst_Calculation(){n}{t}If GetBool(IA1040X.EFAmend) = True Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(IAStateEst.TotIAEst) - GetCurrency(IAStateEst.SPIAEst)) + GetCurrency(IA1040X.TotPrevTax){n}{t}Else{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(IAStateEst.TotIAEst) - GetCurrency(IAStateEst.SPIAEst)){n}{t}End If{n}End Sub
Sub AEstTax_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IAFedEst.TPTotEst){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAFedEst.TPTotEst) + GetCurrency(IAFedEst.SPTotEst){n}{t}End If{n}End Sub
Sub AExemCr_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.ExempA){n}End Sub
Sub AFarm_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(USWRec.TFarm){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USWRec.TotFarm){n}{t}End If{n}End Sub
Sub AFedDed_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.ATaxWith) + GetCurrency(IAF1040.AEstTax) + GetCurrency(IAF1040.APrior){n}End Sub
Sub AFedTax_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.ARefund) + GetCurrency(IAF1040.ASelf){n}End Sub
Sub AFuel_Calculation(){n}{t}ReturnVal = GetCurrency(IASch4136.TotCr, FieldCopies(IASch4136.Taxpayer)){n}End Sub
Sub AGamble_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = True Then{n}{t}{t}ReturnVal = GetCurrency(USSchNEC.Gambling130) + GetCurrency(USSchNEC.Gambling1Oth) + GetCurrency(USSchNEC.Gambling10) + GetCurrency(USSchNEC.Gambling230) + GetCurrency(USSchNEC.Gambling2Oth){n}{t}ElseIf IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.TPOth3){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.TotGamb){n}{t}End If{n}End Sub
Sub AGross_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.AWages) + GetCurrency(IAF1040.AInterest) + GetCurrency(IAF1040.ADividend) + GetCurrency(IAF1040.AAlimony) + GetCurrency(IAF1040.ABusInc) + GetCurrency(IAF1040.ACapGain) + GetCurrency(IAF1040.AOthGain) + GetCurrency(IAF1040.AIRA) + GetCurrency(IAF1040.APensions) + GetCurrency(IAF1040.ARents) + GetCurrency(IAF1040.AFarm) + GetCurrency(IAF1040.AUnemp) + GetCurrency(IAF1040.AGamble) + GetCurrency(IAF1040.AOtherInc){n}End Sub
Sub AHealth_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IAWHealth.TPTotal){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAWHealth.TPTotal) + GetCurrency(IAWHealth.SPTotal){n}{t}End If{n}End Sub
Sub AIAMin_Calculation(){n}{t}ReturnVal = GetCurrency(IA6251.TotAMT){n}End Sub
Sub AIATaxWith_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IARequired.TIAW2WH) + GetCurrency(IARequired.TPW2GWH) + GetCurrency(IARequired.Tot1042S) + GetCurrency(IARequired.TPCapGainWH) + GetCurrency(IARequired.TPDivWH) + GetCurrency(IARequired.TPUnemWH) + GetCurrency(IARequired.TPIntWH) + GetCurrency(IARequired.TPKWH) + GetCurrency(IARequired.TPMiscWH) + GetCurrency(IARequired.TPOIDWH) + GetCurrency(IARequired.T1099rWH) + GetCurrency(IARequired.TpOthIncWH){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IARequired.TotIAW2WH) + GetCurrency(IARequired.TotW2GWH) + GetCurrency(IARequired.Tot1042S) + GetCurrency(IARequired.TotCapGainWH) + GetCurrency(IARequired.TotDivWH) + GetCurrency(IARequired.TotUnemWH) + GetCurrency(IARequired.TotIntWH) + GetCurrency(IARequired.TotKWH) + GetCurrency(IARequired.TotMiscWH) + GetCurrency(IARequired.TotOIDWH) + GetCurrency(IARequired.Tot1099rWH) + GetCurrency(IARequired.TotOthIncWH){n}{t}End If{n}End Sub
Sub AIEIC_Calculation(){n}{t}If IAFS() = 3 Or IAFS() = 4 Then{n}{t}{t}ReturnVal = GetCurrency(IARequired.TIAEic){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IARequired.IAEic){n}{t}End If{n}End Sub
Sub AInterest_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IARequired.TotTPInt){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IARequired.TotInt){n}{t}End If{n}End Sub
Sub AIRA_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IAWPenExc.TPIRA){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAWPenExc.TPIRA) + GetCurrency(IAWPenExc.SPIRA){n}{t}End If{n}End Sub
Sub AKeogh_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(USWRec.TKeough) + GetCurrency(IARequired.TIRA){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USWRec.TotKeough) + GetCurrency(USWRec.TotIRAAdj){n}{t}End If{n}End Sub
Sub ALump_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = CDollar(GetFloat(USF4972.Tax) * 0.25){n}{t}Else{n}{t}{t}ReturnVal = CDollar(GetFloat(USF4972.Tax) * 0.25) + CDollar(GetFloat(USF4972Spouse.Tax) * 0.25){n}{t}End If{n}End Sub
Sub AMove_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IARequired.TMove){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IARequired.TotMove){n}{t}End If{n}End Sub
Sub ANet_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.AGross) - GetCurrency(IAF1040.ATotAdj){n}End Sub
Sub AOthAdj_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IAOthAdj.TPTot){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAOthAdj.TPTot) + GetCurrency(IAOthAdj.SPTot){n}{t}End If{n}End Sub
Sub AOtherInc_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TPTot){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TPTot) + GetCurrency(IAWOthInc.SPTot){n}{t}End If{n}End Sub
Sub AOthGain_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(USWRec.TOthGain){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USWRec.TotOthGain){n}{t}End If{n}End Sub
Sub AOthIACr_Calculation(){n}{t}ReturnVal = GetCurrency(IA148.TotNonRefCr){n}End Sub
Sub AOthRefCr_Calculation(){n}{t}ReturnVal = GetCurrency(IA148.TotRefCr){n}End Sub
Sub AOutState_Calculation(){n}{t}ReturnVal = GetCurrency(IA130.TPCredit){n}End Sub
Sub APenalty_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(USWRec.TEarlyPen){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USWRec.TotEarlyPen){n}{t}End If{n}End Sub
Sub APenExcl_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IAWPenExc.TPPenExc){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAWPenExc.TPPenExc) + GetCurrency(IAWPenExc.SPPenExc){n}{t}End If{n}End Sub
Sub APensions_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IAWPenExc.TPPensions){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAWPenExc.TPPensions) + GetCurrency(IAWPenExc.SPPensions){n}{t}End If{n}End Sub
Sub APrior_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IAAddFedTax.TPTotal){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAAddFedTax.TPTotal) + GetCurrency(IAAddFedTax.SPTotal){n}{t}End If{n}End Sub
Sub ARefund_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IAFedRef.TPST){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAFedRef.SPST) + GetCurrency(IAFedRef.TPST){n}{t}End If{n}End Sub
Sub ARegTax_Calculation(){n}' updated for 2018{n}{n}{t}Dim Mid As Currency{n}{t}Dim MidInt As Long{n}{t}Dim TotTaxInc As Currency{n}{t}{n}{t}TotTaxInc = GetCurrency(IAF1040.ATaxInc){n}{t}{n}{t}If TotTaxInc > 95650@ Then{n}{t}{t}Mid = TotTaxInc{n}{t}ElseIf TotTaxInc > 150@ Then{n}{t}{t}MidInt = CLng((TotTaxInc - 1@) / 50@){n}{t}{t}Mid = (CCur(MidInt) * 50@) + 25@{n}{t}Else{n}{t}{t}Mid = 0@{n}{t}End If{n}{n}{t}ReturnVal = Tax(Mid){n}{n}End Sub
Sub ARents_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(USWRec.TRental){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USWRec.TotRental){n}{t}End If{n}End Sub
Sub ARepSSB_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IAWkSSB.TPRepSSB){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAWkSSB.ReportSSB){n}{t}End If{n}End Sub
Sub ASch_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IAF1040.ABal4) * GetFloat(IAF1040.SchRate)){n}End Sub
Sub ASelf_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IASETax.TPTotal){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IASETax.TPTotal) + GetCurrency(IASETax.SPTotal){n}{t}End If{n}End Sub
Sub ATax_Calculation(){n}{t}If GetNumber(IAWkAltTax.ProRate) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAWkAltTax.ATax){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAWkAltTax.Lesser){n}{t}End If{n}End Sub
Sub ATaxB4Cont_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.ABal4) + GetCurrency(IAF1040.ASch){n}End Sub
Sub ATaxInc_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAF1040.ABal36) - GetCurrency(IAF1040.ADedBox)){n}End Sub
Sub ATaxWith_Calculation(){n}{t}Dim TotWH As Currency{n}{t}{n}{t}If GetBool(USWResidency.F1040NR) = True Then{n}{t}{t}TotWH = GetCurrency(USF1040NR.WHW2) + GetCurrency(USF1040NR.WH8805) + GetCurrency(USF1040NR.WH8288A) + GetCurrency(USF1040NR.WH1042S){n}{t}Else{n}{t}{t}TotWH = GetCurrency(USF1040.WH) + Round(GetCurrency(USDW2AS.ASWH, FieldCopies(USDW2AS.Taxpayer))) + Round(GetCurrency(USDW2VI.VIWH, FieldCopies(USDW2VI.Taxpayer))){n}{t}End If{n}{t}{n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = MaxValue(0, TotWH - GetCurrency(IAF1040.BTaxWith)){n}{t}Else{n}{t}{t}ReturnVal = TotWH{n}{t}End If{n}End Sub
Sub ATot67_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.AFuel) + GetCurrency(IAF1040.AChild) + GetCurrency(IAF1040.AIEIC) + GetCurrency(IAF1040.AOthRefCr) + GetCurrency(IAF1040.AIATaxWith) + GetCurrency(IAF1040.AEst){n}End Sub
Sub ATotAdj_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.AKeogh) + GetCurrency(IAF1040.ABusIncL) + GetCurrency(IAF1040.AHealth) + GetCurrency(IAF1040.APenalty) + GetCurrency(IAF1040.AAlimonyP) + GetCurrency(IAF1040.APenExcl) + GetCurrency(IAF1040.AMove) + GetCurrency(IAF1040.AGainDed) + GetCurrency(IAF1040.AOthAdj){n}End Sub
Sub ATotIATax_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.AAltTax) + GetCurrency(IAF1040.ALump) + GetCurrency(IAF1040.AIAMin){n}End Sub
Sub ATotTax_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.ANet) + GetCurrency(IAF1040.AFedTax){n}End Sub
Sub ATuit_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IATuition.TTuit){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IATuition.TotCr){n}{t}End If{n}End Sub
Sub AUnemp_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(USWRec.TUnem) - Round(GetCurrency(USWUnempl.RRBSub, FieldCopies(USWUnempl.Taxpayer)))){n}{t}Else{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(USWRec.TotUnem) - Round(GetCurrency(USWUnempl.RRBSub))){n}{t}End If{n}End Sub
Sub AVolFireCr_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IAFireCr.TPTotCr){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAFireCr.TPTotCr) + GetCurrency(IAFireCr.SPTotCr){n}{t}End If{n}End Sub
Sub AWages_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(USWRec.TWages){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USWRec.TotWages){n}{t}End If{n}End Sub
Sub BAlimony_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(USWRec.SAlimony){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BAlimonyP_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(USWRec.SAlimonyAdj){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BAltTax_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}If (GetCurrency(IAWkAltTax.Mult) < GetCurrency(IAWkAltTax.Tables)) And GetBool(IAWkAltTax.Qualify) = True Then{n}{t}{t}{t}ReturnVal = GetCurrency(IAF1040.BTax){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = GetCurrency(IAF1040.BRegTax){n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BApply99_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IAF1040.OVerPaid), GetCurrency(IAEstimates.TotApplied, FieldCopies(IAEstimates.Spouse))){n}End Sub
Sub BBal1_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAF1040.BTotIATax) - GetCurrency(IAF1040.BCredits)){n}End Sub
Sub BBal2_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAF1040.BBal1) - GetCurrency(IAF1040.BCrNon)){n}End Sub
Sub BBal4_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAF1040.BBal3) - GetCurrency(IAF1040.BOthIACr)){n}End Sub
Sub BBal36_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.BBalance){n}End Sub
Sub BBal3_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAF1040.BBal2) - GetCurrency(IAF1040.BOutState)){n}End Sub
Sub BBalance_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.BTotTax) - GetCurrency(IAF1040.BFedDed){n}End Sub
Sub BBusInc_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(USWRec.SBusiness){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BBusIncL_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(USWRec.SHalfSe){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BCapGain_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}If GetCurrency(USWDRec.CapGain) < 0@ Then{n}{t}{t}{t}ReturnVal = GetCurrency(IARequired.SLimLoss){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = GetCurrency(USWDRec.SCapGain){n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BChild_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}If GetBool(IAF1040.ChildCareCk) = True Then{n}{t}{t}{t}ReturnVal = GetCurrency(IAChildCredit.SChild){n}{t}{t}ElseIf GetBool(IAF1040.EarlyChildCk) = True Then{n}{t}{t}{t}ReturnVal = GetCurrency(IAChildCredit.SEarly){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BCredits_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.BExemCr) + GetCurrency(IAF1040.BTuit) + GetCurrency(IAF1040.BVolFireCr){n}End Sub
Sub BCrNon_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}If GetBool(IAF126.SpNonRes) = True Or GetBool(IAF126.SpPYRes) = True Then{n}{t}{t}{t}ReturnVal = GetCurrency(IAF126.BCredit){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BDedBox_Calculation(){n}' updated for 2018{n}{n}Dim Deduction As Currency{n}{n}{t}If IAFS() = 3 Then{n}{t}{t}If GetBool(IAF1040.ItemCheck) = True Then{n}{t}{t}{t}Deduction = GetCurrency(IASchA.SpPro){n}{t}{t}Else{n}{t}{t}{t}Deduction = MinValue(2030@, GetCurrency(IAF1040.BBal36)){n}{t}{t}End If{n}{t}Else{n}{t}{t}Deduction = 0{n}{t}End If{n}{t}{n}{t}ReturnVal = MaxValue(0, Deduction){n}{t}{n}End Sub
Sub BDividend_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IARequired.TotSPDiv){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BEst_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IAStateEst.SPIAEst){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BEstTax_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IAFedEst.SPTotEst){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BExemCr_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.ExempB){n}End Sub
Sub BFarm_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(USWRec.SFarm){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BFedDed_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.BTaxWith) + GetCurrency(IAF1040.BEstTax) + GetCurrency(IAF1040.BPrior){n}End Sub
Sub BFedTax_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.BRefund) + GetCurrency(IAF1040.BSelf){n}End Sub
Sub BFuel_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IASch4136.TotCr, FieldCopies(IASch4136.Spouse)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BGamble_Calculation(){n}{t}If IAFS() = 3 And GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.SPOth3){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BGross_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.BWages) + GetCurrency(IAF1040.BInterest) + GetCurrency(IAF1040.BDividend) + GetCurrency(IAF1040.BAlimony) + GetCurrency(IAF1040.BBusInc) + GetCurrency(IAF1040.BCapGain) + GetCurrency(IAF1040.BOthGain) + GetCurrency(IAF1040.BIRA) + GetCurrency(IAF1040.BPensions) + GetCurrency(IAF1040.BRents) + GetCurrency(IAF1040.BFarm) + GetCurrency(IAF1040.BUnemp) + GetCurrency(IAF1040.BGamble) + GetCurrency(IAF1040.BOtherInc){n}End Sub
Sub BHealth_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IAWHealth.SPTotal){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BIAMin_Calculation(){n}{t}ReturnVal = GetCurrency(IA6251Sp.TotAMT){n}End Sub
Sub BIATaxWith_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IARequired.SIAW2WH) + GetCurrency(IARequired.SPW2GWH) + GetCurrency(IARequired.SPCapGainWH) + GetCurrency(IARequired.SPDivWH) + GetCurrency(IARequired.SPUnemWH) + GetCurrency(IARequired.SPIntWH) + GetCurrency(IARequired.SPKWH) + GetCurrency(IARequired.SPMiscWH) + GetCurrency(IARequired.SPOIDWH) + GetCurrency(IARequired.S1099RWH) + GetCurrency(IARequired.SPOthIncWH){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BIEIC_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IARequired.SIaEIC){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BInterest_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IARequired.TotSPInt){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BIRA_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IAWPenExc.SPIRA){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BKeogh_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(USWRec.SKeough) + GetCurrency(IARequired.SIRA){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BLump_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = CDollar(GetFloat(USF4972Spouse.Tax) * 0.25){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BMove_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IARequired.SMove){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BNet_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.BGross) - GetCurrency(IAF1040.BTotAdj){n}End Sub
Sub BOthAdj_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IAOthAdj.SPTot){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BOtherInc_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.SPTot){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BOthGain_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(USWRec.SOthGain){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BOthIACr_Calculation(){n}{t}ReturnVal = GetCurrency(IA148Sp.TotNonRefCr){n}End Sub
Sub BOthRefCr_Calculation(){n}{t}ReturnVal = GetCurrency(IA148Sp.TotRefCr){n}End Sub
Sub BOutState_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IA130.SPCredit){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BPenalty_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(USWRec.SEarlyPen){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BPenExcl_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IAWPenExc.SPPenExc){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BPensions_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IAWPenExc.SPPensions){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BPrior_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IAAddFedTax.SPTotal){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BRefund_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IAFedRef.SPST){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BRegTax_Calculation(){n}' updated for 2018{n}{n}{t}Dim Mid As Currency{n}{t}Dim MidInt As Long{n}{t}Dim TotTaxInc As Currency{n}{t}{n}{t}If GetBool(IAF1040.MFS) = True Then{n}{t}{t}TotTaxInc = GetCurrency(IAF1040.SpTaxInc){n}{t}Else{n}{t}{t}TotTaxInc = GetCurrency(IAF1040.BTaxInc){n}{t}End If{n}{t}{n}{t}If TotTaxInc > 95650@ Then{n}{t}{t}Mid = TotTaxInc{n}{t}ElseIf TotTaxInc > 150@ Then{n}{t}{t}MidInt = CLng((TotTaxInc - 1@) / 50@){n}{t}{t}Mid = (CCur(MidInt) * 50@) + 25@{n}{t}Else{n}{t}{t}Mid = 0@{n}{t}End If{n}{t}{n}{t}ReturnVal = Tax(Mid){n}{n}End Sub
Sub BRents_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(USWRec.SRental){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BRepSSB_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IAWkSSB.SPRepSSB){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BSch_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IAF1040.BBal4) * GetFloat(IAF1040.SchRate)){n}End Sub
Sub BSelf_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IASETax.SPTotal){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BTax_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IAWkAltTax.BTax){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BTaxB4Cont_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.BBal4) + GetCurrency(IAF1040.BSch){n}End Sub
Sub BTaxInc_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAF1040.BBal36) - GetCurrency(IAF1040.BDedBox)){n}End Sub
Sub BTaxWith_Calculation(){n}{t}Dim JT As Currency{n}{t}Dim SPW2 As Currency{n}{t}Dim SP As Currency{n}{t}{n}{t}JT = CDollar(CDbl(Round(GetCurrency(USD1099INT.WH, FieldCopies(USD1099INT.Joint))) + Round(GetCurrency(USD1099K.WH, FieldCopies(USD1099K.Joint))) + Round(GetCurrency(USD1099OID.WH, FieldCopies(USD1099OID.Joint))) + Round(GetCurrency(USD1099MISC.WH, FieldCopies(USD1099MISC.Joint))) + Round(GetCurrency(USD1099DIV.WH, FieldCopies(USD1099DIV.Joint))) + Round(GetCurrency(USDCapGain.WH2, FieldCopies(USDCapGain.Joint))) + Round(GetCurrency(USDPartK1.BackupWith, FieldCopies(USDPartK1.Joint))) + Round(GetCurrency(USDSCorpK1.BackupWith, FieldCopies(USDSCorpK1.Joint))) + Round(GetCurrency(USDEstK1.BackupWith, FieldCopies(USDEstK1.Joint)))) * 0.5){n}{t}SPW2 = Round(GetCurrency(USDW2.WH, FieldCopies(USDW2.Spouse))) + Round(GetCurrency(USDW2AS.ASWH, FieldCopies(USDW2AS.Spouse))) + Round(GetCurrency(USDW2CM.CNMIWH, FieldCopies(USDW2CM.Spouse))) + Round(GetCurrency(USDW2GU.GuamWH, FieldCopies(USDW2GU.Spouse))) + Round(GetCurrency(USDW2VI.VIWH, FieldCopies(USDW2VI.Spouse))){n}{t}SP = Round(GetCurrency(USD1099INT.WH, FieldCopies(USD1099INT.Spouse))) + Round(GetCurrency(USD1099K.WH, FieldCopies(USD1099K.Spouse))) + Round(GetCurrency(USD1099OID.WH, FieldCopies(USD1099OID.Spouse))) + Round(GetCurrency(USD1099DIV.WH, FieldCopies(USD1099DIV.Spouse))) + Round(GetCurrency(USD1099R.WH, FieldCopies(USD1099R.Spouse))) + Round(GetCurrency(USD1099MISC.WH, FieldCopies(USD1099MISC.Spouse))) + Round(GetCurrency(USWUnempl.TPFedWH, FieldCopies(USWUnempl.Spouse))) + Round(GetCurrency(USDW2G.WH, FieldCopies(USDW2G.Spouse))) + Round(GetCurrency(USDCapGain.WH2, FieldCopies(USDCapGain.Spouse))) + Round(GetCurrency(USDRRB1099R.WH, FieldCopies(USDRRB1099R.Spouse))) + Round(GetCurrency(USDPartK1.BackupWith, FieldCopies(USDPartK1.Spouse))) + Round(GetCurrency(USDSCorpK1.BackupWith, FieldCopies(USDSCorpK1.Spouse))) + Round(GetCurrency(USDEstK1.BackupWith, FieldCopies(USDEstK1.Spouse))){n}{t}{n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = JT + SPW2 + SP + GetCurrency(USWSSBDetail.SPFedWH) + GetCurrency(USWRec.SPTotAddMedTaxWH){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BTot67_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.BFuel) + GetCurrency(IAF1040.BChild) + GetCurrency(IAF1040.BIEIC) + GetCurrency(IAF1040.BOthRefCr) + GetCurrency(IAF1040.BIATaxWith) + GetCurrency(IAF1040.BEst){n}End Sub
Sub BTotAdj_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.BKeogh) + GetCurrency(IAF1040.BBusIncL) + GetCurrency(IAF1040.BHealth) + GetCurrency(IAF1040.BPenalty) + GetCurrency(IAF1040.BAlimonyP) + GetCurrency(IAF1040.BPenExcl) + GetCurrency(IAF1040.BMove) + GetCurrency(IAF1040.BGainDed) + GetCurrency(IAF1040.BOthAdj){n}End Sub
Sub BTotIATax_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.BAltTax) + GetCurrency(IAF1040.BLump) + GetCurrency(IAF1040.BIAMin){n}End Sub
Sub BTotTax_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.BNet) + GetCurrency(IAF1040.BFedTax){n}End Sub
Sub BTuit_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IATuition.STuit){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BUnemp_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(USWRec.SUnem) - Round(GetCurrency(USWUnempl.RRBSub, FieldCopies(USWUnempl.Spouse)))){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BVolFireCr_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IAFireCr.SPTotCr){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BWages_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(USWRec.SWages){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Checking_Calculation(){n}{t}If GetBool(IAEFWksht.PrepBPTrans) = True Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAEFWksht.DirDeposit) = True And GetBool(IAEFWksht.Yes) = False And GetCurrency(IAEFWksht.Refund) > 0 Then{n}{t}{t}ReturnVal = GetBool(IAEFWksht.DirDepChecking){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub ChildCareCk_Calculation(){n}{t}If GetCurrency(IAChildCredit.TotChDepCr) <> 0 And GetCurrency(IAChildCredit.TotChDepCr) >= GetCurrency(IAChildCredit.TotCr) Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CityComb_Calculation(){n}{t}If Trim(GetString(USWBasicInfo.ForCountry)) <> "" Then{n}{t}{t}ReturnVal = GetString(USWBasicInfo.City) & ", " & GetString(USWBasicInfo.ForeignCtry) & " " & GetString(USWBasicInfo.ForeignPC){n}{t}Else{n}{t}{t}ReturnVal = GetString(USWBasicInfo.CityComb){n}{t}End If{n}End Sub
Sub CombMFS_Calculation(){n}{t}If FedFS() = 2 And (GetCurrency(USWRec.TAGI) > 2632@) And (GetCurrency(USWRec.SAGI) > 2632@) Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CountyNo_Calculation(){n}{t}ReturnVal = GetString(USZIA1040.IAPYCounty){n}End Sub
Sub DateDuePaid_Calculation(){n}{t}ReturnVal = MakeDate(4, 30, YearNumber + 1){n}End Sub
Sub DC1_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = MaxValue(0, GetNumber(USWAddDep.GrandTotDeps) - GetNumber(IAF1040.DC2)){n}{t}Else{n}{t}{t}ReturnVal = GetNumber(USWAddDep.GrandTotDeps){n}{t}End If{n}End Sub
Sub DC2_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = CLng(Round(GetNumber(USWAddDep.GrandTotDeps) * GetFloat(IARequired.BProRate))){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub DepN_Calculation(){n}{t}If GetBool(IAF1040.Single) = True Then{n}{t}{t}If GetBool(USWBasicInfo.Dopr) = True Then{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}{n}End Sub
Sub DepNames_Calculation(){n}{t}If GetNumber(IAF1040.DC1) > 0 Or GetNumber(IAF1040.DC2) > 0 Then{n}{t}{t}If GetNumber(IARequired.DepLength) > 23 Then{n}{t}{t}{t}ReturnVal = "See Attached"{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = GetString(IARequired.DepNames){n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub DepY_Calculation(){n}{t}If GetBool(IAF1040.Single) = True Then{n}{t}{t}If GetBool(USWBasicInfo.Dopr) = True Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Desc_Calculation(){n}{t}ReturnVal = GetString(IARequired.CombNames){n}End Sub
Sub EarlyChildCk_Calculation(){n}{t}If GetBool(IAF1040.ChildCareCk) = True Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetCurrency(IAChildCredit.TotCr) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Email_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.email){n}End Sub
Sub ExempA_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.TotPCa) + GetCurrency(IAF1040.TotPCb) + GetCurrency(IAF1040.TotDC1){n}End Sub
Sub ExempB_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.TotPC2a) + GetCurrency(IAF1040.TotPC2b) + GetCurrency(IAF1040.TotDC2){n}End Sub
Sub Exist_Calculation(){n}{t}ReturnVal = 1{n}End Sub
Sub FirmID_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.PrepEIN){n}End Sub
Sub FirstName_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.TPFnI){n}End Sub
Sub HOH_Calculation(){n}{t}If FedFS() = 4 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub HOHDep_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.L3Name){n}End Sub
Sub HOHSSN_Calculation(){n}{t}If GetBool(USF1040.HOH) = True Then{n}{t}{t}ReturnVal = GetString(USF1040.L3SSN){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub ItemCheck_Calculation(){n}' updated for 2018{n}{n}{t}If GetBool(IAF1040.MFSItm) = True And IAFS() = 4 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf IAFS() = 3 Then{n}{t}{t}If GetCurrency(IASchA.Item) > 4060@ Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}ElseIf IAFS() = 2 Or IAFS() = 5 Or IAFS() = 6 Then{n}{t}{t}If GetCurrency(IASchA.Item) > 5000@ Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}ElseIf GetCurrency(IASchA.Item) > 2030@ Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub LastName_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.LastName){n}End Sub
Sub LowInc_Calculation(){n}{t}If GetBool(IARequired.LowInc) = True Then{n}{t}{t}ReturnVal = "LOW INCOME EXEMPTION"{n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub MFJ_Calculation(){n}{t}If FedFS() = 2 Then{n}{t}{t}If (GetCurrency(USWRec.TAGI) < 2633@) Or (GetCurrency(USWRec.SAGI) < 2633@) Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub MFS_Calculation(){n}{t}If FedFS() = 3 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub MFSItm_Calculation(){n}{t}If GetBool(USF1040.MfsItm) = True And IAFS() = 4 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub MFSName_Calculation(){n}{t}If GetBool(IAF1040.MFS) = True Then{n}{t}{t}If Trim(GetString(USWBasicInfo.L2Name)) <> "" Then{n}{t}{t}{t}ReturnVal = GetString(USWBasicInfo.L2Name){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = GetString(USWBasicInfo.SPFnI) & " " & GetString(USWBasicInfo.SpouseLast){n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub MFSSSN_Calculation(){n}{t}If GetBool(IAF1040.MFS) = True Then{n}{t}{t}ReturnVal = GetString(USWBasicInfo.SpouseSSN){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub Over65_Calculation(){n}{t}Dim SixtyFive As Long{n}{t}Dim SPSixtyFive As Long{n}{t}{n}{t}If GetNumber(USWBasicInfo.TPAgeRec) >= 65 Then{n}{t}{t}SixtyFive = 1{n}{t}Else{n}{t}{t}SixtyFive = 0{n}{t}End If{n}{t}{n}{t}If GetNumber(USWBasicInfo.SPAgeRec) >= 65 And GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}SPSixtyFive = 1{n}{t}Else{n}{t}{t}SPSixtyFive = 0{n}{t}End If{n}{t}{n}{t}If SixtyFive + SPSixtyFive > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub OVerPaid_Calculation(){n}{t}If GetBool(IA1040X.EFAmend) = True Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(IAF1040.TotCredit) - GetCurrency(IA1040X.PrevOP) - GetCurrency(IAF1040.TotTaxCont)){n}{t}Else{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(IAF1040.TotCredit) - GetCurrency(IAF1040.TotTaxCont)){n}{t}End If{n}End Sub
Sub Owe_Calculation(){n}{t}If GetBool(IA1040X.EFAmend) = True Then{n}{t}{t}If (GetCurrency(IAF1040.Penalty) + GetCurrency(IA1040X.PrevOP) + GetCurrency(IAF1040.TotTaxCont)) - GetCurrency(IAF1040.TotCredit) > 0 Then{n}{t}{t}{t}ReturnVal = MaxValue(0, GetCurrency(IAF1040.TotTaxCont) + GetCurrency(IA1040X.PrevOP) - GetCurrency(IAF1040.TotCredit)){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}If (GetCurrency(IAF1040.Penalty) + GetCurrency(IAF1040.TotTaxCont)) - GetCurrency(IAF1040.TotCredit) > 0 Then{n}{t}{t}{t}ReturnVal = MaxValue(0, GetCurrency(IAF1040.TotTaxCont) - GetCurrency(IAF1040.TotCredit)){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}End If{n}End Sub
Sub PC1a_Calculation(){n}{t}If IAFS() = 2 Then{n}{t}{t}ReturnVal = 2{n}{t}ElseIf IAFS() = 5 Then{n}{t}{t}ReturnVal = 2{n}{t}Else{n}{t}{t}ReturnVal = 1{n}{t}End If{n}End Sub
Sub PC1b_Calculation(){n}{t}Dim SixtyFive As Long{n}{t}Dim Blind As Long{n}{t}{n}{t}If IAFS() = 2 Then{n}{t}{t}SixtyFive = GetBool(USWBasicInfo.SixtyFive) + GetBool(USWBasicInfo.Spouse65){n}{t}{t}Blind = GetBool(USWBasicInfo.Blind) + GetBool(USWBasicInfo.SpBlind){n}{t}Else{n}{t}{t}SixtyFive = GetBool(USWBasicInfo.SixtyFive){n}{t}{t}Blind = GetBool(USWBasicInfo.Blind){n}{t}End If{n}{t}{n}{t}ReturnVal = Blind + SixtyFive{n}{t}{n}End Sub
Sub PC2a_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub PC2b_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetBool(USWBasicInfo.Spouse65) + GetBool(USWBasicInfo.SpBlind){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Penalty_Calculation(){n}{t}If GetBool(IA1040X.EFAmend) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IA2210.Penalty) + GetCurrency(IA2210Sp.Penalty){n}{t}End If{n}End Sub
Sub PenInt_Calculation(){n}{t}If GetCurrency(IAF1040.Owe) > 0 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.Pen74) + GetCurrency(IAF1040.Int74){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Phone_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.Dayphone){n}End Sub
Sub PrepID_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.PrepSSN){n}End Sub
Sub PrepPhone_Calculation(){n}{t}If Trim(GetString(USWBasicInfo.PrepPhone)) <> "" Then{n}{t}{t}ReturnVal = GetString(USWBasicInfo.PrepPhone){n}{t}Else{n}{t}{t}ReturnVal = GetString(USWBasicInfo.PrepForPhone){n}{t}End If{n}End Sub
Sub QualWidow_Calculation(){n}{t}If FedFS() = 5 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub RefBalDue_Calculation(){n}{t}ReturnVal = Round(GetCurrency(IAF1040.Refund) - GetCurrency(IAF1040.TotDue)){n}End Sub
Sub Refund_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAF1040.OVerPaid) - GetCurrency(IAF1040.BApply99) - GetCurrency(IAF1040.AApply99) - GetCurrency(IAF1040.Penalty)){n}End Sub
Sub Route_Calculation(){n}{t}If GetBool(IAEFWksht.PrepBPTrans) = True Then{n}{t}{t}ReturnVal = ""{n}{t}ElseIf GetBool(IAEFWksht.DirDeposit) = True And GetBool(IAEFWksht.Yes) = False And GetCurrency(IAEFWksht.Refund) > 0 Then{n}{t}{t}ReturnVal = GetString(IAEFWksht.DirDepRTN){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub SaveCheck_Calculation(){n}{t}If GetBool(IAEFWksht.PrepBPTrans) = True Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAEFWksht.DirDeposit) = True And GetBool(IAEFWksht.Yes) = False And GetCurrency(IAEFWksht.Refund) > 0 Then{n}{t}{t}ReturnVal = GetBool(IAEFWksht.DirDepSavings){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SchNo_Calculation(){n}{t}ReturnVal = GetString(USZIA1040.IAPYSchool){n}End Sub
Sub SchRate_Calculation(){n}{t}ReturnVal = SchSurtaxRate(GetNumber(IAF1040.SchNo)){n}End Sub
Sub Single_Calculation(){n}{t}If FedFS() = 1 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPDateDeath_Calculation(){n}{t}If GetBool(IAF1040.SPDeceased) = True Then{n}{t}{t}ReturnVal = GetString(USWBasicInfo.SpDeath){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub SPDeceased_Calculation(){n}{t}If GetBool(USWBasicInfo.SpDeceased) = True And GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SpouseFirst_Calculation(){n}{t}If GetBool(IAF1040.MFJ) = True Or GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = GetString(USWBasicInfo.SPFnI){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub SpouseLast_Calculation(){n}{t}If GetBool(IAF1040.MFJ) = True Or GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = GetString(USWBasicInfo.SpouseLast){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub SpouseSSN_Calculation(){n}{t}If GetBool(IAF1040.MFJ) = True Or GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = GetString(USWBasicInfo.SpouseSSN){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.SSN){n}End Sub
Sub StadCheck_Calculation(){n}{t}If GetBool(IAF1040.ItemCheck) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = 1{n}{t}End If{n}End Sub
Sub TaxRed_Calculation(){n}{t}If GetBool(IARequired.LowInc) = True Then{n}{t}{t}ReturnVal = ""{n}{t}ElseIf IAFS() <> 1 Or GetBool(IAF1040.DepY) = True Then{n}{t}{t}ReturnVal = ""{n}{t}ElseIf GetCurrency(IAF1040.ABal1) < GetCurrency(IARequired.TentTax) Then{n}{t}{t}ReturnVal = "tax reduction"{n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub TotalTax_Calculation(){n}{t}If GetBool(IARequired.LowInc) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BTaxB4Cont) + GetCurrency(IAF1040.ATaxB4Cont){n}{t}End If{n}End Sub
Sub TotContrib_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.Wild) + GetCurrency(IAF1040.Fair) + GetCurrency(IAF1040.FFVet) + GetCurrency(IAF1040.ChildAbuse){n}End Sub
Sub TotCredit_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.BTot67) + GetCurrency(IAF1040.ATot67){n}End Sub
Sub TotDC1_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IAF1040.DC1) * 4000#){n}End Sub
Sub TotDC2_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = CDollar(GetFloat(IAF1040.DC2) * 4000#){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TotDue_Calculation(){n}{t}If GetCurrency(IAF1040.Refund) > 0 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetCurrency(IAF1040.Refund) = 0 And GetCurrency(IAF1040.OVerPaid) > 0 Then{n}{t}{t}If GetBool(IA1040X.EFAmend) = True Then{n}{t}{t}{t}ReturnVal = MaxValue(0, (GetCurrency(IAF1040.TotTaxCont) + GetCurrency(IA1040X.PrevOP) + GetCurrency(IAF1040.Penalty) + GetCurrency(IAF1040.PenInt)) - GetCurrency(IAF1040.TotCredit)){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = MaxValue(0, (GetCurrency(IAF1040.TotTaxCont) + GetCurrency(IAF1040.Penalty) + GetCurrency(IAF1040.PenInt)) - GetCurrency(IAF1040.TotCredit)){n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAF1040.Owe) + GetCurrency(IAF1040.Penalty) + GetCurrency(IAF1040.PenInt){n}{t}End If{n}End Sub
Sub TotPC2a_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IAF1040.PC2a) * 4000#){n}End Sub
Sub TotPC2b_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IAF1040.PC2b) * 2000#){n}End Sub
Sub TotPCa_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IAF1040.PC1a) * 4000#){n}End Sub
Sub TotPCb_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IAF1040.PC1b) * 2000#){n}End Sub
Sub TotTaxCont_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.TotalTax) + GetCurrency(IAF1040.TotContrib){n}End Sub
Sub TPDateDeath_Calculation(){n}   If GetBool(IAF1040.TPDeceased) = True Then{n}{t}{t}ReturnVal = GetString(USWBasicInfo.YouDeath){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub TPDeceased_Calculation(){n}{t}If GetBool(USWBasicInfo.TpDeceased) = True Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub UsedAI_Calculation(){n}{t}If GetBool(IA2210An.Print) = True Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetBool(IA2210AnSp.Print) = True Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End SubSub AAlimony_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpPYRes) = True) Or GetBool(IAF126.TpPYRes) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.AAlimony){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub AAllSource_Calculation(){n}{t}If GetBool(IAF126.TpPYNR) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.ANet){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub ABusInc_Calculation(){n}'made change based on user story 445128 to calculate when a nonresident, for past 10 years lines 1-14 only calced when a part-year res. Based on Iowa 126 instructions decided to calc lines 5, 7, 10, 11, 12, 13, and 14 when a NR/PY to be conservative.{n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.ABusInc){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub ACapGain_Calculation(){n}'decided to change this to be same as line 5, 7, 10, 11, 12, 13. Leaving lines 1-4 and 8 and 9 as they have specific instructions.{n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.ACapGain){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub ACredit_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IAF126.ANetTax) * GetFloat(IAF126.ACrPer)){n}End Sub
Sub ACrPer_Calculation(){n}{t}If GetBool(IAF126.TpPYNR) = True Then{n}{t}{t}ReturnVal = MaxValue(0, 1# - GetFloat(IAF126.AIAPer)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub ADividend_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpPYRes) = True) Or GetBool(IAF126.TpPYRes) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.ADividend){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub AFarm_Calculation(){n}'made change based on user story 445128 to calculate when a nonresident, for past 10 years lines 1-14 only calced when a part-year res. Based on Iowa 126 instructions decided to calc lines 5, 7, 10, 11, 12, 13, and 14 when a NR/PY to be conservative.{n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.AFarm){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub AGamble_Calculation(){n}'made change based on user story 445128 to calculate when a nonresident, for past 10 years lines 1-14 only calced when a part-year res. Based on Iowa 126 instructions decided to calc lines 5, 7, 10, 11, 12, 13, and 14 when a NR/PY to be conservative.{n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.AGamble){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub AIATax_Calculation(){n}{t}If GetBool(IAF126.TpPYNR) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.AAltTax){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub AInterest_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpPYRes) = True) Or GetBool(IAF126.TpPYRes) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.AInterest){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub AIRA_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IAWPenExc.NRTPIRA){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAWPenExc.NRTPIRA) + GetCurrency(IAWPenExc.NRSPIRA){n}{t}End If{n}End Sub
Sub AMove_Calculation(){n}{t}If GetBool(IAF126.TpPYRes) = True Then{n}{t}{t}If GetDate(IAF126.TpDateIn) > #12/31/2017# And GetDate(IAF126.TpDateOut) = 0 Then{n}{t}{t}{t}ReturnVal = GetCurrency(IAF1040.AMove){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub ANet_Calculation(){n}{t}ReturnVal = GetCurrency(IAF126.GrossInc) - GetCurrency(IAF126.ATotAdj){n}End Sub
Sub ANetTax_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAF126.AIATax) - GetCurrency(IAF126.ATotCr)){n}End Sub
Sub AOthAdj_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IANROthAdj.TPTot){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IANROthAdj.TPTot) + GetCurrency(IANROthAdj.SPTot){n}{t}End If{n}End Sub
Sub AOtherInc_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IANROthInc.TPTot){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IANROthInc.TPTot) + GetCurrency(IANROthInc.SPTot){n}{t}End If{n}End Sub
Sub AOthGain_Calculation(){n}'made change based on user story 445128 to calculate when a nonresident, for past 10 years lines 1-14 only calced when a part-year res. Based on Iowa 126 instructions decided to calc lines 5, 7, 10, 11, 12, 13, and 14 when a NR/PY to be conservative.{n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.AOthGain){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub APenExcl_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IAWPenExc.NRTPPenExc){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAWPenExc.NRTPPenExc) + GetCurrency(IAWPenExc.NRSPPenExc){n}{t}End If{n}End Sub
Sub APensions_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IAWPenExc.NRTPPensions){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAWPenExc.NRTPPensions) + GetCurrency(IAWPenExc.NRSPPensions){n}{t}End If{n}End Sub
Sub ARents_Calculation(){n}'made change based on user story 445128 to calculate when a nonresident, for past 10 years lines 1-14 only calced when a part-year res. Based on Iowa 126 instructions decided to calc lines 5, 7, 10, 11, 12, 13, and 14 when a NR/PY to be conservative.{n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.ARents){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub AIAPer_Calculation(){n}{t}Dim TopLim As Double{n}{t}{n}{t}If GetBool(IAF126.IANotReqFIle) = True Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAF126.TpPYNR) = True Then{n}{t}{t}If GetFloat(IAF126.AAllSource) <= 0 Then{n}{t}{t}{t}ReturnVal = 1#{n}{t}{t}Else{n}{t}{t}{t}TopLim = MinValue(1#, Round(GetFloat(IAF126.ANet) / GetFloat(IAF126.AAllSource), 3)){n}{t}{t}{t}ReturnVal = MaxValue(0, TopLim){n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub ATotAdj_Calculation(){n}{t}If GetBool(IAF126.TpPYNR) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAF126.AKeogh) + GetCurrency(IAF126.ABusIncL) + GetCurrency(IAF126.AHealth) + GetCurrency(IAF126.APenalty) + GetCurrency(IAF126.AAlimonyP) + GetCurrency(IAF126.APenExcl) + GetCurrency(IAF126.AMove) + GetCurrency(IAF126.AGainDed) + GetCurrency(IAF126.AOthAdj){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub ATotCr_Calculation(){n}{t}If GetBool(IAF126.TpPYNR) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.ACredits){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub AUnemp_Calculation(){n}'made change based on user story 445128 to calculate when a nonresident, for past 10 years lines 1-14 only calced when a part-year res. Based on Iowa 126 instructions decided to calc lines 5, 7, 10, 11, 12, 13, and 14 when a NR/PY to be conservative.{n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.AUnemp){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub AWages_Calculation(){n}{t}If IAFS() = 2 And (GetBool(IAF126.SpRes) = False Or GetBool(IAF126.TpRes) = False) Then{n}{t}{t}ReturnVal = MaxValue(GetCurrency(IAF126.TpWages), GetCurrency(IAF126.TpIAWages)) + MaxValue(GetCurrency(IAF126.SpWages), GetCurrency(IAF126.SpIAWages)){n}{t}ElseIf GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = MaxValue(GetCurrency(IAF126.TpWages), GetCurrency(IAF126.TpIAWages)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BAlimony_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True And GetBool(IAF126.SpPYRes) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BAlimony){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BAllSource_Calculation(){n}{t}If GetBool(IAF126.SpPYNR) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BNet){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BBusInc_Calculation(){n}'made change based on user story 445128 to calculate when a nonresident, for past 10 years lines 1-14 only calced when a part-year res. Based on Iowa 126 instructions decided to calc lines 5, 7, 10, 11, 12, 13, and 14 when a NR/PY to be conservative.{n}{t}If GetBool(IAF1040.CombMFS) = True And GetBool(IAF126.SpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BBusInc){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BCapGain_Calculation(){n}'decided to change this to be same as line 5, 7, 10, 11, 12, 13. Leaving lines 1-4 and 8 and 9 as they have specific instructions.{n}{t}If GetBool(IAF1040.CombMFS) = True And GetBool(IAF126.SpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BCapGain){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BCredit_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IAF126.BNetTax) * GetFloat(IAF126.BCrPer)){n}End Sub
Sub BCrPer_Calculation(){n}{t}If GetBool(IAF126.SpPYNR) = True Then{n}{t}{t}ReturnVal = MaxValue(0, 1# - GetFloat(IAF126.BIAPer)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BDividend_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True And GetBool(IAF126.SpPYRes) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BDividend){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BFarm_Calculation(){n}'made change based on user story 445128 to calculate when a nonresident, for past 10 years lines 1-14 only calced when a part-year res. Based on Iowa 126 instructions decided to calc lines 5, 7, 10, 11, 12, 13, and 14 when a NR/PY to be conservative.{n}{t}If GetBool(IAF1040.CombMFS) = True And GetBool(IAF126.SpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BFarm){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BGamble_Calculation(){n}'made change based on user story 445128 to calculate when a nonresident, for past 10 years lines 1-14 only calced when a part-year res. Based on Iowa 126 instructions decided to calc lines 5, 7, 10, 11, 12, 13, and 14 when a NR/PY to be conservative.{n}{t}If GetBool(IAF1040.CombMFS) = True And GetBool(IAF126.SpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BGamble){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BGross_Calculation(){n}{t}If GetBool(IAF126.SpPYNR) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAF126.BWages) + GetCurrency(IAF126.BInterest) + GetCurrency(IAF126.BDividend) + GetCurrency(IAF126.BAlimony) + GetCurrency(IAF126.BBusInc) + GetCurrency(IAF126.BCapGain) + GetCurrency(IAF126.BOthGain) + GetCurrency(IAF126.BIRA) + GetCurrency(IAF126.BPensions) + GetCurrency(IAF126.BRents) + GetCurrency(IAF126.BFarm) + GetCurrency(IAF126.BUnemp) + GetCurrency(IAF126.BGamble) + GetCurrency(IAF126.BOtherInc){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BIATax_Calculation(){n}{t}If GetBool(IAF126.SpPYNR) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BAltTax){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BInterest_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True And GetBool(IAF126.SpPYRes) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BInterest){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BIRA_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IAWPenExc.NRSPIRA){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BMove_Calculation(){n}{t}If IAFS() = 3 And GetBool(IAF126.SpPYRes) = True Then{n}{t}{t}If GetDate(IAF126.SpDateIn) > #12/31/2017# And GetDate(IAF126.SpDateOut) = 0 Then{n}{t}{t}{t}ReturnVal = GetCurrency(IAF1040.BMove){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BNet_Calculation(){n}{t}ReturnVal = GetCurrency(IAF126.BGross) - GetCurrency(IAF126.BTotAdj){n}End Sub
Sub BNetTax_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAF126.BIATax) - GetCurrency(IAF126.BTotCr)){n}End Sub
Sub BOthAdj_Calculation(){n}{t}If GetBool(IAF126.SpPYNR) = True Then{n}{t}{t}ReturnVal = GetCurrency(IANROthAdj.SPTot){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BOtherInc_Calculation(){n}{t}If GetBool(IAF126.SpPYNR) = True Then{n}{t}{t}ReturnVal = GetCurrency(IANROthInc.SPTot){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BOthGain_Calculation(){n}'made change based on user story 445128 to calculate when a nonresident, for past 10 years lines 1-14 only calced when a part-year res. Based on Iowa 126 instructions decided to calc lines 5, 7, 10, 11, 12, 13, and 14 when a NR/PY to be conservative.{n}{t}If GetBool(IAF1040.CombMFS) = True And GetBool(IAF126.SpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BOthGain){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BPenExcl_Calculation(){n}{t}If GetBool(IAF126.SpPYNR) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWPenExc.NRSPPenExc){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BPensions_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IAWPenExc.NRSPPensions){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BRents_Calculation(){n}'made change based on user story 445128 to calculate when a nonresident, for past 10 years lines 1-14 only calced when a part-year res. Based on Iowa 126 instructions decided to calc lines 5, 7, 10, 11, 12, 13, and 14 when a NR/PY to be conservative.{n}{t}If GetBool(IAF1040.CombMFS) = True And GetBool(IAF126.SpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BRents){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BIAPer_Calculation(){n}{t}Dim TopLim As Double{n}{t}{n}{t}If GetBool(IAF126.IANotReqFIle) = True Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAF126.SpPYNR) = True Then{n}{t}{t}If GetFloat(IAF126.BAllSource) <= 0 Then{n}{t}{t}{t}ReturnVal = 1#{n}{t}{t}Else{n}{t}{t}{t}TopLim = MinValue(1#, Round(GetFloat(IAF126.BNet) / GetFloat(IAF126.BAllSource), 3)){n}{t}{t}{t}ReturnVal = MaxValue(0, TopLim){n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BTotAdj_Calculation(){n}{t}If GetBool(IAF126.SpPYNR) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAF126.BKeogh) + GetCurrency(IAF126.BBusIncL) + GetCurrency(IAF126.BHealth) + GetCurrency(IAF126.BPenalty) + GetCurrency(IAF126.BAlimonyP) + GetCurrency(IAF126.BPenExcl) + GetCurrency(IAF126.BMove) + GetCurrency(IAF126.BGainDed) + GetCurrency(IAF126.BOthAdj){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BTotCr_Calculation(){n}{t}If GetBool(IAF126.SpPYNR) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BCredits){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BUnemp_Calculation(){n}'made change based on user story 445128 to calculate when a nonresident, for past 10 years lines 1-14 only calced when a part-year res. Based on Iowa 126 instructions decided to calc lines 5, 7, 10, 11, 12, 13, and 14 when a NR/PY to be conservative.{n}{t}If GetBool(IAF1040.CombMFS) = True And GetBool(IAF126.SpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BUnemp){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BWages_Calculation(){n}{t}If GetBool(IAF126.SpPYNR) = True Then{n}{t}{t}ReturnVal = MaxValue(GetCurrency(IAF126.SpWages), GetCurrency(IAF126.SpIAWages)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Desc_Calculation(){n}{t}Dim Total As Currency{n}{t}{n}{t}Total = GetCurrency(IAF126.BCredit) + GetCurrency(IAF126.ACredit){n}{t}{n}{t}ReturnVal = CStr(Total) & " Credit"{n}End Sub
Sub Exist_Calculation(){n}{t}ReturnVal = 1{n}End Sub
Sub GrossInc_Calculation(){n}{t}If GetBool(IAF126.TpPYNR) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAF126.AWages) + GetCurrency(IAF126.AInterest) + GetCurrency(IAF126.ADividend) + GetCurrency(IAF126.AAlimony) + GetCurrency(IAF126.ABusInc) + GetCurrency(IAF126.ACapGain) + GetCurrency(IAF126.AOthGain) + GetCurrency(IAF126.AIRA) + GetCurrency(IAF126.APensions) + GetCurrency(IAF126.ARents) + GetCurrency(IAF126.AFarm) + GetCurrency(IAF126.AUnemp) + GetCurrency(IAF126.AGamble) + GetCurrency(IAF126.AOtherInc){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub IANotReqFIle_Calculation(){n}{t}If GetBool(IAF1040.MFS) = True Then{n}{t}{t}ReturnVal = 0{t}{n}{t}ElseIf GetCurrency(IAF126.BNet) + GetCurrency(IAF126.ANet) >= 1000@ Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetCurrency(IA6251.AMT) > 0 Or GetCurrency(IA6251Sp.AMT) > 0 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetCurrency(IAF1040.BLump) > 0 Or GetCurrency(IAF1040.ALump) > 0 Then{n}{t}{t}ReturnVal = 0{t}{t}{n}{t}Else{n}{t}{t}ReturnVal = 1{n}{t}End If{t}{t}{n}End Sub
Sub Names_Calculation(){n}{t}ReturnVal = GetString(IARequired.CombNames){n}End Sub
Sub Print_Calculation(){n}{t}If GetBool(IAF126.TpPYNR) = True Or GetBool(IAF126.SpPYNR) = True Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SpIAWages_Calculation(){n}{t}Dim count1 As Long{n}{t}Dim HowManyW2 As Long{n}{t}Dim Total1 As Currency{n}{t}Dim W2Index As Long{n}{t}Dim StEpWage As Currency{n}{t}Dim AllW2Wage As Currency{t}{n}{t}Dim OthWages As Currency  {n}   {n}{t}count1 = 1{n}{t}HowManyW2 = GetAllCopies(USDW2){n}{t}Total1 = 0{n}{t}StEpWage = 0{n}{t}   {n}{t}Do While count1 <= HowManyW2{n}{t}{t}W2Index = 0{n}{t}{t}Do While W2Index < 8{n}{t}{t}{t}If GetString(USDW2.St(W2Index), count1) = "IA" And GetBool(USDW2.Stat, count1) = False And GetBool(USDW2.Spouse, count1) = True Then{n}{t}{t}{t}Total1 = Total1 + Round(GetCurrency(USDW2.StWages(W2Index), count1)){n}{t}{t}End If{n}{t}{t}W2Index = W2Index + 1{n}{t}{t}Loop{n}{t}{t}count1 = count1 + 1{n}{t}Loop{n}{t}{n}{t}Do While count1 <= HowManyW2{n}{t}{t}If GetBool(USDW2.Stat, count1) = True And GetBool(USDW2.Spouse, count1) = True Then{n}{t}{t}{t}StEpWage = StEpWage + Round(GetCurrency(USDW2.Wages, count1)){n}{t}{t}End If{n}{t}{t}count1 = count1 + 1{n}{t}Loop{t}{n}{t}{n}{t}AllW2Wage = GetCurrency(USDW2.Wages, FieldCopies(USDW2.Spouse)){n}{t}OthWages = GetCurrency(USWRec.SWages) - Round(AllW2Wage - StEpWage){n}{t}   {n}{t}ReturnVal = Total1 + OthWages{n}End Sub
Sub SpNonRes_Calculation(){n}{t}If GetBool(IAF1040.MFJ) = True Or GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SpPYNR_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True And GetBool(IAF126.SpRes) = False Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SpRes_Calculation(){n}{t}If GetBool(IAF1040.MFJ) = True Or GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SpWages_Calculation(){n}{t}Dim count1 As Integer{n}{t}Dim HowManyW2 As Long{n}{t}Dim Total1 As Currency{n}{t}Dim W2Index As Long{n}{t}{n}{t}count1 = 1{n}{t}HowManyW2 = GetAllCopies(USDW2){n}{t}Total1 = 0{n}{t}{n}{t}Do While count1 <= HowManyW2{n}{t}{t}W2Index = 0{n}{t}{t}Do While W2Index < 8{n}{t}{t}{t}If GetString(USDW2.St(W2Index), count1) <> "IA" And GetBool(USDW2.Spouse, count1) = True Then{n}{t}{t}{t}{t}Total1 = Total1 + GetCurrency(USDW2.StWages(W2Index), count1){n}{t}{t}{t}End If{n}{t}{t}{t}W2Index = W2Index + 1{n}{t}{t}Loop{n}{t}{t}count1 = count1 + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = MaxValue(0, GetCurrency(USWRec.SWages) - Total1){n}{n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IAF1040.SSN){n}End Sub
Sub TpIAWages_Calculation(){n}{t}Dim count1 As Long{n}{t}Dim HowManyW2 As Long{n}{t}Dim Total1 As Currency{n}{t}Dim W2Index As Long{n}{t}Dim StEpWage As Currency{n}{t}Dim AllW2Wage As Currency{t}{n}{t}Dim OthWages As Currency  {n}   {n}{t}count1 = 1{n}{t}HowManyW2 = GetAllCopies(USDW2){n}{t}Total1 = 0{n}{t}StEpWage = 0{n}{t}   {n}{t}Do While count1 <= HowManyW2{n}{t}{t}W2Index = 0{n}{t}{t}Do While W2Index < 8{n}{t}{t}{t}If GetString(USDW2.St(W2Index), count1) = "IA" And GetBool(USDW2.Stat, count1) = False And GetBool(USDW2.Taxpayer, count1) = True Then{n}{t}{t}{t}Total1 = Total1 + Round(GetCurrency(USDW2.StWages(W2Index), count1)){n}{t}{t}End If{n}{t}{t}W2Index = W2Index + 1{n}{t}{t}Loop{n}{t}{t}count1 = count1 + 1{n}{t}Loop{n}{t}{n}{t}Do While count1 <= HowManyW2{n}{t}{t}If GetBool(USDW2.Stat, count1) = True And GetBool(USDW2.Taxpayer, count1) = True Then{n}{t}{t}{t}StEpWage = StEpWage + Round(GetCurrency(USDW2.Wages, count1)){n}{t}{t}End If{n}{t}{t}count1 = count1 + 1{n}{t}Loop{t}{n}{t}{n}{t}AllW2Wage = GetCurrency(USDW2.Wages, FieldCopies(USDW2.Taxpayer)){n}{t}OthWages = GetCurrency(USWRec.TWages) - Round(AllW2Wage - StEpWage){n}{t}   {n}{t}ReturnVal = Total1 + OthWages{n}{n}End Sub
Sub TpJtDateIn_Calculation(){n}{t}If GetBool(IAF126.TpPYRes) = True Then{n}{t}{t}ReturnVal = GetString(IAF126.TpDateIn){n}{t}ElseIf GetBool(IAF126.TpNonRes) = True Then{n}{t}{t}ReturnVal = ""{n}{t}ElseIf GetBool(IAF1040.MFJ) = True And GetBool(IAF126.SpPYRes) = True Then{n}{t}{t}ReturnVal = GetString(IAF126.SpDateIn){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub TpJtDateOut_Calculation(){n}{t}If GetBool(IAF126.TpPYRes) = True Then{n}{t}{t}ReturnVal = GetString(IAF126.TpDateOut){n}{t}ElseIf GetBool(IAF126.TpNonRes) = True Then{n}{t}{t}ReturnVal = ""{n}{t}ElseIf GetBool(IAF1040.MFJ) = True And GetBool(IAF126.SpPYRes) = True Then{n}{t}{t}ReturnVal = GetString(IAF126.SpDateOut){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub TPJtNonRes_Calculation(){n}{t}If GetBool(IAF126.TpNonRes) = True Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetBool(IAF126.TpPYRes) = True Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAF1040.MFJ) = True And GetBool(IAF126.SpNonRes) = True Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPJtPYRes_Calculation(){n}{t}If GetBool(IAF126.TpPYRes) = True Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetBool(IAF126.TpNonRes) = True Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAF1040.MFJ) = True And GetBool(IAF126.SpPYRes) = True Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TpNonRes_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = 1{n}{t}End If{n}End Sub
Sub TpPYNR_Calculation(){n}{t}If GetBool(IAF1040.MFJ) = True Then{n}{t}{t}If GetBool(IAF126.TpRes) = False Or GetBool(IAF126.SpRes) = False Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}ElseIf GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TpRes_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TpWages_Calculation(){n}{t}Dim count1 As Integer{n}{t}Dim HowManyW2 As Long{n}{t}Dim Total1 As Currency{n}{t}Dim W2Index As Long{n}{t}{n}{t}count1 = 1{n}{t}HowManyW2 = GetAllCopies(USDW2){n}{t}Total1 = 0{n}{t}{n}{t}Do While count1 <= HowManyW2{n}{t}{t}W2Index = 0{n}{t}{t}Do While W2Index < 8{n}{t}{t}{t}If GetString(USDW2.St(W2Index), count1) <> "IA" And GetBool(USDW2.Taxpayer, count1) = True Then{n}{t}{t}{t}{t}Total1 = Total1 + GetCurrency(USDW2.StWages(W2Index), count1){n}{t}{t}{t}End If{n}{t}{t}{t}W2Index = W2Index + 1{n}{t}{t}Loop{n}{t}{t}count1 = count1 + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = MaxValue(0, GetCurrency(USWRec.TWages) - Total1){n}End SubSub Description_Calculation(){n}{t}Dim Total As Currency{n}{t}{n}{t}Total = GetCurrency(IAFedEst.TPTotEst) + GetCurrency(IAFedEst.SPTotEst){n}{t}{n}{t}ReturnVal = CStr(Total){n}End Sub
Sub Exist_Calculation(){n}{t}ReturnVal = 1{n}End Sub
Sub MobDisQual_Calculation(){n}{t}If GetCurrency(IAFedEst.TPTotEst) + GetCurrency(IAFedEst.SPTotEst) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Names_Calculation(){n}{t}ReturnVal = GetString(IARequired.CombNames){n}End Sub
Sub SPCYEst_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = CDollar(GetFloat(IARequired.BProRate) * GetFloat(IAFedEst.TotCYEst)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPName_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.SPCommon){n}End Sub
Sub SPPYEst_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = CDollar(GetFloat(IARequired.BProRate) * GetFloat(IAFedEst.TotPYEst)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPTotEst_Calculation(){n}{t}ReturnVal = GetCurrency(IAFedEst.SPCYEst) + GetCurrency(IAFedEst.SPPYEst){n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IAF1040.SSN){n}End Sub
Sub TotCYEst_Calculation(){n}{t}If GetDate(USWEstPay.Q4Date) < #1/1/2019# Then{n}{t}{t}ReturnVal = GetCurrency(USWEstPay.Applied) + GetCurrency(USWEstPay.Q1) + GetCurrency(USWEstPay.Q2) + GetCurrency(USWEstPay.Q3) + GetCurrency(USWEstPay.Q4){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USWEstPay.Applied) + GetCurrency(USWEstPay.Q1) + GetCurrency(USWEstPay.Q2) + GetCurrency(USWEstPay.Q3){n}{t}End If{n}End Sub
Sub TotPYEst_Calculation(){n}{t}If GetDate(USWSpouse.PY4EstDate) > #12/31/2017# Then{n}{t}{t}ReturnVal = GetCurrency(USWSpouse.PY4Est) + GetCurrency(USWSpouse.PYLateEst){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USWSpouse.PYLateEst){n}{t}End If{n}End Sub
Sub TPCYEst_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAFedEst.TotCYEst) - GetCurrency(IAFedEst.SPCYEst)){n}End Sub
Sub TPName_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.TPCommon){n}End Sub
Sub TPPYEst_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAFedEst.TotPYEst) - GetCurrency(IAFedEst.SPPYEst)){n}End Sub
Sub TPTotEst_Calculation(){n}{t}ReturnVal = GetCurrency(IAFedEst.TPCYEst) + GetCurrency(IAFedEst.TPPYEst){n}End SubSub Description_Calculation(){n}{t}Dim Total As Currency{n}{t}{n}{t}Total = GetCurrency(IAFedRef.TPST) + GetCurrency(IAFedRef.SPST){n}{t}{n}{t}ReturnVal = CStr(Total){n}End Sub
Sub Names_Calculation(){n}{t}ReturnVal = GetString(IARequired.CombNames){n}End Sub
Sub NetRef_Calculation(){n}{t}If GetBool(IAFedRef.PYNR) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(IAFedRef.PyRef) - GetCurrency(IAFedRef.PYEIC) - GetCurrency(IAFedRef.PYAddCTC) - GetCurrency(IAFedRef.PYRefHopeCr) - GetCurrency(IAFedRef.PYPTC)){n}{t}End If{n}End Sub
Sub PYAddCTC_Calculation(){n}{t}If GetBool(USWSpouse.NonRes) = True Then{n}{t}{t}ReturnVal = GetCurrency(USWRec.PYAddCTCNR){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USWRec.PYAddCTC){n}{t}End If{t}{t}{n}End Sub
Sub PYEIC_Calculation(){n}{t}ReturnVal = GetCurrency(USWRec.PYEIC){n}End Sub
Sub PYNR_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}If (GetBool(IAF126.TpPYRes) = True And GetDate(IAF126.TpDateIn) > #12/31/2017#) And (GetBool(IAF126.SpPYRes) = True And GetDate(IAF126.SpDateIn) > #12/31/2017#) Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}ElseIf (GetBool(IAF126.TpPYRes) = True And GetDate(IAF126.TpDateIn) > #12/31/2017#) Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub PYPTC_Calculation(){n}{t}If GetBool(USWSpouse.NonRes) = True Then{n}{t}{t}ReturnVal = GetCurrency(USWRec.PYNPTCNR){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USWRec.PYNPTC){n}{t}End If{n}End Sub
Sub PyRef_Calculation(){n}{t}If GetBool(USWSpouse.NonRes) = True Then{t}{n}{t}{t}ReturnVal = GetCurrency(USWRec.PYRefNR){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USWRec.PYRef){n}{t}End If{n}End Sub
Sub PYRefHopeCr_Calculation(){n}{t}ReturnVal = GetCurrency(USWRec.PYRefHopeCr){n}End Sub
Sub SPName_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.SPCommon){n}End Sub
Sub SPST_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IARequired.PYRatio) * GetFloat(IAFedRef.NetRef)){n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IAF1040.SSN){n}End Sub
Sub TPName_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.TPCommon){n}End Sub
Sub TPST_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAFedRef.NetRef) - GetCurrency(IAFedRef.SPST)){n}End SubSub Attach1_Calculation(){n}{t}ReturnVal = "Please include a complete copy of your federal return. "{n}End Sub
Sub Attach2_Calculation(){n}{t}If GetBool(IAFilingInst.AttWHStmt) = True Then{n}{t}{t}ReturnVal = "Please attach state copies of W-2(s), W-2G(s) and/or 1099(s) showing Iowa tax withheld."{n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub Attach3_Calculation(){n}{t}If GetNumber(IAFilingInst.OtherState) > 0 Then{n}{t}{t}ReturnVal = "Please attach a copy of the other state return for Schedule IA 130."{n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub Attach4_Calculation(){n}{t}If GetBool(IA148.Print) = True Or GetBool(IA148Sp.Print) = True Then{n}{t}{t}ReturnVal = "Please attach all supporting forms for the credits claimed on Schedule IA 148."{n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub AttWHStmt_Calculation(){n}{t}If GetCurrency(IAF1040.AIATaxWith) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IAF1040.BIATaxWith) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub C1Est1_Calculation(){n}{t}ReturnVal = GetBool(IAEstimates.EstPay1, 1){n}End Sub
Sub C1Est2_Calculation(){n}{t}ReturnVal = GetBool(IAEstimates.EstPay2, 1){n}End Sub
Sub C1Est3_Calculation(){n}{t}ReturnVal = GetBool(IAEstimates.EstPay3, 1){n}End Sub
Sub C1Est4_Calculation(){n}{t}ReturnVal = GetBool(IAEstimates.EstPay4, 1){n}End Sub
Sub C1EstInfo_Calculation(){n}{t}If GetBool(IAEstimates.Print, 1) = True Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub C1EstInfoDirDeb_Calculation(){n}{t}If GetBool(IAEstimates.Print, 1) = True And GetBool(IAEstimates.EstEFW, 1) = True Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub C1Owner_Calculation(){n}{t}If GetBool(IAEstimates.Print, 1) = True And GetBool(IAEstimates.Print, 2) = True Then{n}{t}{t}ReturnVal = " for " & GetString(IAEstimates.Owner, 1){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub C1Q1_Calculation(){n}{t}ReturnVal = GetCurrency(IAEstimates.V1PayAmt1, 1){n}End Sub
Sub C1Q1WithDate_Calculation(){n}{t}ReturnVal = GetVerboseDate(GetDate(IAEstimates.Est1Date, 1)){n}End Sub
Sub C1Q2_Calculation(){n}{t}ReturnVal = GetCurrency(IAEstimates.V2PayAmt1, 1){n}End Sub
Sub C1Q2WithDate_Calculation(){n}{t}ReturnVal = GetVerboseDate(GetDate(IAEstimates.Est2Date, 1)){n}End Sub
Sub C1Q3_Calculation(){n}{t}ReturnVal = GetCurrency(IAEstimates.V3PayAmt1, 1){n}End Sub
Sub C1Q3WithDate_Calculation(){n}{t}ReturnVal = GetVerboseDate(GetDate(IAEstimates.Est3Date, 1)){n}End Sub
Sub C1Q4_Calculation(){n}{t}ReturnVal = GetCurrency(IAEstimates.V4PayAmt1, 1){n}End Sub
Sub C1Q4WithDate_Calculation(){n}{t}ReturnVal = GetVerboseDate(GetDate(IAEstimates.Est4Date, 1)){n}End Sub
Sub C2Est1_Calculation(){n}{t}ReturnVal = GetBool(IAEstimates.EstPay1, 2){n}End Sub
Sub C2Est2_Calculation(){n}{t}ReturnVal = GetBool(IAEstimates.EstPay2, 2){n}End Sub
Sub C2Est3_Calculation(){n}{t}ReturnVal = GetBool(IAEstimates.EstPay3, 2){n}End Sub
Sub C2Est4_Calculation(){n}{t}ReturnVal = GetBool(IAEstimates.EstPay4, 2){n}End Sub
Sub C2EstInfo_Calculation(){n}{t}If GetBool(IAEstimates.Print, 2) = True Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub C2EstInfoDirDeb_Calculation(){n}{t}If GetBool(IAEstimates.Print, 2) = True And GetBool(IAEstimates.EstEFW, 2) = True Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub C2Owner_Calculation(){n}{t}If GetBool(IAEstimates.Print, 1) = True And GetBool(IAEstimates.Print, 2) = True Then{n}{t}{t}ReturnVal = " for " & GetString(IAEstimates.Owner, 2){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub C2Q1_Calculation(){n}{t}ReturnVal = GetCurrency(IAEstimates.V1PayAmt1, 2){n}End Sub
Sub C2Q1WithDate_Calculation(){n}{t}ReturnVal = GetVerboseDate(GetDate(IAEstimates.Est1Date, 2)){n}End Sub
Sub C2Q2_Calculation(){n}{t}ReturnVal = GetCurrency(IAEstimates.V2PayAmt1, 2){n}End Sub
Sub C2Q2WithDate_Calculation(){n}{t}ReturnVal = GetVerboseDate(GetDate(IAEstimates.Est2Date, 2)){n}End Sub
Sub C2Q3_Calculation(){n}{t}ReturnVal = GetCurrency(IAEstimates.V3PayAmt1, 2){n}End Sub
Sub C2Q3WithDate_Calculation(){n}{t}ReturnVal = GetVerboseDate(GetDate(IAEstimates.Est3Date, 2)){n}End Sub
Sub C2Q4_Calculation(){n}{t}ReturnVal = GetCurrency(IAEstimates.V4PayAmt1, 2){n}End Sub
Sub C2Q4WithDate_Calculation(){n}{t}ReturnVal = GetVerboseDate(GetDate(IAEstimates.Est4Date, 2)){n}End Sub
Sub DueDate_Calculation(){n}{t}ReturnVal = "April 30, 2019"{n}End Sub
Sub EitherDirDeb_Calculation(){n}{t}If GetNumber(IAFilingInst.C1EstInfoDirDeb) = 1 Or GetNumber(IAFilingInst.C2EstInfoDirDeb) = 1 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub EstAdd1_Calculation(){n}{t}ReturnVal = "Iowa Department of Revenue<br>PO Box 10466 <br>Des Moines, IA 50306-0466"{n}End Sub
Sub EstInfo_Calculation(){n}{t}If GetBool(IAFilingInst.C1EstInfo) = True Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetBool(IAFilingInst.C2EstInfo) = True Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub IRSAdd1_Calculation(){n}{t}ReturnVal = "Iowa Income Tax Document Processing"{n}End Sub
Sub IRSAdd2_Calculation(){n}{t}ReturnVal = "PO Box 9187"{n}End Sub
Sub IRSAdd3_Calculation(){n}{t}ReturnVal = "Des Moines, IA  50306-9187"{n}End Sub
Sub Names_Calculation(){n}{t}ReturnVal = GetString(IARequired.CombNames){n}End Sub
Sub OtherState_Calculation(){n}{t}If GetCurrency(IAF1040.AOutState) > 0 Or GetCurrency(IAF1040.BOutState) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Pay1_Calculation(){n}{t}If GetCurrency(IAF1040.RefBalDue) < 0 Then{n}{t}{t}ReturnVal = "The balance due on your Iowa return is " & GetString(IAF1040.TotDue){n}{t}Else{n}{t}{t}ReturnVal = "The overpayment on your return is " & GetString(IAF1040.OVerPaid){n}{t}End If{n}End Sub
Sub Pay2_Calculation(){n}{t}If GetCurrency(IAF1040.RefBalDue) < 0 Then{n}{t}{t}ReturnVal = "Make your check payable to: Treasurer, State of Iowa"{n}{t}Else{n}{t}{t}ReturnVal = "The amount of overpayment applied to your 2019 estimates is " & GetString(IARequired.TotApplied){n}{t}End If{n}End Sub
Sub Pay3_Calculation(){n}{t}If GetCurrency(IAF1040.RefBalDue) < 0 Then{n}{t}{t}ReturnVal = "Write '2018 Form 1040' on your check."{n}{t}Else{n}{t}{t}ReturnVal = "The amount to be refunded to you is " & GetString(IAF1040.Refund) & "."{n}{t}End If{n}End Sub
Sub Pay4_Calculation(){n}{t}If GetCurrency(IAF1040.RefBalDue) <= 0 Then{n}{t}{t}ReturnVal = ""{n}{t}ElseIf Trim(GetString(IAF1040.ActNum)) <> "" Then{n}{t}{t}ReturnVal = "You have elected to receive your refund via direct deposit."{n}{t}Else{n}{t}{t}ReturnVal = "You have elected to receive your refund on a paper check."{n}{t}End If{n}End Sub
Sub Q1Date_Calculation(){n}{t}ReturnVal = "April 30, 2019"{n}End Sub
Sub Q2Date_Calculation(){n}{t}ReturnVal = "July 1, 2019"{n}End Sub
Sub Q3Date_Calculation(){n}{t}ReturnVal = "September 30, 2019"{n}End Sub
Sub Q4Date_Calculation(){n}{t}ReturnVal = "January 31, 2020"{n}End SubSub Description_Calculation(){n}{t}Dim Total As Currency{n}{t}{n}{t}Total = GetCurrency(IAFireCr.SPTotCr) + GetCurrency(IAFireCr.TPTotCr){n}{t}{n}{t}ReturnVal = CStr(Total){n}End Sub
Sub MobDisQual_Calculation(){n}{t}If GetCurrency(IAFireCr.SPTotCr) + GetCurrency(IAFireCr.TPTotCr) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Names_Calculation(){n}{t}ReturnVal = GetString(IARequired.CombNames){n}End Sub
Sub SPName_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.SPCommon){n}End Sub
Sub SPTotCr_Calculation(){n}' updated for 2018{n}{t}If GetBool(IAFireCr.SPQual) = True And GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = MinValue(100@, CDollar(GetFloat(IAFireCr.SPMonths) * 834#)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IAF1040.SSN){n}End Sub
Sub TPName_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.TPCommon){n}End Sub
Sub TPTotCr_Calculation(){n}' updated for 2018{n}{t}If GetBool(IAFireCr.TPQual) = True Then{n}{t}{t}ReturnVal = MinValue(100@, CDollar(GetFloat(IAFireCr.TPMonths) * 834#)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End SubSub Code_Calculation(Index As Integer){n}{t}Dim count As Integer{n}{t}Dim Hold As String{n}{t}count = 0{n}{t}Hold = ""{n}{t}{n}{t}If GetCurrency(IANROthAdj.TOth1) <> 0 Or GetCurrency(IANROthAdj.SOth1) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "dd"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPActiveMil) <> 0 Or GetCurrency(IANROthAdj.SPActiveMil) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "b"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPAltMV) <> 0 Or GetCurrency(IANROthAdj.SPAltMV) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "c"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPInvolConv) <> 0 Or GetCurrency(IANROthAdj.SPInvolConv) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "e"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{n}{t}If GetCurrency(IANROthAdj.TPClaimOfRight) <> 0 Or GetCurrency(IANROthAdj.SPClaimOfRight) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "f"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPIAEd) <> 0 Or GetCurrency(IANROthAdj.SPIAEd) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "g"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPIADis) <> 0 Or GetCurrency(IANROthAdj.SPIADis) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "h"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{n}{t}If GetCurrency(IANROthAdj.TPDomProd) <> 0 Or GetCurrency(IANROthAdj.SPDomProd) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "i"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPFirstHmBuy) <> 0 Or GetCurrency(IANROthAdj.SPFirstHmBuy) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "j"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPEmployerSS) <> 0 Or GetCurrency(IANROthAdj.SPEmployerSS) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "k"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPFedFuels) <> 0 Or GetCurrency(IANROthAdj.SPFedFuels) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "l"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPForeign) <> 0 Or GetCurrency(IANROthAdj.SPForeign) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TP2555) <> 0 Or GetCurrency(IANROthAdj.SP2555) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPDistressed) <> 0 Or GetCurrency(IANROthAdj.SPDistressed) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "n"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPHealthSav) <> 0 Or GetCurrency(IANROthAdj.SPHealthSav) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "o"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPVet) <> 0 Or GetCurrency(IANROthAdj.SPVet) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "p"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t} If GetCurrency(IANROthAdj.TPVetGrant) <> 0 Or GetCurrency(IANROthAdj.SPVetGrant) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "q"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPHomeHealth) <> 0 Or GetCurrency(IANROthAdj.SPHomeHealth) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "r"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPIAVetTrust) <> 0 Or GetCurrency(IANROthAdj.SPIAVetTrust) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "s"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPMilitaryExem) <> 0 Or GetCurrency(IANROthAdj.SPMilitaryExem) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "t"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TIANOL) <> 0 Or GetCurrency(IANROthAdj.SIANOL) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "u"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPOrgan) <> 0 Or GetCurrency(IANROthAdj.SPOrgan) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "v"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPK1) <> 0 Or GetCurrency(IANROthAdj.SPK1) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "w"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPSegal) <> 0 Or GetCurrency(IANROthAdj.SPSegal) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "x"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPShell) <> 0 Or GetCurrency(IANROthAdj.SPShell) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "y"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TStud) <> 0 Or GetCurrency(IANROthAdj.SStud) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "z"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPVictim) <> 0 Or GetCurrency(IANROthAdj.SPVictim) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "aa"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPWages) <> 0 Or GetCurrency(IANROthAdj.SPWages) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "bb"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPWorkCr) <> 0 Or GetCurrency(IANROthAdj.SPWorkCr) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "cc"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TP2106) <> 0 Or GetCurrency(IANROthAdj.SP2106) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "dd"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TMSA) <> 0 Or GetCurrency(IANROthAdj.SMSA) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "dd"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPJury) <> 0 Or GetCurrency(IANROthAdj.SPJury) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "dd"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPRFST) <> 0 Or GetCurrency(IANROthAdj.SPRFST) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "dd"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPSub) <> 0 Or GetCurrency(IANROthAdj.SPSub) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "dd"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TP501c) <> 0 Or GetCurrency(IANROthAdj.SP501c) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "dd"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPPerRent) <> 0 Or GetCurrency(IANROthAdj.SPPerRent) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "dd"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TP403b) <> 0 Or GetCurrency(IANROthAdj.SP403b) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "dd"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPUDC) <> 0 Or GetCurrency(IANROthAdj.SPUDC) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "dd"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPWBF) <> 0 Or GetCurrency(IANROthAdj.SPWBF) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "dd"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TP8873) <> 0 Or GetCurrency(IANROthAdj.SP8873) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "dd"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPOlympic) <> 0 Or GetCurrency(IANROthAdj.SPOlympic) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "dd"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPEducator) <> 0 Or GetCurrency(IANROthAdj.SPEducator) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "ee"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPTuition) <> 0 Or GetCurrency(IANROthAdj.SPTuition) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "ff"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPElectric) <> 0 Or GetCurrency(IANROthAdj.SPElectric) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "gg"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPRapid) <> 0 Or GetCurrency(IANROthAdj.SPRapid) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "hh"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPIAABLE) <> 0 Or GetCurrency(IANROthAdj.SPIAABLE) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "ii"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}ReturnVal = Hold{n}{t}{n}End Sub
Sub Desc_Calculation(){n}{t}Dim Total As Currency{n}{t}{n}{t}Total = GetCurrency(IANROthAdj.TPTot) + GetCurrency(IANROthAdj.SPTot){n}{t}{n}{t}ReturnVal = CStr(Total){n}End Sub
Sub Description_Calculation(Index As Integer){n}{t}Dim count As Integer{n}{t}Dim Hold As String{n}{t}count = 0{n}{t}Hold = ""{n}{t}{n}{t}If GetCurrency(IANROthAdj.TOth1) <> 0 Or GetCurrency(IANROthAdj.SOth1) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetString(IANROthAdj.TxtOth1){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPActiveMil) <> 0 Or GetCurrency(IANROthAdj.SPActiveMil) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Active duty military pay"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPAltMV) <> 0 Or GetCurrency(IANROthAdj.SPAltMV) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Alternative motor vehicle deduction"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPInvolConv) <> 0 Or GetCurrency(IANROthAdj.SPInvolConv) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Capital or ordinary gain from involuntary conversion"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{n}{t}If GetCurrency(IANROthAdj.TPClaimOfRight) <> 0 Or GetCurrency(IANROthAdj.SPClaimOfRight) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Claim of Right deduction"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPIAEd) <> 0 Or GetCurrency(IANROthAdj.SPIAEd) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "College Savings Iowa or Iowa Advisor 529 Plan"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPIADis) <> 0 Or GetCurrency(IANROthAdj.SPIADis) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Disability income exclusion"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{n}{t}If GetCurrency(IANROthAdj.TPDomProd) <> 0 Or GetCurrency(IANROthAdj.SPDomProd) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Domestic production activities deduction"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPFirstHmBuy) <> 0 Or GetCurrency(IANROthAdj.SPFirstHmBuy) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "First-Time Homebuyer Savings Account qualifying contributions"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPEmployerSS) <> 0 Or GetCurrency(IANROthAdj.SPEmployerSS) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Employer social security credit, federal Form 8846"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPFedFuels) <> 0 Or GetCurrency(IANROthAdj.SPFedFuels) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Alcohol and cellulosic biofuel credit, federal Form 6478"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPForeign) <> 0 Or GetCurrency(IANROthAdj.SPForeign) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Foreign earned income exclusion, federal Form 2555"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TP2555) <> 0 Or GetCurrency(IANROthAdj.SP2555) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Foreign housing deduction, federal Form 2555"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPDistressed) <> 0 Or GetCurrency(IANROthAdj.SPDistressed) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Gains or losses from distressed sale transactions"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPHealthSav) <> 0 Or GetCurrency(IANROthAdj.SPHealthSav) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Health savings account deduction, federal Form 8889"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPVet) <> 0 Or GetCurrency(IANROthAdj.SPVet) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Injured veterans programs - contributions"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t} If GetCurrency(IANROthAdj.TPVetGrant) <> 0 Or GetCurrency(IANROthAdj.SPVetGrant) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Injured veterans programs - grants"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPHomeHealth) <> 0 Or GetCurrency(IANROthAdj.SPHomeHealth) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "In-home health care"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPIAVetTrust) <> 0 Or GetCurrency(IANROthAdj.SPIAVetTrust) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Iowa Veterans Trust Fund"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPMilitaryExem) <> 0 Or GetCurrency(IANROthAdj.SPMilitaryExem) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Military exemptions"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TIANOL) <> 0 Or GetCurrency(IANROthAdj.SIANOL) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Iowa Net Operating Loss"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPOrgan) <> 0 Or GetCurrency(IANROthAdj.SPOrgan) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Organ transplant expenses"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPK1) <> 0 Or GetCurrency(IANROthAdj.SPK1) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Partnership income and/or S Corporation income"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPSegal) <> 0 Or GetCurrency(IANROthAdj.SPSegal) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Segal Americorps Education Award payments"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPShell) <> 0 Or GetCurrency(IANROthAdj.SPShell) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Speculative shell buildings"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TStud) <> 0 Or GetCurrency(IANROthAdj.SStud) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Student loan interest deduction"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPVictim) <> 0 Or GetCurrency(IANROthAdj.SPVictim) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Victim compensation awards"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPWages) <> 0 Or GetCurrency(IANROthAdj.SPWages) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Wages paid to certain individuals"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPWorkCr) <> 0 Or GetCurrency(IANROthAdj.SPWorkCr) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Work opportunity credit, federal Form 5884"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TP2106) <> 0 Or GetCurrency(IANROthAdj.SP2106) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Business expenses of reservists, QPA, FBO, federal Form 2106"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TMSA) <> 0 Or GetCurrency(IANROthAdj.SMSA) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Archer MSA deduction, federal Form 8853"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPJury) <> 0 Or GetCurrency(IANROthAdj.SPJury) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Jury pay repayment to employer"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPRFST) <> 0 Or GetCurrency(IANROthAdj.SPRFST) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Reforestation amortization and expenses"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPSub) <> 0 Or GetCurrency(IANROthAdj.SPSub) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Repayment of supplemental unemployment benefits"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TP501c) <> 0 Or GetCurrency(IANROthAdj.SP501c) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Contributions to a 501(c)(18) pension plan"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPPerRent) <> 0 Or GetCurrency(IANROthAdj.SPPerRent) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Expenses for personal property rental"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TP403b) <> 0 Or GetCurrency(IANROthAdj.SP403b) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Contributions by certain chaplains to a 403(b) plan"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPUDC) <> 0 Or GetCurrency(IANROthAdj.SPUDC) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Qualified attorney/court fees paid after 10/22/2004"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPWBF) <> 0 Or GetCurrency(IANROthAdj.SPWBF) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Qualified whistleblower fees"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TP8873) <> 0 Or GetCurrency(IANROthAdj.SP8873) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Extraterritorial Income Exclusion, federal Form 8873"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPOlympic) <> 0 Or GetCurrency(IANROthAdj.SPOlympic) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Nontaxable amount of Olympic and Paralympic medals and USOC prize money"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPEducator) <> 0 Or GetCurrency(IANROthAdj.SPEducator) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Educator expenses"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPTuition) <> 0 Or GetCurrency(IANROthAdj.SPTuition) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Tuition and fees deduction"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPElectric) <> 0 Or GetCurrency(IANROthAdj.SPElectric) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Nonresident Electric Utility Reciprocity"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPRapid) <> 0 Or GetCurrency(IANROthAdj.SPRapid) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Rapid Response to State Disasters"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}   {n}{t}If GetCurrency(IANROthAdj.TPIAABLE) <> 0 Or GetCurrency(IANROthAdj.SPIAABLE) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Iowa ABLE savings plan trust"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}ReturnVal = Hold{n}End Sub
Sub Names_Calculation(){n}{t}ReturnVal = GetString(IARequired.CombNames){n}End Sub
Sub PrintMe_Calculation(){n}{t}If GetCurrency(IANROthAdj.TPTot) <> 0 Or GetCurrency(IANROthAdj.SPTot) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPAmount_Calculation(Index As Integer){n}{t}Dim count As Integer{n}{t}Dim Hold As Currency{n}{t}count = 0{n}{t}Hold = 0{n}{t}{n}{t}If GetCurrency(IANROthAdj.TOth1) <> 0 Or GetCurrency(IANROthAdj.SOth1) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}Hold = GetCurrency(IANROthAdj.SOth1){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPActiveMil) <> 0 Or GetCurrency(IANROthAdj.SPActiveMil) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.SPActiveMil){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPAltMV) <> 0 Or GetCurrency(IANROthAdj.SPAltMV) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.SPAltMV){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPInvolConv) <> 0 Or GetCurrency(IANROthAdj.SPInvolConv) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.SPInvolConv){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{n}{t}If GetCurrency(IANROthAdj.TPClaimOfRight) <> 0 Or GetCurrency(IANROthAdj.SPClaimOfRight) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.SPClaimOfRight){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPIAEd) <> 0 Or GetCurrency(IANROthAdj.SPIAEd) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.SPIAEd){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPIADis) <> 0 Or GetCurrency(IANROthAdj.SPIADis) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.SPIADis){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPDomProd) <> 0 Or GetCurrency(IANROthAdj.SPDomProd) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.SPDomProd){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPFirstHmBuy) <> 0 Or GetCurrency(IANROthAdj.SPFirstHmBuy) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.SPFirstHmBuy){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPEmployerSS) <> 0 Or GetCurrency(IANROthAdj.SPEmployerSS) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.SPEmployerSS){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPFedFuels) <> 0 Or GetCurrency(IANROthAdj.SPFedFuels) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.SPFedFuels){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPForeign) <> 0 Or GetCurrency(IANROthAdj.SPForeign) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.SPForeign){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TP2555) <> 0 Or GetCurrency(IANROthAdj.SP2555) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.SP2555){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPDistressed) <> 0 Or GetCurrency(IANROthAdj.SPDistressed) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.SPDistressed){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPHealthSav) <> 0 Or GetCurrency(IANROthAdj.SPHealthSav) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.SPHealthSav){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPVet) <> 0 Or GetCurrency(IANROthAdj.SPVet) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.SPVet){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{n}{t}If GetCurrency(IANROthAdj.TPVetGrant) <> 0 Or GetCurrency(IANROthAdj.SPVetGrant) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.SPVetGrant){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPHomeHealth) <> 0 Or GetCurrency(IANROthAdj.SPHomeHealth) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.SPHomeHealth){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPIAVetTrust) <> 0 Or GetCurrency(IANROthAdj.SPIAVetTrust) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.SPIAVetTrust){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPMilitaryExem) <> 0 Or GetCurrency(IANROthAdj.SPMilitaryExem) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.SPMilitaryExem){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TIANOL) <> 0 Or GetCurrency(IANROthAdj.SIANOL) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.SIANOL){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPOrgan) <> 0 Or GetCurrency(IANROthAdj.SPOrgan) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.SPOrgan){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPK1) <> 0 Or GetCurrency(IANROthAdj.SPK1) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.SPK1){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPSegal) <> 0 Or GetCurrency(IANROthAdj.SPSegal) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.SPSegal){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPShell) <> 0 Or GetCurrency(IANROthAdj.SPShell) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.SPShell){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TStud) <> 0 Or GetCurrency(IANROthAdj.SStud) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.SStud){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPVictim) <> 0 Or GetCurrency(IANROthAdj.SPVictim) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.SPVictim){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPWages) <> 0 Or GetCurrency(IANROthAdj.SPWages) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.SPWages){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPWorkCr) <> 0 Or GetCurrency(IANROthAdj.SPWorkCr) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.SPWorkCr){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TP2106) <> 0 Or GetCurrency(IANROthAdj.SP2106) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.SP2106){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TMSA) <> 0 Or GetCurrency(IANROthAdj.SMSA) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.SMSA){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPJury) <> 0 Or GetCurrency(IANROthAdj.SPJury) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.SPJury){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPRFST) <> 0 Or GetCurrency(IANROthAdj.SPRFST) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.SPRFST){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPSub) <> 0 Or GetCurrency(IANROthAdj.SPSub) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.SPSub){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TP501c) <> 0 Or GetCurrency(IANROthAdj.SP501c) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.SP501c){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPPerRent) <> 0 Or GetCurrency(IANROthAdj.SPPerRent) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.SPPerRent){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TP403b) <> 0 Or GetCurrency(IANROthAdj.SP403b) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.SP403b){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPUDC) <> 0 Or GetCurrency(IANROthAdj.SPUDC) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.SPUDC){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPWBF) <> 0 Or GetCurrency(IANROthAdj.SPWBF) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.SPWBF){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TP8873) <> 0 Or GetCurrency(IANROthAdj.SP8873) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.SP8873){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPOlympic) <> 0 Or GetCurrency(IANROthAdj.SPOlympic) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.SPOlympic){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPEducator) <> 0 Or GetCurrency(IANROthAdj.SPEducator) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.SPEducator){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPTuition) <> 0 Or GetCurrency(IANROthAdj.SPTuition) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.SPTuition){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPElectric) <> 0 Or GetCurrency(IANROthAdj.SPElectric) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.SPElectric){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPRapid) <> 0 Or GetCurrency(IANROthAdj.SPRapid) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.SPRapid){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPIAABLE) <> 0 Or GetCurrency(IANROthAdj.SPIAABLE) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.SPIAABLE){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}ReturnVal = Hold{n}End Sub
Sub SPName_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.SPCommon){n}End Sub
Sub SPTot_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True And GetBool(IAF126.SpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IANROthAdj.SOth1) + GetCurrency(IANROthAdj.SPActiveMil) + GetCurrency(IANROthAdj.SPAltMV) + GetCurrency(IANROthAdj.SPInvolConv) + GetCurrency(IANROthAdj.SPClaimOfRight) + GetCurrency(IANROthAdj.SPIAEd) + GetCurrency(IANROthAdj.SPIADis) + GetCurrency(IANROthAdj.SPDomProd) + GetCurrency(IANROthAdj.SPFirstHmBuy) + GetCurrency(IANROthAdj.SPEmployerSS) + GetCurrency(IANROthAdj.SPFedFuels) + GetCurrency(IANROthAdj.SPForeign) + GetCurrency(IANROthAdj.SP2555) + GetCurrency(IANROthAdj.SPDistressed) + GetCurrency(IANROthAdj.SPHealthSav) + GetCurrency(IANROthAdj.SPVet) + GetCurrency(IANROthAdj.SPVetGrant) + GetCurrency(IANROthAdj.SPHomeHealth) + GetCurrency(IANROthAdj.SPIAVetTrust) + GetCurrency(IANROthAdj.SPMilitaryExem) + GetCurrency(IANROthAdj.SIANOL) + GetCurrency(IANROthAdj.SPOrgan) + GetCurrency(IANROthAdj.SPK1) + GetCurrency(IANROthAdj.SPSegal) + GetCurrency(IANROthAdj.SPShell) + GetCurrency(IANROthAdj.SStud) + GetCurrency(IANROthAdj.SPVictim) + GetCurrency(IANROthAdj.SPWages) + GetCurrency(IANROthAdj.SPWorkCr) + GetCurrency(IANROthAdj.SP2106) + GetCurrency(IANROthAdj.SMSA) + GetCurrency(IANROthAdj.SPJury) + GetCurrency(IANROthAdj.SPRFST) + GetCurrency(IANROthAdj.SPSub) + GetCurrency(IANROthAdj.SP501c) + GetCurrency(IANROthAdj.SPPerRent) + GetCurrency(IANROthAdj.SP403b) + GetCurrency(IANROthAdj.SPUDC) + GetCurrency(IANROthAdj.SPWBF) + GetCurrency(IANROthAdj.SP8873) + GetCurrency(IANROthAdj.SPOlympic) + GetCurrency(IANROthAdj.SPEducator) + GetCurrency(IANROthAdj.SPTuition) + GetCurrency(IANROthAdj.SPElectric) + GetCurrency(IANROthAdj.SPRapid) + GetCurrency(IANROthAdj.SPIAABLE){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IAF1040.SSN){n}End Sub
Sub TPAmount_Calculation(Index As Integer){n}{t}Dim count As Integer{n}{t}Dim Hold As Currency{n}{t}count = 0{n}{t}Hold = 0{n}{t}{n}{t}If GetCurrency(IANROthAdj.TOth1) <> 0 Or GetCurrency(IANROthAdj.SOth1) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}Hold = GetCurrency(IANROthAdj.TOth1){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPActiveMil) <> 0 Or GetCurrency(IANROthAdj.SPActiveMil) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.TPActiveMil){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPAltMV) <> 0 Or GetCurrency(IANROthAdj.SPAltMV) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.TPAltMV){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPInvolConv) <> 0 Or GetCurrency(IANROthAdj.SPInvolConv) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.TPInvolConv){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{n}{t}If GetCurrency(IANROthAdj.TPClaimOfRight) <> 0 Or GetCurrency(IANROthAdj.SPClaimOfRight) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.TPClaimOfRight){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPIAEd) <> 0 Or GetCurrency(IANROthAdj.SPIAEd) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.TPIAEd){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPIADis) <> 0 Or GetCurrency(IANROthAdj.SPIADis) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.TPIADis){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPDomProd) <> 0 Or GetCurrency(IANROthAdj.SPDomProd) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.TPDomProd){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPFirstHmBuy) <> 0 Or GetCurrency(IANROthAdj.SPFirstHmBuy) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.TPFirstHmBuy){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPEmployerSS) <> 0 Or GetCurrency(IANROthAdj.SPEmployerSS) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.TPEmployerSS){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPFedFuels) <> 0 Or GetCurrency(IANROthAdj.SPFedFuels) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.TPFedFuels){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPForeign) <> 0 Or GetCurrency(IANROthAdj.SPForeign) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.TPForeign){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TP2555) <> 0 Or GetCurrency(IANROthAdj.SP2555) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.TP2555){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPDistressed) <> 0 Or GetCurrency(IANROthAdj.SPDistressed) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.TPDistressed){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPHealthSav) <> 0 Or GetCurrency(IANROthAdj.SPHealthSav) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.TPHealthSav){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPVet) <> 0 Or GetCurrency(IANROthAdj.SPVet) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.TPVet){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{n}{t}If GetCurrency(IANROthAdj.TPVetGrant) <> 0 Or GetCurrency(IANROthAdj.SPVetGrant) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.TPVetGrant){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPHomeHealth) <> 0 Or GetCurrency(IANROthAdj.SPHomeHealth) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.TPHomeHealth){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPIAVetTrust) <> 0 Or GetCurrency(IANROthAdj.SPIAVetTrust) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.TPIAVetTrust){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPMilitaryExem) <> 0 Or GetCurrency(IANROthAdj.SPMilitaryExem) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.TPMilitaryExem){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TIANOL) <> 0 Or GetCurrency(IANROthAdj.SIANOL) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.TIANOL){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPOrgan) <> 0 Or GetCurrency(IANROthAdj.SPOrgan) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.TPOrgan){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPK1) <> 0 Or GetCurrency(IANROthAdj.SPK1) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.TPK1){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPSegal) <> 0 Or GetCurrency(IANROthAdj.SPSegal) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.TPSegal){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPShell) <> 0 Or GetCurrency(IANROthAdj.SPShell) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.TPShell){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TStud) <> 0 Or GetCurrency(IANROthAdj.SStud) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.TStud){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPVictim) <> 0 Or GetCurrency(IANROthAdj.SPVictim) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.TPVictim){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPWages) <> 0 Or GetCurrency(IANROthAdj.SPWages) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.TPWages){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPWorkCr) <> 0 Or GetCurrency(IANROthAdj.SPWorkCr) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.TPWorkCr){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TP2106) <> 0 Or GetCurrency(IANROthAdj.SP2106) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.TP2106){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TMSA) <> 0 Or GetCurrency(IANROthAdj.SMSA) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.TMSA){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPJury) <> 0 Or GetCurrency(IANROthAdj.SPJury) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.TPJury){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPRFST) <> 0 Or GetCurrency(IANROthAdj.SPRFST) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.TPRFST){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPSub) <> 0 Or GetCurrency(IANROthAdj.SPSub) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.TPSub){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TP501c) <> 0 Or GetCurrency(IANROthAdj.SP501c) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.TP501c){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPPerRent) <> 0 Or GetCurrency(IANROthAdj.SPPerRent) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.TPPerRent){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TP403b) <> 0 Or GetCurrency(IANROthAdj.SP403b) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.TP403b){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPUDC) <> 0 Or GetCurrency(IANROthAdj.SPUDC) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.TPUDC){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPWBF) <> 0 Or GetCurrency(IANROthAdj.SPWBF) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.TPWBF){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TP8873) <> 0 Or GetCurrency(IANROthAdj.SP8873) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.TP8873){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPOlympic) <> 0 Or GetCurrency(IANROthAdj.SPOlympic) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.TPOlympic){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPEducator) <> 0 Or GetCurrency(IANROthAdj.SPEducator) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.TPEducator){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPTuition) <> 0 Or GetCurrency(IANROthAdj.SPTuition) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.TPTuition){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t} End If{n}{t} {n}{t}If GetCurrency(IANROthAdj.TPElectric) <> 0 Or GetCurrency(IANROthAdj.SPElectric) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.TPElectric){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPRapid) <> 0 Or GetCurrency(IANROthAdj.SPRapid) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.TPRapid){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthAdj.TPIAABLE) <> 0 Or GetCurrency(IANROthAdj.SPIAABLE) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthAdj.TPIAABLE){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}ReturnVal = Hold{n}End Sub
Sub TPJointAmount_Calculation(Index As Integer){n}{t}If GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = GetCurrency(IANROthAdj.TPAmount(Index)){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IANROthAdj.TPAmount(Index)) + GetCurrency(IANROthAdj.SPAmount(Index)){n}{t}End If{n}End Sub
Sub TPName_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.TPCommon){n}End Sub
Sub TPTot_Calculation(){n}{t}If GetBool(IAF126.TpPYRes) = True Or GetBool(IAF126.TpNonRes) = True Then{n}{t}{t}ReturnVal = GetCurrency(IANROthAdj.TOth1) + GetCurrency(IANROthAdj.TPActiveMil) + GetCurrency(IANROthAdj.TPAltMV) + GetCurrency(IANROthAdj.TPInvolConv) + GetCurrency(IANROthAdj.TPClaimOfRight) + GetCurrency(IANROthAdj.TPIAEd) + GetCurrency(IANROthAdj.TPIADis) + GetCurrency(IANROthAdj.TPDomProd) + GetCurrency(IANROthAdj.TPFirstHmBuy) + GetCurrency(IANROthAdj.TPEmployerSS) + GetCurrency(IANROthAdj.TPFedFuels) + GetCurrency(IANROthAdj.TPForeign) + GetCurrency(IANROthAdj.TP2555) + GetCurrency(IANROthAdj.TPDistressed) + GetCurrency(IANROthAdj.TPHealthSav) + GetCurrency(IANROthAdj.TPVet) + GetCurrency(IANROthAdj.TPVetGrant) + GetCurrency(IANROthAdj.TPHomeHealth) + GetCurrency(IANROthAdj.TPIAVetTrust) + GetCurrency(IANROthAdj.TPMilitaryExem) + GetCurrency(IANROthAdj.TIANOL) + GetCurrency(IANROthAdj.TPOrgan) + GetCurrency(IANROthAdj.TPK1) + GetCurrency(IANROthAdj.TPSegal) + GetCurrency(IANROthAdj.TPShell) + GetCurrency(IANROthAdj.TStud) + GetCurrency(IANROthAdj.TPVictim) + GetCurrency(IANROthAdj.TPWages) + GetCurrency(IANROthAdj.TPWorkCr) + GetCurrency(IANROthAdj.TP2106) + GetCurrency(IANROthAdj.TMSA) + GetCurrency(IANROthAdj.TPJury) + GetCurrency(IANROthAdj.TPRFST) + GetCurrency(IANROthAdj.TPSub) + GetCurrency(IANROthAdj.TP501c) + GetCurrency(IANROthAdj.TPPerRent) + GetCurrency(IANROthAdj.TP403b) + GetCurrency(IANROthAdj.TPUDC) + GetCurrency(IANROthAdj.TPWBF) + GetCurrency(IANROthAdj.TP8873) + GetCurrency(IANROthAdj.TPOlympic) + GetCurrency(IANROthAdj.TPEducator) + GetCurrency(IANROthAdj.TPTuition) + GetCurrency(IANROthAdj.TPElectric) + GetCurrency(IANROthAdj.TPRapid) + GetCurrency(IANROthAdj.TPIAABLE){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TxtOth1_Calculation(){n}{t}ReturnVal = GetString(IAOthAdj.TxtOth1){n}End SubSub Code_Calculation(Index As Integer){n}{t}Dim count As Integer{n}{t}Dim Hold As String{n}{t}count = 0{n}{t}Hold = ""{n}{t}{n}{t}If GetCurrency(IANROthInc.TPOth1) <> 0 Or GetCurrency(IANROthInc.SPOth1) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPOth2) <> 0 Or GetCurrency(IANROthInc.SPOth2) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPBabySit) <> 0 Or GetCurrency(IANROthInc.SPBabySit) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "a"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPBonus) <> 0 Or GetCurrency(IANROthInc.SPBonus) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "b"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPIAEd) <> 0 Or GetCurrency(IANROthInc.SPIAEd) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "d"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPDirector) <> 0 Or GetCurrency(IANROthInc.SPDirector) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "e"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPIntangDrill) <> 0 Or GetCurrency(IANROthInc.SPIntangDrill) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "f"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPExecutor) <> 0 Or GetCurrency(IANROthInc.SPExecutor) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "g"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPFirstHmBuy) <> 0 Or GetCurrency(IANROthInc.SPFirstHmBuy) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "h"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPK1) <> 0 Or GetCurrency(IANROthInc.SPK1) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "i"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPRefundCr) <> 0 Or GetCurrency(IANROthInc.SPRefundCr) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "j"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPStRefund) <> 0 Or GetCurrency(IANROthInc.SPStRefund) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "k"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPDepl) <> 0 Or GetCurrency(IANROthInc.SPDepl) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "l"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPJury) <> 0 Or GetCurrency(IANROthInc.SPJury) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPPerRent) <> 0 Or GetCurrency(IANROthInc.SPPerRent) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TP8814) <> 0 Or GetCurrency(IANROthInc.SP8814) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPMSA) <> 0 Or GetCurrency(IANROthInc.SPMSA) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPMedMSA) <> 0 Or GetCurrency(IANROthInc.SPMedMSA) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPLTC) <> 0 Or GetCurrency(IANROthInc.SPLTC) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPMisc) <> 0 Or GetCurrency(IANROthInc.SPMisc) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPAlaska) <> 0 Or GetCurrency(IANROthInc.SPAlaska) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPCoverdell) <> 0 Or GetCurrency(IANROthInc.SPCoverdell) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPCanceled) <> 0 Or GetCurrency(IANROthInc.SPCanceled) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPPshipCan) <> 0 Or GetCurrency(IANROthInc.SPPshipCan) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPHSA) <> 0 Or GetCurrency(IANROthInc.SPHSA) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPAltTrade) <> 0 Or GetCurrency(IANROthInc.SPAltTrade) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPRecapTuit) <> 0 Or GetCurrency(IANROthInc.SPRecapTuit) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPRecapChar) <> 0 Or GetCurrency(IANROthInc.SPRecapChar) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{t}{n}{t}{n}{t}If GetCurrency(IANROthInc.TP5471) <> 0 Or GetCurrency(IANROthInc.SP5471) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPHobby) <> 0 Or GetCurrency(IANROthInc.SPHobby) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TP8621) <> 0 Or GetCurrency(IANROthInc.SP8621) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPDefDist) <> 0 Or GetCurrency(IANROthInc.SPDefDist) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPDisaster) <> 0 Or GetCurrency(IANROthInc.SPDisaster) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPFoster) <> 0 Or GetCurrency(IANROthInc.SPFoster) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{t}{n}{t}{n}{t}If GetCurrency(IANROthInc.TPCredAdj) <> 0 Or GetCurrency(IANROthInc.SPCredAdj) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t} End If{n}{t} {n}{t}If GetCurrency(IANROthInc.TPPYNPTC) <> 0 Or GetCurrency(IANROthInc.SPPYNPTC) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "n"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TP1099QA) <> 0 Or GetCurrency(IANROthInc.SP1099QA) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPAirline) <> 0 Or GetCurrency(IANROthInc.SPAirline) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TP1099B) <> 0 Or GetCurrency(IANROthInc.SP1099B) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPIAABLE) <> 0 Or GetCurrency(IANROthInc.SPIAABLE) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "o"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPBusPass) <> 0 Or GetCurrency(IANROthInc.SPBusPass) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "p"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPFarmLoss) <> 0 Or GetCurrency(IANROthInc.SPFarmLoss) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TP8824) <> 0 Or GetCurrency(IANROthInc.SP8824) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "q"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPStudLoanDis) <> 0 Or GetCurrency(IANROthInc.SPStudLoanDis) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "r"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TP4684) <> 0 Or GetCurrency(IANROthInc.SP4684) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "s"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TP3903) <> 0 Or GetCurrency(IANROthInc.SP3903) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "t"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPBusInt) <> 0 Or GetCurrency(IANROthInc.SPBusInt) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "u"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPEntExp) <> 0 Or GetCurrency(IANROthInc.SPEntExp) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "v"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TP2106) <> 0 Or GetCurrency(IANROthInc.SP2106) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "w"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPOthNC) <> 0 Or GetCurrency(IANROthInc.SPOthNC) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "x"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}ReturnVal = Hold{n}{t}{n}End Sub
Sub Desc_Calculation(){n}{t}Dim Total As Currency{n}{t}{n}{t}Total = GetCurrency(IANROthInc.TPTot) + GetCurrency(IANROthInc.SPTot){n}{t}{n}{t}ReturnVal = CStr(Total){n}End Sub
Sub Description_Calculation(Index As Integer){n}{t}Dim count As Integer{n}{t}Dim Hold As String{n}{t}count = 0{n}{t}Hold = ""{n}{t}{n}{t}If GetCurrency(IANROthInc.TPOth1) <> 0 Or GetCurrency(IANROthInc.SPOth1) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetString(IANROthInc.Txt1){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPOth2) <> 0 Or GetCurrency(IANROthInc.SPOth2) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetString(IANROthInc.Txt2){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPBabySit) <> 0 Or GetCurrency(IANROthInc.SPBabySit) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Baby-sitting income not reported on federal Schedule C"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPBonus) <> 0 Or GetCurrency(IANROthInc.SPBonus) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Bonus depreciation/section 179 adjustment"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPIAEd) <> 0 Or GetCurrency(IANROthInc.SPIAEd) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "College Savings Iowa or Iowa Advisor 529 Plan"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPDirector) <> 0 Or GetCurrency(IANROthInc.SPDirector) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Director's fees"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPIntangDrill) <> 0 Or GetCurrency(IANROthInc.SPIntangDrill) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Drilling"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPExecutor) <> 0 Or GetCurrency(IANROthInc.SPExecutor) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Executor's fees"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPFirstHmBuy) <> 0 Or GetCurrency(IANROthInc.SPFirstHmBuy) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "First-time homebuyers account non-qualifying withdrawals"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPK1) <> 0 Or GetCurrency(IANROthInc.SPK1) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Partnership income and/or S Corporation income"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}{n}{t}If GetCurrency(IANROthInc.TPRefundCr) <> 0 Or GetCurrency(IANROthInc.SPRefundCr) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Refundable Iowa credits"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPStRefund) <> 0 Or GetCurrency(IANROthInc.SPStRefund) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "State income tax refunds"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPDepl) <> 0 Or GetCurrency(IANROthInc.SPDepl) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Wells"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPJury) <> 0 Or GetCurrency(IANROthInc.SPJury) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Jury pay"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPPerRent) <> 0 Or GetCurrency(IANROthInc.SPPerRent) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Income from personal property"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TP8814) <> 0 Or GetCurrency(IANROthInc.SP8814) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Child's income amount, federal Form 8814"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPMSA) <> 0 Or GetCurrency(IANROthInc.SPMSA) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "MSA distributions, federal Form 8853"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPMedMSA) <> 0 Or GetCurrency(IANROthInc.SPMedMSA) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Medicare Advantage distributions, federal Form 8853"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPLTC) <> 0 Or GetCurrency(IANROthInc.SPLTC) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Long-term care distribution, federal Form 8853"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPMisc) <> 0 Or GetCurrency(IANROthInc.SPMisc) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Form 1099-MISC, boxes 3 or 8"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPAlaska) <> 0 Or GetCurrency(IANROthInc.SPAlaska) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Alaska Permanent Fund dividends"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPCoverdell) <> 0 Or GetCurrency(IANROthInc.SPCoverdell) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Coverdell ESA Or Qualified Tuition Program"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPCanceled) <> 0 Or GetCurrency(IANROthInc.SPCanceled) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Cancellation of nonbusiness debt, federal Form 1099-C"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPPshipCan) <> 0 Or GetCurrency(IANROthInc.SPPshipCan) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Cancellation of business debt, Partnership Schedule K-1"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPHSA) <> 0 Or GetCurrency(IANROthInc.SPHSA) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "HSA distributions, federal Form 8889"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPAltTrade) <> 0 Or GetCurrency(IANROthInc.SPAltTrade) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Alternative trade adjustment assistance payments"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPRecapTuit) <> 0 Or GetCurrency(IANROthInc.SPRecapTuit) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Recapture of prior year tuition and fees deduction"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPRecapChar) <> 0 Or GetCurrency(IANROthInc.SPRecapChar) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Recapture of charitable contribution deduction"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TP5471) <> 0 Or GetCurrency(IANROthInc.SP5471) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Income from a foreign corporation, federal Form 5471"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPHobby) <> 0 Or GetCurrency(IANROthInc.SPHobby) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Hobby income"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TP8621) <> 0 Or GetCurrency(IANROthInc.SP8621) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Income or loss from Section 1291, federal Form 8621"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPDefDist) <> 0 Or GetCurrency(IANROthInc.SPDefDist) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Loss on excess deferral distribution"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPDisaster) <> 0 Or GetCurrency(IANROthInc.SPDisaster) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Disaster relief payments"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPFoster) <> 0 Or GetCurrency(IANROthInc.SPFoster) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Medicaid waiver payments to care provider"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{t}{n}{t}{n}{t}If GetCurrency(IANROthInc.TPCredAdj) <> 0 Or GetCurrency(IANROthInc.SPCredAdj) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Credit adjustment income, federal Forms 6478 and 8864"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPPYNPTC) <> 0 Or GetCurrency(IANROthInc.SPPYNPTC) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Net Premium Tax Credit"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TP1099QA) <> 0 Or GetCurrency(IANROthInc.SP1099QA) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Distributions from ABLE account"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPAirline) <> 0 Or GetCurrency(IANROthInc.SPAirline) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Qualified airline payments"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TP1099B) <> 0 Or GetCurrency(IANROthInc.SP1099B) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Foreign currency transaction"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPIAABLE) <> 0 Or GetCurrency(IANROthInc.SPIAABLE) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Distributions from an Iowa ABLE account"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPBusPass) <> 0 Or GetCurrency(IANROthInc.SPBusPass) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Employer provided bus pass or transportation expenses"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPFarmLoss) <> 0 Or GetCurrency(IANROthInc.SPFarmLoss) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Section 461(j) excess farm loss limitation adjustments"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TP8824) <> 0 Or GetCurrency(IANROthInc.SP8824) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "IA 8824 worksheet, due to nonconformity"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPStudLoanDis) <> 0 Or GetCurrency(IANROthInc.SPStudLoanDis) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Discharge of student loan debt - death or disability"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TP4684) <> 0 Or GetCurrency(IANROthInc.SP4684) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "IA 4684 worksheet, due to nonconformity"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TP3903) <> 0 Or GetCurrency(IANROthInc.SP3903) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "IA 3903 worksheet line 8a, due to nonconformity"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPBusInt) <> 0 Or GetCurrency(IANROthInc.SPBusInt) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Business interest expense limitation, due to nonconformity"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPEntExp) <> 0 Or GetCurrency(IANROthInc.SPEntExp) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Entertainment expenses, due to nonconformity"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TP2106) <> 0 Or GetCurrency(IANROthInc.SP2106) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "IA 2106 worksheet line 8, due to nonconformity"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPOthNC) <> 0 Or GetCurrency(IANROthInc.SPOthNC) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Other nonconformity adjustments"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}ReturnVal = Hold{n}End Sub
Sub Names_Calculation(){n}{t}ReturnVal = GetString(IARequired.CombNames){n}End Sub
Sub Print_Calculation(){n}{t}If GetCurrency(IANROthInc.TPTot) <> 0 Or GetCurrency(IANROthInc.SPTot) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SP1099B_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.SP1099B){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SP1099QA_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.SP1099QA){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SP2106_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.SP2106){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SP3903_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.SP3903){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SP4684_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.SP4684){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SP5471_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.SP5471){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SP8621_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.SP8621){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SP8814_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.SP8814){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SP8824_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.SP8824){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPAirline_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.SPAirline){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPAlaska_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.SPAlaska){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPAltTrade_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.SPAltTrade){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPAmount_Calculation(Index As Integer){n}{t}Dim count As Integer{n}{t}Dim Hold As Currency{n}{t}count = 0{n}{t}Hold = 0{n}{t}{n}{t}If GetCurrency(IANROthInc.TPOth1) <> 0 Or GetCurrency(IANROthInc.SPOth1) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.SPOth1){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPOth2) <> 0 Or GetCurrency(IANROthInc.SPOth2) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.SPOth2){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPBabySit) <> 0 Or GetCurrency(IANROthInc.SPBabySit) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.SPBabySit){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPBonus) <> 0 Or GetCurrency(IANROthInc.SPBonus) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.SPBonus){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPIAEd) <> 0 Or GetCurrency(IANROthInc.SPIAEd) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.SPIAEd){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPDirector) <> 0 Or GetCurrency(IANROthInc.SPDirector) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.SPDirector){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPIntangDrill) <> 0 Or GetCurrency(IANROthInc.SPIntangDrill) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.SPIntangDrill){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPExecutor) <> 0 Or GetCurrency(IANROthInc.SPExecutor) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.SPExecutor){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPFirstHmBuy) <> 0 Or GetCurrency(IANROthInc.SPFirstHmBuy) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.SPFirstHmBuy){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPK1) <> 0 Or GetCurrency(IANROthInc.SPK1) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.SPK1){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPRefundCr) <> 0 Or GetCurrency(IANROthInc.SPRefundCr) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.SPRefundCr){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{n}{t}If GetCurrency(IANROthInc.TPStRefund) <> 0 Or GetCurrency(IANROthInc.SPStRefund) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.SPStRefund){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPDepl) <> 0 Or GetCurrency(IANROthInc.SPDepl) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.SPDepl){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPJury) <> 0 Or GetCurrency(IANROthInc.SPJury) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.SPJury){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPPerRent) <> 0 Or GetCurrency(IANROthInc.SPPerRent) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.SPPerRent){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TP8814) <> 0 Or GetCurrency(IANROthInc.SP8814) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.SP8814){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPMSA) <> 0 Or GetCurrency(IANROthInc.SPMSA) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.SPMSA){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPMedMSA) <> 0 Or GetCurrency(IANROthInc.SPMedMSA) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.SPMedMSA){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPLTC) <> 0 Or GetCurrency(IANROthInc.SPLTC) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.SPLTC){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPMisc) <> 0 Or GetCurrency(IANROthInc.SPMisc) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.SPMisc){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPAlaska) <> 0 Or GetCurrency(IANROthInc.SPAlaska) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.SPAlaska){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPCoverdell) <> 0 Or GetCurrency(IANROthInc.SPCoverdell) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.SPCoverdell){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPCanceled) <> 0 Or GetCurrency(IANROthInc.SPCanceled) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.SPCanceled){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPPshipCan) <> 0 Or GetCurrency(IANROthInc.SPPshipCan) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.SPPshipCan){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPHSA) <> 0 Or GetCurrency(IANROthInc.SPHSA) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.SPHSA){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPAltTrade) <> 0 Or GetCurrency(IANROthInc.SPAltTrade) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.SPAltTrade){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPRecapTuit) <> 0 Or GetCurrency(IANROthInc.SPRecapTuit) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.SPRecapTuit){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPRecapChar) <> 0 Or GetCurrency(IANROthInc.SPRecapChar) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.SPRecapChar){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{n}{t}If GetCurrency(IANROthInc.TP5471) <> 0 Or GetCurrency(IANROthInc.SP5471) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.SP5471){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPHobby) <> 0 Or GetCurrency(IANROthInc.SPHobby) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.SPHobby){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TP8621) <> 0 Or GetCurrency(IANROthInc.SP8621) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.SP8621){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPDefDist) <> 0 Or GetCurrency(IANROthInc.SPDefDist) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.SPDefDist){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPDisaster) <> 0 Or GetCurrency(IANROthInc.SPDisaster) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.SPDisaster){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPFoster) <> 0 Or GetCurrency(IANROthInc.SPFoster) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.SPFoster){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{t}{n}{t}{n}{t}If GetCurrency(IANROthInc.TPCredAdj) <> 0 Or GetCurrency(IANROthInc.SPCredAdj) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.SPCredAdj){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPPYNPTC) <> 0 Or GetCurrency(IANROthInc.SPPYNPTC) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.SPPYNPTC){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TP1099QA) <> 0 Or GetCurrency(IANROthInc.SP1099QA) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.SP1099QA){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPAirline) <> 0 Or GetCurrency(IANROthInc.SPAirline) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.SPAirline){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TP1099B) <> 0 Or GetCurrency(IANROthInc.SP1099B) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.SP1099B){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPIAABLE) <> 0 Or GetCurrency(IANROthInc.SPIAABLE) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.SPIAABLE){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPBusPass) <> 0 Or GetCurrency(IANROthInc.SPBusPass) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.SPBusPass){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPFarmLoss) <> 0 Or GetCurrency(IANROthInc.SPFarmLoss) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.SPFarmLoss){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TP8824) <> 0 Or GetCurrency(IANROthInc.SP8824) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.SP8824){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPStudLoanDis) <> 0 Or GetCurrency(IANROthInc.SPStudLoanDis) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.SPStudLoanDis){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TP4684) <> 0 Or GetCurrency(IANROthInc.SP4684) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.SP4684){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TP3903) <> 0 Or GetCurrency(IANROthInc.SP3903) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.SP3903){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPBusInt) <> 0 Or GetCurrency(IANROthInc.SPBusInt) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.SPBusInt){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPEntExp) <> 0 Or GetCurrency(IANROthInc.SPEntExp) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.SPEntExp){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TP2106) <> 0 Or GetCurrency(IANROthInc.SP2106) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.SP2106){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPOthNC) <> 0 Or GetCurrency(IANROthInc.SPOthNC) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.SPOthNC){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}ReturnVal = Hold{n}End Sub
Sub SPBabySit_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.SPBabySit){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPBonus_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.SPBonus){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPBusInt_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.SPBusInt){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPBusPass_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.SPBusPass){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPCanceled_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.SPCanceled){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPCoverdell_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.SPCoverdell){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPCredAdj_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.SPCredAdj){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPDefDist_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.SPDefDist){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPDepl_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.SPDepl){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPDirector_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.SPDirector){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPDisaster_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.SPDisaster){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPEntExp_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.SPEntExp){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPExecutor_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.SPExecutor){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPFarmLoss_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.SPFarmLoss){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPFirstHmBuy_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.SPFirstHmBuy){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPFoster_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.SPFoster){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPHobby_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.SPHobby){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPHSA_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.SPHSA){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPIAABLE_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.SPIAABLE){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPIAEd_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.SPIAEd){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPIntangDrill_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.SPIntangDrill){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPJury_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.SPJury){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPK1_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.SPK1){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPLTC_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.SPLTC){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPMedMSA_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.SPMedMSA){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPMisc_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.SPMisc){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPMSA_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.SPMSA){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPName_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.SPCommon){n}End Sub
Sub SPOth1_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.SPOth1){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPOth2_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.SPOth2){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPOthNC_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.SPOthNC){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPPerRent_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.SPPerRent){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPPshipCan_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.SPPshipCan){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPPYNPTC_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.SPPYNPTC){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPRecapChar_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.SPRecapChar){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPRecapTuit_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.SPRecapTuit){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPRefundCr_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.SPRefundCr){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPStRefund_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.SPStRefund){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPStudLoanDis_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.SPStudLoanDis){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPTot_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(IANROthInc.SPOth1) + GetCurrency(IANROthInc.SPOth2) + GetCurrency(IANROthInc.SPBabySit) + GetCurrency(IANROthInc.SPBonus) + GetCurrency(IANROthInc.SPIAEd) + GetCurrency(IANROthInc.SPDirector) + GetCurrency(IANROthInc.SPIntangDrill) + GetCurrency(IANROthInc.SPExecutor) + GetCurrency(IANROthInc.SPFirstHmBuy) + GetCurrency(IANROthInc.SPK1) + GetCurrency(IANROthInc.SPRefundCr) + GetCurrency(IANROthInc.SPStRefund) + GetCurrency(IANROthInc.SPDepl) + GetCurrency(IANROthInc.SPJury) + GetCurrency(IANROthInc.SPPerRent) + GetCurrency(IANROthInc.SP8814) + GetCurrency(IANROthInc.SPMSA) + GetCurrency(IANROthInc.SPMedMSA) + GetCurrency(IANROthInc.SPLTC) + GetCurrency(IANROthInc.SPMisc) + GetCurrency(IANROthInc.SPAlaska) + GetCurrency(IANROthInc.SPCoverdell) + GetCurrency(IANROthInc.SPCanceled) + GetCurrency(IANROthInc.SPPshipCan) + GetCurrency(IANROthInc.SPHSA) + GetCurrency(IANROthInc.SPAltTrade) + GetCurrency(IANROthInc.SPRecapTuit) + GetCurrency(IANROthInc.SPRecapChar) + GetCurrency(IANROthInc.SP5471) + GetCurrency(IANROthInc.SPHobby) + GetCurrency(IANROthInc.SP8621) + GetCurrency(IANROthInc.SPDefDist) + GetCurrency(IANROthInc.SPDisaster) + GetCurrency(IANROthInc.SPFoster) + GetCurrency(IANROthInc.SPCredAdj) + GetCurrency(IANROthInc.SPPYNPTC) + GetCurrency(IANROthInc.SP1099QA) + GetCurrency(IANROthInc.SPIAABLE) + GetCurrency(IANROthInc.SPBusPass) + GetCurrency(IANROthInc.SPAirline) + GetCurrency(IANROthInc.SP1099B) + GetCurrency(IANROthInc.SPFarmLoss) + GetCurrency(IANROthInc.SP8824) + GetCurrency(IANROthInc.SPStudLoanDis) + GetCurrency(IANROthInc.SP4684) + GetCurrency(IANROthInc.SP3903) + GetCurrency(IANROthInc.SPBusInt) + GetCurrency(IANROthInc.SPEntExp) + GetCurrency(IANROthInc.SP2106) + GetCurrency(IANROthInc.SPOthNC){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IAF1040.SSN){n}End Sub
Sub TP1099B_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TP1099B){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TP1099QA_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TP1099QA){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TP2106_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TP2106){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TP3903_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TP3903){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TP4684_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TP4684){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TP5471_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TP5471){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TP8621_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TP8621){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TP8814_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TP8814){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TP8824_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TP8824){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPAirline_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TPAirline){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPAlaska_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TPAlaska){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPAltTrade_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TPAltTrade){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPAmount_Calculation(Index As Integer){n}{t}Dim count As Integer{n}{t}Dim Hold As Currency{n}{t}count = 0{n}{t}Hold = 0{n}{t}{n}{t}If GetCurrency(IANROthInc.TPOth1) <> 0 Or GetCurrency(IANROthInc.SPOth1) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.TPOth1){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPOth2) <> 0 Or GetCurrency(IANROthInc.SPOth2) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.TPOth2){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPBabySit) <> 0 Or GetCurrency(IANROthInc.SPBabySit) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.TPBabySit){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPBonus) <> 0 Or GetCurrency(IANROthInc.SPBonus) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.TPBonus){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPIAEd) <> 0 Or GetCurrency(IANROthInc.SPIAEd) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.TPIAEd){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPDirector) <> 0 Or GetCurrency(IANROthInc.SPDirector) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.TPDirector){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPIntangDrill) <> 0 Or GetCurrency(IANROthInc.SPIntangDrill) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.TPIntangDrill){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPExecutor) <> 0 Or GetCurrency(IANROthInc.SPExecutor) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.TPExecutor){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPFirstHmBuy) <> 0 Or GetCurrency(IANROthInc.SPFirstHmBuy) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.TPFirstHmBuy){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPK1) <> 0 Or GetCurrency(IANROthInc.SPK1) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.TPK1){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPRefundCr) <> 0 Or GetCurrency(IANROthInc.SPRefundCr) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.TPRefundCr){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPStRefund) <> 0 Or GetCurrency(IANROthInc.SPStRefund) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.TPStRefund){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPDepl) <> 0 Or GetCurrency(IANROthInc.SPDepl) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.TPDepl){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPJury) <> 0 Or GetCurrency(IANROthInc.SPJury) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.TPJury){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPPerRent) <> 0 Or GetCurrency(IANROthInc.SPPerRent) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.TPPerRent){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TP8814) <> 0 Or GetCurrency(IANROthInc.SP8814) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.TP8814){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPMSA) <> 0 Or GetCurrency(IANROthInc.SPMSA) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.TPMSA){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPMedMSA) <> 0 Or GetCurrency(IANROthInc.SPMedMSA) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.TPMedMSA){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPLTC) <> 0 Or GetCurrency(IANROthInc.SPLTC) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.TPLTC){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPMisc) <> 0 Or GetCurrency(IANROthInc.SPMisc) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.TPMisc){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPAlaska) <> 0 Or GetCurrency(IANROthInc.SPAlaska) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.TPAlaska){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPCoverdell) <> 0 Or GetCurrency(IANROthInc.SPCoverdell) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.TPCoverdell){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPCanceled) <> 0 Or GetCurrency(IANROthInc.SPCanceled) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.TPCanceled){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPPshipCan) <> 0 Or GetCurrency(IANROthInc.SPPshipCan) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.TPPshipCan){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPHSA) <> 0 Or GetCurrency(IANROthInc.SPHSA) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.TPHSA){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPAltTrade) <> 0 Or GetCurrency(IANROthInc.SPAltTrade) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.TPAltTrade){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPRecapTuit) <> 0 Or GetCurrency(IANROthInc.SPRecapTuit) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.TPRecapTuit){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPRecapChar) <> 0 Or GetCurrency(IANROthInc.SPRecapChar) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.TPRecapChar){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TP5471) <> 0 Or GetCurrency(IANROthInc.SP5471) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.TP5471){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPHobby) <> 0 Or GetCurrency(IANROthInc.SPHobby) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.TPHobby){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TP8621) <> 0 Or GetCurrency(IANROthInc.SP8621) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.TP8621){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPDefDist) <> 0 Or GetCurrency(IANROthInc.SPDefDist) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.TPDefDist){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPDisaster) <> 0 Or GetCurrency(IANROthInc.SPDisaster) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.TPDisaster){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPFoster) <> 0 Or GetCurrency(IANROthInc.SPFoster) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.TPFoster){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{t}{n}{t}{n}{t}If GetCurrency(IANROthInc.TPCredAdj) <> 0 Or GetCurrency(IANROthInc.SPCredAdj) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.TPCredAdj){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPPYNPTC) <> 0 Or GetCurrency(IANROthInc.SPPYNPTC) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.TPPYNPTC){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TP1099QA) <> 0 Or GetCurrency(IANROthInc.SP1099QA) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.TP1099QA){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPAirline) <> 0 Or GetCurrency(IANROthInc.SPAirline) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.TPAirline){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TP1099B) <> 0 Or GetCurrency(IANROthInc.SP1099B) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.TP1099B){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPIAABLE) <> 0 Or GetCurrency(IANROthInc.SPIAABLE) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.TPIAABLE){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPBusPass) <> 0 Or GetCurrency(IANROthInc.SPBusPass) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.TPBusPass){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPFarmLoss) <> 0 Or GetCurrency(IANROthInc.SPFarmLoss) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.TPFarmLoss){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TP8824) <> 0 Or GetCurrency(IANROthInc.SP8824) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.TP8824){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPStudLoanDis) <> 0 Or GetCurrency(IANROthInc.SPStudLoanDis) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.TPStudLoanDis){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TP4684) <> 0 Or GetCurrency(IANROthInc.SP4684) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.TP4684){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TP3903) <> 0 Or GetCurrency(IANROthInc.SP3903) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.TP3903){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPBusInt) <> 0 Or GetCurrency(IANROthInc.SPBusInt) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.TPBusInt){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPEntExp) <> 0 Or GetCurrency(IANROthInc.SPEntExp) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.TPEntExp){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TP2106) <> 0 Or GetCurrency(IANROthInc.SP2106) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.TP2106){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IANROthInc.TPOthNC) <> 0 Or GetCurrency(IANROthInc.SPOthNC) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IANROthInc.TPOthNC){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}ReturnVal = Hold{n}End Sub
Sub TPBabySit_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TPBabySit){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPBonus_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TPBonus){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPBusInt_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TPBusInt){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPBusPass_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TPBusPass){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPCanceled_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TPCanceled){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPCoverdell_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TPCoverdell){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPCredAdj_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TPCredAdj){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPDefDist_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TPDefDist){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPDepl_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TPDepl){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPDirector_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TPDirector){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPDisaster_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TPDisaster){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPEntExp_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TPEntExp){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPExecutor_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TPExecutor){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPFarmLoss_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TPFarmLoss){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPFirstHmBuy_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TPFirstHmBuy){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPFoster_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TPFoster){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPHobby_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TPHobby){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPHSA_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TPHSA){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPIAABLE_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TPIAABLE){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPIAEd_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TPIAEd){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPIntangDrill_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TPIntangDrill){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPJointAmount_Calculation(Index As Integer){n}{t}If GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = GetCurrency(IANROthInc.TPAmount(Index)){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IANROthInc.TPAmount(Index)) + GetCurrency(IANROthInc.SPAmount(Index)){n}{t}End If{n}End Sub
Sub TPJury_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TPJury){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPK1_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TPK1){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPLTC_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TPLTC){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPMedMSA_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TPMedMSA){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPMisc_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TPMisc){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPMSA_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TPMSA){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPName_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.TPCommon){n}End Sub
Sub TPOth1_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TPOth1){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPOth2_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TPOth2){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPOthNC_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TPOthNC){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPPerRent_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TPPerRent){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPPshipCan_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TPPshipCan){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPPYNPTC_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TPPYNPTC){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPRecapChar_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TPRecapChar){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPRecapTuit_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TPRecapTuit){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPRefundCr_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TPRefundCr){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPStRefund_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TPStRefund){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPStudLoanDis_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TPStudLoanDis){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPTot_Calculation(){n}{t}If (IAFS() = 2 And GetBool(IAF126.SpRes) = False) Or GetBool(IAF126.TpRes) = False Then{n}{t}{t}ReturnVal = GetCurrency(IANROthInc.TPOth1) + GetCurrency(IANROthInc.TPOth2) + GetCurrency(IANROthInc.TPBabySit) + GetCurrency(IANROthInc.TPBonus) + GetCurrency(IANROthInc.TPIAEd) + GetCurrency(IANROthInc.TPDirector) + GetCurrency(IANROthInc.TPIntangDrill) + GetCurrency(IANROthInc.TPExecutor) + GetCurrency(IANROthInc.TPFirstHmBuy) + GetCurrency(IANROthInc.TPK1) + GetCurrency(IANROthInc.TPRefundCr) + GetCurrency(IANROthInc.TPStRefund) + GetCurrency(IANROthInc.TPDepl) + GetCurrency(IANROthInc.TPJury) + GetCurrency(IANROthInc.TPPerRent) + GetCurrency(IANROthInc.TP8814) + GetCurrency(IANROthInc.TPMSA) + GetCurrency(IANROthInc.TPMedMSA) + GetCurrency(IANROthInc.TPLTC) + GetCurrency(IANROthInc.TPMisc) + GetCurrency(IANROthInc.TPAlaska) + GetCurrency(IANROthInc.TPCoverdell) + GetCurrency(IANROthInc.TPCanceled) + GetCurrency(IANROthInc.TPPshipCan) + GetCurrency(IANROthInc.TPHSA) + GetCurrency(IANROthInc.TPAltTrade) + GetCurrency(IANROthInc.TPRecapTuit) + GetCurrency(IANROthInc.TPRecapChar) + GetCurrency(IANROthInc.TP5471) + GetCurrency(IANROthInc.TPHobby) + GetCurrency(IANROthInc.TP8621) + GetCurrency(IANROthInc.TPDefDist) + GetCurrency(IANROthInc.TPDisaster) + GetCurrency(IANROthInc.TPFoster) + GetCurrency(IANROthInc.TPCredAdj) + GetCurrency(IANROthInc.TPPYNPTC) + GetCurrency(IANROthInc.TP1099QA) + GetCurrency(IANROthInc.TPIAABLE) + GetCurrency(IANROthInc.TPBusPass) + GetCurrency(IANROthInc.TPAirline) + GetCurrency(IANROthInc.TP1099B) + GetCurrency(IANROthInc.TPFarmLoss) + GetCurrency(IANROthInc.TP8824) + GetCurrency(IANROthInc.TPStudLoanDis) + GetCurrency(IANROthInc.TP4684) + GetCurrency(IANROthInc.TP3903) + GetCurrency(IANROthInc.TPBusInt) + GetCurrency(IANROthInc.TPEntExp) + GetCurrency(IANROthInc.TP2106) + GetCurrency(IANROthInc.TPOthNC){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Txt1_Calculation(){n}{t}ReturnVal = GetString(IAWOthInc.Txt1){n}End Sub
Sub Txt2_Calculation(){n}{t}ReturnVal = GetString(IAWOthInc.Txt2){n}End SubSub ANet_Calculation(){n}{t}Dim ATotAdj As Currency{n}{t}{n}{t}ATotAdj = GetCurrency(IAF1040.AKeogh) + GetCurrency(IAF1040.ABusIncL) + GetCurrency(IAF1040.AHealth) + GetCurrency(IAF1040.APenalty) + GetCurrency(IAF1040.AAlimonyP) + GetCurrency(IAF1040.APenExcl) + GetCurrency(IAF1040.AMove) + GetCurrency(IAF1040.AGainDed) + GetCurrency(IAOthAdj.ModTPTot){n}{t}{n}{t}ReturnVal = GetCurrency(IAF1040.AGross) - ATotAdj{n}End Sub
Sub BNet_Calculation(){n}{t}Dim BTotAdj As Currency{n}{t}{n}{t}BTotAdj = GetCurrency(IAF1040.BKeogh) + GetCurrency(IAF1040.BBusIncL) + GetCurrency(IAF1040.BHealth) + GetCurrency(IAF1040.BPenalty) + GetCurrency(IAF1040.BAlimonyP) + GetCurrency(IAF1040.BPenExcl) + GetCurrency(IAF1040.BMove) + GetCurrency(IAF1040.BGainDed) + GetCurrency(IAOthAdj.ModSPTot){n}{t}{n}{t}ReturnVal = GetCurrency(IAF1040.BGross) - BTotAdj{n}End Sub
Sub BProRate_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}If GetCurrency(IAOthAdj.BNet) < 0 And GetCurrency(IAOthAdj.ANet) < 0 Then{n}{t}{t}{t}If GetCurrency(IAOthAdj.BNet) < GetCurrency(IAOthAdj.ANet) Then{n}{t}{t}{t}{t}ReturnVal = 0{n}{t}{t}{t}Else{n}{t}{t}{t}{t}ReturnVal = 1{n}{t}{t}{t}End If{n}{t}{t}ElseIf GetCurrency(IAOthAdj.BNet) < 0 Then{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}ElseIf GetCurrency(IAOthAdj.BNet) > 0 And GetCurrency(IAOthAdj.TotNI) <= 0 Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}ElseIf GetCurrency(IAOthAdj.TotNI) = 0 Then{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = MaxValue(0, (MinValue(1#, GetFloat(IAOthAdj.BNet) / GetFloat(IAOthAdj.TotNI)))){n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Code_Calculation(Index As Integer){n}{t}Dim count As Integer{n}{t}Dim Hold As String{n}{t}count = 0{n}{t}Hold = ""{n}{t}{n}{t}If GetCurrency(IAOthAdj.TOth1) <> 0 Or GetCurrency(IAOthAdj.SOth1) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "dd"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPActiveMil) <> 0 Or GetCurrency(IAOthAdj.SPActiveMil) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "b"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPAltMV) <> 0 Or GetCurrency(IAOthAdj.SPAltMV) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "c"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPInvolConv) <> 0 Or GetCurrency(IAOthAdj.SPInvolConv) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "e"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{n}{t}If GetCurrency(IAOthAdj.TPClaimOfRight) <> 0 Or GetCurrency(IAOthAdj.SPClaimOfRight) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "f"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPIAEd) <> 0 Or GetCurrency(IAOthAdj.SPIAEd) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "g"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPIADis) <> 0 Or GetCurrency(IAOthAdj.SPIADis) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "h"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{n}{t}If GetCurrency(IAOthAdj.TPDomProd) <> 0 Or GetCurrency(IAOthAdj.SPDomProd) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "i"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPFirstHmBuy) <> 0 Or GetCurrency(IAOthAdj.SPFirstHmBuy) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "j"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPEmployerSS) <> 0 Or GetCurrency(IAOthAdj.SPEmployerSS) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "k"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPFedFuels) <> 0 Or GetCurrency(IAOthAdj.SPFedFuels) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "l"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPForeign) <> 0 Or GetCurrency(IAOthAdj.SPForeign) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TP2555) <> 0 Or GetCurrency(IAOthAdj.SP2555) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPDistressed) <> 0 Or GetCurrency(IAOthAdj.SPDistressed) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "n"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPHealthSav) <> 0 Or GetCurrency(IAOthAdj.SPHealthSav) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "o"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPVet) <> 0 Or GetCurrency(IAOthAdj.SPVet) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "p"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t} If GetCurrency(IAOthAdj.TPVetGrant) <> 0 Or GetCurrency(IAOthAdj.SPVetGrant) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "q"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPHomeHealth) <> 0 Or GetCurrency(IAOthAdj.SPHomeHealth) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "r"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPIAVetTrust) <> 0 Or GetCurrency(IAOthAdj.SPIAVetTrust) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "s"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPMilitaryExem) <> 0 Or GetCurrency(IAOthAdj.SPMilitaryExem) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "t"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TIANOL) <> 0 Or GetCurrency(IAOthAdj.SIANOL) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "u"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPOrgan) <> 0 Or GetCurrency(IAOthAdj.SPOrgan) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "v"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPK1) <> 0 Or GetCurrency(IAOthAdj.SPK1) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "w"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPSegal) <> 0 Or GetCurrency(IAOthAdj.SPSegal) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "x"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPShell) <> 0 Or GetCurrency(IAOthAdj.SPShell) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "y"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TStud) <> 0 Or GetCurrency(IAOthAdj.SStud) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "z"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPVictim) <> 0 Or GetCurrency(IAOthAdj.SPVictim) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "aa"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPWages) <> 0 Or GetCurrency(IAOthAdj.SPWages) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "bb"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPWorkCr) <> 0 Or GetCurrency(IAOthAdj.SPWorkCr) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "cc"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TP2106) <> 0 Or GetCurrency(IAOthAdj.SP2106) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "dd"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TMSA) <> 0 Or GetCurrency(IAOthAdj.SMSA) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "dd"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPJury) <> 0 Or GetCurrency(IAOthAdj.SPJury) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "dd"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPRFST) <> 0 Or GetCurrency(IAOthAdj.SPRFST) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "dd"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPSub) <> 0 Or GetCurrency(IAOthAdj.SPSub) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "dd"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TP501c) <> 0 Or GetCurrency(IAOthAdj.SP501c) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "dd"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPPerRent) <> 0 Or GetCurrency(IAOthAdj.SPPerRent) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "dd"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TP403b) <> 0 Or GetCurrency(IAOthAdj.SP403b) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "dd"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPUDC) <> 0 Or GetCurrency(IAOthAdj.SPUDC) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "dd"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPWBF) <> 0 Or GetCurrency(IAOthAdj.SPWBF) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "dd"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TP8873) <> 0 Or GetCurrency(IAOthAdj.SP8873) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "dd"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPOlympic) <> 0 Or GetCurrency(IAOthAdj.SPOlympic) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "dd"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPEducator) <> 0 Or GetCurrency(IAOthAdj.SPEducator) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "ee"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPTuition) <> 0 Or GetCurrency(IAOthAdj.SPTuition) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "ff"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPElectric) <> 0 Or GetCurrency(IAOthAdj.SPElectric) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "gg"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPRapid) <> 0 Or GetCurrency(IAOthAdj.SPRapid) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "hh"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPIAABLE) <> 0 Or GetCurrency(IAOthAdj.SPIAABLE) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "ii"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}   {n}{t}ReturnVal = Hold{n}{t}{n}End Sub
Sub Desc_Calculation(){n}{t}Dim Total As Currency{n}{t}{n}{t}Total = GetCurrency(IAOthAdj.TPTot) + GetCurrency(IAOthAdj.SPTot){n}{t}{n}{t}ReturnVal = CStr(Total){n}End Sub
Sub Description_Calculation(Index As Integer){n}{t}Dim count As Integer{n}{t}Dim Hold As String{n}{t}count = 0{n}{t}Hold = ""{n}{t}{n}{t}If GetCurrency(IAOthAdj.TOth1) <> 0 Or GetCurrency(IAOthAdj.SOth1) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetString(IAOthAdj.TxtOth1){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPActiveMil) <> 0 Or GetCurrency(IAOthAdj.SPActiveMil) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Active duty military pay"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPAltMV) <> 0 Or GetCurrency(IAOthAdj.SPAltMV) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Alternative motor vehicle deduction"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPInvolConv) <> 0 Or GetCurrency(IAOthAdj.SPInvolConv) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Capital or ordinary gain from involuntary conversion"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{n}{t}If GetCurrency(IAOthAdj.TPClaimOfRight) <> 0 Or GetCurrency(IAOthAdj.SPClaimOfRight) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Claim of Right deduction"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPIAEd) <> 0 Or GetCurrency(IAOthAdj.SPIAEd) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "College Savings Iowa or Iowa Advisor 529 Plan"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPIADis) <> 0 Or GetCurrency(IAOthAdj.SPIADis) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Disability income exclusion"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{n}{t}If GetCurrency(IAOthAdj.TPDomProd) <> 0 Or GetCurrency(IAOthAdj.SPDomProd) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Domestic production activities deduction"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPFirstHmBuy) <> 0 Or GetCurrency(IAOthAdj.SPFirstHmBuy) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "First-Time Homebuyer Savings Account qualifying contributions"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPEmployerSS) <> 0 Or GetCurrency(IAOthAdj.SPEmployerSS) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Employer social security credit, federal Form 8846"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPFedFuels) <> 0 Or GetCurrency(IAOthAdj.SPFedFuels) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Alcohol and cellulosic biofuel credit, federal Form 6478"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPForeign) <> 0 Or GetCurrency(IAOthAdj.SPForeign) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Foreign earned income exclusion, federal Form 2555"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TP2555) <> 0 Or GetCurrency(IAOthAdj.SP2555) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Foreign housing deduction, federal Form 2555"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPDistressed) <> 0 Or GetCurrency(IAOthAdj.SPDistressed) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Gains or losses from distressed sale transactions"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPHealthSav) <> 0 Or GetCurrency(IAOthAdj.SPHealthSav) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Health savings account deduction, federal Form 8889"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPVet) <> 0 Or GetCurrency(IAOthAdj.SPVet) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Injured veterans programs - contributions"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t} If GetCurrency(IAOthAdj.TPVetGrant) <> 0 Or GetCurrency(IAOthAdj.SPVetGrant) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Injured veterans programs - grants"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPHomeHealth) <> 0 Or GetCurrency(IAOthAdj.SPHomeHealth) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "In-home health care"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPIAVetTrust) <> 0 Or GetCurrency(IAOthAdj.SPIAVetTrust) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Iowa Veterans Trust Fund"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPMilitaryExem) <> 0 Or GetCurrency(IAOthAdj.SPMilitaryExem) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Military exemptions"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TIANOL) <> 0 Or GetCurrency(IAOthAdj.SIANOL) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Iowa Net Operating Loss"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPOrgan) <> 0 Or GetCurrency(IAOthAdj.SPOrgan) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Organ transplant expenses"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPK1) <> 0 Or GetCurrency(IAOthAdj.SPK1) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Partnership income and/or S Corporation income"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPSegal) <> 0 Or GetCurrency(IAOthAdj.SPSegal) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Segal Americorps Education Award payments"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPShell) <> 0 Or GetCurrency(IAOthAdj.SPShell) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Speculative shell buildings"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TStud) <> 0 Or GetCurrency(IAOthAdj.SStud) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Student loan interest deduction"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPVictim) <> 0 Or GetCurrency(IAOthAdj.SPVictim) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Victim compensation awards"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPWages) <> 0 Or GetCurrency(IAOthAdj.SPWages) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Wages paid to certain individuals"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPWorkCr) <> 0 Or GetCurrency(IAOthAdj.SPWorkCr) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Work opportunity credit, federal Form 5884"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{t}{n}{t}{n}{t}If GetCurrency(IAOthAdj.TP2106) <> 0 Or GetCurrency(IAOthAdj.SP2106) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Business expenses of reservists, QPA, FBO, federal Form 2106"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TMSA) <> 0 Or GetCurrency(IAOthAdj.SMSA) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Archer MSA deduction, federal Form 8853"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPJury) <> 0 Or GetCurrency(IAOthAdj.SPJury) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Jury pay repayment to employer"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPRFST) <> 0 Or GetCurrency(IAOthAdj.SPRFST) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Reforestation amortization and expenses"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPSub) <> 0 Or GetCurrency(IAOthAdj.SPSub) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Repayment of supplemental unemployment benefits"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TP501c) <> 0 Or GetCurrency(IAOthAdj.SP501c) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Contributions to a 501(c)(18) pension plan"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPPerRent) <> 0 Or GetCurrency(IAOthAdj.SPPerRent) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Expenses for personal property rental"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TP403b) <> 0 Or GetCurrency(IAOthAdj.SP403b) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Contributions by certain chaplains to a 403(b) plan"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPUDC) <> 0 Or GetCurrency(IAOthAdj.SPUDC) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Qualified attorney/court fees paid after 10/22/2004"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPWBF) <> 0 Or GetCurrency(IAOthAdj.SPWBF) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Qualified whistleblower fees"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TP8873) <> 0 Or GetCurrency(IAOthAdj.SP8873) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Extraterritorial Income Exclusion, federal Form 8873"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPOlympic) <> 0 Or GetCurrency(IAOthAdj.SPOlympic) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Nontaxable amount of Olympic and Paralympic medals and USOC prize money"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPEducator) <> 0 Or GetCurrency(IAOthAdj.SPEducator) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Educator expenses"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPTuition) <> 0 Or GetCurrency(IAOthAdj.SPTuition) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Tuition and fees deduction"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPElectric) <> 0 Or GetCurrency(IAOthAdj.SPElectric) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Nonresident Electric Utility Reciprocity"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPRapid) <> 0 Or GetCurrency(IAOthAdj.SPRapid) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Rapid Response to State Disasters"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPIAABLE) <> 0 Or GetCurrency(IAOthAdj.SPIAABLE) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Iowa ABLE savings plan trust"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}ReturnVal = Hold{n}End Sub
Sub Exist_Calculation(){n}{t}ReturnVal = 1{n}End Sub
Sub ModSPTot_Calculation(){n}{t}ReturnVal = GetCurrency(IAOthAdj.SOth1) + GetCurrency(IAOthAdj.SPActiveMil) + GetCurrency(IAOthAdj.SPInvolConv) + GetCurrency(IAOthAdj.SPClaimOfRight) + GetCurrency(IAOthAdj.SPIAEd) + GetCurrency(IAOthAdj.SPIADis) + GetCurrency(IAOthAdj.SPDomProd) + GetCurrency(IAOthAdj.SPFirstHmBuy) + GetCurrency(IAOthAdj.SPEmployerSS) + GetCurrency(IAOthAdj.SPFedFuels) + GetCurrency(IAOthAdj.SPForeign) + GetCurrency(IAOthAdj.SP2555) + GetCurrency(IAOthAdj.SPDistressed) + GetCurrency(IAOthAdj.SPHealthSav) + GetCurrency(IAOthAdj.SPVet) + GetCurrency(IAOthAdj.SPVetGrant) + GetCurrency(IAOthAdj.SPHomeHealth) + GetCurrency(IAOthAdj.SPIAVetTrust) + GetCurrency(IAOthAdj.SPMilitaryExem) + GetCurrency(IAOthAdj.SIANOL) + GetCurrency(IAOthAdj.SPOrgan) + GetCurrency(IAOthAdj.SPK1) + GetCurrency(IAOthAdj.SPSegal) + GetCurrency(IAOthAdj.SPShell) + GetCurrency(IAOthAdj.SStud) + GetCurrency(IAOthAdj.SPVictim) + GetCurrency(IAOthAdj.SPWages) + GetCurrency(IAOthAdj.SPWorkCr) + GetCurrency(IAOthAdj.SP2106) + GetCurrency(IAOthAdj.SMSA) + GetCurrency(IAOthAdj.SPJury) + GetCurrency(IAOthAdj.SPRFST) + GetCurrency(IAOthAdj.SPSub) + GetCurrency(IAOthAdj.SP501c) + GetCurrency(IAOthAdj.SPPerRent) + GetCurrency(IAOthAdj.SP403b) + GetCurrency(IAOthAdj.SPUDC) + GetCurrency(IAOthAdj.SPWBF) + GetCurrency(IAOthAdj.SP8873) + GetCurrency(IAOthAdj.SPOlympic) + GetCurrency(IAOthAdj.SPEducator) + GetCurrency(IAOthAdj.SPTuition) + GetCurrency(IAOthAdj.SPElectric) + GetCurrency(IAOthAdj.SPRapid) + GetCurrency(IAOthAdj.SPIAABLE){n}End Sub
Sub ModTPTot_Calculation(){n}{t}ReturnVal = GetCurrency(IAOthAdj.TOth1) + GetCurrency(IAOthAdj.TPActiveMil) + GetCurrency(IAOthAdj.TPInvolConv) + GetCurrency(IAOthAdj.TPClaimOfRight) + GetCurrency(IAOthAdj.TPIAEd) + GetCurrency(IAOthAdj.TPIADis) + GetCurrency(IAOthAdj.TPDomProd) + GetCurrency(IAOthAdj.TPFirstHmBuy) + GetCurrency(IAOthAdj.TPEmployerSS) + GetCurrency(IAOthAdj.TPFedFuels) + GetCurrency(IAOthAdj.TPForeign) + GetCurrency(IAOthAdj.TP2555) + GetCurrency(IAOthAdj.TPDistressed) + GetCurrency(IAOthAdj.TPHealthSav) + GetCurrency(IAOthAdj.TPVet) + GetCurrency(IAOthAdj.TPVetGrant) + GetCurrency(IAOthAdj.TPHomeHealth) + GetCurrency(IAOthAdj.TPIAVetTrust) + GetCurrency(IAOthAdj.TPMilitaryExem) + GetCurrency(IAOthAdj.TIANOL) + GetCurrency(IAOthAdj.TPOrgan) + GetCurrency(IAOthAdj.TPK1) + GetCurrency(IAOthAdj.TPSegal) + GetCurrency(IAOthAdj.TPShell) + GetCurrency(IAOthAdj.TStud) + GetCurrency(IAOthAdj.TPVictim) + GetCurrency(IAOthAdj.TPWages) + GetCurrency(IAOthAdj.TPWorkCr) + GetCurrency(IAOthAdj.TP2106) + GetCurrency(IAOthAdj.TMSA) + GetCurrency(IAOthAdj.TPJury) + GetCurrency(IAOthAdj.TPRFST) + GetCurrency(IAOthAdj.TPSub) + GetCurrency(IAOthAdj.TP501c) + GetCurrency(IAOthAdj.TPPerRent) + GetCurrency(IAOthAdj.TP403b) + GetCurrency(IAOthAdj.TPUDC) + GetCurrency(IAOthAdj.TPWBF) + GetCurrency(IAOthAdj.TP8873) + GetCurrency(IAOthAdj.TPOlympic) + GetCurrency(IAOthAdj.TPEducator) + GetCurrency(IAOthAdj.TPTuition) + GetCurrency(IAOthAdj.TPElectric) + GetCurrency(IAOthAdj.TPRapid) + GetCurrency(IAOthAdj.TPIAABLE){n}End Sub
Sub Names_Calculation(){n}{t}ReturnVal = GetString(IARequired.CombNames){n}End Sub
Sub PrintMe_Calculation(){n}{t}If GetCurrency(IAOthAdj.TPTot) <> 0 Or GetCurrency(IAOthAdj.SPTot) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SIANOL_Calculation(){n}{t}If GetBool(IAF126.SpNonRes) = True Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = Abs(GetCurrency(USWOthInc.SPNOL)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SMSA_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthAdj.SP8853){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SP2106_Calculation(){n}{t}ReturnVal = GetCurrency(USWRec.SBusExp2106){n}End Sub
Sub SP2555_Calculation(){n}{t}ReturnVal = GetCurrency(USWOthAdj.SP2555){n}End Sub
Sub SP403b_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthAdj.SP403b){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SP501c_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthAdj.SPTotal501){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SP8873_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthAdj.SP8873){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPAltMV_Calculation(){n}'2018 expanded instructions - deduction does not apply to purchases on or after 1/1/2015 due to nonconformity, federal does not ask for a purchase date, believe will be very uncommon for ability to take this credit on Iowa, remove math and make user entered{n}{t}'If IAFS() = 3 And GetBool(USF8910.Print) = True Then{n}{t}'{t}ReturnVal = CDollar(GetFloat(IAOthAdj.BProRate) * 2000@){n}{t}'Else{n}{t}{t}ReturnVal = 0{n}{t}'End If{n}End Sub
Sub SPAmount_Calculation(Index As Integer){n}{t}Dim count As Integer{n}{t}Dim Hold As Currency{n}{t}count = 0{n}{t}Hold = 0{n}{t}{n}{t}If GetCurrency(IAOthAdj.TOth1) <> 0 Or GetCurrency(IAOthAdj.SOth1) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}Hold = GetCurrency(IAOthAdj.SOth1){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPActiveMil) <> 0 Or GetCurrency(IAOthAdj.SPActiveMil) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.SPActiveMil){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPAltMV) <> 0 Or GetCurrency(IAOthAdj.SPAltMV) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.SPAltMV){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPInvolConv) <> 0 Or GetCurrency(IAOthAdj.SPInvolConv) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.SPInvolConv){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{n}{t}If GetCurrency(IAOthAdj.TPClaimOfRight) <> 0 Or GetCurrency(IAOthAdj.SPClaimOfRight) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.SPClaimOfRight){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPIAEd) <> 0 Or GetCurrency(IAOthAdj.SPIAEd) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.SPIAEd){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPIADis) <> 0 Or GetCurrency(IAOthAdj.SPIADis) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.SPIADis){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPDomProd) <> 0 Or GetCurrency(IAOthAdj.SPDomProd) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.SPDomProd){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPFirstHmBuy) <> 0 Or GetCurrency(IAOthAdj.SPFirstHmBuy) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.SPFirstHmBuy){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPEmployerSS) <> 0 Or GetCurrency(IAOthAdj.SPEmployerSS) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.SPEmployerSS){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPFedFuels) <> 0 Or GetCurrency(IAOthAdj.SPFedFuels) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.SPFedFuels){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPForeign) <> 0 Or GetCurrency(IAOthAdj.SPForeign) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.SPForeign){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TP2555) <> 0 Or GetCurrency(IAOthAdj.SP2555) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.SP2555){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPDistressed) <> 0 Or GetCurrency(IAOthAdj.SPDistressed) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.SPDistressed){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPHealthSav) <> 0 Or GetCurrency(IAOthAdj.SPHealthSav) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.SPHealthSav){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPVet) <> 0 Or GetCurrency(IAOthAdj.SPVet) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.SPVet){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{n}{t}If GetCurrency(IAOthAdj.TPVetGrant) <> 0 Or GetCurrency(IAOthAdj.SPVetGrant) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.SPVetGrant){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPHomeHealth) <> 0 Or GetCurrency(IAOthAdj.SPHomeHealth) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.SPHomeHealth){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPIAVetTrust) <> 0 Or GetCurrency(IAOthAdj.SPIAVetTrust) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.SPIAVetTrust){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPMilitaryExem) <> 0 Or GetCurrency(IAOthAdj.SPMilitaryExem) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.SPMilitaryExem){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TIANOL) <> 0 Or GetCurrency(IAOthAdj.SIANOL) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.SIANOL){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPOrgan) <> 0 Or GetCurrency(IAOthAdj.SPOrgan) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.SPOrgan){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPK1) <> 0 Or GetCurrency(IAOthAdj.SPK1) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.SPK1){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPSegal) <> 0 Or GetCurrency(IAOthAdj.SPSegal) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.SPSegal){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPShell) <> 0 Or GetCurrency(IAOthAdj.SPShell) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.SPShell){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TStud) <> 0 Or GetCurrency(IAOthAdj.SStud) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.SStud){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPVictim) <> 0 Or GetCurrency(IAOthAdj.SPVictim) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.SPVictim){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPWages) <> 0 Or GetCurrency(IAOthAdj.SPWages) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.SPWages){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPWorkCr) <> 0 Or GetCurrency(IAOthAdj.SPWorkCr) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.SPWorkCr){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TP2106) <> 0 Or GetCurrency(IAOthAdj.SP2106) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.SP2106){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TMSA) <> 0 Or GetCurrency(IAOthAdj.SMSA) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.SMSA){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPJury) <> 0 Or GetCurrency(IAOthAdj.SPJury) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.SPJury){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPRFST) <> 0 Or GetCurrency(IAOthAdj.SPRFST) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.SPRFST){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPSub) <> 0 Or GetCurrency(IAOthAdj.SPSub) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.SPSub){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TP501c) <> 0 Or GetCurrency(IAOthAdj.SP501c) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.SP501c){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPPerRent) <> 0 Or GetCurrency(IAOthAdj.SPPerRent) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.SPPerRent){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TP403b) <> 0 Or GetCurrency(IAOthAdj.SP403b) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.SP403b){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPUDC) <> 0 Or GetCurrency(IAOthAdj.SPUDC) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.SPUDC){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPWBF) <> 0 Or GetCurrency(IAOthAdj.SPWBF) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.SPWBF){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TP8873) <> 0 Or GetCurrency(IAOthAdj.SP8873) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.SP8873){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPOlympic) <> 0 Or GetCurrency(IAOthAdj.SPOlympic) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.SPOlympic){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPEducator) <> 0 Or GetCurrency(IAOthAdj.SPEducator) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.SPEducator){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPTuition) <> 0 Or GetCurrency(IAOthAdj.SPTuition) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.SPTuition){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPElectric) <> 0 Or GetCurrency(IAOthAdj.SPElectric) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.SPElectric){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPRapid) <> 0 Or GetCurrency(IAOthAdj.SPRapid) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.SPRapid){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPIAABLE) <> 0 Or GetCurrency(IAOthAdj.SPIAABLE) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.SPIAABLE){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}   {n}{t}ReturnVal = Hold{n}End Sub
Sub SPDomProd_Calculation(){n}'Iowa expanded instructions - Iowa has not conformed to the repeal of the federal domestic production activities deduction. For Iowa will need to complete a federal 8903 and keep with their records and follow IA instructions for adjustments needed when calcing.{n}{t}'ReturnVal = GetCurrency(USWRec.SDomProd){n}{t}ReturnVal = 0{n}End Sub
Sub SPEducator_Calculation(){n}{t}ReturnVal = GetCurrency(USWRec.SEdExp){n}End Sub
Sub SPForeign_Calculation(){n}{t}ReturnVal = Abs(GetCurrency(USWOthInc.SP2555)){n}End Sub
Sub SPHealthSav_Calculation(){n}{t}ReturnVal = GetCurrency(USWRec.SHealthSav){n}End Sub
Sub SPJury_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthAdj.SPJury){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPK1_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False And GetCurrency(USWOthInc.SPK1) < 0 Then{n}{t}{t}ReturnVal = Abs(GetCurrency(USWOthInc.SPK1)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPName_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.SPCommon){n}End Sub
Sub SPOlympic_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthAdj.Text2){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPPerRent_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthAdj.SPPerRent){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPRFST_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthAdj.SPRFST){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPSub_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthAdj.SPSub){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPTot_Calculation(){n}{t}ReturnVal = GetCurrency(IAOthAdj.SOth1) + GetCurrency(IAOthAdj.SPActiveMil) + GetCurrency(IAOthAdj.SPAltMV) + GetCurrency(IAOthAdj.SPInvolConv) + GetCurrency(IAOthAdj.SPClaimOfRight) + GetCurrency(IAOthAdj.SPIAEd) + GetCurrency(IAOthAdj.SPIADis) + GetCurrency(IAOthAdj.SPDomProd) + GetCurrency(IAOthAdj.SPFirstHmBuy) + GetCurrency(IAOthAdj.SPEmployerSS) + GetCurrency(IAOthAdj.SPFedFuels) + GetCurrency(IAOthAdj.SPForeign) + GetCurrency(IAOthAdj.SP2555) + GetCurrency(IAOthAdj.SPDistressed) + GetCurrency(IAOthAdj.SPHealthSav) + GetCurrency(IAOthAdj.SPVet) + GetCurrency(IAOthAdj.SPVetGrant) + GetCurrency(IAOthAdj.SPHomeHealth) + GetCurrency(IAOthAdj.SPIAVetTrust) + GetCurrency(IAOthAdj.SPMilitaryExem) + GetCurrency(IAOthAdj.SIANOL) + GetCurrency(IAOthAdj.SPOrgan) + GetCurrency(IAOthAdj.SPK1) + GetCurrency(IAOthAdj.SPSegal) + GetCurrency(IAOthAdj.SPShell) + GetCurrency(IAOthAdj.SStud) + GetCurrency(IAOthAdj.SPVictim) + GetCurrency(IAOthAdj.SPWages) + GetCurrency(IAOthAdj.SPWorkCr) + GetCurrency(IAOthAdj.SP2106) + GetCurrency(IAOthAdj.SMSA) + GetCurrency(IAOthAdj.SPJury) + GetCurrency(IAOthAdj.SPRFST) + GetCurrency(IAOthAdj.SPSub) + GetCurrency(IAOthAdj.SP501c) + GetCurrency(IAOthAdj.SPPerRent) + GetCurrency(IAOthAdj.SP403b) + GetCurrency(IAOthAdj.SPUDC) + GetCurrency(IAOthAdj.SPWBF) + GetCurrency(IAOthAdj.SP8873) + GetCurrency(IAOthAdj.SPEducator) + GetCurrency(IAOthAdj.SPTuition) + GetCurrency(IAOthAdj.SPElectric) + GetCurrency(IAOthAdj.SPRapid) + GetCurrency(IAOthAdj.SPOlympic) + GetCurrency(IAOthAdj.SPIAABLE){n}End Sub
Sub SPTuition_Calculation(){n}{t}ReturnVal = 0{n}{t}'ReturnVal = GetCurrency(USWRec.STuitAdj){n}End Sub
Sub SPUDC_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthAdj.SPUDC){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPWBF_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthAdj.SPWBF){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IAF1040.SSN){n}End Sub
Sub SStud_Calculation(){n}{t}ReturnVal = GetCurrency(USWRec.SStudAdj){n}End Sub
Sub TIANOL_Calculation(){n}{t}If GetBool(IAF126.TpNonRes) = True Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = Abs(GetCurrency(USWOthInc.TPNOL)){n}{t}Else{n}{t}{t}ReturnVal = Abs(GetCurrency(USWOthIncNR.TPNOL)){n}{t}End If{n}End Sub
Sub TMSA_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthAdj.TP8853){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USWOthAdjNR.TP8853){n}{t}End If{n}End Sub
Sub TotNI_Calculation(){n}{t}ReturnVal = GetCurrency(IAOthAdj.ANet) + GetCurrency(IAOthAdj.BNet){n}End Sub
Sub TP2106_Calculation(){n}{t}ReturnVal = GetCurrency(USWRec.TBusExp2106){n}End Sub
Sub TP2555_Calculation(){n}{t}ReturnVal = GetCurrency(USWOthAdj.TP2555){n}End Sub
Sub TP403b_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthAdj.TP403b){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USWOthAdjNR.TP403b){n}{t}End If{n}End Sub
Sub TP501c_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthAdj.TPTotal501){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USWOthAdjNR.Total501){n}{t}End If{n}End Sub
Sub TP8873_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthAdj.TP8873){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USWOthAdjNR.TP8873){n}{t}End If{n}End Sub
Sub TPAltMV_Calculation(){n}'2018 expanded instructions - deduction does not apply to purchases on or after 1/1/2015 due to nonconformity, federal does not ask for a purchase date, believe will be very uncommon for ability to take this credit on Iowa, remove math and make user entered{n}{t}'If GetBool(USF8910.Print) = False Then{n}{t}{t}ReturnVal = 0{n}{t}'ElseIf IAFS() = 3 Then{n}{t}'{t}ReturnVal = MaxValue(0, 2000@ - GetCurrency(IAOthAdj.SPAltMV)){n}{t}'Else{n}{t}'{t}ReturnVal = 2000@{n}{t}'End If{n}End Sub
Sub TPAmount_Calculation(Index As Integer){n}{t}Dim count As Integer{n}{t}Dim Hold As Currency{n}{t}count = 0{n}{t}Hold = 0{n}{t}{n}{t}If GetCurrency(IAOthAdj.TOth1) <> 0 Or GetCurrency(IAOthAdj.SOth1) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}Hold = GetCurrency(IAOthAdj.TOth1){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPActiveMil) <> 0 Or GetCurrency(IAOthAdj.SPActiveMil) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.TPActiveMil){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPAltMV) <> 0 Or GetCurrency(IAOthAdj.SPAltMV) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.TPAltMV){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPInvolConv) <> 0 Or GetCurrency(IAOthAdj.SPInvolConv) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.TPInvolConv){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{n}{t}If GetCurrency(IAOthAdj.TPClaimOfRight) <> 0 Or GetCurrency(IAOthAdj.SPClaimOfRight) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.TPClaimOfRight){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPIAEd) <> 0 Or GetCurrency(IAOthAdj.SPIAEd) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.TPIAEd){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPIADis) <> 0 Or GetCurrency(IAOthAdj.SPIADis) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.TPIADis){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPDomProd) <> 0 Or GetCurrency(IAOthAdj.SPDomProd) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.TPDomProd){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPFirstHmBuy) <> 0 Or GetCurrency(IAOthAdj.SPFirstHmBuy) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.TPFirstHmBuy){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPEmployerSS) <> 0 Or GetCurrency(IAOthAdj.SPEmployerSS) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.TPEmployerSS){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPFedFuels) <> 0 Or GetCurrency(IAOthAdj.SPFedFuels) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.TPFedFuels){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPForeign) <> 0 Or GetCurrency(IAOthAdj.SPForeign) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.TPForeign){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TP2555) <> 0 Or GetCurrency(IAOthAdj.SP2555) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.TP2555){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPDistressed) <> 0 Or GetCurrency(IAOthAdj.SPDistressed) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.TPDistressed){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPHealthSav) <> 0 Or GetCurrency(IAOthAdj.SPHealthSav) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.TPHealthSav){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPVet) <> 0 Or GetCurrency(IAOthAdj.SPVet) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.TPVet){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{n}{t}If GetCurrency(IAOthAdj.TPVetGrant) <> 0 Or GetCurrency(IAOthAdj.SPVetGrant) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.TPVetGrant){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPHomeHealth) <> 0 Or GetCurrency(IAOthAdj.SPHomeHealth) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.TPHomeHealth){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPIAVetTrust) <> 0 Or GetCurrency(IAOthAdj.SPIAVetTrust) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.TPIAVetTrust){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPMilitaryExem) <> 0 Or GetCurrency(IAOthAdj.SPMilitaryExem) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.TPMilitaryExem){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TIANOL) <> 0 Or GetCurrency(IAOthAdj.SIANOL) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.TIANOL){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPOrgan) <> 0 Or GetCurrency(IAOthAdj.SPOrgan) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.TPOrgan){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPK1) <> 0 Or GetCurrency(IAOthAdj.SPK1) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.TPK1){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPSegal) <> 0 Or GetCurrency(IAOthAdj.SPSegal) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.TPSegal){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPShell) <> 0 Or GetCurrency(IAOthAdj.SPShell) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.TPShell){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TStud) <> 0 Or GetCurrency(IAOthAdj.SStud) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.TStud){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPVictim) <> 0 Or GetCurrency(IAOthAdj.SPVictim) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.TPVictim){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPWages) <> 0 Or GetCurrency(IAOthAdj.SPWages) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.TPWages){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPWorkCr) <> 0 Or GetCurrency(IAOthAdj.SPWorkCr) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.TPWorkCr){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TP2106) <> 0 Or GetCurrency(IAOthAdj.SP2106) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.TP2106){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TMSA) <> 0 Or GetCurrency(IAOthAdj.SMSA) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.TMSA){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPJury) <> 0 Or GetCurrency(IAOthAdj.SPJury) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.TPJury){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPRFST) <> 0 Or GetCurrency(IAOthAdj.SPRFST) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.TPRFST){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPSub) <> 0 Or GetCurrency(IAOthAdj.SPSub) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.TPSub){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TP501c) <> 0 Or GetCurrency(IAOthAdj.SP501c) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.TP501c){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPPerRent) <> 0 Or GetCurrency(IAOthAdj.SPPerRent) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.TPPerRent){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TP403b) <> 0 Or GetCurrency(IAOthAdj.SP403b) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.TP403b){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPUDC) <> 0 Or GetCurrency(IAOthAdj.SPUDC) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.TPUDC){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPWBF) <> 0 Or GetCurrency(IAOthAdj.SPWBF) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.TPWBF){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TP8873) <> 0 Or GetCurrency(IAOthAdj.SP8873) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.TP8873){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPOlympic) <> 0 Or GetCurrency(IAOthAdj.SPOlympic) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.TPOlympic){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPEducator) <> 0 Or GetCurrency(IAOthAdj.SPEducator) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.TPEducator){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPTuition) <> 0 Or GetCurrency(IAOthAdj.SPTuition) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.TPTuition){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPElectric) <> 0 Or GetCurrency(IAOthAdj.SPElectric) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.TPElectric){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPRapid) <> 0 Or GetCurrency(IAOthAdj.SPRapid) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.TPRapid){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAOthAdj.TPIAABLE) <> 0 Or GetCurrency(IAOthAdj.SPIAABLE) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAOthAdj.TPIAABLE){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}ReturnVal = Hold{n}End Sub
Sub TPDomProd_Calculation(){n}'Iowa expanded instructions - Iowa has not conformed to the repeal of the federal domestic production activities deduction. For Iowa will need to complete a federal 8903 and keep with their records and follow IA instructions for adjustments needed when calcing.{n}{t}'ReturnVal = GetCurrency(USWRec.TDomProd){n}{t}ReturnVal = 0{n}End Sub
Sub TPEducator_Calculation(){n}{t}ReturnVal = GetCurrency(USWRec.TEdExp){n}End Sub
Sub TPForeign_Calculation(){n}{t}ReturnVal = Abs(GetCurrency(USWOthInc.TP2555)){n}End Sub
Sub TPHealthSav_Calculation(){n}{t}ReturnVal = GetCurrency(USWRec.THealthSav){n}End Sub
Sub TPJointAmount_Calculation(Index As Integer){n}{t}If GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAOthAdj.TPAmount(Index)){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAOthAdj.TPAmount(Index)) + GetCurrency(IAOthAdj.SPAmount(Index)){n}{t}End If{n}End Sub
Sub TPJury_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthAdj.TPJury){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPK1_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False And GetCurrency(USWOthInc.TPK1) < 0 Then{n}{t}{t}ReturnVal = Abs(GetCurrency(USWOthInc.TPK1)){n}{t}ElseIf GetBool(USWResidency.F1040NR) = True And GetCurrency(USWOthIncNR.TPK1) < 0 Then{n}{t}{t}ReturnVal = Abs(GetCurrency(USWOthIncNR.TPK1)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPName_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.TPCommon){n}End Sub
Sub TPOlympic_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthAdj.Text1){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPPerRent_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthAdj.TPPerRent){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPRFST_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthAdj.TPRFST){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USWOthAdjNR.TPRFST){n}{t}End If{n}End Sub
Sub TPSub_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthAdj.TPSub){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USWOthAdjNR.TPSub){n}{t}End If{n}End Sub
Sub TPTot_Calculation(){n}{t}ReturnVal = GetCurrency(IAOthAdj.TOth1) + GetCurrency(IAOthAdj.TPActiveMil) + GetCurrency(IAOthAdj.TPAltMV) + GetCurrency(IAOthAdj.TPInvolConv) + GetCurrency(IAOthAdj.TPClaimOfRight) + GetCurrency(IAOthAdj.TPIAEd) + GetCurrency(IAOthAdj.TPIADis) + GetCurrency(IAOthAdj.TPDomProd) + GetCurrency(IAOthAdj.TPFirstHmBuy) + GetCurrency(IAOthAdj.TPEmployerSS) + GetCurrency(IAOthAdj.TPFedFuels) + GetCurrency(IAOthAdj.TPForeign) + GetCurrency(IAOthAdj.TP2555) + GetCurrency(IAOthAdj.TPDistressed) + GetCurrency(IAOthAdj.TPHealthSav) + GetCurrency(IAOthAdj.TPVet) + GetCurrency(IAOthAdj.TPVetGrant) + GetCurrency(IAOthAdj.TPHomeHealth) + GetCurrency(IAOthAdj.TPIAVetTrust) + GetCurrency(IAOthAdj.TPMilitaryExem) + GetCurrency(IAOthAdj.TIANOL) + GetCurrency(IAOthAdj.TPOrgan) + GetCurrency(IAOthAdj.TPK1) + GetCurrency(IAOthAdj.TPSegal) + GetCurrency(IAOthAdj.TPShell) + GetCurrency(IAOthAdj.TStud) + GetCurrency(IAOthAdj.TPVictim) + GetCurrency(IAOthAdj.TPWages) + GetCurrency(IAOthAdj.TPWorkCr) + GetCurrency(IAOthAdj.TP2106) + GetCurrency(IAOthAdj.TMSA) + GetCurrency(IAOthAdj.TPJury) + GetCurrency(IAOthAdj.TPRFST) + GetCurrency(IAOthAdj.TPSub) + GetCurrency(IAOthAdj.TP501c) + GetCurrency(IAOthAdj.TPPerRent) + GetCurrency(IAOthAdj.TP403b) + GetCurrency(IAOthAdj.TPUDC) + GetCurrency(IAOthAdj.TPWBF) + GetCurrency(IAOthAdj.TP8873) + GetCurrency(IAOthAdj.TPEducator) + GetCurrency(IAOthAdj.TPTuition) + GetCurrency(IAOthAdj.TPElectric) + GetCurrency(IAOthAdj.TPRapid) + GetCurrency(IAOthAdj.TPOlympic) + GetCurrency(IAOthAdj.TPIAABLE){n}End Sub
Sub TPTuition_Calculation(){n}{t}ReturnVal = 0{n}{t}'ReturnVal = GetCurrency(USWRec.TTuitAdj){n}End Sub
Sub TPUDC_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthAdj.TPUDC){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USWOthAdjNR.TPUDC){n}{t}End If{n}End Sub
Sub TPWBF_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthAdj.TPWBF){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USWOthAdjNR.TPWBF){n}{t}End If{n}End Sub
Sub TStud_Calculation(){n}{t}ReturnVal = GetCurrency(USWRec.TStudAdj){n}End SubSub DatePaid_Calculation(){n}{t}ReturnVal = GetDate(IAF1040.DateDuePaid){n}End Sub
Sub Desc_Calculation(){n}{t}ReturnVal = CStr(GetCurrency(IAPenalty.TotPen)){n}End Sub
Sub Exist_Calculation(){n}{t}ReturnVal = 1{n}End Sub
Sub Names_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = GetString(IARequired.TPCombName){n}{t}Else{n}{t}{t}ReturnVal = GetString(IARequired.CombNames){n}{t}End If{n}End Sub
Sub Q1Days1_Calculation(){n}{t}If GetDate(IAStateEst.TPStQ2Date) < #7/2/2018# Then{n}{t}{t}ReturnVal = MaxValue(0, DaysDiff(GetDate(IAStateEst.TPStQ2Date), #4/30/2018#)){n}{t}Else{n}{t}{t}ReturnVal = 63{n}{t}End If{n}End Sub
Sub Q1Days2_Calculation(){n}{t}If GetDate(IAStateEst.TPStQ2Date) < #7/2/2018# And GetCurrency(IAPenalty.Q1UnPay2) > 0 Then{n}{t}{t}ReturnVal = MaxValue(0, DaysDiff(#7/2/2018#, GetDate(IAStateEst.TPStQ2Date))){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Q1Pen1_Calculation(){n}{t}ReturnVal = CCur(Round((GetFloat(IAPenalty.Q1Days1) / 365#) * 0.06 * GetFloat(IAPenalty.Q1UnPay1))){n}End Sub
Sub Q1Pen2_Calculation(){n}{t}ReturnVal = CCur(Round((GetFloat(IAPenalty.Q1Days2) / 365#) * 0.06 * GetFloat(IAPenalty.Q1UnPay2))){n}End Sub
Sub Q1UnPay1_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210.Q1Undpay){n}End Sub
Sub Q1UnPay2_Calculation(){n}{t}If GetDate(IAStateEst.TPStQ2Date) < #7/2/2018# Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(IAPenalty.Q1UnPay1) - GetCurrency(IAStateEst.TPStQ2)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Q2Days1_Calculation(){n}{t}If GetDate(IAStateEst.TPStQ3Date) < #10/1/2018# Then{n}{t}{t}ReturnVal = MaxValue(0, DaysDiff(GetDate(IAStateEst.TPStQ3Date), #7/2/2018#)){n}{t}Else{n}{t}{t}ReturnVal = 91{n}{t}End If{n}End Sub
Sub Q2Days2_Calculation(){n}{t}If GetDate(IAStateEst.TPStQ3Date) < #10/1/2018# And GetCurrency(IAPenalty.Q2UnPay2) > 0 Then{n}{t}{t}ReturnVal = MaxValue(0, DaysDiff(#10/1/2018#, GetDate(IAStateEst.TPStQ3Date))){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Q2Pen1_Calculation(){n}{t}ReturnVal = CCur(Round((GetFloat(IAPenalty.Q2Days1) / 365#) * 0.06 * GetFloat(IAPenalty.Q2UnPay1))){n}End Sub
Sub Q2Pen2_Calculation(){n}{t}ReturnVal = CCur(Round((GetFloat(IAPenalty.Q2Days2) / 365#) * 0.06 * GetFloat(IAPenalty.Q2UnPay2))){n}End Sub
Sub Q2UnPay1_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA2210.Q1Ln11) + GetCurrency(IA2210.Q2Ln11) - GetCurrency(IA2210.Q1Est) - GetCurrency(IA2210.Q2est)){n}End Sub
Sub Q2UnPay2_Calculation(){n}{t}If GetDate(IAStateEst.TPStQ3Date) < #10/1/2018# Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(IAPenalty.Q2UnPay1) - GetCurrency(IAStateEst.TPStQ3)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Q3Days1_Calculation(){n}{t}If GetDate(IAStateEst.TPStQ4Date) < #12/31/2018# Then{n}{t}{t}ReturnVal = MaxValue(0, DaysDiff(GetDate(IAStateEst.TPStQ4Date), #10/1/2018#)){n}{t}Else{n}{t}{t}ReturnVal = 91{n}{t}End If{n}End Sub
Sub Q3Days2_Calculation(){n}{t}If GetDate(IAStateEst.TPStQ4Date) < #12/31/2018# And GetCurrency(IAPenalty.Q3UnPay2) > 0 Then{n}{t}{t}ReturnVal = MaxValue(0, DaysDiff(#12/31/2018#, GetDate(IAStateEst.TPStQ4Date))){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Q3Days3_Calculation(){n}{t}If GetDate(IAStateEst.TPStQ4Date) < #1/31/2019# And GetDate(IAStateEst.TPStQ4Date) > #12/31/2018# Then{n}{t}{t}ReturnVal = MaxValue(0, DaysDiff(GetDate(IAStateEst.TPStQ4Date), #12/31/2018#)){n}{t}ElseIf GetCurrency(IAPenalty.Q3Unpay3) >= 0 Then{n}{t}{t}ReturnVal = 31{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Q3Days4_Calculation(){n}{t}If GetDate(IAStateEst.TPStQ4Date) > #12/31/2018# And GetDate(IAStateEst.TPStQ4Date) < #1/31/2019# And GetCurrency(IAPenalty.Q3Unpay4) > 0 Then{n}{t}{t}ReturnVal = MaxValue(0, DaysDiff(#1/31/2019#, GetDate(IAStateEst.TPStQ4Date))){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Q3Pen1_Calculation(){n}{t}ReturnVal = CCur(Round((GetFloat(IAPenalty.Q3Days1) / 365#) * 0.06 * GetFloat(IAPenalty.Q3Unpay1))){n}End Sub
Sub Q3Pen2_Calculation(){n}{t}ReturnVal = CCur(Round((GetFloat(IAPenalty.Q3Days2) / 365#) * 0.06 * GetFloat(IAPenalty.Q3UnPay2))){n}End Sub
Sub Q3Pen3_Calculation(){n}{t}ReturnVal = CCur(Round((GetFloat(IAPenalty.Q3Days3) / 365#) * 0.07 * GetFloat(IAPenalty.Q3Unpay3))){n}End Sub
Sub Q3Pen4_Calculation(){n}{t}ReturnVal = CCur(Round((GetFloat(IAPenalty.Q3Days4) / 365#) * 0.07 * GetFloat(IAPenalty.Q3Unpay4))){n}End Sub
Sub Q3Unpay1_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA2210.Q1Ln11) + GetCurrency(IA2210.Q2Ln11) + GetCurrency(IA2210.Q3Ln11) - GetCurrency(IA2210.Q1Est) - GetCurrency(IA2210.Q2est) - GetCurrency(IA2210.Q3Est)){n}End Sub
Sub Q3UnPay2_Calculation(){n}{t}If GetDate(IAStateEst.TPStQ4Date) < #12/31/2018# Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(IAPenalty.Q3Unpay1) - GetCurrency(IAStateEst.TPStQ4)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Q3Unpay3_Calculation(){n}{t}If GetCurrency(IAPenalty.Q3UnPay2) > 0 Then{n}{t}{t}ReturnVal = GetCurrency(IAPenalty.Q3UnPay2){n}{t}ElseIf GetDate(IAStateEst.TPStQ4Date) < #1/1/2019# Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(IAPenalty.Q3Unpay1) - GetCurrency(IAStateEst.TPStQ4)){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAPenalty.Q3Unpay1){n}{t}End If{n}End Sub
Sub Q3Unpay4_Calculation(){n}{t}If GetDate(IAStateEst.TPStQ4Date) > #12/31/2018# And GetDate(IAStateEst.TPStQ4Date) < #1/31/2019# Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(IAPenalty.Q3Unpay1) - GetCurrency(IAStateEst.TPStQ4)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Q4Days1_Calculation(){n}{t}' 89 days max in 2018{n}{t}If GetDate(IAStateEst.TPStLateDate) < GetDate(IAF1040.DateDuePaid) And GetCurrency(IAStateEst.TPStLate) > 0 Then{n}{t}{t}ReturnVal = MaxValue(0, DaysDiff(GetDate(IAStateEst.TPStLateDate), #1/31/2019#)){n}{t}Else{n}{t}{t}ReturnVal = MaxValue(0, DaysDiff(GetDate(IAF1040.DateDuePaid), #1/31/2019#)){n}{t}End If{n}End Sub
Sub Q4Days2_Calculation(){n}{t}If GetDate(IAStateEst.TPStLateDate) < #4/30/2019# And GetCurrency(IAPenalty.Q4Unpay2) > 0 Then{n}{t}{t}ReturnVal = MaxValue(0, DaysDiff(GetDate(IAF1040.DateDuePaid), GetDate(IAStateEst.TPStLateDate))){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Q4Pen1_Calculation(){n}{t}ReturnVal = CCur(Round((GetFloat(IAPenalty.Q4Days1) / 365#) * 0.07 * GetFloat(IAPenalty.Q4UnPay1))){n}End Sub
Sub Q4Pen2_Calculation(){n}{t}ReturnVal = CCur(Round((GetFloat(IAPenalty.Q4Days2) / 365#) * 0.07 * GetFloat(IAPenalty.Q4Unpay2))){n}End Sub
Sub Q4UnPay1_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA2210.Q1Ln11) + GetCurrency(IA2210.Q2Ln11) + GetCurrency(IA2210.Q3Ln11) + GetCurrency(IA2210.Q4Ln11) - GetCurrency(IA2210.Q1Est) - GetCurrency(IA2210.Q2est) - GetCurrency(IA2210.Q3Est) - GetCurrency(IA2210.Q4Est)){n}End Sub
Sub Q4Unpay2_Calculation(){n}{t}If GetDate(IAStateEst.TPStLateDate) < #4/30/2019# And GetCurrency(IAStateEst.TPStLate) > 0 Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(IAPenalty.Q4UnPay1) - GetCurrency(IAStateEst.TPStLate)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IAF1040.SSN){n}End Sub
Sub TotPen_Calculation(){n}{t}ReturnVal = Round(GetCurrency(IAPenalty.Q1Pen1) + GetCurrency(IAPenalty.Q1Pen2) + GetCurrency(IAPenalty.Q2Pen1) + GetCurrency(IAPenalty.Q2Pen2) + GetCurrency(IAPenalty.Q3Pen1) + GetCurrency(IAPenalty.Q3Pen2) + GetCurrency(IAPenalty.Q3Pen3) + GetCurrency(IAPenalty.Q3Pen4) + GetCurrency(IAPenalty.Q4Pen1) + GetCurrency(IAPenalty.Q4Pen2)){n}End SubSub DatePaid_Calculation(){n}{t}ReturnVal = GetDate(IAF1040.DateDuePaid){n}End Sub
Sub Desc_Calculation(){n}{t}ReturnVal = CStr(GetCurrency(IAPenaltySp.TotPen)){n}End Sub
Sub Exist_Calculation(){n}{t}ReturnVal = 1{n}End Sub
Sub Names_Calculation(){n}{t}ReturnVal = GetString(IARequired.SPCombName){n}End Sub
Sub Q1Days1_Calculation(){n}{t}If GetDate(IAStateEst.SPStQ2Date) < #7/2/2018# Then{n}{t}{t}ReturnVal = MaxValue(0, DaysDiff(GetDate(IAStateEst.SPStQ2Date), #4/30/2018#)){n}{t}Else{n}{t}{t}ReturnVal = 63{n}{t}End If{n}End Sub
Sub Q1Days2_Calculation(){n}{t}If GetDate(IAStateEst.SPStQ2Date) < #7/2/2018# And GetCurrency(IAPenaltySp.Q1UnPay2) > 0 Then{n}{t}{t}ReturnVal = MaxValue(0, DaysDiff(#7/2/2018#, GetDate(IAStateEst.SPStQ2Date))){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Q1Pen1_Calculation(){n}{t}ReturnVal = CCur(Round((GetFloat(IAPenaltySp.Q1Days1) / 365#) * 0.06 * GetFloat(IAPenaltySp.Q1UnPay1))){n}End Sub
Sub Q1Pen2_Calculation(){n}{t}ReturnVal = CCur(Round((GetFloat(IAPenaltySp.Q1Days2) / 365#) * 0.06 * GetFloat(IAPenaltySp.Q1UnPay2))){n}End Sub
Sub Q1UnPay1_Calculation(){n}{t}ReturnVal = GetCurrency(IA2210Sp.Q1Undpay){n}End Sub
Sub Q1UnPay2_Calculation(){n}{t}If GetDate(IAStateEst.SPStQ2Date) < #7/2/2018# Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(IAPenaltySp.Q1UnPay1) - GetCurrency(IAStateEst.SPStQ2)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Q2Days1_Calculation(){n}{t}If GetDate(IAStateEst.SPStQ3Date) < #10/1/2018# Then{n}{t}{t}ReturnVal = MaxValue(0, DaysDiff(GetDate(IAStateEst.SPStQ3Date), #7/2/2018#)){n}{t}Else{n}{t}{t}ReturnVal = 91{n}{t}End If{n}End Sub
Sub Q2Days2_Calculation(){n}{t}If GetDate(IAStateEst.SPStQ3Date) < #10/1/2018# And GetCurrency(IAPenaltySp.Q2UnPay2) > 0 Then{n}{t}{t}ReturnVal = MaxValue(0, DaysDiff(#10/1/2018#, GetDate(IAStateEst.SPStQ3Date))){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Q2Pen1_Calculation(){n}{t}ReturnVal = CCur(Round((GetFloat(IAPenaltySp.Q2Days1) / 365#) * 0.06 * GetFloat(IAPenaltySp.Q2UnPay1))){n}End Sub
Sub Q2Pen2_Calculation(){n}{t}ReturnVal = CCur(Round((GetFloat(IAPenaltySp.Q2Days2) / 365#) * 0.06 * GetFloat(IAPenaltySp.Q2UnPay2))){n}End Sub
Sub Q2UnPay1_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA2210Sp.Q1Ln11) + GetCurrency(IA2210Sp.Q2Ln11) - GetCurrency(IA2210Sp.Q1Est) - GetCurrency(IA2210Sp.Q2est)){n}End Sub
Sub Q2UnPay2_Calculation(){n}{t}If GetDate(IAStateEst.SPStQ3Date) < #10/1/2018# Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(IAPenaltySp.Q2UnPay1) - GetCurrency(IAStateEst.SPStQ3)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Q3Days1_Calculation(){n}{t}If GetDate(IAStateEst.SPStQ4Date) < #12/31/2018# Then{n}{t}{t}ReturnVal = MaxValue(0, DaysDiff(GetDate(IAStateEst.SPStQ4Date), #10/1/2018#)){n}{t}Else{n}{t}{t}ReturnVal = 91{n}{t}End If{n}End Sub
Sub Q3Days2_Calculation(){n}{t}If GetDate(IAStateEst.SPStQ4Date) < #12/31/2018# And GetCurrency(IAPenaltySp.Q3UnPay2) > 0 Then{n}{t}{t}ReturnVal = MaxValue(0, DaysDiff(#12/31/2018#, GetDate(IAStateEst.SPStQ4Date))){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Q3Days3_Calculation(){n}{t}If GetDate(IAStateEst.SPStQ4Date) < #1/31/2019# And GetDate(IAStateEst.SPStQ4Date) > #12/31/2018# Then{n}{t}{t}ReturnVal = MaxValue(0, DaysDiff(GetDate(IAStateEst.SPStQ4Date), #12/31/2018#)){n}{t}ElseIf GetCurrency(IAPenaltySp.Q3Unpay3) >= 0 Then{n}{t}{t}ReturnVal = 31{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Q3Days4_Calculation(){n}{t}If GetDate(IAStateEst.SPStQ4Date) > #12/31/2018# And GetDate(IAStateEst.SPStQ4Date) < #1/31/2019# And GetCurrency(IAPenaltySp.Q3Unpay4) > 0 Then{n}{t}{t}ReturnVal = MaxValue(0, DaysDiff(#1/31/2019#, GetDate(IAStateEst.SPStQ4Date))){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Q3Pen1_Calculation(){n}{t}ReturnVal = CCur(Round((GetFloat(IAPenaltySp.Q3Days1) / 365#) * 0.06 * GetFloat(IAPenaltySp.Q3Unpay1))){n}End Sub
Sub Q3Pen2_Calculation(){n}{t}ReturnVal = CCur(Round((GetFloat(IAPenaltySp.Q3Days2) / 365#) * 0.06 * GetFloat(IAPenaltySp.Q3UnPay2))){n}End Sub
Sub Q3Pen3_Calculation(){n}{t}ReturnVal = CCur(Round((GetFloat(IAPenaltySp.Q3Days3) / 365#) * 0.07 * GetFloat(IAPenaltySp.Q3Unpay3))){n}End Sub
Sub Q3Pen4_Calculation(){n}{t}ReturnVal = CCur(Round((GetFloat(IAPenaltySp.Q3Days4) / 365#) * 0.07 * GetFloat(IAPenaltySp.Q3Unpay4))){n}End Sub
Sub Q3Unpay1_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA2210Sp.Q1Ln11) + GetCurrency(IA2210Sp.Q2Ln11) + GetCurrency(IA2210Sp.Q3Ln11) - GetCurrency(IA2210Sp.Q1Est) - GetCurrency(IA2210Sp.Q2est) - GetCurrency(IA2210Sp.Q3Est)){n}End Sub
Sub Q3UnPay2_Calculation(){n}{t}If GetDate(IAStateEst.SPStQ4Date) < #12/31/2018# Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(IAPenaltySp.Q3Unpay1) - GetCurrency(IAStateEst.SPStQ4)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Q3Unpay3_Calculation(){n}{t}If GetCurrency(IAPenaltySp.Q3UnPay2) > 0 Then{n}{t}{t}ReturnVal = GetCurrency(IAPenaltySp.Q3UnPay2){n}{t}ElseIf GetDate(IAStateEst.SPStQ4Date) < #1/1/2019# Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(IAPenaltySp.Q3Unpay1) - GetCurrency(IAStateEst.SPStQ4)){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAPenaltySp.Q3Unpay1){n}{t}End If{n}End Sub
Sub Q3Unpay4_Calculation(){n}{t}If GetDate(IAStateEst.SPStQ4Date) > #12/31/2018# And GetDate(IAStateEst.SPStQ4Date) < #1/31/2019# Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(IAPenaltySp.Q3Unpay1) - GetCurrency(IAStateEst.SPStQ4)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Q4Days1_Calculation(){n}{t}' 89 days max in 2018{n}{t}If GetDate(IAStateEst.SPStLateDate) < GetDate(IAF1040.DateDuePaid) And GetCurrency(IAStateEst.SPStLate) > 0 Then{n}{t}{t}ReturnVal = MaxValue(0, DaysDiff(GetDate(IAStateEst.SPStLateDate), #1/31/2019#)){n}{t}Else{n}{t}{t}ReturnVal = MaxValue(0, DaysDiff(GetDate(IAF1040.DateDuePaid), #1/31/2019#)){n}{t}End If{n}End Sub
Sub Q4Days2_Calculation(){n}{t}If GetDate(IAStateEst.SPStLateDate) < #4/30/2019# And GetCurrency(IAPenaltySp.Q4Unpay2) > 0 Then{n}{t}{t}ReturnVal = MaxValue(0, DaysDiff(GetDate(IAF1040.DateDuePaid), GetDate(IAStateEst.SPStLateDate))){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Q4Pen1_Calculation(){n}{t}ReturnVal = CCur(Round((GetFloat(IAPenaltySp.Q4Days1) / 365#) * 0.07 * GetFloat(IAPenaltySp.Q4UnPay1))){n}End Sub
Sub Q4Pen2_Calculation(){n}{t}ReturnVal = CCur(Round((GetFloat(IAPenaltySp.Q4Days2) / 365#) * 0.07 * GetFloat(IAPenaltySp.Q4Unpay2))){n}End Sub
Sub Q4UnPay1_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IA2210Sp.Q1Ln11) + GetCurrency(IA2210Sp.Q2Ln11) + GetCurrency(IA2210Sp.Q3Ln11) + GetCurrency(IA2210Sp.Q4Ln11) - GetCurrency(IA2210Sp.Q1Est) - GetCurrency(IA2210Sp.Q2est) - GetCurrency(IA2210Sp.Q3Est) - GetCurrency(IA2210Sp.Q4Est)){n}End Sub
Sub Q4Unpay2_Calculation(){n}{t}If GetDate(IAStateEst.SPStLateDate) < #4/30/2019# And GetCurrency(IAStateEst.SPStLate) > 0 Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(IAPenaltySp.Q4UnPay1) - GetCurrency(IAStateEst.SPStLate)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IAF1040.SpouseSSN){n}End Sub
Sub TotPen_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = False Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = Round(GetCurrency(IAPenaltySp.Q1Pen1) + GetCurrency(IAPenaltySp.Q1Pen2) + GetCurrency(IAPenaltySp.Q2Pen1) + GetCurrency(IAPenaltySp.Q2Pen2) + GetCurrency(IAPenaltySp.Q3Pen1) + GetCurrency(IAPenaltySp.Q3Pen2) + GetCurrency(IAPenaltySp.Q3Pen3) + GetCurrency(IAPenaltySp.Q3Pen4) + GetCurrency(IAPenaltySp.Q4Pen1) + GetCurrency(IAPenaltySp.Q4Pen2)){n}{t}End If{n}End SubSub AAltTax_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.AAltTax){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub ABal1_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.ABal1){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub ABal2_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.ABal2){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub ABal4_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.ABal4){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub ABal36_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.ABal36){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub ABal3_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.ABal3){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub ABalance_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.ABalance){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}{n}End Sub
Sub ACredits_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.ACredits){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub ACrNon_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.ACrNon){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}{n}End Sub
Sub ADedBox_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.ADedBox){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}{n}End Sub
Sub AEstTax_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.AEstTax){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}{n}End Sub
Sub AExemCr_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.AExemCr){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}{n}End Sub
Sub AFedDed_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.AFedDed){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}{n}End Sub
Sub AFedTax_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.AFedTax){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}{n}End Sub
Sub AIAMin_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.AIAMin){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}{n}End Sub
Sub ALump_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.ALump){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}{n}End Sub
Sub AOthIACr_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.AOthIACr){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}{n}End Sub
Sub AOutState_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.AOutState){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub APrior_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.APrior){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}{n}End Sub
Sub ARefund_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.ARefund){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}{n}End Sub
Sub ASch_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.ASch){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}{n}End Sub
Sub ASelf_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.ASelf){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}{n}End Sub
Sub ATaxB4Cont_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.ATaxB4Cont){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub ATaxInc_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.ATaxInc){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub ATaxWith_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.ATaxWith){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}{n}End Sub
Sub ATotIATax_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.ATotIATax){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub ATotTax_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.ATotTax){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}{n}End Sub
Sub ATuit_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.ATuit){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}{n}End Sub
Sub AVolFireCr_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.AVolFireCr){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BAltTax_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BAltTax){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}{n}End Sub
Sub BBal1_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BBal1){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BBal2_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BBal2){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BBal4_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BBal4){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BBal36_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BBal36){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BBal3_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BBal3){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BBalance_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BBalance){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}{n}End Sub
Sub BCredits_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BCredits){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BCrNon_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BCrNon){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}{n}End Sub
Sub BDedBox_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BDedBox){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BEstTax_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BEstTax){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BExemCr_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BExemCr){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BFedDed_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BFedDed){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}{n}End Sub
Sub BFedTax_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BFedTax){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}{n}End Sub
Sub BIAMin_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BIAMin){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}{n}End Sub
Sub BLump_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BLump){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BOthIACr_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BOthIACr){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}{n}End Sub
Sub BOutState_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BOutState){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BPrior_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BPrior){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}{n}End Sub
Sub BRefund_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BRefund){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BSch_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BSch){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BSelf_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BSelf){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BTaxB4Cont_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BTaxB4Cont){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BTaxInc_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BTaxInc){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}{n}End Sub
Sub BTaxWith_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BTaxWith){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}{n}End Sub
Sub BTotIATax_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BTotIATax){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BTotTax_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BTotTax){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}{n}End Sub
Sub BTuit_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BTuit){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}{n}End Sub
Sub BVolFireCr_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BVolFireCr){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub FirstName_Calculation(){n}{t}ReturnVal = GetString(IAF1040.FirstName){n}End Sub
Sub ItemCheck_Calculation(){n}{t}If GetBool(IARequired.LowInc) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetBool(IAF1040.ItemCheck){n}{t}End If{n}End Sub
Sub LastName_Calculation(){n}{t}ReturnVal = GetString(IAF1040.LastName){n}End Sub
Sub LowInc_Calculation(){n}{t}If GetBool(IARequired.LowInc) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = 1{n}{t}End If{n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IAF1040.SSN){n}End Sub
Sub StadCheck_Calculation(){n}{t}If GetBool(IARequired.LowInc) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetBool(IAF1040.StadCheck){n}{t}End If{n}End Sub
Sub TotalTax_Calculation(){n}{t}If GetNumber(IAPrint.LowInc) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.TotalTax){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End SubSub Alert10_Calculation(){n}{t}If GetString(IAF1040.CountyNo) = "" Or GetString(IAF1040.SchNo) = "" Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert11_Calculation(){n}{t}If GetString(IAF1040.CountyNo) = "" Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert12_Calculation(){n}{t}If GetString(IAF1040.SchNo) = "" Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert15_Calculation(){n}{t}If GetBool(IAF1040.MFJ) = True Or GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}If (GetBool(IAF126.TpNonRes) = True Or (GetBool(IAF126.TpPYRes) = True And (GetDate(IAF126.TpDateOut) > 0 And GetDate(IAF126.TpDateOut) < MakeDate(12, 31, YearNumber)))) And (GetBool(IAF126.SpNonRes) = True Or (GetBool(IAF126.SpPYRes) = True And (GetDate(IAF126.SpDateOut) > 0 And GetDate(IAF126.SpDateOut) < MakeDate(12, 31, YearNumber)))) Then{n}{t}{t}{t}If GetString(IAF1040.CountyNo) = "00" Then{n}{t}{t}{t}{t}ReturnVal = 0{n}{t}{t}{t}Else{n}{t}{t}{t}{t}ReturnVal = 1{n}{t}{t}{t}End If{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}ElseIf GetBool(IAF126.TpNonRes) = True Or (GetBool(IAF126.TpPYRes) = True And (GetDate(IAF126.TpDateOut) > 0 And GetDate(IAF126.TpDateOut) < MakeDate(12, 31, YearNumber))) Then{n}{t}{t}{t}If GetString(IAF1040.CountyNo) = "00" Then{n}{t}{t}{t}{t}ReturnVal = 0{n}{t}{t}{t}Else{n}{t}{t}{t}{t}ReturnVal = 1{n}{t}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert100_Calculation(){n}{t}If IAFS() = 3 And GetCurrency(IAF1040.BGainDed) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IAF1040.AGainDed) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert110_Calculation(){n}{t}If GetNumber(USD1099R.UnderAge) > 0 Then{n}{t}{t}If GetCurrency(IAOthAdj.TPIADis) + GetCurrency(IAOthAdj.SPIADis) = 0 Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert120_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False And GetCurrency(IAOthAdj.SIANOL) > 0 And GetCurrency(IAOthAdj.SIANOL) = Abs(GetCurrency(USWOthInc.SPNOL)) Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetBool(USWResidency.F1040NR) = False And GetCurrency(IAOthAdj.TIANOL) > 0 And GetCurrency(IAOthAdj.TIANOL) = Abs(GetCurrency(USWOthInc.TPNOL)) Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetBool(USWResidency.F1040NR) = True And GetCurrency(IAOthAdj.TIANOL) > 0 And GetCurrency(IAOthAdj.TIANOL) = Abs(GetCurrency(USWOthIncNR.TPNOL)) Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert130_Calculation(){n}{t}If GetCurrency(IAAddFedTax.TPBalDue) <> 0 Or GetCurrency(IAAddFedTax.SPBalDue) <> 0 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetCurrency(IAF1040.BRefund) = 0 And GetCurrency(IAF1040.ARefund) = 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert150_Calculation(){n}{t}If GetBool(USWRec.ItmDdn) = False And GetBool(IAF1040.ItemCheck) = False Then{n}{t}{t}If GetCurrency(IARequired.SchADeprAmt) <> 0 Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert180_Calculation(){n}{t}If (GetCurrency(USF1040.Foreign) > 0 Or GetCurrency(USF1040NR.Foreign) > 0) And GetBool(IA130.Exist) = False Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert190_Calculation(){n}{t}Dim count As Integer{n}{t}Dim Lim As Integer{n}{t}Dim Total As Integer{n}{t}Dim Total2 As Integer{n}{n}{t}Lim = GetAllCopies(IA137){n}{t}count = 1{n}{t}Total = 0{n}{t}Total2 = 0{n}{t}{n}{t}Do While count <= Lim{n}{t}{t}If GetBool(IA137.Taxpayer, count) = True And GetBool(IA137.Company, count) = True And GetBool(IA137.Print, count) = True Then{n}{t}{t}{t}Total = Total + 1{n}{t}{t}Else{n}{t}{t}{t}Total = Total{n}{t}{t}End If{n}{t}{t}{n}{t}{t}If GetBool(IA137.Taxpayer, count) = True And GetBool(IA137.Site, count) = True And GetBool(IA137.Print, count) = True Then{n}{t}{t}{t}Total2 = Total2 + 1{n}{t}{t}Else{n}{t}{t}{t}Total2 = Total2{n}{t}{t}End If{n}{t}{t}{n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}If Total > 1 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf Total > 0 And Total2 > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}{t}{n}End Sub
Sub Alert20_Calculation(){n}{t}If FedFS() = 1 And IAFS() <> 1 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf FedFS() = 2 And IAFS() <> 2 And IAFS() <> 3 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf FedFS() = 3 And IAFS() <> 4 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf FedFS() = 4 And IAFS() <> 5 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf FedFS() = 5 And IAFS() <> 6 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert200_Calculation(){n}{t}Dim count As Integer{n}{t}Dim Lim As Integer{n}{t}Dim Total As Integer{n}{t}Dim Total2 As Integer{n}{t}{n}{t}Lim = GetAllCopies(IA137){n}{t}count = 1{n}{t}Total = 0{n}{t}Total2 = 0{n}{t}{n}{t}Do While count <= Lim{n}{t}{t}If GetBool(IA137.Spouse, count) = True And GetBool(IA137.Company, count) = True And GetBool(IA137.Print, count) = True Then{n}{t}{t}{t}Total = Total + 1{n}{t}{t}Else{n}{t}{t}{t}Total = Total{n}{t}{t}End If{n}{t}{t}{n}{t}{t}If GetBool(IA137.Spouse, count) = True And GetBool(IA137.Site, count) = True And GetBool(IA137.Print, count) = True Then{n}{t}{t}{t}Total2 = Total2 + 1{n}{t}{t}Else{n}{t}{t}{t}Total2 = Total2{n}{t}{t}End If{n}{t}{t}{n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}If Total > 1 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf Total > 0 And Total2 > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert210_Calculation(){n}{t}If GetNumber(IASch4136.MEF4136TP) > 1 Or GetNumber(IASch4136.MEF4136SP) > 1 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert220_Calculation(){n}{t}If IAFS() <> 3 Then{n}{t}{t}If GetCurrency(IASch4136.TotCr, 1) > 0 And GetCurrency(IASch4136.TotCr, 2) > 0 Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert225_Calculation(){n}{t}ReturnVal = 0{n}End Sub
Sub Alert250_Calculation(){n}{t}If GetCurrency(IAF1040.Penalty) > 0 And GetDate(IAF1040.DateDuePaid) = #4/30/2019# Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert260_Calculation(){n}{t}Dim Est1 As Long{n}{t}Dim Est2 As Long{n}{n}{t}If GetBool(IAEstimates.ApplySpecific, 1) = True Then{n}{t}{t}If GetCurrency(IAEstimates.SpecAmt, 1) > GetCurrency(IAEstimates.TotNetTax2, 1) Then{n}{t}{t}{t}Est1 = 1{n}{t}{t}Else{n}{t}{t}{t}Est1 = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}Est1 = 0{n}{t}End If{n}{t}{n}{t}If GetBool(IAEstimates.ApplySpecific, 2) = True Then{n}{t}{t}If GetCurrency(IAEstimates.SpecAmt, 2) > GetCurrency(IAEstimates.TotNetTax2, 2) Then{n}{t}{t}{t}Est2 = 1{n}{t}{t}Else{n}{t}{t}{t}Est2 = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}Est2 = 0{n}{t}End If{n}{t}{n}{t}If Est1 + Est2 > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert280_Calculation(){n}{t}Dim count As Integer{n}{t}Dim Lim As Integer{n}{t}Dim Total As Integer{n}{t}{n}{t}Lim = GetAllCopies(IA177){n}{t}count = 1{n}{t}Total = 0{n}{t}{n}{t}Do While count <= Lim{n}{t}{t}If GetCurrency(IA177.CYAdoptionTaxCr, count) > 0 Then{n}{t}{t}{t}Total = Total + 1{n}{t}{t}Else{n}{t}{t}{t}Total = Total{n}{t}{t}End If{n}{t}{t}{n}{t}{t}count = count + 1{n}{t}Loop{n}{n}{t}If GetNumber(USWAdoption.Create) > 0 And GetCurrency(IASchA.TotAdoptAmt) = 0 And Total = 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert30_Calculation(){n}{t}If GetCurrency(USWRec.TAGI) > 0 And GetCurrency(USWRec.SAGI) > 0 And GetBool(IAF1040.MFJ) = True Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert282_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True And GetBool(IA177.Spouse) = 0 And GetCurrency(IA177.CYAdoptionTaxCr) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert285_Calculation(){n}{t}If GetBool(IARequired.VerifiedIA177) = True Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAF1040.CombMFS) = True And GetCurrency(IA177.CYAdoptionTaxCr) > 5000@ Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert295A_Calculation(){n}{t}If GetCurrency(IAF1040.AEst) = 0 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetCurrency(IAF1040.AEst) = GetCurrency(IAF1040.AIATaxWith) Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert295B_Calculation(){n}{t}If GetCurrency(IAF1040.BEst) = 0 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetCurrency(IAF1040.BEst) = GetCurrency(IAF1040.BIATaxWith) Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert300_Calculation(){n}{t}If GetNumber(IARequired.SchBIntNoPayer) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetNumber(IAWBPInt.IntNoPayer) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert310_Calculation(){n}{t}If GetNumber(IARequired.SchBDivNoPayer) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetNumber(IAWBPDiv.DivNoPayer) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert320_Calculation(){n}{t}If GetBool(IAF126.TpPYRes) = True Then{n}{t}{t}If GetString(IAF126.TpDateIn) = "" And GetString(IAF126.TpDateOut) = "" Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert330_Calculation(){n}{t}If GetBool(IAF126.SpPYRes) = True And GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}If GetString(IAF126.SpDateIn) = "" And GetString(IAF126.SpDateOut) = "" Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert40_Calculation(){n}{t}If GetBool(IAF1040.NoMFSInc) = True Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAF1040.MFS) = True And GetCurrency(IAF1040.SpIncome) = 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert50_Calculation(){n}{t}If GetBool(IAF1040.MFS) = True And (GetCurrency(IAWkAltTax.Lesser) > 0 And (GetCurrency(IAWkAltTax.Lesser) = GetCurrency(IAWkAltTax.Mult))) Then{n}{t}{t}If GetCurrency(IAF1040.SpSSB) = 0 And GetBool(IAF1040.NoSpSSB) = False Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}ElseIf GetCurrency(IAF1040.SpPenExcl) = 0 And GetBool(IAF1040.NoSpPenExcl) = False Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}ElseIf GetCurrency(IAF1040.SpTaxInc) = 0 And GetBool(IAF1040.NoSpTaxInc) = False Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert60_Calculation(){n}{t}If GetCurrency(IARequired.IAEic) > 0 Then{n}{t}{t}If GetBool(IAF1040.NoMFSEI) = True Then{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}ElseIf GetBool(IAF1040.MFS) = True And GetCurrency(IAF1040.MFSEI) = 0 Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert70_Calculation(){n}{t}ReturnVal = 0{n}End Sub
Sub Alert80_Calculation(){n}'Re-did to factor in prior year 179 assets and use IAStatePrior. Does trigger for any year with bonus.  Next year 2019 need to alert non conformity assets that are disposed? Not this year since should only be current year assets.{n}{t}ReturnVal = GetNumber(IAWDepr.StatePriorDisposal){n}End Sub
Sub Alert90_Calculation(){n}'for 2018 make no change since need to ask or alert if had depr adjustment in prior year and need to make an entry for catch-up depr. May need to see next year if should exclude 2018 veh that were not reported on IA4562A since was just on IA 2106{n}{t}If GetBool(IARequired.Ask4562A) = True Then{n}{t}{t}If GetCurrency(IA4562A.TotP2ColF) = 0 Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert340_Calculation(){n}'set this to zero if Iowa passes conformity{n}{t}'ReturnVal = GetNumber(USWSpouse.StateSec179Tent) fed math for this is below, do similar but with IA fields{n}{t}'If GetCurrency(USW4562State.TotElect179) <> GetCurrency(USW4562State.Tent179) Then{n}{t}'{t}ReturnVal = 1{n}{t}'Else{n}{t}'{t}ReturnVal = 0{n}{t}'End If{n}{t}{n}{t}If GetCurrency(IARequired.TotElect179) <> GetCurrency(IARequired.Tent179) Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert345_Calculation(){n}{t}If GetCurrency(IARequired.Diss179) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert350_Calculation(){n}{t}If GetCurrency(IA1040X.TotPrevTax) > 0@ And (GetCurrency(IA1040X.TotPrevTax) = GetCurrency(IA1040X.PrevOP)) Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert360_Calculation(){n}{t}If GetBool(IARequired.VerifiedIA126) = True Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetNumber(IAF126.Print) = 1 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Ask130Copy_Calculation(){n}{t}If GetBool(IARequired.F130Y) = True And GetNumber(IA130.Exist) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Ask134_Calculation(){n}{t}If GetNumber(IA134.Exist) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetBool(IAF1040.CombMFS) = True And GetNumber(IA134Sp.Exist) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Ask4136_Calculation(){n}{t}If GetBool(USF4136.Exist) = True Or GetNumber(USSchF.Exist) > 0 Or GetNumber(USSchC.Exist) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Ask4562A_Calculation(){n}{t}If GetNumber(IA4562A.StateDispNbr) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Ask4562PIV_Calculation(){n}{t}If GetNumber(USDPartK1.Exist) > 0 Or GetNumber(USDSCorpK1.Exist) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetNumber(IA4562PIV.Exist) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub AskCharCont_Calculation(){n}{t}Dim FedContributions As Currency{n}{t}{n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}FedContributions = GetCurrency(USSchA.Cash) + GetCurrency(USSchA.NonCash){n}{t}Else{n}{t}{t}FedContributions = GetCurrency(USSchANR.Cash) + GetCurrency(USSchANR.NonCash){n}{t}End If{n}{n}{t}If FedContributions > 0 Then{n}{t}{t}If GetCurrency(IAF1040.BOthIACr) > 0 Or GetCurrency(IAF1040.AOthIACr) > 0 Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}ElseIf GetCurrency(IAOthAdj.TPVet) > 0 Or GetCurrency(IAOthAdj.SPVet) > 0 Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub AskEarlyChCr_Calculation(){n}{t}If Trim(GetString(IAChildCredit.DepName(0))) <> "" And GetCurrency(IAChildCredit.TotNI) < 45000@ Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub AskEstCopy_Calculation(){n}{t}If GetBool(IARequired.EstY) = True And GetNumber(IAEstimates.Exist) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub AskFedFuel_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}If GetCurrency(USF4136.TotalCredit) > 0 Or GetCurrency(IAAddFedTax.SPFuel) > 0 Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub AskFilStat_Calculation(){n}{t}If IAFS() = 2 Or IAFS() = 3 Or IAFS() = 4 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub AskIAEst_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True And GetCurrency(IAStateEst.TotIAEst) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub AskMedExp_Calculation(){n}{t}If GetCurrency(USSchA.MedExp) > 0 Then{n}{t}{t}If GetCurrency(IAF1040.BHealth) > 0 Or GetCurrency(IAF1040.AHealth) > 0 Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub AskPenExc_Calculation(){n}{t}If GetCurrency(IAF1040.AIRA) + GetCurrency(IAF1040.APensions) + GetCurrency(IAF1040.BIRA) + GetCurrency(IAF1040.BPensions) + GetCurrency(IAF126.AIRA) + GetCurrency(IAF126.APensions) + GetCurrency(IAF126.BIRA) + GetCurrency(IAF126.BPensions) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub AskPensions_Calculation(){n}{t}If GetCurrency(USWRec.TotPension) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IAWPenExc.TPPensions) + GetCurrency(IAWPenExc.SPPensions) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub AskReviewOthAdj_Calculation(){n}{t}If GetStatusCopies(IAWHealth, ModifiedStatus) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetStatusCopies(IAWPenExc, ModifiedStatus) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IAF1040.AGainDed) > 0 Or GetCurrency(IAF1040.BGainDed) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetStatusCopies(IAOthAdj, ModifiedStatus) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BalDueAmt_Calculation(){n}{t}ReturnVal = Abs(GetCurrency(IAF1040.RefBalDue)){n}End Sub
Sub BaseAmt_Calculation(){n}{t}If GetBool(IAF1040.Over65) = True Then{n}{t}{t}ReturnVal = 24000@{n}{t}Else{n}{t}{t}ReturnVal = 9000@{n}{t}End If{n}End Sub
Sub BProRate_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}If GetCurrency(IAF1040.BNet) < 0 And GetCurrency(IAF1040.ANet) < 0 Then{n}{t}{t}{t}If GetCurrency(IAF1040.BNet) < GetCurrency(IAF1040.ANet) Then{n}{t}{t}{t}{t}ReturnVal = 0{n}{t}{t}{t}Else{n}{t}{t}{t}{t}ReturnVal = 1{n}{t}{t}{t}End If{n}{t}{t}ElseIf GetCurrency(IAF1040.BNet) < 0 Then{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}ElseIf GetCurrency(IAF1040.BNet) > 0 And GetCurrency(IARequired.TotNI) <= 0 Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}ElseIf GetCurrency(IARequired.TotNI) = 0 Then{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = MaxValue(0, (MinValue(1#, GetFloat(IAF1040.BNet) / GetFloat(IARequired.TotNI)))){n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BusInc179_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IARequired.FedLn11) + GetCurrency(IARequired.IABusinessNC)){n}End Sub
Sub CombNames_Calculation(){n}{t}If GetBool(IAF1040.MFJ) = True Or GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}If GetString(IAF1040.LastName) = GetString(IAF1040.SpouseLast) Then{n}{t}{t}{t}ReturnVal = GetString(IAF1040.FirstName) & " and " & GetString(IAF1040.SpouseFirst) & " " & GetString(IAF1040.LastName){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = GetString(IAF1040.FirstName) & " " & GetString(IAF1040.LastName) & " and " & GetString(IAF1040.SpouseFirst) & " " & GetString(IAF1040.SpouseLast){n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = GetString(IAF1040.FirstName) & " " & GetString(IAF1040.LastName){n}{t}End If{n}End Sub
Sub CrAddFedTax_Calculation(){n}{t}If GetNumber(USWFICA.Exist) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetNumber(USF4136.Exist) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(USWRec.PYOwe) > 0 Then{n}{t}{t}ReturnVal = 1{t}{t}{n}{t}ElseIf GetCurrency(USWRec.PYOweNR) > 0 Then{n}{t}{t}ReturnVal = 1{t}{t}{n}{t}ElseIf GetCurrency(USWRec.PYExt) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(USWRec.PYExtNR) > 0 Then{n}{t}{t}ReturnVal = 1{t}{t}{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrOthAdj_Calculation(){n}{t}If GetNumber(USWOthAdj.Exist) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetNumber(USWOthAdjNR.Exist) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetNumber(USWOthInc.Exist) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetNumber(USWOthIncNR.Exist) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetBool(USF8910.Print) = True Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(USWRec.TotEdExp) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(USWRec.TotBusExp2106) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(USWRec.TotStudAdj) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(USWRec.TotTuitAdj) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(USWRec.TotHealthSav) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(USWRec.TotDomProd) > 0 Then{n}{t}{t}ReturnVal = 1{n}' Need to create if PYNR so interview displays correctly for IA 126 worksheets{n}{t}ElseIf GetBool(IAF126.TpPYNR) = True Or GetBool(IAF126.SpPYNR) = True Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrOthInc_Calculation(){n}{t}If GetNumber(USWOthInc.Exist) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetNumber(USWOthIncNR.Exist) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA4562.TotDepAdj) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA4562Sp.TotDepAdj) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA4562A.TotDepAdj) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(USF6251.Depl) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(USF6251.IntangDrill) <> 0 Then{n}{t}{t}ReturnVal = 1{n}' Need to create if PYNR so interview displays correctly for IA 126 worksheets{n}{t}ElseIf GetBool(IAF126.TpPYNR) = True Or GetBool(IAF126.SpPYNR) = True Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IARequired.Tot8824) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IARequired.TotIAExReimb) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IAWNonConformAdj.SPTotNonConformAdj) <> 0 Or GetCurrency(IAWNonConformAdj.TPTotNonConformAdj) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA4684.IANonConformAdj) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IA2106.IAWages) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IAWSchFLoss.ExcessLoss) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrPenExc_Calculation(){n}{t}If GetCurrency(USWRec.TotIRAInc) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(USWRetirement.TPAddQCD) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(USWRetirement.SPAddQCD) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(USWRec.TotPension) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrSETax_Calculation(){n}{t}If GetCurrency(USF8962.PTCRepay) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(USF1040.SETax) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(USF1040NR.SETax) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(USF1040.TipTax) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(USF1040NR.TipTax) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(USWRetirement.RetTax) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(USF1040.SchHTax) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(USF1040NR.SchHTax) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(USF1040.HomeBuyRepay) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(USF1040NR.HomeBuyRepay) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(USWHealthPen.Penalty) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(USF8959.TotAddMedTax) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(USWOthTax.TotOthTax) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CurrentDate_Calculation(){n}{t}ReturnVal = CDate("Current"){n}End Sub
Sub Ded179_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IARequired.BusInc179), GetCurrency(IARequired.Tent179) + GetCurrency(IARequired.TotCo179)){n}End Sub
Sub DepLength_Calculation(){n}{t}ReturnVal = Len(GetString(IARequired.DepNames)){n}End Sub
Sub DepNames_Calculation(){n}{t}Dim DepName As String{n}  {n}{t}If GetString(USWAddDep.DepFName(0)) <> "" Then{n}{t}{t}DepName = GetString(USWAddDep.DepFName(0)) & " "{n}{t}End If{n}{t}If GetString(USWAddDep.DepFName(1)) <> "" Then{n}{t}{t}DepName = DepName + GetString(USWAddDep.DepFName(1)) + " "{n}{t}End If{n}{t}If GetString(USWAddDep.DepFName(2)) <> "" Then{n}{t}{t}DepName = DepName + GetString(USWAddDep.DepFName(2)) + " "{n}{t}End If{n}{t}If GetString(USWAddDep.DepFName(3)) <> "" Then{n}{t}{t}DepName = DepName + GetString(USWAddDep.DepFName(3)) + " "{n}{t}End If{n}{t}If GetString(USWAddDep.DepFName(4)) <> "" Then{n}{t}{t}DepName = DepName + GetString(USWAddDep.DepFName(4)) + " "{n}{t}End If{n}{t}If GetString(USWAddDep.DepFName(5)) <> "" Then{n}{t}{t}DepName = DepName + GetString(USWAddDep.DepFName(5)) + " "{n}{t}End If{n}{n}{t}ReturnVal = DepName{n}End Sub
Sub DeprAdj_Calculation(){n}{t}ReturnVal = GetCurrency(IAWOthInc.TotBonus){n}End Sub
Sub Diss179_Calculation(){n}{t}ReturnVal = GetCurrency(IARequired.TotCo179) + GetCurrency(IARequired.Tent179) - GetCurrency(IARequired.Ded179){n}End Sub
Sub EICRatio_Calculation(){n}{t}If GetCurrency(IARequired.TotEICEarnInc) = 0 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetCurrency(IARequired.SEICEarnInc) < 0 Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = MinValue(1#, MaxValue(0, GetFloat(IARequired.SEICEarnInc) / GetFloat(IARequired.TotEICEarnInc))){n}{t}End If{n}End Sub
Sub FedAGI_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USF1040.AGI){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USF1040NR.AGI) {n}{t}End If{n}End Sub
Sub FedFilingStatus_Calculation(){n}{t}If FedFS() = 1 Then{n}{t}{t}ReturnVal = "single"{n}{t}ElseIf FedFS() = 2 Then{n}{t}{t}ReturnVal = "married filing jointly"{n}{t}ElseIf FedFS() = 3 Then{n}{t}{t}ReturnVal = "married filing separately"{n}{t}ElseIf FedFS() = 4 Then{n}{t}{t}ReturnVal = "head of household"{n}{t}Else{n}{t}{t}ReturnVal = "qualifying widow(er)"{n}{t}End If{n}End Sub
Sub FedLn11_Calculation(){n}{t}ReturnVal = GetCurrency(USF4562.BusInc179, 1){n}End Sub
Sub FilingStatus_Calculation(){n}{t}ReturnVal = IAFS(){n}End Sub
Sub FYEIC_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(USF1040.Eic) * 0.15){n}End Sub
Sub FYRes_Calculation(){n}{t}Dim Only1NR As Long{n}{t}Dim TPRes As Long{n}{t}Dim SPRes As Long{n}{t}{n}{t}If GetBool(IAF126.TpNonRes) = True And GetBool(IAF126.SpRes) = True Then{n}{t}{t}Only1NR = 1{n}{t}ElseIf GetBool(IAF126.TpRes) = True And GetBool(IAF126.SpNonRes) = True Then{n}{t}{t}Only1NR = 1{n}{t}Else{n}{t}{t}Only1NR = 0{n}{t}End If{n}{n}{t}If GetBool(IAF126.Exist) = False Then{n}{t}{t}TPRes = 1{n}{t}ElseIf GetBool(IAF1040.MFJ) = True And Only1NR = 1 Then{n}{t}{t}TPRes = 1{n}{t}ElseIf GetBool(IAF1040.MFJ) = True And GetBool(IAF126.TpRes) = True And GetBool(IAF126.SpRes) = True Then{n}{t}{t}TPRes = 1{n}{t}ElseIf GetBool(IAF1040.MFJ) <> True And GetBool(IAF126.TpRes) = True Then{n}{t}{t}TPRes = 1{n}{t}Else{n}{t}{t}TPRes = 0{n}{t}End If{n}{t}{n}{t}If GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}If GetBool(IAF126.Exist) = False Then{n}{t}{t}{t}SPRes = 1{n}{t}{t}ElseIf GetBool(IAF126.SpRes) = True Then{n}{t}{t}{t}SPRes = 1{n}{t}{t}Else{n}{t}{t}{t}SPRes = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}SPRes = 0{n}{t}End If{n}{t}{n}{t}If GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}If TPRes + SPRes = 2 Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}ElseIf TPRes = 1 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}{t}{t}{t}{n}End Sub
Sub IAAGI_Calculation(){n}{t}ReturnVal = GetCurrency(IARequired.FedAGI) + GetCurrency(IARequired.DeprAdj) + GetCurrency(IARequired.NonConfLn14) - GetCurrency(IARequired.NCMove) - GetCurrency(IARequired.NCDomProd){n}End Sub
Sub IABusinessNC_Calculation(){n}{t}ReturnVal = GetCurrency(IAWOthInc.TotNonConform){n}End Sub
Sub IAEic_Calculation(){n}{t}If GetBool(IAF126.TpPYNR) = True Or GetBool(IAF126.SpPYNR) Then{n}{t}{t}ReturnVal = GetCurrency(IARequired.PYNREIC){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IARequired.FYEIC){n}{t}End If{n}End Sub
Sub JointDiv_Calculation(){n}{t}Dim count As Integer{n}{t}Dim SchBTotal As Currency{n}{n}{t}count = 0{n}{t}SchBTotal = 0{n}{n}{t}Do While count < 7{n}{t}{t}If GetBool(IASchB.DJ1(count)) = True Then{n}{t}{t}{t}SchBTotal = SchBTotal + GetCurrency(IASchB.TaxDiv(count)){n}{t}{t}Else{n}{t}{t}{t}SchBTotal = SchBTotal{n}{t}{t}End If{n}{t}{t}count = count + 1{n}{t}Loop{n}{n}{t}Dim count1 As Integer{n}{t}Dim HowManyWBPDiv As Long{n}{t}Dim WSTotal As Currency{n}{t}Dim DivIndex As Long{n}{t}{n}{t}count1 = 1{n}{t}HowManyWBPDiv = GetAllCopies(IAWBPDiv){n}{t}WSTotal = 0{n}{t}{n}{t}Do While count1 <= HowManyWBPDiv{n}{t}{t}DivIndex = 0{n}{t}{t}Do While DivIndex < 22{n}{t}{t}{t}If GetBool(IAWBPDiv.DJ1(DivIndex), count1) = True Then{n}{t}{t}{t}{t}WSTotal = WSTotal + GetCurrency(IAWBPDiv.TaxDiv(DivIndex), count1){n}{t}{t}{t}End If{n}{t}{t}{t}DivIndex = DivIndex + 1{n}{t}{t}Loop{n}{t}{t}count1 = count1 + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = SchBTotal + WSTotal{n}End Sub
Sub JointInt_Calculation(){n}{t}Dim count As Integer{n}{t}Dim SchBTotal As Currency{n}{n}{t}count = 0{n}{t}SchBTotal = 0{n}{n}{t}Do While count < 7{n}{t}{t}If GetBool(IASchB.IJ1(count)) = True Then{n}{t}{t}{t}SchBTotal = SchBTotal + GetCurrency(IASchB.TaxInt(count)){n}{t}{t}Else{n}{t}{t}{t}SchBTotal = SchBTotal{n}{t}{t}End If{n}{t}{t}count = count + 1{n}{t}Loop{n}{n}{t}Dim count1 As Integer{n}{t}Dim HowManyWBPInt As Long{n}{t}Dim WSTotal As Currency{n}{t}Dim IntIndex As Long{n}{t}{n}{t}count1 = 1{n}{t}HowManyWBPInt = GetAllCopies(IAWBPInt){n}{t}WSTotal = 0{n}{t}{n}{t}Do While count1 <= HowManyWBPInt{n}{t}{t}IntIndex = 0{n}{t}{t}Do While IntIndex < 22{n}{t}{t}{t}If GetBool(IAWBPInt.IJ1(IntIndex), count1) = True Then{n}{t}{t}{t}{t}WSTotal = WSTotal + GetCurrency(IAWBPInt.TaxInt(IntIndex), count1){n}{t}{t}{t}End If{n}{t}{t}{t}IntIndex = IntIndex + 1{n}{t}{t}Loop{n}{t}{t}count1 = count1 + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = SchBTotal + WSTotal{n}End Sub
Sub JointSPDiv_Calculation(){n}{t}ReturnVal = Round(CDollar(CDbl(GetCurrency(IARequired.JointDiv)) * 0.5)){n}End Sub
Sub JointSPInt_Calculation(){n}{t}ReturnVal = Round(CDollar(CDbl(GetCurrency(IARequired.JointInt)) * 0.5)){n}End Sub
Sub JointTPDiv_Calculation(){n}{t}ReturnVal = GetCurrency(IARequired.JointDiv) - GetCurrency(IARequired.JointSPDiv){n}End Sub
Sub JointTPInt_Calculation(){n}{t}ReturnVal = GetCurrency(IARequired.JointInt) - GetCurrency(IARequired.JointSPInt){n}End Sub
Sub JTComb_Calculation(){n}{t}If GetString(IAF1040.LastName) = GetString(IAF1040.SpouseLast) Then{n}{t}{t}ReturnVal = GetString(IAF1040.LastName) & ", " & GetString(IAF1040.FirstName) & " and " & GetString(IAF1040.SpouseFirst){n}{t}Else{n}{t}{t}ReturnVal = GetString(IAF1040.LastName) & ", " & GetString(IAF1040.FirstName) & " and " & GetString(IAF1040.SpouseLast) & ", " & GetString(IAF1040.SpouseFirst){n}{t}End If{n}End Sub
Sub LILimit_Calculation(){n}{t}If IAFS() = 1 And GetBool(IAF1040.DepY) = True Then{n}{t}{t}ReturnVal = 5000@{n}{t}ElseIf IAFS() = 1 And GetBool(IAF1040.DepY) = False And GetBool(IAF1040.Over65) = True Then{n}{t}{t}ReturnVal = 24001@{n}{t}ElseIf IAFS() = 1 And GetBool(IAF1040.DepY) = False Then{n}{t}{t}ReturnVal = 9001@{n}{t}ElseIf IAFS() = 1 Or GetBool(IAF1040.DepY) = True Then{n}{t}{t}ReturnVal = 0@{n}{t}ElseIf GetBool(IAF1040.Over65) = True Then{n}{t}{t}ReturnVal = 32001@{n}{t}Else{n}{t}{t}ReturnVal = 13501@{n}{t}End If{n}End Sub
Sub Limit179_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IARequired.Max179) - GetCurrency(IARequired.Reduction179)){n}End Sub
Sub LITotIncome_Calculation(){n}{t}ReturnVal = GetCurrency(IAWkAltTax.Ln26){n}End Sub
Sub LowInc_Calculation(){n}{t}If GetCurrency(USF4972.Tax) + GetCurrency(USF4972Spouse.Tax) > 0 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetCurrency(IAF1040.AIAMin) > 0 Or GetCurrency(IAF1040.BIAMin) > 0 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAF126.TpPYNR) = True Or GetBool(IAF126.SpPYNR) = True Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IARequired.AskFilStat) = True And GetBool(IAWkAltTax.NOL) = True Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetCurrency(IARequired.LITotIncome) < GetCurrency(IARequired.LILimit) Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Max179_Calculation(){n}{t}ReturnVal = 70000@{n}End Sub
Sub MobDisQual_Calculation(){n}{t}ReturnVal = 0{n}End Sub
Sub ModAmt_Calculation(){n}{t}Dim TP As Currency{n}{t}Dim SP As Currency{n}{t}{n}{t}TP = GetCurrency(IAF1040.ATotAdj) - GetCurrency(IAF1040.AFedTax) + GetCurrency(IAF1040.AFedDed) + GetCurrency(IAF1040.ADedBox){n}{t}SP = GetCurrency(IAF1040.BTotAdj) - GetCurrency(IAF1040.BFedTax) + GetCurrency(IAF1040.BFedDed) + GetCurrency(IAF1040.BDedBox){n}{t}{n}{t}ReturnVal = TP + SP{n}End Sub
Sub ModChg_Calculation(){n}{t}ReturnVal = Abs(GetCurrency(IARequired.TotIncChg) - GetCurrency(IAF1040.AAltTax)){n}End Sub
Sub ModCk_Calculation(){n}{t}Dim Tax As Currency{n}{t}Dim Modifications As Currency{n}{t}{n}{t}Tax = GetCurrency(IAF1040.AAltTax){n}{t}{n}{t}Modifications = GetCurrency(IARequired.TotIncChg) - Tax{n}{t}{n}{t}If Modifications > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Names_Calculation(){n}{t}ReturnVal = GetString(IARequired.CombNames){n}End Sub
Sub NCDomProd_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAOthAdj.TPDomProd) + GetCurrency(IAOthAdj.SPDomProd) - GetCurrency(USF8903.DPADeduction)){n}End Sub
Sub NCMove_Calculation(){n}{t}ReturnVal = GetCurrency(IA3903.MovExpDdn){n}End Sub
Sub NonConfLn14_Calculation(){n}{t}ReturnVal = GetCurrency(IAWOthInc.TotNonConform){n}End Sub
Sub NonCredAmt_Calculation(){n}{t}Dim TP As Currency{n}{t}Dim SP As Currency{n}{t}{n}{t}TP = GetCurrency(IAF1040.ACredits) + GetCurrency(IAF1040.ACrNon) + GetCurrency(IAF1040.AOutState) + GetCurrency(IAF1040.AOthIACr){n}{t}SP = GetCurrency(IAF1040.BCredits) + GetCurrency(IAF1040.BCrNon) + GetCurrency(IAF1040.BOutState) + GetCurrency(IAF1040.BOthIACr){n}{t}{n}{t}ReturnVal = TP + SP{n}End Sub
Sub NonCredChg_Calculation(){n}{t}ReturnVal = GetCurrency(IARequired.NonCredAmt){n}End Sub
Sub NonCredCk_Calculation(){n}{t}If GetCurrency(IARequired.NonCredChg) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub OthTaxAmt_Calculation(){n}{t}Dim TP As Currency{n}{t}Dim SP As Currency{n}{t}{n}{t}TP = GetCurrency(IAF1040.ALump) + GetCurrency(IAF1040.AIAMin) + GetCurrency(IAF1040.ASch){n}{t}TP = GetCurrency(IAF1040.BLump) + GetCurrency(IAF1040.BIAMin) + GetCurrency(IAF1040.BSch){n}{t}{n}{t}ReturnVal = TP + SP + GetCurrency(IAF1040.TotContrib){n}End Sub
Sub OthTaxChg_Calculation(){n}{t}ReturnVal = GetCurrency(IARequired.OthTaxAmt){n}End Sub
Sub OthTaxCk_Calculation(){n}{t}If GetCurrency(IARequired.OthTaxChg) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub PayAmt_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.TotCredit){n}End Sub
Sub PayChg_Calculation(){n}{t}ReturnVal = GetCurrency(IARequired.PayAmt){n}End Sub
Sub PayCk_Calculation(){n}{t}If GetCurrency(IARequired.PayChg) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub PenDonAmt_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.BApply99) + GetCurrency(IAF1040.AApply99) + GetCurrency(IAF1040.Penalty) + GetCurrency(IAF1040.PenInt){n}End Sub
Sub PenDonChg_Calculation(){n}{t}ReturnVal = GetCurrency(IARequired.PenDonAmt){n}End Sub
Sub PenDonCk_Calculation(){n}{t}If GetCurrency(IARequired.PenDonChg) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub PrnSchCode_Calculation(){n}{t}If GetString(IAF1040.SchNo) = "00811" Then{n}{t}{t}ReturnVal = "0081"{n}{t}ElseIf GetString(IAF1040.SchNo) = "44911" Then{n}{t}{t}ReturnVal = "4491"{n}{t}ElseIf GetString(IAF1040.SchNo) = "45181" Then{n}{t}{t}ReturnVal = "4518"{n}{t}ElseIf GetString(IAF1040.SchNo) = "58951" Then{n}{t}{t}ReturnVal = "5895"{n}{t}Else{n}{t}{t}ReturnVal = GetString(IAF1040.SchNo){n}{t}End If{n}End Sub
Sub PrnSurvivorSP_Calculation(){n}{t}If GetString(USWTaxpayer.PrnSurvivorSP) = "File as Surviving Sp." Then{n}{t}{t}ReturnVal = GetString(USWTaxpayer.PrnSurvivorSP) + " " + GetString(USWBasicInfo.YouDeath){n}{t}Else{n}{t}{t}ReturnVal = GetString(USWTaxpayer.PrnSurvivorSP){n}{t}End If{n}End Sub
Sub PrnSurvivorTP_Calculation(){n}{t}If GetString(USWTaxpayer.PrnSurvivorTP) = "File as Surviving Sp." Then{n}{t}{t}ReturnVal = GetString(USWTaxpayer.PrnSurvivorTP){n}{t}Else{n}{t}{t}ReturnVal = GetString(USWTaxpayer.PrnSurvivorTP){n}{t}End If{n}End Sub
Sub PYNetInc_Calculation(){n}{t}ReturnVal = GetCurrency(IARequired.PYNetIncA) + GetCurrency(IARequired.PYNetIncB){n}End Sub
Sub PYNetIncA_Calculation(){n}{t}ReturnVal = GetCurrency(USZIA1040.IAPYNetIncA){n}End Sub
Sub PYNetIncB_Calculation(){n}{t}ReturnVal = GetCurrency(USZIA1040.IAPYNetIncB){n}End Sub
Sub PYNREIC_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IARequired.FYEIC), (CDollar(GetFloat(IARequired.FYEIC) * GetFloat(IAChildCredit.PYNRPercent)))){n}End Sub
Sub PYRatio_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = False Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetCurrency(IARequired.PYNetIncB) < 0 And GetCurrency(IARequired.PYNetIncA) < 0 Then{n}{t}{t}If GetCurrency(IARequired.PYNetIncB) < GetCurrency(IARequired.PYNetIncA) Then{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}End If{n}{t}ElseIf GetCurrency(IARequired.PYNetIncB) < 0 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetCurrency(IARequired.PYNetIncB) > 0 And GetCurrency(IARequired.PYNetInc) <= 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IARequired.PYNetInc) = 0 Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = MaxValue(0, (MinValue(1#, GetFloat(IARequired.PYNetIncB) / GetFloat(IARequired.PYNetInc)))){n}{t}End If{n}End Sub
Sub QnACompMob_Calculation(){n}{t}If GetBool(IARequired.QnAComp) = True Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub QSAmtOwe_Calculation(){n}{t}If GetCurrency(IAF1040.RefBalDue) < 0 Then{n}{t}{t}ReturnVal = Abs(GetCurrency(IAF1040.RefBalDue)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub QSRefund_Calculation(){n}{t}If GetCurrency(IAF1040.RefBalDue) > 0 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.RefBalDue){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Reduction179_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IARequired.TotCost179) - GetCurrency(IARequired.Threshold179)){n}End Sub
Sub RefundAmt_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.RefBalDue){n}End Sub
Sub RefundCk_Calculation(){n}{t}If GetCurrency(IARequired.RefundAmt) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub S1099RWH_Calculation(){n}{t}Dim count1 As Integer{n}{t}Dim HowMany1099R As Long{n}{t}Dim Total1 As Currency{n}{t}{n}{t}count1 = 1{n}{t}HowMany1099R = GetAllCopies(USD1099R){n}{t}Total1 = 0{n}{t}{n}{t}Do While count1 <= HowMany1099R{n}{t}{t}If GetString(USD1099R.St1, count1) = "IA" And GetBool(USD1099R.Spouse, count1) = True Then{n}{t}{t}{t}Total1 = Total1 + GetCurrency(USD1099R.StWh1, count1){n}{t}{t}End If{n}{t}{t}{n}{t}{t}If GetString(USD1099R.St2, count1) = "IA" And GetBool(USD1099R.Spouse, count1) = True Then{n}{t}{t}{t}Total1 = Total1 + GetCurrency(USD1099R.STWh2, count1){n}{t}{t}End If{n}{t}{t}{n}{t}{t}count1 = count1 + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = Round(Total1){n}{n}End Sub
Sub SchADeprAmt_Calculation(){n}'believe situation now is that parent A is gone, should only have this situation now when fed 2106 is for a "Disabled" (which goes to Sch A for fed and IA) and have either 4562 or 2106veh depr. All other 2106 depr is either only claimed on IA subject to 2% (no adjustment needed since nothing on fed) or claimed on fed (fed .Quaifies) as an adjustment to AGI and then we will properly account for this on IA4562A{n}{t}Dim count As Long{n}{t}Dim count3 As Long{n}{t}Dim Total1 As Currency{n}{t}Dim Total3 As Currency{n}{t}Dim HowManyIAWDepr As Long{n}{t}Dim HowManyIA4562A As Long{n}{t}{n}{t}count = 1{n}{t}count3 = 1{n}{t}Total1 = 0{n}{t}Total3 = 0{n}{t}HowManyIAWDepr = GetAllCopies(IAWDepr){n}{t}HowManyIA4562A = GetAllCopies(IA4562A){n}{t}{n}{t}Do While count <= HowManyIAWDepr{n}{t}{t}If GetString(IAWDepr.ParentType, count) = "2106" And GetBool(IAWDepr.Qualifies, count) = True Then{n}{t}{t}{t}Total1 = Total1 + GetCurrency(IAWDepr.TotAdj, count){n}{t}{t}End If{n}{t}{t}{n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}Do While count3 <= HowManyIA4562A{n}{t}{t}If GetString(IA4562A.EmpBusType, count3) = "27" Then{n}{t}{t}{t}Total3 = Total3 + GetCurrency(IA4562A.DepAdj, count3){n}{t}{t}End If{n}{t}{t}{n}{t}{t}count3 = count3 + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = Total1 + Total3{n}{t}{n}End Sub
Sub SchBDivNoPayer_Calculation(){n}{t}Dim count, Iter As Integer{n}{t}{n}{t}count = 0{n}{t}Iter = 0{n}{t}Do While Iter < 7{n}{t}{t}If GetCurrency(IASchB.Dividend(Iter)) > 0 And Trim(GetString(IASchB.DivPayer(Iter))) = "" Then{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}{t}Iter = Iter + 1{n}{t}Loop{n}{t}{n}{t}If GetBool(IASchB.PrintIAB) = True And count > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SchBIntNoPayer_Calculation(){n}{t}Dim count, Iter As Integer{n}{t}{n}{t}count = 0{n}{t}Iter = 0{n}{t}Do While Iter < 7{n}{t}{t}If GetCurrency(IASchB.Interest(Iter)) > 0 And Trim(GetString(IASchB.Payer(Iter))) = "" Then{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}{t}Iter = Iter + 1{n}{t}Loop{n}{t}{n}{t}If GetBool(IASchB.PrintIAB) = True And count > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SEarnInc_Calculation(){n}{t}Dim Part As Currency{n}{t}Dim SE As Currency{n}{t}Dim Wages As Currency{n}{t}Dim NonTaxCombat As Currency{n}{t}Dim SP409AInc As Currency{n}{t}Dim JtSP409AInc As Currency{n}{t}{t} {n}{t}Part = GetCurrency(USDPartK1.SEInc, FieldCopies(USDPartK1.Spouse)) + CDollar(GetFloat(USDPartK1.SEInc, FieldCopies(USDPartK1.Joint)) * 0.5){n}{t}SE = GetCurrency(IAF1040.BBusInc) + GetCurrency(IAF1040.BFarm) - GetCurrency(IAF1040.BBusIncL) - GetCurrency(USWRec.SKeough){n}{t}Wages = MaxValue(0, GetCurrency(IAF1040.BWages) - GetCurrency(USDStudent.TaxScholar, FieldCopies(USDStudent.Spouse)) - Round(GetCurrency(USDW2.NonQual, FieldCopies(USDW2.Spouse))) - Round(GetCurrency(USDW2AS.NonQual, FieldCopies(USDW2AS.Spouse))) - Round(GetCurrency(USDW2CM.NonQual, FieldCopies(USDW2CM.Spouse))) - Round(GetCurrency(USDW2GU.NonQual, FieldCopies(USDW2GU.Spouse))) - Round(GetCurrency(USDW2VI.NonQual, FieldCopies(USDW2VI.Spouse)))){n}{t}NonTaxCombat = Round(GetCurrency(USDW2.CodeQ, FieldCopies(USDW2.Spouse))) + Round(GetCurrency(USDW2AS.CodeQ, FieldCopies(USDW2AS.Spouse))) + Round(GetCurrency(USDW2CM.CodeQ, FieldCopies(USDW2CM.Spouse))) + Round(GetCurrency(USDW2GU.CodeQ, FieldCopies(USDW2GU.Spouse))) + Round(GetCurrency(USDW2VI.CodeQ, FieldCopies(USDW2VI.Spouse))){n}{t}SP409AInc = Round(GetCurrency(USDW2.CodeZ, FieldCopies(USDW2.Spouse))) + Round(GetCurrency(USDW2AS.CodeZ, FieldCopies(USDW2AS.Spouse))) + Round(GetCurrency(USDW2CM.CodeZ, FieldCopies(USDW2CM.Spouse))) + Round(GetCurrency(USDW2GU.CodeZ, FieldCopies(USDW2GU.Spouse))) + Round(GetCurrency(USDW2VI.CodeZ, FieldCopies(USDW2VI.Spouse))) + Round(GetCurrency(USD1099MISC.Income, FieldCopies(USD1099MISC.Spouse))){n}{t}JtSP409AInc = Round(CDollar(GetFloat(USD1099MISC.Income, FieldCopies(USD1099MISC.Joint)) * 0.5)){n}{t} {n}{t}ReturnVal = MaxValue(0, Wages + GetCurrency(IAF1040.BAlimony) + MaxValue(0, SE + Part) + GetCurrency(USWOthInc.SP2555) + NonTaxCombat - SP409AInc - JtSP409AInc){n}End Sub
Sub SEICEarnInc_Calculation(){n}{t}If GetBool(IAF1040.MFS) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.MFSEI){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BWages) + GetCurrency(IAF1040.BBusInc) + GetCurrency(IAF1040.BFarm){n}{t}End If{n}End Sub
Sub ShowRef_Calculation(){n}{t}If GetCurrency(IARequired.QSAmtOwe) > 0 Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = 1{n}{t}End If{n}End Sub
Sub SIaEIC_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IARequired.IAEic) * GetFloat(IARequired.EICRatio)){n}End Sub
Sub SIAExReimb_Calculation(){n}{t}ReturnVal = GetCurrency(IARequired.TotIAExReimb) - GetCurrency(IARequired.TIAExReimb){n}End Sub
Sub SIAW2WH_Calculation(){n}{t}Dim count1 As Integer{n}{t}Dim HowManyW2 As Long{n}{t}Dim Total1 As Currency{n}{t}Dim W2Index As Long{n}{t}{n}{t}count1 = 1{n}{t}HowManyW2 = GetAllCopies(USDW2){n}{t}Total1 = 0{n}{t}{n}{t}Do While count1 <= HowManyW2{n}{t}{t}W2Index = 0{n}{t}{t}Do While W2Index < 8{n}{t}{t}{t}If GetString(USDW2.St(W2Index), count1) = "IA" And GetBool(USDW2.Spouse, count1) = True Then{n}{t}{t}{t}{t}Total1 = Total1 + GetCurrency(USDW2.STWh(W2Index), count1){n}{t}{t}{t}End If{n}{t}{t}{t}W2Index = W2Index + 1{n}{t}{t}Loop{n}{t}{t}count1 = count1 + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = Round(Total1){n}{t}{n}End Sub
Sub SIRA_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}If GetCurrency(IARequired.TEarnInc) < GetCurrency(USWIRA.TPDedIRA) Then{n}{t}{t}{t}ReturnVal = GetCurrency(USWIRA.TPDedIRA) + GetCurrency(USWIRA.SPDedIRA) - GetCurrency(IARequired.TEarnInc){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = MinValue(GetCurrency(IARequired.SEarnInc), GetCurrency(USWIRA.SPDedIRA)){n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub AskSpouse_Calculation(){n}{t}If IAFS() = 2 Or IAFS() = 3 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SLimLoss_Calculation(){n}{t}ReturnVal = GetCurrency(USWDRec.LimLoss) - GetCurrency(IARequired.TLimLoss){n}End Sub
Sub SMove_Calculation(){n}{t}ReturnVal = GetCurrency(IARequired.TotMove) - GetCurrency(IARequired.TMove){n}End Sub
Sub SP8824_Calculation(){n}{t}ReturnVal = GetCurrency(IARequired.Tot8824) - GetCurrency(IARequired.TP8824){n}End Sub
Sub SPCapGainWH_Calculation(){n}{t}Dim count1 As Integer{n}{t}Dim HowManyCapGain As Long{n}{t}Dim Total1 As Currency{n}{t}Dim CGIndex As Long{n}{t}{n}{t}count1 = 1{n}{t}HowManyCapGain = GetAllCopies(USDCapGain){n}{t}Total1 = 0{n}{t}{n}{t}Do While count1 <= HowManyCapGain{n}{t}{t}CGIndex = 0{n}{t}{t}Do While CGIndex < 2{n}{t}{t}{t}If GetString(USDCapGain.St2(CGIndex), count1) = "IA" And GetBool(USDCapGain.Spouse, count1) = True Then{n}{t}{t}{t}{t}Total1 = Total1 + GetCurrency(USDCapGain.STWh2(CGIndex), count1){n}{t}{t}{t}ElseIf GetString(USDCapGain.St2(CGIndex), count1) = "IA" And GetBool(USDCapGain.Joint, count1) = True Then{n}{t}{t}{t}{t}Total1 = Total1 + CDollar(GetFloat(USDCapGain.STWh2(CGIndex), count1) * 0.5){n}{t}{t}{t}End If{n}{t}{t}{t}CGIndex = CGIndex + 1{n}{t}{t}Loop{n}{t}{t}count1 = count1 + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = Round(Total1)  {n}End Sub
Sub SPComb_Calculation(){n}{t}If GetBool(IAF1040.MFJ) = True Or GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = GetString(IAF1040.SpouseLast) & ", " & GetString(IAF1040.SpouseFirst){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub SPCombName_Calculation(){n}{t}If GetBool(IAF1040.MFJ) = True Or GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = GetString(IAF1040.SpouseFirst) & " " & GetString(IAF1040.SpouseLast){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub SPDivWH_Calculation(){n}{t}Dim count1 As Integer{n}{t}Dim HowMany1099Div As Long{n}{t}Dim Total1 As Currency{n}{t}Dim DivIndex As Long{n}{t}{n}{t}count1 = 1{n}{t}HowMany1099Div = GetAllCopies(USD1099DIV){n}{t}Total1 = 0{n}{t}{n}{t}Do While count1 <= HowMany1099Div{n}{t}{t}DivIndex = 0{n}{t}{t}Do While DivIndex < 2{n}{t}{t}{t}If GetString(USD1099DIV.St(DivIndex), count1) = "IA" And GetBool(USD1099DIV.Spouse, count1) = True Then{n}{t}{t}{t}{t}Total1 = Total1 + GetCurrency(USD1099DIV.STWh(DivIndex), count1){n}{t}{t}{t}ElseIf GetString(USD1099DIV.St(DivIndex), count1) = "IA" And GetBool(USD1099DIV.Joint, count1) = True Then{n}{t}{t}{t}{t}Total1 = Total1 + CDollar(GetFloat(USD1099DIV.STWh(DivIndex), count1) * 0.5){n}{t}{t}{t}End If{n}{t}{t}{t}DivIndex = DivIndex + 1{n}{t}{t}Loop{n}{t}{t}count1 = count1 + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = Round(Total1){n}End Sub
Sub SPIntWH_Calculation(){n}{t}Dim count1 As Integer{n}{t}Dim HowMany1099Int As Long{n}{t}Dim Total1 As Currency{n}{t}Dim IntIndex As Long{n}{t}{n}{t}count1 = 1{n}{t}HowMany1099Int = GetAllCopies(USD1099INT){n}{t}Total1 = 0{n}{t}{n}{t}Do While count1 <= HowMany1099Int{n}{t}{t}IntIndex = 0{n}{t}{t}Do While IntIndex < 2{n}{t}{t}{t}If GetString(USD1099INT.St(IntIndex), count1) = "IA" And GetBool(USD1099INT.Spouse, count1) = True Then{n}{t}{t}{t}{t}Total1 = Total1 + GetCurrency(USD1099INT.STWh(IntIndex), count1){n}{t}{t}{t}ElseIf GetString(USD1099INT.St(IntIndex), count1) = "IA" And GetBool(USD1099INT.Joint, count1) = True Then{n}{t}{t}{t}{t}Total1 = Total1 + CDollar(GetFloat(USD1099INT.STWh(IntIndex), count1) * 0.5){n}{t}{t}{t}End If{n}{t}{t}{t}IntIndex = IntIndex + 1{n}{t}{t}Loop{n}{t}{t}count1 = count1 + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = Round(Total1){n}End Sub
Sub SPKWH_Calculation(){n}{t}Dim count1 As Integer{n}{t}Dim HowMany1099K As Long{n}{t}Dim Total1 As Currency{n}{t}Dim KIndex As Long{n}{t}{n}{t}count1 = 1{n}{t}HowMany1099K = GetAllCopies(USD1099K){n}{t}Total1 = 0{n}{t}{n}{t}Do While count1 <= HowMany1099K{n}{t}{t}KIndex = 0{n}{t}{t}Do While KIndex < 2{n}{t}{t}{t}If GetString(USD1099K.State(KIndex), count1) = "IA" And GetBool(USD1099K.Spouse, count1) = True Then{n}{t}{t}{t}{t}Total1 = Total1 + GetCurrency(USD1099K.StateInc(KIndex), count1){n}{t}{t}{t}ElseIf GetString(USD1099K.State(KIndex), count1) = "IA" And GetBool(USD1099K.Joint, count1) = True Then{n}{t}{t}{t}{t}Total1 = Total1 + CDollar(GetFloat(USD1099K.StateInc(KIndex), count1) * 0.5){n}{t}{t}{t}End If{n}{t}{t}{t}KIndex = KIndex + 1{n}{t}{t}Loop{n}{t}{t}count1 = count1 + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = Round(Total1){n}End Sub
Sub SPMiscWH_Calculation(){n}{t}Dim count1 As Integer{n}{t}Dim HowMany1099MISC As Long{n}{t}Dim Total1 As Currency{n}{t}{n}{t}count1 = 1{n}{t}HowMany1099MISC = GetAllCopies(USD1099MISC){n}{t}Total1 = 0{n}{t}{n}{t}Do While count1 <= HowMany1099MISC{n}{t}{t}If GetString(USD1099MISC.State, count1) = "IA" Then{n}{t}{t}{t}If GetBool(USD1099MISC.Spouse, count1) = True Then{n}{t}{t}{t}{t}Total1 = Total1 + GetCurrency(USD1099MISC.StateWH, count1){n}{t}{t}{t}ElseIf GetBool(USD1099MISC.Joint, count1) = True Then{n}{t}{t}{t}{t}Total1 = Total1 + CDollar(GetFloat(USD1099MISC.StateWH, count1) * 0.5){n}{t}{t}{t}Else{n}{t}{t}{t}{t}Total1 = Total1{n}{t}{t}{t}End If{n}{t}{t}Else{n}{t}{t}{t}Total1 = Total1{n}{t}{t}End If{n}{t}{t}{n}{t}{t}If GetString(USD1099MISC.State2, count1) = "IA" Then{n}{t}{t}{t}If GetBool(USD1099MISC.Spouse, count1) = True Then{n}{t}{t}{t}{t}Total1 = Total1 + GetCurrency(USD1099MISC.StateWH2, count1){n}{t}{t}{t}ElseIf GetBool(USD1099MISC.Joint, count1) = True Then{n}{t}{t}{t}{t}Total1 = Total1 + CDollar(GetFloat(USD1099MISC.StateWH2, count1) * 0.5){n}{t}{t}{t}Else{n}{t}{t}{t}{t}Total1 = Total1{n}{t}{t}{t}End If{n}{t}{t}Else{n}{t}{t}{t}Total1 = Total1{n}{t}{t}End If{n}{t}{t}{n}{t}{t}count1 = count1 + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = Round(Total1){n}{n}End Sub
Sub SPOIDWH_Calculation(){n}{t}Dim count1 As Integer{n}{t}Dim HowMany1099OID As Long{n}{t}Dim Total1 As Currency{n}{t}Dim OIDIndex As Long{n}{t}{n}{t}count1 = 1{n}{t}HowMany1099OID = GetAllCopies(USD1099OID){n}{t}Total1 = 0{n}{t}{n}{t}Do While count1 <= HowMany1099OID{n}{t}{t}OIDIndex = 0{n}{t}{t}Do While OIDIndex < 2{n}{t}{t}{t}If GetString(USD1099OID.St(OIDIndex), count1) = "IA" And GetBool(USD1099OID.Spouse, count1) = True Then{n}{t}{t}{t}{t}Total1 = Total1 + GetCurrency(USD1099OID.STWh(OIDIndex), count1){n}{t}{t}{t}ElseIf GetString(USD1099OID.St(OIDIndex), count1) = "IA" And GetBool(USD1099OID.Joint, count1) = True Then{n}{t}{t}{t}{t}Total1 = Total1 + CDollar(GetFloat(USD1099OID.STWh(OIDIndex), count1) * 0.5){n}{t}{t}{t}End If{n}{t}{t}{t}OIDIndex = OIDIndex + 1{n}{t}{t}Loop{n}{t}{t}count1 = count1 + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = Round(Total1){n}End Sub
Sub SPOthIncWH_Calculation(){n}{n}{t}ReturnVal = 0{n}{t}{n}End Sub
Sub SPTotIncChg_Calculation(){n}' updated for 2018{n}{n}{t}Dim Mid As Currency{n}{t}Dim MidInt As Long{n}{t}Dim TotTaxInc As Currency{n}{t}{n}{t}TotTaxInc = GetCurrency(IAF1040.BGross){n}{t}{n}{t}If TotTaxInc > 95650@ Then{n}{t}{t}Mid = TotTaxInc{n}{t}ElseIf TotTaxInc > 150@ Then{n}{t}{t}MidInt = CLng((TotTaxInc - 1@) / 50@){n}{t}{t}Mid = (CCur(MidInt) * 50@) + 25@{n}{t}Else{n}{t}{t}Mid = 0@{n}{t}End If{n}{t}{n}{t}ReturnVal = Tax(Mid){n}End Sub
Sub SPUnemWH_Calculation(){n}{t}Dim count1 As Integer{n}{t}Dim HowManyUnempl As Long{n}{t}Dim Total1 As Currency{n}{t}Dim UnIndex As Long{n}{t}{n}{t}count1 = 1{n}{t}HowManyUnempl = GetAllCopies(USWUnempl){n}{t}Total1 = 0{n}{t}{n}{t}Do While count1 <= HowManyUnempl{n}{t}{t}UnIndex = 0{n}{t}{t}Do While UnIndex < 2{n}{t}{t}{t}If GetString(USWUnempl.TPState(UnIndex), count1) = "IA" And GetBool(USWUnempl.Spouse, count1) = True Then{n}{t}{t}{t}{t}Total1 = Total1 + GetCurrency(USWUnempl.TPStWH(UnIndex), count1){n}{t}{t}{t}End If{n}{t}{t}{t}UnIndex = UnIndex + 1{n}{t}{t}Loop{n}{t}{t}count1 = count1 + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = Round(Total1){t}{n}{n}End Sub
Sub SPW2GWH_Calculation(){n}{t}Dim count1 As Integer{n}{t}Dim HowManyW2G As Long{n}{t}Dim Total1 As Currency{n}{t}{n}{t}count1 = 1{n}{t}HowManyW2G = GetAllCopies(USDW2G){n}{t}Total1 = 0{n}{t}{n}{t}Do While count1 <= HowManyW2G{n}{t}{t}If GetString(USDW2G.StateWon, count1) = "IA" And GetBool(USDW2G.Spouse, count1) = True Then{n}{t}{t}{t}Total1 = Total1 + GetCurrency(USDW2G.StateWH, count1){n}{t}{t}End If{n}{t}{t}{n}{t}{t}count1 = count1 + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = Round(Total1){n}{n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IAF1040.SSN){n}End Sub
Sub SummaryScript_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub T1099rWH_Calculation(){n}{t}ReturnVal = GetCurrency(IARequired.Tot1099rWH) - GetCurrency(IARequired.S1099RWH){n}End Sub
Sub TaxReduction_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IARequired.TentTaxRed), GetCurrency(IARequired.TentTax)){n}End Sub
Sub TEarnInc_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(USWIRATrad.EarnInc) - GetCurrency(IARequired.SEarnInc)){n}End Sub
Sub Tent179_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IARequired.TotElect179), GetCurrency(IARequired.Limit179)){n}End Sub
Sub TentTax_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAF1040.ATotIATax) - GetCurrency(IAF1040.ACredits)){n}End Sub
Sub TentTaxRed_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IARequired.TotNIPenExc) - GetCurrency(IARequired.BaseAmt)){n}End Sub
Sub Threshold179_Calculation(){n}{t}ReturnVal = 280000@{n}End Sub
Sub TIAEic_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IARequired.IAEic) - GetCurrency(IARequired.SIaEIC)){n}End Sub
Sub TIAExReimb_Calculation(){n}{t}ReturnVal = GetCurrency(IA3903.IAExReimb, FieldCopies(IA3903.Taxpayer)) + CDollar(GetFloat(IA3903.IAExReimb, FieldCopies(IA3903.Joint)) * 0.5){n}End Sub
Sub TIAW2WH_Calculation(){n}{t}ReturnVal = GetCurrency(IARequired.TotIAW2WH) - GetCurrency(IARequired.SIAW2WH){n}End Sub
Sub TIRA_Calculation(){n}{t}ReturnVal = GetCurrency(IARequired.TotIRA) - GetCurrency(IARequired.SIRA){n}End Sub
Sub TLimLoss_Calculation(){n}{t}If GetCurrency(USWDRec.CapGain) < 0 Then{n}{t}{t}If GetCurrency(USWDRec.TCapGain) < 0 And GetCurrency(USWDRec.SCapGain) < 0 And IAFS() = 3 Then{n}{t}{t}{t}If GetCurrency(USWDRec.SCapGain) < -1500@ Then{n}{t}{t}{t}{t}ReturnVal = MaxValue(GetCurrency(USWDRec.TCapGain), -1500@){n}{t}{t}{t}Else{n}{t}{t}{t}{t}ReturnVal = GetCurrency(USWDRec.LimLoss) - GetCurrency(USWDRec.SCapGain){n}{t}{t}{t}End If{n}{t}{t}ElseIf GetCurrency(USWDRec.TCapGain) < 0 Then{n}{t}{t}{t}ReturnVal = GetCurrency(USWDRec.LimLoss){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TMove_Calculation(){n}{t}Dim FedMove As Currency{n}{t}Dim StateMove As Currency{n}{t}{n}{t}FedMove = GetCurrency(USWRec.TMove){n}{t}StateMove = Round(GetCurrency(IA3903.MovExpDdn, FieldCopies(IA3903.Taxpayer)) + CDollar(GetFloat(IA3903.MovExpDdn, FieldCopies(IA3903.Joint)) * 0.5)){n}{n}{t}ReturnVal = FedMove + StateMove{n}End Sub
Sub Tot1042S_Calculation(){n}{t}Dim count1 As Integer{n}{t}Dim HowMany1042S As Long{n}{t}Dim Total1 As Currency{n}{t}Dim F1042SIndex As Long{n}{t}{n}{t}count1 = 1{n}{t}HowMany1042S = GetAllCopies(USD1042S){n}{t}Total1 = 0{n}{t}{n}{t}Do While count1 <= HowMany1042S{n}{t}{t}F1042SIndex = 0{n}{t}{t}Do While F1042SIndex < 4{n}{t}{t}{t}If GetString(USD1042S.St(F1042SIndex), count1) = "IA" Then{n}{t}{t}{t}{t}Total1 = Total1 + GetCurrency(USD1042S.StWh(F1042SIndex), count1){n}{t}{t}{t}End If{n}{t}{t}{t}F1042SIndex = F1042SIndex + 1{n}{t}{t}Loop{n}{t}{t}count1 = count1 + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = Round(Total1){n}End Sub
Sub Tot1099rWH_Calculation(){n}{t}Dim count1 As Integer{n}{t}Dim HowMany1099R As Long{n}{t}Dim Total1 As Currency{n}{t}{n}{t}count1 = 1{n}{t}HowMany1099R = GetAllCopies(USD1099R){n}{t}Total1 = 0{n}{t}{n}{t}Do While count1 <= HowMany1099R{n}{t}{t}If GetString(USD1099R.St1, count1) = "IA" Then{n}{t}{t}{t}Total1 = Total1 + GetCurrency(USD1099R.StWh1, count1){n}{t}{t}End If{n}{t}{t}{n}{t}{t}If GetString(USD1099R.St2, count1) = "IA" Then{n}{t}{t}{t}Total1 = Total1 + GetCurrency(USD1099R.STWh2, count1){n}{t}{t}End If{n}{t}{t}{n}{t}{t}count1 = count1 + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = Round(Total1){n}{n}End Sub
Sub Tot8824_Calculation(){n}{t}ReturnVal = GetCurrency(IA8824.IANonConformAdj){n}End Sub
Sub TotApplied_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.AApply99) + GetCurrency(IAF1040.BApply99){n}End Sub
Sub TotCapGainWH_Calculation(){n}{t}Dim count1 As Integer{n}{t}Dim HowManyCapGain As Long{n}{t}Dim Total1 As Currency{n}{t}Dim CGIndex As Long{n}{t}{n}{t}count1 = 1{n}{t}HowManyCapGain = GetAllCopies(USDCapGain){n}{t}Total1 = 0{n}{t}{n}{t}Do While count1 <= HowManyCapGain{n}{t}{t}CGIndex = 0{n}{t}{t}Do While CGIndex < 2{n}{t}{t}{t}If GetString(USDCapGain.St2(CGIndex), count1) = "IA" Then{n}{t}{t}{t}{t}Total1 = Total1 + GetCurrency(USDCapGain.STWh2(CGIndex), count1){n}{t}{t}{t}End If{n}{t}{t}{t}CGIndex = CGIndex + 1{n}{t}{t}Loop{n}{t}{t}count1 = count1 + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = Round(Total1){n}End Sub
Sub TotCo179_Calculation(){n}{t}ReturnVal = 0{n}End Sub
Sub TotCost179_Calculation(){n}'per 2016 Section 179 Expensing FAQs under section III for pass through entities #4 example shows that the cost of section 179 property passed through for federal should not pass through to the partner for purposes of the Iowa section 179 phase-out limits, remove + GetCurrency(USDPartK1.Sec179) + GetCurrency(USDSCorpK1.Sec179) from reproduced fed calc below.{n}{t}ReturnVal = GetCurrency(USWDepr.Sec179Basis) + GetCurrency(USWDepr.List179basis) + GetCurrency(USF4562.Sec179Basis2106, 1){n}End Sub
Sub TotCYIAEst_Calculation(){n}{t}Dim TP As Currency{n}{t}Dim SP As Currency{n}{t}{t}{t}{t}{n}{t}If GetDate(IAStateEst.TPStQ4Date) < MakeDate(1, 1, YearNumber + 1) Then{n}{t}{t}TP = GetCurrency(IAStateEst.TPStApply) + GetCurrency(IAStateEst.TPStQ1) + GetCurrency(IAStateEst.TPStQ2) + GetCurrency(IAStateEst.TPStQ3) + GetCurrency(IAStateEst.TPStQ4){n}{t}Else{n}{t}{t}TP = GetCurrency(IAStateEst.TPStApply) + GetCurrency(IAStateEst.TPStQ1) + GetCurrency(IAStateEst.TPStQ2) + GetCurrency(IAStateEst.TPStQ3){n}{t}End If{n}{t}{n}{t}If GetDate(IAStateEst.SPStQ4Date) < MakeDate(1, 1, YearNumber + 1) Then{n}{t}{t}SP = GetCurrency(IAStateEst.SPStApply) + GetCurrency(IAStateEst.SPStQ1) + GetCurrency(IAStateEst.SPStQ2) + GetCurrency(IAStateEst.SPStQ3) + GetCurrency(IAStateEst.SPStQ4){n}{t}Else{n}{t}{t}SP = GetCurrency(IAStateEst.SPStApply) + GetCurrency(IAStateEst.SPStQ1) + GetCurrency(IAStateEst.SPStQ2) + GetCurrency(IAStateEst.SPStQ3){n}{t}End If{n}{t}{n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = TP + SP{n}{t}Else{n}{t}{t}ReturnVal = TP{n}{t}End If{n}End Sub
Sub TotCyLocEst_Calculation(){n}{t}Dim Local1 As Currency{n}{t}Dim Local2 As Currency{n}{t}Dim Local3 As Currency{n}{t}{n}{t}If GetString(USWEstPay.LocName1) = "OTHER" Then{n}{t}{t}Local1 = GetCurrency(USWLocalEst.CYLocal, 1){n}{t}Else{n}{t}{t}Local1 = 0{n}{t}End If{n}{t}{n}{t}If GetString(USWEstPay.LocName2) = "OTHER" Then{n}{t}{t}Local2 = GetCurrency(USWLocalEst.CYLocal, 2){n}{t}Else{n}{t}{t}Local2 = 0{n}{t}End If{n}{t}{n}{t}If GetString(USWEstPay.LocName3) = "OTHER" Then{n}{t}{t}Local3 = GetCurrency(USWLocalEst.CYLocal, 3){n}{t}Else{n}{t}{t}Local3 = 0{n}{t}End If{n}{t}{n}{t}ReturnVal = Local1 + Local2 + Local3{n}End Sub
Sub TotDiv_Calculation(){n}{t}ReturnVal = GetCurrency(IASchB.TotalTaxDiv){n}End Sub
Sub TotDivWH_Calculation(){n}{t}Dim count1 As Integer{n}{t}Dim HowMany1099Div As Long{n}{t}Dim Total1 As Currency{n}{t}Dim DivIndex As Long{n}{t}{n}{t}count1 = 1{n}{t}HowMany1099Div = GetAllCopies(USD1099DIV){n}{t}Total1 = 0{n}{t}{n}{t}Do While count1 <= HowMany1099Div{n}{t}{t}DivIndex = 0{n}{t}{t}Do While DivIndex < 2{n}{t}{t}{t}If GetString(USD1099DIV.St(DivIndex), count1) = "IA" Then{n}{t}{t}{t}{t}Total1 = Total1 + GetCurrency(USD1099DIV.STWh(DivIndex), count1){n}{t}{t}{t}End If{n}{t}{t}{t}DivIndex = DivIndex + 1{n}{t}{t}Loop{n}{t}{t}count1 = count1 + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = Round(Total1){n}End Sub
Sub TotEICEarnInc_Calculation(){n}{t}If GetBool(IAF1040.MFS) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.MFSEI) + GetCurrency(IAF1040.AWages) + GetCurrency(IAF1040.ABusInc) + GetCurrency(IAF1040.AFarm){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BWages) + GetCurrency(IAF1040.BBusInc) + GetCurrency(IAF1040.BFarm) + GetCurrency(IAF1040.AWages) + GetCurrency(IAF1040.ABusInc) + GetCurrency(IAF1040.AFarm){n}{t}End If{n}End Sub
Sub TotElect179_Calculation(){n}{t}ReturnVal = GetCurrency(USWDepr.IACYSec179Rep) + GetCurrency(USF4562.StateTotCySec1792106, 1) + GetCurrency(USWSummary179.StateK1){n}End Sub
Sub TotIAExReimb_Calculation(){n}{t}ReturnVal = GetCurrency(IA3903.IAExReimb){n}End Sub
Sub TotIAW2WH_Calculation(){n}{t}Dim count1 As Integer{n}{t}Dim HowManyW2 As Long{n}{t}Dim Total1 As Currency{n}{t}Dim W2Index As Long{n}{t}{n}{t}count1 = 1{n}{t}HowManyW2 = GetAllCopies(USDW2){n}{t}Total1 = 0{n}{t}{n}{t}Do While count1 <= HowManyW2{n}{t}{t}W2Index = 0{n}{t}{t}Do While W2Index < 8{n}{t}{t}{t}If GetString(USDW2.St(W2Index), count1) = "IA" Then{n}{t}{t}{t}{t}Total1 = Total1 + GetCurrency(USDW2.STWh(W2Index), count1){n}{t}{t}{t}End If{n}{t}{t}{t}W2Index = W2Index + 1{n}{t}{t}Loop{n}{t}{t}count1 = count1 + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = Round(Total1){n}{t}{n}End Sub
Sub TotIncAmt_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.AGross) + GetCurrency(IAF1040.BGross){n}End Sub
Sub TotIncChg_Calculation(){n}{t}ReturnVal = GetCurrency(IARequired.TPTotIncChg) + GetCurrency(IARequired.SPTotIncChg){n}End Sub
Sub TotIncCk_Calculation(){n}{t}If GetCurrency(IARequired.TotIncChg) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TotInt_Calculation(){n}{t}ReturnVal = GetCurrency(IASchB.TotalTaxInt){n}End Sub
Sub TotIntWH_Calculation(){n}{t}Dim count1 As Integer{n}{t}Dim HowMany1099Int As Long{n}{t}Dim Total1 As Currency{n}{t}Dim IntIndex As Long{n}{t}{n}{t}count1 = 1{n}{t}HowMany1099Int = GetAllCopies(USD1099INT){n}{t}Total1 = 0{n}{t}{n}{t}Do While count1 <= HowMany1099Int{n}{t}{t}IntIndex = 0{n}{t}{t}Do While IntIndex < 2{n}{t}{t}{t}If GetString(USD1099INT.St(IntIndex), count1) = "IA" Then{n}{t}{t}{t}{t}Total1 = Total1 + GetCurrency(USD1099INT.STWh(IntIndex), count1){n}{t}{t}{t}End If{n}{t}{t}{t}IntIndex = IntIndex + 1{n}{t}{t}Loop{n}{t}{t}count1 = count1 + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = Round(Total1){n}End Sub
Sub TotIRA_Calculation(){n}{t}ReturnVal = GetCurrency(USWRec.TotIRAAdj){n}End Sub
Sub TotKWH_Calculation(){n}{t}Dim count1 As Integer{n}{t}Dim HowMany1099K As Long{n}{t}Dim Total1 As Currency{n}{t}Dim KIndex As Long{n}{t}{n}{t}count1 = 1{n}{t}HowMany1099K = GetAllCopies(USD1099K){n}{t}Total1 = 0{n}{t}{n}{t}Do While count1 <= HowMany1099K{n}{t}{t}KIndex = 0{n}{t}{t}Do While KIndex < 2{n}{t}{t}{t}If GetString(USD1099K.State(KIndex), count1) = "IA" Then{n}{t}{t}{t}{t}Total1 = Total1 + GetCurrency(USD1099K.StateInc(KIndex), count1){n}{t}{t}{t}End If{n}{t}{t}{t}KIndex = KIndex + 1{n}{t}{t}Loop{n}{t}{t}count1 = count1 + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = Round(Total1){n}End Sub
Sub TotMiscWH_Calculation(){n}{t}Dim count1 As Integer{n}{t}Dim HowMany1099MISC As Long{n}{t}Dim Total1 As Currency{n}{t}{n}{t}count1 = 1{n}{t}HowMany1099MISC = GetAllCopies(USD1099MISC){n}{t}Total1 = 0{n}{t}{n}{t}Do While count1 <= HowMany1099MISC{n}{t}{t}If GetString(USD1099MISC.State, count1) = "IA" Then{n}{t}{t}{t}Total1 = Total1 + GetCurrency(USD1099MISC.StateWH, count1){n}{t}{t}End If{n}{t}{t}{n}{t}{t}If GetString(USD1099MISC.State2, count1) = "IA" Then{n}{t}{t}{t}Total1 = Total1 + GetCurrency(USD1099MISC.StateWH2, count1){n}{t}{t}End If{n}{t}{t}{n}{t}{t}count1 = count1 + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = Round(Total1)   {n}{n}End Sub
Sub TotMove_Calculation(){n}{t}ReturnVal = GetCurrency(USWRec.TotMove) + GetCurrency(IA3903.MovExpDdn){n}End Sub
Sub TotNI_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.ANet) + GetCurrency(IAF1040.BNet){n}End Sub
Sub TotNIPenExc_Calculation(){n}{t}ReturnVal = GetCurrency(IAWkAltTax.Ln26){n}End Sub
Sub TotOIDWH_Calculation(){n}{t}Dim count1 As Integer{n}{t}Dim HowMany1099OID As Long{n}{t}Dim Total1 As Currency{n}{t}Dim OIDIndex As Long{n}{t}{n}{t}count1 = 1{n}{t}HowMany1099OID = GetAllCopies(USD1099OID){n}{t}Total1 = 0{n}{t}{n}{t}Do While count1 <= HowMany1099OID{n}{t}{t}OIDIndex = 0{n}{t}{t}Do While OIDIndex < 2{n}{t}{t}{t}If GetString(USD1099OID.St(OIDIndex), count1) = "IA" Then{n}{t}{t}{t}{t}Total1 = Total1 + GetCurrency(USD1099OID.STWh(OIDIndex), count1){n}{t}{t}{t}End If{n}{t}{t}{t}OIDIndex = OIDIndex + 1{n}{t}{t}Loop{n}{t}{t}count1 = count1 + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = Round(Total1){n}{n}End Sub
Sub TotOthIncWH_Calculation(){n}{t}{n}{t}ReturnVal = 0{n}{n}End Sub
Sub TotSPDiv_Calculation(){n}{t}Dim count As Integer{n}{t}Dim SchBTotal As Currency{n}{n}{t}count = 0{n}{t}SchBTotal = 0{n}{n}{t}Do While count < 7{n}{t}{t}If GetBool(IASchB.DSp1(count)) = True Then{n}{t}{t}{t}SchBTotal = SchBTotal + GetCurrency(IASchB.TaxDiv(count)){n}{t}{t}Else{n}{t}{t}{t}SchBTotal = SchBTotal{n}{t}{t}End If{n}{t}{t}count = count + 1{n}{t}Loop{n}{n}{t}Dim count1 As Integer{n}{t}Dim HowManyWBPDiv As Long{n}{t}Dim WSTotal As Currency{n}{t}Dim DivIndex As Long{n}{t}{n}{t}count1 = 1{n}{t}HowManyWBPDiv = GetAllCopies(IAWBPDiv){n}{t}WSTotal = 0{n}{t}{n}{t}Do While count1 <= HowManyWBPDiv{n}{t}{t}DivIndex = 0{n}{t}{t}Do While DivIndex < 22{n}{t}{t}{t}If GetBool(IAWBPDiv.DSp1(DivIndex), count1) = True Then{n}{t}{t}{t}{t}WSTotal = WSTotal + GetCurrency(IAWBPDiv.TaxDiv(DivIndex), count1){n}{t}{t}{t}End If{n}{t}{t}{t}DivIndex = DivIndex + 1{n}{t}{t}Loop{n}{t}{t}count1 = count1 + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = SchBTotal + WSTotal + GetCurrency(IARequired.JointSPDiv){n}End Sub
Sub TotSPInt_Calculation(){n}{t}Dim count As Integer{n}{t}Dim SchBTotal As Currency{n}{n}{t}count = 0{n}{t}SchBTotal = 0{n}{n}{t}Do While count < 7{n}{t}{t}If GetBool(IASchB.ISp1(count)) = True Then{n}{t}{t}{t}SchBTotal = SchBTotal + GetCurrency(IASchB.TaxInt(count)){n}{t}{t}Else{n}{t}{t}{t}SchBTotal = SchBTotal{n}{t}{t}End If{n}{t}{t}count = count + 1{n}{t}Loop{n}{n}{t}Dim count1 As Integer{n}{t}Dim HowManyWBPInt As Long{n}{t}Dim WSTotal As Currency{n}{t}Dim IntIndex As Long{n}{t}{n}{t}count1 = 1{n}{t}HowManyWBPInt = GetAllCopies(IAWBPInt){n}{t}WSTotal = 0{n}{t}{n}{t}Do While count1 <= HowManyWBPInt{n}{t}{t}IntIndex = 0{n}{t}{t}Do While IntIndex < 22{n}{t}{t}{t}If GetBool(IAWBPInt.ISp1(IntIndex), count1) = True Then{n}{t}{t}{t}{t}WSTotal = WSTotal + GetCurrency(IAWBPInt.TaxInt(IntIndex), count1){n}{t}{t}{t}End If{n}{t}{t}{t}IntIndex = IntIndex + 1{n}{t}{t}Loop{n}{t}{t}count1 = count1 + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = SchBTotal + WSTotal + GetCurrency(IARequired.JointSPInt){n}End Sub
Sub TotTPDiv_Calculation(){n}{t}ReturnVal = GetCurrency(IARequired.TotDiv) - GetCurrency(IARequired.TotSPDiv){n}End Sub
Sub TotTPInt_Calculation(){n}{t}ReturnVal = GetCurrency(IARequired.TotInt) - GetCurrency(IARequired.TotSPInt){n}End Sub
Sub TotUnemWH_Calculation(){n}{t}Dim count1 As Integer{n}{t}Dim HowManyUnempl As Long{n}{t}Dim Total1 As Currency{n}{t}Dim UnIndex As Long{n}{t}{n}{t}count1 = 1{n}{t}HowManyUnempl = GetAllCopies(USWUnempl){n}{t}Total1 = 0{n}{t}{n}{t}Do While count1 <= HowManyUnempl{n}{t}{t}UnIndex = 0{n}{t}{t}Do While UnIndex < 2{n}{t}{t}{t}If GetString(USWUnempl.TPState(UnIndex), count1) = "IA" Then{n}{t}{t}{t}{t}Total1 = Total1 + GetCurrency(USWUnempl.TPStWH(UnIndex), count1){n}{t}{t}{t}End If{n}{t}{t}{t}UnIndex = UnIndex + 1{n}{t}{t}Loop{n}{t}{t}count1 = count1 + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = Round(Total1){t}{n}{n}End Sub
Sub TotW2GWH_Calculation(){n}{t}Dim count1 As Integer{n}{t}Dim HowManyW2G As Long{n}{t}Dim Total1 As Currency{n}{t}{n}{t}count1 = 1{n}{t}HowManyW2G = GetAllCopies(USDW2G){n}{t}Total1 = 0{n}{t}{n}{t}Do While count1 <= HowManyW2G{n}{t}{t}If GetString(USDW2G.StateWon, count1) = "IA" Then{n}{t}{t}{t}Total1 = Total1 + GetCurrency(USDW2G.StateWH, count1){n}{t}{t}End If{n}{t}{t}{n}{t}{t}count1 = count1 + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = Round(Total1){n}{n}End Sub
Sub TP8824_Calculation(){n}{t}ReturnVal = GetCurrency(IA8824.IANonConformAdj, FieldCopies(IA8824.Taxpayer)) + CDollar(GetFloat(IA8824.IANonConformAdj, FieldCopies(IA8824.Joint)) * 0.5){n}End Sub
Sub TPCapGainWH_Calculation(){n}{t}ReturnVal = GetCurrency(IARequired.TotCapGainWH) - GetCurrency(IARequired.SPCapGainWH){n}End Sub
Sub TPComb_Calculation(){n}{t}ReturnVal = GetString(IAF1040.LastName) & ", " & GetString(IAF1040.FirstName){n}End Sub
Sub TPCombName_Calculation(){n}{t}ReturnVal = GetString(IAF1040.FirstName) & " " & GetString(IAF1040.LastName){n}End Sub
Sub TPDivWH_Calculation(){n}{t}ReturnVal = GetCurrency(IARequired.TotDivWH) - GetCurrency(IARequired.SPDivWH){n}End Sub
Sub TPIntWH_Calculation(){n}{t}ReturnVal = GetCurrency(IARequired.TotIntWH) - GetCurrency(IARequired.SPIntWH){n}End Sub
Sub TPKWH_Calculation(){n}{t}ReturnVal = GetCurrency(USZIA1040.TotKWH) - GetCurrency(USZIA1040.SPKWH){n}End Sub
Sub TPMiscWH_Calculation(){n}{t}ReturnVal = GetCurrency(IARequired.TotMiscWH) - GetCurrency(IARequired.SPMiscWH){n}End Sub
Sub TPOIDWH_Calculation(){n}{t}ReturnVal = GetCurrency(IARequired.TotOIDWH) - GetCurrency(IARequired.SPOIDWH){n}End Sub
Sub TpOthIncWH_Calculation(){n}{t}ReturnVal = GetCurrency(IARequired.TotOthIncWH) - GetCurrency(IARequired.SPOthIncWH){n}End Sub
Sub TPTotIncChg_Calculation(){n}' updated for 2018{n}{n}{t}Dim Mid As Currency{n}{t}Dim MidInt As Long{n}{t}Dim TotTaxInc As Currency{n}{t}{n}{t}TotTaxInc = GetCurrency(IAF1040.AGross){n}{t}{n}{t}If TotTaxInc > 95650@ Then{n}{t}{t}Mid = TotTaxInc{n}{t}ElseIf TotTaxInc > 150@ Then{n}{t}{t}MidInt = CLng((TotTaxInc - 1@) / 50@){n}{t}{t}Mid = (CCur(MidInt) * 50@) + 25@{n}{t}Else{n}{t}{t}Mid = 0@{n}{t}End If{n}{t}{n}{t}ReturnVal = Tax(Mid){n}End Sub
Sub TPUnemWH_Calculation(){n}{t}ReturnVal = GetCurrency(IARequired.TotUnemWH) - GetCurrency(IARequired.SPUnemWH){n}End Sub
Sub TPW2GWH_Calculation(){n}{t}ReturnVal = GetCurrency(IARequired.TotW2GWH) - GetCurrency(IARequired.SPW2GWH){n}End SubSub Description_Calculation(){n}{t}Dim Total As Currency{n}{t}{n}{t}Total = GetCurrency(IASETax.TPTotal) + GetCurrency(IASETax.SPTotal){n}{t}{n}{t}ReturnVal = CStr(Total){n}End Sub
Sub Exist_Calculation(){n}{t}ReturnVal = 1{n}End Sub
Sub MobDisQual_Calculation(){n}{t}If GetCurrency(IASETax.TPTotal) + GetCurrency(IASETax.SPTotal) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Names_Calculation(){n}{t}ReturnVal = GetString(IARequired.CombNames){n}End Sub
Sub SPHH_Calculation(){n}{t}If GetBool(USSchH.Taxpayer) = True Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(USWResidency.F1040NR) = True Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(USSchH.Spouse) = True Then{n}{t}{t}ReturnVal = GetCurrency(USW1040Supp.HTax){n}{t}Else{n}{t}{t}ReturnVal = CDollar(GetFloat(USW1040Supp.HTax) * 0.5){n}{t}End If{n}End Sub
Sub SPName_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.SPCommon){n}End Sub
Sub SPRetTax_Calculation(){n}{t}ReturnVal = GetCurrency(USF5329Spouse.TotAddTax){n}End Sub
Sub SPSE_Calculation(){n}{t}If GetBool(USSchSESpouse.ShortSE) = True Then{n}{t}{t}ReturnVal = GetCurrency(USSchSESpouse.ASETax){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USSchSESpouse.BSETax){n}{t}End If{n}End Sub
Sub SPTipTax_Calculation(){n}{t}ReturnVal = GetCurrency(USF4137Spouse.AddLnTen) + GetCurrency(USF8919Spouse.TotTax){n}End Sub
Sub SPTotal_Calculation(){n}{t}ReturnVal = GetCurrency(IASETax.SPRepayPTC) + GetCurrency(IASETax.SPSE) + GetCurrency(IASETax.SPTipTax) + GetCurrency(IASETax.SPRetTax) + GetCurrency(IASETax.SPHH) + GetCurrency(IASETax.SPHomeBuyRepay) + GetCurrency(IASETax.SpHlthCarePen) + GetCurrency(IASETax.SPTotAddMedTax) + GetCurrency(IASETax.SPOthTax){n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IAF1040.SSN){n}End Sub
Sub TPHH_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = True Then{n}{t}{t}ReturnVal = GetCurrency(USF1040NR.SchHTax){n}{t}ElseIf GetBool(USSchH.Spouse) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(USW1040Supp.HTax) - GetCurrency(IASETax.SPHH)){n}{t}End If{n}End Sub
Sub TPHlthCarePen_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(USF1040.HlthCarePen) - GetCurrency(IASETax.SpHlthCarePen)){n}{t}End If{n}End Sub
Sub TPHomeBuyRepay_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = True Then{n}{t}{t}ReturnVal = GetCurrency(USF1040NR.HomeBuyRepay){n}{t}Else{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(USF1040.HomeBuyRepay) - GetCurrency(IASETax.SPHomeBuyRepay)){n}{t}End If{n}End Sub
Sub TPName_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.TPCommon){n}End Sub
Sub TPOthTax_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(USWOthTax.TotOthTax) - GetCurrency(IASETax.SPOthTax)){n}End Sub
Sub TPRepayPTC_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(USF8962.PTCRepay) - GetCurrency(IASETax.SPRepayPTC)){n}End Sub
Sub TPRetTax_Calculation(){n}{t}ReturnVal = GetCurrency(USF5329.TotAddTax){n}End Sub
Sub TPSE_Calculation(){n}{t}If GetBool(USSchSE.ShortSE) = True Then{n}{t}{t}ReturnVal = GetCurrency(USSchSE.ASETax){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USSchSE.BSETax){n}{t}End If{n}End Sub
Sub TPTipTax_Calculation(){n}{t}ReturnVal = GetCurrency(USF4137.AddLnTen) + GetCurrency(USF8919.TotTax){n}End Sub
Sub TPTotAddMedTax_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(USF8959.TotAddMedTax) - GetCurrency(IASETax.SPTotAddMedTax)){n}End Sub
Sub TPTotal_Calculation(){n}{t}ReturnVal = GetCurrency(IASETax.TPRepayPTC) + GetCurrency(IASETax.TPSE) + GetCurrency(IASETax.TPTipTax) + GetCurrency(IASETax.TPRetTax) + GetCurrency(IASETax.TPHH) + GetCurrency(IASETax.TPHomeBuyRepay) + GetCurrency(IASETax.TPHlthCarePen) + GetCurrency(IASETax.TPTotAddMedTax) + GetCurrency(IASETax.TPOthTax){n}End SubSub AddMilesDed_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IASchA.TotMilesDed) - GetCurrency(IASchA.SchAMilesDed)){n}End Sub
Sub AdoptSub_Calculation(){n}{t}ReturnVal = MaxValue(0, CDollar(GetFloat(IAChildCredit.TotNI) * 0.03)){n}End Sub
Sub AGI_Calculation(){n}{t}If GetCurrency(IASchA.MedExp) = 0 Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = MaxValue(0, CDollar(GetFloat(IASchA.IAAGI) * 0.1)){n}{t}End If{n}End Sub
Sub Alert10_Calculation(){n}{t}Dim FedMedical As Currency{n}{t}{n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}FedMedical = GetCurrency(USSchA.MedExp){n}{t}Else{n}{t}{t}FedMedical = 0{n}{t}End If{n}{n}{t}If GetCurrency(IASchA.MedExp) >= FedMedical And GetCurrency(IASchA.MedExp) > 0 Then{n}{t}{t}If GetCurrency(IAF1040.BHealth) > 0 Or GetCurrency(IAF1040.AHealth) > 0 Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert15_Calculation(){n}{t}If GetBool(IAF1040.ItemCheck) = True And GetCurrency(IASchA.Mort) > 0 Then{n}{t}{t}If GetCurrency(USD1098.MortPrem) > 1000000@ Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert20_Calculation(){n}'add net nonconformity items? Next year could them factor in. If user imports we should import correct Iowa amounts, if we continue to also pull the federal carryover amounts should still bring up this alert{n}'alert is saying to adjust carryover if had any nonconforming items last year, leave as only depr since othinc ws is only current year items, possibly factor in next year (either imported NC items/bonus and/or current year NC items){n}{t}If GetCurrency(IASchA.Over) <> 0 And GetCurrency(IAWOthInc.TotBonus) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert22_Calculation(){n}{t}Dim TotCont As Currency{n}{t}{n}{t}TotCont = GetCurrency(IAWContLimit.CY50Lim) + GetCurrency(IAWContLimit.CY30Lim) + GetCurrency(IAWContLimit.CY30LimCG) + GetCurrency(IAWContLimit.CY20Lim) + GetCurrency(IAWContLimit.CYNoLim){n}{t}   {n}{t}If TotCont > GetCurrency(IAWContLimit.CYTot) Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert24_Calculation(){n}{t}If GetCurrency(IAWContLimit.PY50Lim) < 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IAWContLimit.PY30Lim) < 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IAWContLimit.PY30LimCG) < 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IAWContLimit.PY20Lim) < 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IAWContLimit.PYNoLim) < 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert26_Calculation(){n}{t}If GetCurrency(IAWContLimit.NYTot) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert27_Calculation(){n}{t}If GetCurrency(IAWContLimit.CYQualLim) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert28_Calculation(){n}{t}If GetCurrency(IAWContLimit.CYQualLim) > GetCurrency(IASchA.Contrib) Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert30_Calculation(){n}{t}ReturnVal = 0{n}End Sub
Sub Alert40_Calculation(){n}{t}If GetBool(IAF1040.ItemCheck) = True And GetCurrency(IASchA.OthMisc) > 0 Then{n}{t}{t}If GetCurrency(IASchA.IAAdjOthMisc) <> 0 And Trim(GetString(IASchA.IAAdjOthMiscDesc)) = "" Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert50_Calculation(){n}{t}Dim count, Iter As Integer{n}{t}{n}{t}count = 0{n}{t}Iter = 0{n}{t}Do While Iter < 5{n}{t}{t}If GetCurrency(IASchA.DisableAmt(Iter)) > 0 And Trim(GetString(IASchA.DisableExp(Iter))) = "" Then{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}{t}Iter = Iter + 1{n}{t}Loop{n}{n}{t}If GetBool(IAF1040.ItemCheck) = True And count > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert60_Calculation(){n}{t}Dim count As Integer{n}{t}Dim Lim As Integer{n}{t}Dim Total As Integer{n}{t}{n}{t}Lim = GetAllCopies(IA177){n}{t}count = 1{n}{t}Total = 0{n}{t}{n}{t}Do While count <= Lim{n}{t}{t}If GetCurrency(IA177.CYAdoptionTaxCr, count) > 0 And GetBool(IA177.Taxpayer, count) = True Then{n}{t}{t}{t}Total = Total + 1{n}{t}{t}Else{n}{t}{t}{t}Total = Total{n}{t}{t}End If{n}{t}{t}{n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}Dim count2 As Integer{n}{t}Dim Lim2 As Integer{n}{t}Dim Total2 As Integer{n}{t}{n}{t}Lim2 = GetAllCopies(IA177){n}{t}count2 = 1{n}{t}Total2 = 0{n}{t}{n}{t}Do While count2 <= Lim2{n}{t}{t}If GetCurrency(IA177.CYAdoptionTaxCr, count) > 0 And GetBool(IA177.Spouse, count2) = True Then{n}{t}{t}{t}Total2 = Total2 + 1{n}{t}{t}Else{n}{t}{t}{t}Total2 = Total2{n}{t}{t}End If{n}{t}{t}{n}{t}{t}count2 = count2 + 1{n}{t}Loop{n}{n}{t}If GetCurrency(IASchA.TotAdoptAmt) > 0 Then{n}{t}{t}If Total > 0 Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}ElseIf Total2 > 0 And GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert70_Calculation(){n}{t}Dim count, Iter As Integer{n}{t}{n}{t}count = 0{n}{t}Iter = 0{n}{t}Do While Iter < 5{n}{t}{t}If GetCurrency(IASchA.AdoptAmt(Iter)) > 0 And Trim(GetString(IASchA.AdoptExp(Iter))) = "" Then{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}{t}Iter = Iter + 1{n}{t}Loop{n}{n}{t}If GetBool(IAF1040.ItemCheck) = True And GetCurrency(IASchA.AllowAdopt) > 0 And count > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert80_Calculation(){n}{t}If GetCurrency(IAWSchAPrint.GamblingLoss) > (GetCurrency(IAF1040.BGamble) + GetCurrency(IAF1040.AGamble)) Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert85_Calculation(){n}{t}If GetBool(IAF1040.ItemCheck) = True Then{n}{t}{t}If GetCurrency(IASchA.OthTax) <> 0 And Trim(GetString(IASchA.OthList)) = "" Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub AllowAdopt_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IASchA.TotAdoptAmt) - GetCurrency(IASchA.AdoptSub)){n}End Sub
Sub AllowExp_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IASchA.Expense) - GetCurrency(IASchA.Mult)){n}End Sub
Sub CombOthExpDesc_Calculation(){n}{t}ReturnVal = GetString(IASchA.OthExpDesc(0)) + " " + GetString(IASchA.OthExpDesc(1)) + " " + GetString(IASchA.OthExpDesc(2)) + " " + GetString(IASchA.OthExpDesc(3)) + " " + GetString(IASchA.OthExpDesc(4)) + " " + GetString(IASchA.OthExpDesc(5)) + " " + GetString(IASchA.OthExpDesc(6)) + " " + GetString(IASchA.OthExpDesc(7)) + " " + GetString(IASchA.OthExpDesc(8)) + " " + GetString(IASchA.OthExpDesc(9)) + " " + GetString(IASchA.OthExpDesc(10)) + " " + GetString(IASchA.OthExpDesc(11)) + " " + GetString(IASchA.OthExpDesc(12)) + " " + GetString(IASchA.OthExpDesc(13)) + " " + GetString(IASchA.OthExpDesc(14)) + " " + GetString(IASchA.OthExpDesc(15)) + " " + GetString(IASchA.OthExpDesc(16)) + " " + GetString(IASchA.OthExpDesc(17)) + " " + GetString(IASchA.OthExpDesc(18)) + " " + GetString(IASchA.OthExpDesc(19)) + " " + GetString(IASchA.OthExpDesc(20)) + " " + GetString(IASchA.OthExpDesc(21)) + " " + GetString(IASchA.OthExpDesc(22)) + " " + GetString(IASchA.OthExpDesc(23)) + " " + GetString(IASchA.OthExpDesc(24)){n}End Sub
Sub CombOthMiscDesc_Calculation(){n}{t}ReturnVal = GetString(IASchA.OthMiscDesc(0)) + " " + GetString(IASchA.OthMiscDesc(1)) + " " + GetString(IASchA.OthMiscDesc(2)) + " " + GetString(IASchA.OthMiscDesc(3)) + " " + GetString(IASchA.OthMiscDesc(4)) + " " + GetString(IASchA.OthMiscDesc(5)) + " " + GetString(IASchA.OthMiscDesc(6)) + " " + GetString(IASchA.OthMiscDesc(7)) + " " + GetString(IASchA.OthMiscDesc(8)) + " " + GetString(IASchA.OthMiscDesc(9)){n}End Sub
Sub Contrib_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IASchA.TotContrib) - GetCurrency(IASchA.IAAdjContrib)){n}End Sub
Sub Description_Calculation(){n}{t}ReturnVal = CStr(GetCurrency(IASchA.Item)) & " Itemized Deductions"{n}End Sub
Sub Exist_Calculation(){n}{t}ReturnVal = 1{n}End Sub
Sub Expense_Calculation(){n}{t}ReturnVal = GetCurrency(IASchA.Unreimb) + GetCurrency(IASchA.TaxFee) + GetCurrency(IASchA.OthExp){n}End Sub
Sub GenSales_Calculation(){n}'Iowa expanded instructions can only claim gen sales tax if itemize federally and elect to claim gen sales on fed. Leave calced.{n}{t}If GetBool(USWRec.ItmDdn) = True And GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetBool(USSchA.GenSales){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Gifts_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IASchA.TotNonCash) - GetCurrency(IASchA.IAAdjNonCash)){n}End Sub
Sub Header1_Calculation(){n}{t}ReturnVal = "IA 1040 Schedule A - Itemized Deductions - Line 21 Attachment"{n}End Sub
Sub IAAGI_Calculation(){n}{t}ReturnVal = GetCurrency(IARequired.IAAGI){n}End Sub
Sub IATax_Calculation(){n}{t}Dim IAWHEst As Currency{n}{t}Dim OthIAWH As Currency{n}{t}{n}{t}IAWHEst = GetCurrency(IARequired.TotIAW2WH) + GetCurrency(IARequired.TotW2GWH) + GetCurrency(IARequired.Tot1042S) + GetCurrency(IARequired.TotCapGainWH) + GetCurrency(IARequired.TotDivWH) + GetCurrency(IARequired.TotUnemWH) + GetCurrency(IARequired.TotIntWH) + GetCurrency(IARequired.TotKWH) + GetCurrency(IARequired.TotMiscWH) + GetCurrency(IARequired.TotOIDWH) + GetCurrency(IARequired.Tot1099rWH) + GetCurrency(IARequired.TotOthIncWH) + GetCurrency(IARequired.TotCyLocEst) + GetCurrency(IARequired.TotCYIAEst){n}{t}{n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}OthIAWH = GetCurrency(USSchA.StateWH3) + GetCurrency(USSchA.StateWH4) + GetCurrency(USSchA.StateWH5){n}{t}Else{n}{t}{t}OthIAWH = GetCurrency(USSchANR.StateWH3) + GetCurrency(USSchANR.StateWH4) + GetCurrency(USSchANR.StateWH5){n}{t}End If{n}{t}{n}{t}If GetBool(IAF126.TpPYNR) = True Or GetBool(IAF126.SpPYNR) = True Then{n}{t}{t}ReturnVal = IAWHEst{n}{t}Else{n}{t}{t}ReturnVal = MinValue(GetCurrency(IASchA.TotStTax), IAWHEst + OthIAWH){n}{t}End If{n}End Sub
Sub Income_Calculation(){n}{t}If GetBool(IASchA.GenSales) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = 1{n}{t}End If{n}End Sub
Sub Invest_Calculation(){n}{t}ReturnVal = GetCurrency(USSchA.InvInt){n}End Sub
Sub Item_Calculation(){n}{t}ReturnVal = GetCurrency(IASchA.TotDeductions) + GetCurrency(IASchA.TotOthDed){n}End Sub
Sub ListExp_Calculation(){n}{t}If GetCurrency(IASchA.OthExp) <> 0 Then{n}{t}{t}ReturnVal = GetString(IASchA.Ln21SeeAtt){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub ListMisc_Calculation(){n}{t}If GetCurrency(IASchA.OthMisc) <> 0 Then{n}{t}{t}ReturnVal = GetString(IASchA.OthMiscDesc(0)) + " " + GetString(IASchA.OthMiscDesc(1)) + " " + GetString(IASchA.OthMiscDesc(2)) + " " + GetString(IASchA.OthMiscDesc(3)) + " " + GetString(IASchA.OthMiscDesc(4)){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub Ln21SeeAtt_Calculation(){n}{t}If GetCurrency(IASchA.OthLn21Amt(1)) <> 0 Then{n}{t}{t}ReturnVal = "See Attached"{n}{t}Else{n}{t}{t}ReturnVal = GetString(IASchA.OthExpDesc(0)){n}{t}End If{n}End Sub
Sub MedDed_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(IASchA.MedExp) - GetCurrency(IASchA.AGI)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub MedExp_Calculation(){n}'removed the prior year excess advanced PTC from the HealthInsDed since should not offset current year medical expenses{n}'adjusted medical expense calc for PTC adjustment if claiming on IA 1040 line 18 (if not claiming on line 18 should follow federal treatment of PTC, if on 18 PTC handled on IA 1040){n}'change was made based on US 433238 see also CSS ticket 8605571{n}{t}Dim HealthInsDed As Currency{n}{t}{n}{t}HealthInsDed = GetCurrency(IAWHealth.TPInsPrem) + GetCurrency(IAWHealth.TPMedicare) + GetCurrency(IAWHealth.TPLTC) + GetCurrency(IAWHealth.SPInsPrem) + GetCurrency(IAWHealth.SPMedicare) + GetCurrency(IAWHealth.SPLTC){n}{n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}If (GetCurrency(IAWHealth.TPInsPrem) + GetCurrency(IAWHealth.SPInsPrem)) = 0 Then{n}{t}{t}{t}ReturnVal = MaxValue(0, GetCurrency(USSchA.MedExp) - HealthInsDed){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = MaxValue(0, MaxValue(0, GetCurrency(USSchA.MedExp) + GetCurrency(USWMedicalWS.PTCAdj)) - HealthInsDed){n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Mort_Calculation(){n}{t}ReturnVal = GetCurrency(IASchA.MortFed) + GetCurrency(IASchA.MortAdj){n}End Sub
Sub MortAdj_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USD1098.StateAdj){n}{t}End If{n}End Sub
Sub MortFed_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USSchA.MortInt) + GetCurrency(USF8396.CrInt){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub MortNot_Calculation(){n}{t}ReturnVal = GetCurrency(USSchA.Sfm){n}End Sub
Sub MtgePrem_Calculation(){n}{t}ReturnVal = GetCurrency(USSchA.MtgePrem){n}End Sub
Sub Mult_Calculation(){n}{t}If GetCurrency(IASchA.Expense) > 0 Then{n}{t}{t}ReturnVal = MaxValue(0, CDollar(GetFloat(IASchA.IAAGI) * 0.02)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Names_Calculation(){n}{t}ReturnVal = GetString(IARequired.CombNames){n}End Sub
Sub OthExp_Calculation(){n}{t}ReturnVal = GetCurrency(IAWSchAPrint.TotExp){n}End Sub
Sub OthExpDesc_Calculation(Index As Integer){n}{t}Dim count As Integer{n}{t}Dim Hold As String{n}{t}count = 0{n}{t}Hold = ""{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.Legal) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = "Legal Fees - Taxable Income"{n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.OthLegal) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = "Other Legal Fees"{n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.Clerical) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = "Clerical Help"{n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.Custodial) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = "Custodial/Investment Fees"{n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.Invest) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = "Investment Expenses Form 1099s"{n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.InsolventLoss) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = "Insolvent Losses"{n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.CasualtyLoss) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = "Form 4684"{n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.Appraisal) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = "Appraisal Fees"{n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.DeprTot) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = "Depreciation Computer"{n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.Amort) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = "Amortization"{n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.ExcessDed) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = "Excess K-1 Ded"{n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.Fees) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = "Fees to Collect"{n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.Hobby) <> 0 And GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = "Hobby Expenses"{n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.Indirect) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = "Indirect Pass-through"{n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.REMIC) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = "REMIC"{n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.IRALoss) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = "IRA Loss"{n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.RepayInc) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = "Income Repay"{n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.RepaySSB) <> 0 And GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = "SSB Repay"{n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.SafeBox) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = "Safe Deposit"{n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.ServiceCharge) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = "Service Charges Div"{n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.TaxAdvice) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = "Tax Advice"{n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.Trustee) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = "Trustee's Fees IRA"{n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.CreditFees) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = "Convenience Fee"{n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.OthExp) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetString(IAWSchAPrint.OtherText){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.OthExp2) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetString(IAWSchAPrint.OtherText2){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}   {n}{t}ReturnVal = Hold{n}{n}End Sub
Sub OthList_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetString(USSchA.OtherTaxType){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub OthLn21Amt_Calculation(Index As Integer){n}{t}Dim count As Integer{n}{t}Dim Hold As Currency{n}{t}count = 0{n}{t}Hold = 0{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.Legal) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetCurrency(IAWSchAPrint.Legal){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.OthLegal) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetCurrency(IAWSchAPrint.OthLegal){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}   {n}{t}If GetCurrency(IAWSchAPrint.Clerical) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetCurrency(IAWSchAPrint.Clerical){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.Custodial) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetCurrency(IAWSchAPrint.Custodial){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.Invest) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetCurrency(IAWSchAPrint.Invest){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.InsolventLoss) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetCurrency(IAWSchAPrint.InsolventLoss){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.CasualtyLoss) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetCurrency(IAWSchAPrint.CasualtyLoss){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.Appraisal) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetCurrency(IAWSchAPrint.Appraisal){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.DeprTot) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetCurrency(IAWSchAPrint.DeprTot){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.Amort) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetCurrency(IAWSchAPrint.Amort){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.ExcessDed) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetCurrency(IAWSchAPrint.ExcessDed){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.Fees) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetCurrency(IAWSchAPrint.Fees){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.Hobby) <> 0 And GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetCurrency(IAWSchAPrint.Hobby){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.Indirect) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetCurrency(IAWSchAPrint.Indirect){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.REMIC) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetCurrency(IAWSchAPrint.REMIC){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.IRALoss) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetCurrency(IAWSchAPrint.IRALoss){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.RepayInc) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetCurrency(IAWSchAPrint.RepayInc){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.RepaySSB) <> 0 And GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetCurrency(IAWSchAPrint.RepaySSB){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.SafeBox) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetCurrency(IAWSchAPrint.SafeBox){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.ServiceCharge) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetCurrency(IAWSchAPrint.ServiceCharge){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.TaxAdvice) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetCurrency(IAWSchAPrint.TaxAdvice){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.Trustee) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetCurrency(IAWSchAPrint.Trustee){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.CreditFees) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetCurrency(IAWSchAPrint.CreditFees){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.OthExp) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetCurrency(IAWSchAPrint.OthExp){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.OthExp2) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetCurrency(IAWSchAPrint.OthExp2){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}   {n}{t}ReturnVal = Hold{n}End Sub
Sub OthMisc_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IASchA.TotOthMisc) + GetCurrency(IASchA.IAAdjOthMisc)){n}End Sub
Sub OthMiscDesc_Calculation(Index As Integer){n}{t}Dim count As Integer{n}{t}Dim Hold As String{n}{t}count = 0{n}{t}Hold = ""{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.Form4684) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = "Casualty and theft loss"{n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.GamblingLoss) <> 0 And GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = "Gambling losses"{n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.K1DedPort) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = "Schedule K-1"{n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t} If GetCurrency(IAWSchAPrint.ImpWrkExp) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = "Impairment-related work expenses"{n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t} If GetCurrency(IAWSchAPrint.TotEstK1) <> 0 And GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = "Federal estate tax"{n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.Repay) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = "Claim repayments"{n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.Bond) <> 0 And GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = "Amortizable bond premiums"{n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.Pension) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = "Unrecovered pension investments"{n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWSchAPrint.Debt) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = "Ordinary loss"{n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IASchA.IAAdjOthMisc) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetString(IASchA.IAAdjOthMiscDesc){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{t}{t}{n}{t}{n}{t}ReturnVal = Hold{n}{n}End Sub
Sub OthTax_Calculation(){n}'review to default calc - fed not allowing foreign taxes paid.{n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USSchA.OtherTax){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Over_Calculation(){n}{t}ReturnVal = GetCurrency(IAWContLimit.PYTot){n}{t}'If GetBool(USWResidency.F1040NR) = False Then{n}{t}'{t}ReturnVal = GetCurrency(USSchA.Carry){n}{t}'Else{n}{t}'{t}ReturnVal = GetCurrency(USSchANR.Carry){n}{t}'End If{n}End Sub
Sub Perc_Calculation(){n}{t}Dim TopLim As Double{n}{t}{t}{n}{t}If GetCurrency(IASchA.YouNet) < 0 And GetCurrency(IASchA.SpNet) < 0 Then{n}{t}{t}If GetCurrency(IASchA.YouNet) < GetCurrency(IASchA.SpNet) Then{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}End If{n}{t}ElseIf GetCurrency(IASchA.YouNet) < 0 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetCurrency(IASchA.YouNet) > 0 And GetCurrency(IASchA.TotNet) <= 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IASchA.TotNet) = 0 Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}TopLim = MinValue(1#, Round(GetFloat(IASchA.YouNet) / GetFloat(IASchA.TotNet), 3)){n}{t}{t}ReturnVal = MaxValue(0, TopLim){t}  {n}{t}End If{n}End Sub
Sub PrintSchA_Calculation(){n}{t}If GetBool(IARequired.LowInc) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetNumber(IAF1040.ItemCheck){n}{t}End If{n}End Sub
Sub PrLn21SeeAtt_Calculation(){n}{t}If GetCurrency(IASchA.OthLn21Amt(1)) <> 0 And GetNumber(IASchA.PrintSchA) = 1 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Prop_Calculation(){n}{t}ReturnVal = GetCurrency(USSchA.PerPropTax){n}End Sub
Sub PtsNot_Calculation(){n}{t}ReturnVal = GetCurrency(USSchA.Points){n}End Sub
Sub RealEst_Calculation(){n}{t}ReturnVal = GetCurrency(USSchA.RealTax){n}End Sub
Sub SalesTax_Calculation(){n}{t}ReturnVal = GetCurrency(USSchA.SalesTax){n}End Sub
Sub SchAMilesDed_Calculation(){n}'per fed, no change for 2018 remains at 14 cents{n}{t}Dim Con1 As Currency{n}{t}{n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}Con1 = CDollar(GetFloat(USSchA.ConMiles) * 14#){n}{t}Else{n}{t}{t}Con1 = CDollar(GetFloat(USSchANR.ConMiles) * 14#){n}{t}End If{n}{t}{n}{t}ReturnVal = Con1{n}End Sub
Sub SchoolTax_Calculation(){n}{t}If GetBool(IAF1040.MFJ) = True Or GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = GetCurrency(USZIA1040.IAPYSurtaxA) + GetCurrency(USZIA1040.IAPYSurtaxB){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USZIA1040.IAPYSurtaxA){n}{t}End If{n}End Sub
Sub SpNet_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True Or GetBool(IAF1040.MFS) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BNet){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SpPro_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True Or GetBool(IAF1040.MFS) = True Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(IASchA.Item) - GetCurrency(IASchA.YouPC)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IAF1040.SSN){n}End Sub
Sub StTax_Calculation(){n}{t}If GetBool(IASchA.GenSales) = True Then{n}{t}{t}ReturnVal = GetCurrency(IASchA.SalesTax){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IASchA.TotIncTax){n}{t}End If{n}End Sub
Sub TaxFee_Calculation(){n}{t}ReturnVal = 0{n}{t}'If GetBool(USWResidency.F1040NR) = False Then{n}{t}'{t}ReturnVal = GetCurrency(USSchA.TaxPrep){n}{t}'Else{n}{t}'{t}ReturnVal = GetCurrency(USSchANR.TaxPrep){n}{t}'End If{n}End Sub
Sub TaxPd_Calculation(){n}{t}ReturnVal = GetCurrency(IASchA.StTax) + GetCurrency(IASchA.RealEst) + GetCurrency(IASchA.Prop) + GetCurrency(IASchA.OthTax){n}End Sub
Sub Theft_Calculation(){n}{t}ReturnVal = GetCurrency(IA4684.SctATot){n}End Sub
Sub TotAdoptAmt_Calculation(){n}{t}ReturnVal = GetCurrency(IASchA.AdoptAmt(0)) + GetCurrency(IASchA.AdoptAmt(1)) + GetCurrency(IASchA.AdoptAmt(2)) + GetCurrency(IASchA.AdoptAmt(3)) + GetCurrency(IASchA.AdoptAmt(4)){n}End Sub
Sub TotContrib_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USSchA.Cash){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USSchANR.Cash){n}{t}End If{n}End Sub
Sub TotDeductions_Calculation(){n}' updated for 2018 - RJ{n}{t}Dim Limit As Currency{n}{t}{n}{t}If FedFS() = 1 Then{n}{t}{t}Limit = 266700@{n}{t}ElseIf FedFS() = 3 Then{n}{t}{t}Limit = 160000@{n}{t}ElseIf FedFS() = 4 Then{n}{t}{t}Limit = 293350@{n}{t}Else{n}{t}{t}Limit = 320000@{n}{t}End If{n}{t}{n}{t}If GetCurrency(IASchA.IAAGI) > Limit Then{n}{t}{t}ReturnVal = GetCurrency(IAWItmDed.LimitDed){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IASchA.OthMisc) + GetCurrency(IASchA.AllowExp) + GetCurrency(IASchA.Theft) + GetCurrency(IASchA.TotGifts) + GetCurrency(IASchA.TotInt) + GetCurrency(IASchA.TaxPd) + GetCurrency(IASchA.MedDed){n}{t}End If{n}End Sub
Sub TotDisableAmt_Calculation(){n}{t}Dim TotDisable As Currency{n}{t}{n}{t}TotDisable = GetCurrency(IASchA.DisableAmt(0)) + GetCurrency(IASchA.DisableAmt(1)) + GetCurrency(IASchA.DisableAmt(2)) + GetCurrency(IASchA.DisableAmt(3)) + GetCurrency(IASchA.DisableAmt(4)){n}{n}{t}ReturnVal = MinValue(5000@, TotDisable){n}End Sub
Sub TotGifts_Calculation(){n}{t}ReturnVal = GetCurrency(IAWContLimit.CYTotAfter){n}End Sub
Sub TotIncTax_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IASchA.TotStTax) + GetCurrency(IASchA.SchoolTax) - GetCurrency(IASchA.IATax)){n}End Sub
Sub TotInt_Calculation(){n}{t}ReturnVal = GetCurrency(IASchA.Mort) + GetCurrency(IASchA.MortNot) + GetCurrency(IASchA.PtsNot) + GetCurrency(IASchA.Invest){n}End Sub
Sub TotMilesDed_Calculation(){n}{t}Dim Con1 As Currency{n}{t}{n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}Con1 = CDollar(GetFloat(USSchA.ConMiles) * 39#){n}{t}Else{n}{t}{t}Con1 = CDollar(GetFloat(USSchANR.ConMiles) * 39#){n}{t}End If{n}{t}{n}{t}ReturnVal = Con1{n}End Sub
Sub TotNet_Calculation(){n}{t}ReturnVal = GetCurrency(IASchA.SpNet) + GetCurrency(IASchA.YouNet){n}End Sub
Sub TotNonCash_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USSchA.NonCash){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USSchANR.NonCash){n}{t}End If{n}End Sub
Sub TotOthDed_Calculation(){n}{t}ReturnVal = GetCurrency(IASchA.TotDisableAmt) + GetCurrency(IASchA.AllowAdopt) + GetCurrency(IASchA.AddMilesDed){n}End Sub
Sub TotOthMisc_Calculation(){n}{t}ReturnVal = GetCurrency(IAWSchAPrint.TotOthDed){n}End Sub
Sub TotStTax_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(USSchA.StateWH1) + GetCurrency(USSchA.StateWH2) + GetCurrency(USSchA.LocalWH) + GetCurrency(USSchA.StateWH3) + GetCurrency(USSchA.StateWH4) + GetCurrency(USSchA.StateWH5) - GetCurrency(USSchA.WHOff)){n}{t}Else{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(USSchANR.StateWH1) + GetCurrency(USSchANR.StateWH2) + GetCurrency(USSchANR.LocalWH) + GetCurrency(USSchANR.StateWH3) + GetCurrency(USSchANR.StateWH4) + GetCurrency(USSchANR.StateWH5) - GetCurrency(USSchANR.WHOff)){n}{t}End If{n}End Sub
Sub Unreimb_Calculation(){n}{t}ReturnVal = GetCurrency(IAWSchAPrint.TotOtherExp){n}End Sub
Sub YouNet_Calculation(){n}{t}If GetBool(IAF1040.CombMFS) = True Or GetBool(IAF1040.MFS) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.ANet){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub YouPC_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IASchA.Perc) * GetFloat(IASchA.Item)){n}End SubSub AccMktDiscIntCopies_Calculation(){n}{t}Dim TPAccMktDiscInt As Integer{n}{t}Dim SPAccMktDiscInt As Integer{n}{t}Dim JTAccMktDiscInt As Integer{n}{t}{n}{t}If GetCurrency(IASchB.TPAccMktDiscInt) > 0 Then{n}{t}{t}TPAccMktDiscInt = 1{n}{t}Else{n}{t}{t}TPAccMktDiscInt = 0{n}{t}End If{n}{t}{n}{t}If GetCurrency(IASchB.SPAccMktDiscInt) > 0 Then{n}{t}{t}SPAccMktDiscInt = 1{n}{t}Else{n}{t}{t}SPAccMktDiscInt = 0{n}{t}End If{n}{t}{n}{t}If GetCurrency(IASchB.JtAccMktDiscInt) > 0 Then{n}{t}{t}JTAccMktDiscInt = 1{n}{t}Else{n}{t}{t}JTAccMktDiscInt = 0{n}{t}End If{n}{t}{n}{t}ReturnVal = TPAccMktDiscInt + SPAccMktDiscInt + JTAccMktDiscInt{n}End Sub
Sub ContigentPayCopies_Calculation(){n}{t}Dim TPContigentPay As Integer{n}{t}Dim SPContigentPay As Integer{n}{t}Dim JTContigentPay As Integer{n}{t}{n}{t}If GetCurrency(IASchB.TPContigentPay) > 0 Then{n}{t}{t}TPContigentPay = 1{n}{t}Else{n}{t}{t}TPContigentPay = 0{n}{t}End If{n}{t}{n}{t}If GetCurrency(IASchB.SPContigentPay) > 0 Then{n}{t}{t}SPContigentPay = 1{n}{t}Else{n}{t}{t}SPContigentPay = 0{n}{t}End If{n}{t}{n}{t}If GetCurrency(IASchB.JtContigentPay) > 0 Then{n}{t}{t}JTContigentPay = 1{n}{t}Else{n}{t}{t}JTContigentPay = 0{n}{t}End If{n}{t}{n}{t}ReturnVal = TPContigentPay + SPContigentPay + JTContigentPay{n}End Sub
Sub CrBP11_Calculation(){n}{t}If GetNumber(IASchB.TotINTCopies) > 226 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBP12_Calculation(){n}{t}If GetNumber(IASchB.TotINTCopies) > 248 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBP1_Calculation(){n}{t}If GetNumber(IASchB.TotINTCopies) > 7 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBP10_Calculation(){n}{t}If GetNumber(IASchB.TotINTCopies) > 204 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBP2_Calculation(){n}{t}If GetNumber(IASchB.TotINTCopies) > 28 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBP3_Calculation(){n}{t}If GetNumber(IASchB.TotINTCopies) > 50 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBP4_Calculation(){n}{t}If GetNumber(IASchB.TotINTCopies) > 72 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBP5_Calculation(){n}{t}If GetNumber(IASchB.TotINTCopies) > 94 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBP6_Calculation(){n}{t}If GetNumber(IASchB.TotINTCopies) > 116 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBP7_Calculation(){n}{t}If GetNumber(IASchB.TotINTCopies) > 138 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBP8_Calculation(){n}{t}If GetNumber(IASchB.TotINTCopies) > 160 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBP9_Calculation(){n}{t}If GetNumber(IASchB.TotINTCopies) > 182 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBPDiv10_Calculation(){n}{t}If GetNumber(IASchB.TotDIVCopies) > 204 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBPDiv11_Calculation(){n}{t}If GetNumber(IASchB.TotDIVCopies) > 226 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBPDiv1_Calculation(){n}{t}If GetNumber(IASchB.TotDIVCopies) > 7 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBPDiv2_Calculation(){n}{t}If GetNumber(IASchB.TotDIVCopies) > 28 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBPDiv3_Calculation(){n}{t}If GetNumber(IASchB.TotDIVCopies) > 50 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBPDiv4_Calculation(){n}{t}If GetNumber(IASchB.TotDIVCopies) > 72 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBPDiv5_Calculation(){n}{t}If GetNumber(IASchB.TotDIVCopies) > 94 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBPDiv6_Calculation(){n}{t}If GetNumber(IASchB.TotDIVCopies) > 116 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBPDiv7_Calculation(){n}{t}If GetNumber(IASchB.TotDIVCopies) > 138 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBPDiv8_Calculation(){n}{t}If GetNumber(IASchB.TotDIVCopies) > 160 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CrBPDiv9_Calculation(){n}{t}If GetNumber(IASchB.TotDIVCopies) > 182 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Desc_Calculation(){n}{t}ReturnVal = GetString(IARequired.CombNames){n}End Sub
Sub DivAcctOwner_Calculation(Index As Integer){n}{t}If GetBool(IASchB.DTp1(Index)) = True Then{n}{t}{t}ReturnVal = "Taxpayer"{n}{t}ElseIf GetBool(IASchB.DSp1(Index)) = True Then{n}{t}{t}ReturnVal = "Spouse"{n}{t}ElseIf GetBool(IASchB.DJ1(Index)) = True Then{n}{t}{t}ReturnVal = "Joint"{n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub Dividend_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}Dim DIV As Integer{n}{t}Dim PartK1 As Integer{n}{t}Dim SCorpK1 As Integer{n}{t}Dim EstK1 As Integer{n}{t}Dim F5471 As Integer{n}{t}Dim F8621 As Integer{n}{t}Dim F8814 As Integer{n}{n}{t}DIV = GetNumber(IAWBBump.DIVNbr){n}{t}PartK1 = GetNumber(IAWBBump.PartK1DivNbr){n}{t}SCorpK1 = GetNumber(IAWBBump.SCorpK1DivNbr){n}{t}EstK1 = GetNumber(IAWBBump.EstK1DivNbr){n}{t}F5471 = GetNumber(IAWBBump.F5471Nbr){n}{t}F8621 = GetNumber(IAWBBump.F8621Nbr){n}{t}F8814 = GetNumber(IAWBBump.F8814Nbr){n}{t}{n}{t}If Index = 6 And GetNumber(IASchB.TotDIVCopies) > 7 Then{n}{t}{t}ReturnVal = GetCurrency(IAWBPDiv.TotalDividend){n}{t}ElseIf DIV > Index Then{n}{t}{t}ReturnVal = Round(GetCurrency(USD1099DIV.ORDDIV, GetNumber(IAWBBump.DIV(Index)))) + Round(GetCurrency(USD1099DIV.FedExmpt, GetNumber(IAWBBump.DIV(Index)))){n}{t}ElseIf DIV + PartK1 > Index Then{n}{t}{t}Stuff = (Index) - DIV{n}{t}{t}ReturnVal = GetCurrency(USDPartK1.Dividends, (GetNumber(IAWBBump.PartK1Div(Stuff)))){n}{t}ElseIf DIV + PartK1 + SCorpK1 > Index Then{n}{t}{t}Stuff = (Index) - DIV - PartK1{n}{t}{t}ReturnVal = GetCurrency(USDSCorpK1.Dividends, (GetNumber(IAWBBump.SCorpK1Div(Stuff)))){n}{t}ElseIf DIV + PartK1 + SCorpK1 + EstK1 > Index Then{n}{t}{t}Stuff = (Index) - DIV - PartK1 - SCorpK1{n}{t}{t}ReturnVal = GetCurrency(USDEstK1.Dividends, (GetNumber(IAWBBump.EstK1Div(Stuff)))){n}{t}ElseIf DIV + PartK1 + SCorpK1 + EstK1 + F5471 > Index Then{n}{t}{t}Stuff = (Index) - DIV - PartK1 - SCorpK1 - EstK1{n}{t}{t}ReturnVal = GetCurrency(USW5471SchI.DivOrd, (GetNumber(IAWBBump.F5471(Stuff)))){n}{t}ElseIf DIV + PartK1 + SCorpK1 + EstK1 + F5471 + F8621 > Index Then{n}{t}{t}Stuff = (Index) - DIV - PartK1 - SCorpK1 - EstK1 - F5471{n}{t}{t}ReturnVal = GetCurrency(USF8621.DivTo1040, (GetNumber(IAWBBump.F8621(Stuff)))){n}{t}ElseIf DIV + PartK1 + SCorpK1 + EstK1 + F5471 + F8621 + F8814 > Index Then{n}{t}{t}Stuff = (Index) - DIV - PartK1 - SCorpK1 - EstK1 - F5471 - F8621{n}{t}{t}ReturnVal = GetCurrency(USF8814.L6XL7, (GetNumber(IAWBBump.F8814(Stuff)))){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub DivPayer_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}Dim DIV As Integer{n}{t}Dim PartK1 As Integer{n}{t}Dim SCorpK1 As Integer{n}{t}Dim EstK1 As Integer{n}{t}Dim F5471 As Integer{n}{t}Dim F8621 As Integer{n}{t}Dim F8814 As Integer{n}{n}{t}DIV = GetNumber(IAWBBump.DIVNbr){n}{t}PartK1 = GetNumber(IAWBBump.PartK1DivNbr){n}{t}SCorpK1 = GetNumber(IAWBBump.SCorpK1DivNbr){n}{t}EstK1 = GetNumber(IAWBBump.EstK1DivNbr){n}{t}F5471 = GetNumber(IAWBBump.F5471Nbr){n}{t}F8621 = GetNumber(IAWBBump.F8621Nbr){n}{t}F8814 = GetNumber(IAWBBump.F8814Nbr){n}{t}{n}{t}If Index = 6 And GetNumber(IASchB.TotDIVCopies) > 7 Then{n}{t}{t}ReturnVal = "See Statement Attached"{n}{t}ElseIf DIV > Index Then{n}{t}{t}ReturnVal = GetString(USD1099DIV.PayerName, GetNumber(IAWBBump.DIV(Index))){n}{t}ElseIf DIV + PartK1 > Index Then{n}{t}{t}Stuff = (Index) - DIV{n}{t}{t}ReturnVal = GetString(USDPartK1.CoName, (GetNumber(IAWBBump.PartK1Div(Stuff)))){n}{t}ElseIf DIV + PartK1 + SCorpK1 > Index Then{n}{t}{t}Stuff = (Index) - DIV - PartK1{n}{t}{t}ReturnVal = GetString(USDSCorpK1.CoName, (GetNumber(IAWBBump.SCorpK1Div(Stuff)))){n}{t}ElseIf DIV + PartK1 + SCorpK1 + EstK1 > Index Then{n}{t}{t}Stuff = (Index) - DIV - PartK1 - SCorpK1{n}{t}{t}ReturnVal = GetString(USDEstK1.TrustName, (GetNumber(IAWBBump.EstK1Div(Stuff)))){n}{t}ElseIf DIV + PartK1 + SCorpK1 + EstK1 + F5471 > Index Then{n}{t}{t}Stuff = (Index) - DIV - PartK1 - SCorpK1 - EstK1{n}{t}{t}ReturnVal = "Form 5471"{n}{t}ElseIf DIV + PartK1 + SCorpK1 + EstK1 + F5471 + F8621 > Index Then{n}{t}{t}Stuff = (Index) - DIV - PartK1 - SCorpK1 - EstK1 - F5471{n}{t}{t}ReturnVal = "Form 8621 - " & GetString(USF8621.CoName, (GetNumber(IAWBBump.F8621(Stuff)))){n}{t}ElseIf DIV + PartK1 + SCorpK1 + EstK1 + F5471 + F8621 + F8814 > Index Then{n}{t}{t}Stuff = (Index) - DIV - PartK1 - SCorpK1 - EstK1 - F5471 - F8621{n}{t}{t}ReturnVal = "Form 8814 - " & GetString(USF8814.ChName, (GetNumber(IAWBBump.F8814(Stuff)))){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub DJ1_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}Dim DIV As Integer{n}{t}Dim PartK1 As Integer{n}{t}Dim SCorpK1 As Integer{n}{t}Dim EstK1 As Integer{n}{t}Dim F5471 As Integer{n}{t}Dim F8621 As Integer{n}{t}Dim F8814 As Integer{n}{n}{t}DIV = GetNumber(IAWBBump.DIVNbr){n}{t}PartK1 = GetNumber(IAWBBump.PartK1DivNbr){n}{t}SCorpK1 = GetNumber(IAWBBump.SCorpK1DivNbr){n}{t}EstK1 = GetNumber(IAWBBump.EstK1DivNbr){n}{t}F5471 = GetNumber(IAWBBump.F5471Nbr){n}{t}F8621 = GetNumber(IAWBBump.F8621Nbr){n}{t}F8814 = GetNumber(IAWBBump.F8814Nbr){n}{t}{n}{t}If Index = 6 And GetNumber(IASchB.TotDIVCopies) > 7 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf DIV > Index Then{n}{t}{t}ReturnVal = GetBool(USD1099DIV.Joint, GetNumber(IAWBBump.DIV(Index))){n}{t}ElseIf DIV + PartK1 > Index Then{n}{t}{t}Stuff = (Index) - DIV{n}{t}{t}ReturnVal = GetBool(USDPartK1.Joint, (GetNumber(IAWBBump.PartK1Div(Stuff)))){n}{t}ElseIf DIV + PartK1 + SCorpK1 > Index Then{n}{t}{t}Stuff = (Index) - DIV - PartK1{n}{t}{t}ReturnVal = GetBool(USDSCorpK1.Joint, (GetNumber(IAWBBump.SCorpK1Div(Stuff)))){n}{t}ElseIf DIV + PartK1 + SCorpK1 + EstK1 > Index Then{n}{t}{t}Stuff = (Index) - DIV - PartK1 - SCorpK1{n}{t}{t}ReturnVal = GetBool(USDEstK1.Joint, (GetNumber(IAWBBump.EstK1Div(Stuff)))){n}{t}ElseIf DIV + PartK1 + SCorpK1 + EstK1 + F5471 > Index Then{n}{t}{t}Stuff = (Index) - DIV - PartK1 - SCorpK1 - EstK1{n}{t}{t}ReturnVal = 0{n}{t}ElseIf DIV + PartK1 + SCorpK1 + EstK1 + F5471 + F8621 > Index Then{n}{t}{t}Stuff = (Index) - DIV - PartK1 - SCorpK1 - EstK1 - F5471{n}{t}{t}ReturnVal = GetBool(USF8621.Joint, (GetNumber(IAWBBump.F8621(Stuff)))){n}{t}ElseIf DIV + PartK1 + SCorpK1 + EstK1 + F5471 + F8621 + F8814 > Index Then{n}{t}{t}Stuff = (Index) - DIV - PartK1 - SCorpK1 - EstK1 - F5471 - F8621{n}{t}{t}If GetBool(USWBasicInfo.JointCalc) = True Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub DSp1_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}Dim DIV As Integer{n}{t}Dim PartK1 As Integer{n}{t}Dim SCorpK1 As Integer{n}{t}Dim EstK1 As Integer{n}{t}Dim F5471 As Integer{n}{t}Dim F8621 As Integer{n}{t}Dim F8814 As Integer{n}{n}{t}DIV = GetNumber(IAWBBump.DIVNbr){n}{t}PartK1 = GetNumber(IAWBBump.PartK1DivNbr){n}{t}SCorpK1 = GetNumber(IAWBBump.SCorpK1DivNbr){n}{t}EstK1 = GetNumber(IAWBBump.EstK1DivNbr){n}{t}F5471 = GetNumber(IAWBBump.F5471Nbr){n}{t}F8621 = GetNumber(IAWBBump.F8621Nbr){n}{t}F8814 = GetNumber(IAWBBump.F8814Nbr){n}{t}{n}{t}If Index = 6 And GetNumber(IASchB.TotDIVCopies) > 7 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf DIV > Index Then{n}{t}{t}ReturnVal = GetBool(USD1099DIV.Spouse, GetNumber(IAWBBump.DIV(Index))){n}{t}ElseIf DIV + PartK1 > Index Then{n}{t}{t}Stuff = (Index) - DIV{n}{t}{t}ReturnVal = GetBool(USDPartK1.Spouse, (GetNumber(IAWBBump.PartK1Div(Stuff)))){n}{t}ElseIf DIV + PartK1 + SCorpK1 > Index Then{n}{t}{t}Stuff = (Index) - DIV - PartK1{n}{t}{t}ReturnVal = GetBool(USDSCorpK1.Spouse, (GetNumber(IAWBBump.SCorpK1Div(Stuff)))){n}{t}ElseIf DIV + PartK1 + SCorpK1 + EstK1 > Index Then{n}{t}{t}Stuff = (Index) - DIV - PartK1 - SCorpK1{n}{t}{t}ReturnVal = GetBool(USDEstK1.Spouse, (GetNumber(IAWBBump.EstK1Div(Stuff)))){n}{t}ElseIf DIV + PartK1 + SCorpK1 + EstK1 + F5471 > Index Then{n}{t}{t}Stuff = (Index) - DIV - PartK1 - SCorpK1 - EstK1{n}{t}{t}If GetString(USW5471SchI.SchISSN, (GetNumber(IAWBBump.F5471(Stuff)))) = GetString(USWBasicInfo.SpouseSSN) Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}ElseIf DIV + PartK1 + SCorpK1 + EstK1 + F5471 + F8621 > Index Then{n}{t}{t}Stuff = (Index) - DIV - PartK1 - SCorpK1 - EstK1 - F5471{n}{t}{t}ReturnVal = GetBool(USF8621.Spouse, (GetNumber(IAWBBump.F8621(Stuff)))){n}{t}ElseIf DIV + PartK1 + SCorpK1 + EstK1 + F5471 + F8621 + F8814 > Index Then{n}{t}{t}Stuff = (Index) - DIV - PartK1 - SCorpK1 - EstK1 - F5471 - F8621{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub DTp1_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}Dim DIV As Integer{n}{t}Dim PartK1 As Integer{n}{t}Dim SCorpK1 As Integer{n}{t}Dim EstK1 As Integer{n}{t}Dim F5471 As Integer{n}{t}Dim F8621 As Integer{n}{t}Dim F8814 As Integer{n}{n}{t}DIV = GetNumber(IAWBBump.DIVNbr){n}{t}PartK1 = GetNumber(IAWBBump.PartK1DivNbr){n}{t}SCorpK1 = GetNumber(IAWBBump.SCorpK1DivNbr){n}{t}EstK1 = GetNumber(IAWBBump.EstK1DivNbr){n}{t}F5471 = GetNumber(IAWBBump.F5471Nbr){n}{t}F8621 = GetNumber(IAWBBump.F8621Nbr){n}{t}F8814 = GetNumber(IAWBBump.F8814Nbr){n}{t}{n}{t}If Index = 6 And GetNumber(IASchB.TotDIVCopies) > 7 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf DIV > Index Then{n}{t}{t}ReturnVal = GetBool(USD1099DIV.Taxpayer, GetNumber(IAWBBump.DIV(Index))){n}{t}ElseIf DIV + PartK1 > Index Then{n}{t}{t}Stuff = (Index) - DIV{n}{t}{t}ReturnVal = GetBool(USDPartK1.Taxpayer, (GetNumber(IAWBBump.PartK1Div(Stuff)))){n}{t}ElseIf DIV + PartK1 + SCorpK1 > Index Then{n}{t}{t}Stuff = (Index) - DIV - PartK1{n}{t}{t}ReturnVal = GetBool(USDSCorpK1.Taxpayer, (GetNumber(IAWBBump.SCorpK1Div(Stuff)))){n}{t}ElseIf DIV + PartK1 + SCorpK1 + EstK1 > Index Then{n}{t}{t}Stuff = (Index) - DIV - PartK1 - SCorpK1{n}{t}{t}ReturnVal = GetBool(USDEstK1.Taxpayer, (GetNumber(IAWBBump.EstK1Div(Stuff)))){n}{t}ElseIf DIV + PartK1 + SCorpK1 + EstK1 + F5471 > Index Then{n}{t}{t}Stuff = (Index) - DIV - PartK1 - SCorpK1 - EstK1{n}{t}{t}If GetString(USW5471SchI.SchISSN, (GetNumber(IAWBBump.F5471(Stuff)))) = GetString(USWBasicInfo.SSN) Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}ElseIf DIV + PartK1 + SCorpK1 + EstK1 + F5471 + F8621 > Index Then{n}{t}{t}Stuff = (Index) - DIV - PartK1 - SCorpK1 - EstK1 - F5471{n}{t}{t}ReturnVal = GetBool(USF8621.Taxpayer, (GetNumber(IAWBBump.F8621(Stuff)))){n}{t}ElseIf DIV + PartK1 + SCorpK1 + EstK1 + F5471 + F8621 + F8814 > Index Then{n}{t}{t}Stuff = (Index) - DIV - PartK1 - SCorpK1 - EstK1 - F5471 - F8621{n}{t}{t}If GetBool(USWBasicInfo.JointCalc) = True Then{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub ExemptDiv_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}Dim DIV As Integer{n}{t}Dim PartK1 As Integer{n}{t}Dim SCorpK1 As Integer{n}{t}Dim EstK1 As Integer{n}{t}Dim F5471 As Integer{n}{t}Dim F8621 As Integer{n}{t}Dim F8814 As Integer{n}{n}{t}DIV = GetNumber(IAWBBump.DIVNbr){n}{t}PartK1 = GetNumber(IAWBBump.PartK1DivNbr){n}{t}SCorpK1 = GetNumber(IAWBBump.SCorpK1DivNbr){n}{t}EstK1 = GetNumber(IAWBBump.EstK1DivNbr){n}{t}F5471 = GetNumber(IAWBBump.F5471Nbr){n}{t}F8621 = GetNumber(IAWBBump.F8621Nbr){n}{t}F8814 = GetNumber(IAWBBump.F8814Nbr){n}{t}{n}{t}If Index = 6 And GetNumber(IASchB.TotDIVCopies) > 7 Then{n}{t}{t}ReturnVal = GetCurrency(IAWBPDiv.TotalExemptDiv){n}{t}ElseIf DIV > Index Then{n}{t}{t}ReturnVal = Round(GetCurrency(USD1099DIV.Nominee, GetNumber(IAWBBump.DIV(Index)))) + Round(GetCurrency(USD1099DIV.StExmpt, GetNumber(IAWBBump.DIV(Index)))) + Round(GetCurrency(USD1099DIV.FedStExmpt, GetNumber(IAWBBump.DIV(Index)))) + Round(GetCurrency(USD1099DIV.Restricted, GetNumber(IAWBBump.DIV(Index)))){n}{t}ElseIf DIV + PartK1 > Index Then{n}{t}{t}Stuff = (Index) - DIV{n}{t}{t}ReturnVal = GetCurrency(USDPartK1.NetStTED, (GetNumber(IAWBBump.PartK1Div(Stuff)))){n}{t}ElseIf DIV + PartK1 + SCorpK1 > Index Then{n}{t}{t}Stuff = (Index) - DIV - PartK1{n}{t}{t}ReturnVal = GetCurrency(USDSCorpK1.NetStTED, (GetNumber(IAWBBump.SCorpK1Div(Stuff)))){n}{t}ElseIf DIV + PartK1 + SCorpK1 + EstK1 > Index Then{n}{t}{t}Stuff = (Index) - DIV - PartK1 - SCorpK1{n}{t}{t}ReturnVal = GetCurrency(USDEstK1.NetStTED, (GetNumber(IAWBBump.EstK1Div(Stuff)))){n}{t}ElseIf DIV + PartK1 + SCorpK1 + EstK1 + F5471 > Index Then{n}{t}{t}Stuff = (Index) - DIV - PartK1 - SCorpK1 - EstK1{n}{t}{t}ReturnVal = 0{n}{t}ElseIf DIV + PartK1 + SCorpK1 + EstK1 + F5471 + F8621 > Index Then{n}{t}{t}Stuff = (Index) - DIV - PartK1 - SCorpK1 - EstK1 - F5471{n}{t}{t}ReturnVal = 0{n}{t}ElseIf DIV + PartK1 + SCorpK1 + EstK1 + F5471 + F8621 + F8814 > Index Then{n}{t}{t}Stuff = (Index) - DIV - PartK1 - SCorpK1 - EstK1 - F5471 - F8621{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub ExemptInt_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}Dim ResSFM As Integer{n}{t}Dim OthSFM As Integer{n}{t}Dim OID As Integer{n}{t}Dim INT1099 As Integer{n}{t}Dim PartK1 As Integer{n}{t}Dim SCorpK1 As Integer{n}{t}Dim EstK1 As Integer{n}{t}Dim TPAccMktDisc As Boolean{n}{t}{n}{t}ResSFM = GetNumber(IAWBBump.ResSFMNbr){n}{t}OthSFM = GetNumber(IAWBBump.OthSFMNbr){n}{t}OID = GetNumber(IAWBBump.OIDNbr){n}{t}INT1099 = GetNumber(IAWBBump.INTNbr){n}{t}PartK1 = GetNumber(IAWBBump.PartK1Nbr){n}{t}SCorpK1 = GetNumber(IAWBBump.SCorpK1Nbr){n}{t}EstK1 = GetNumber(IAWBBump.EstK1Nbr){n}{t}TPAccMktDisc = GetBool(IASchB.TPAccMktDiscInt){n}{t}{n}{t}If Index = 6 And GetNumber(IASchB.TotINTCopies) > 7 Then{n}{t}{t}ReturnVal = GetCurrency(IAWBPInt.TotalExemptInt){n}{t}ElseIf ResSFM > Index Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf ResSFM + OthSFM > Index Then{n}{t}{t}Stuff = (Index) - ResSFM{n}{t}{t}ReturnVal = 0{n}{t}ElseIf ResSFM + OthSFM + OID > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM{n}{t}{t}ReturnVal = Round(GetCurrency(USD1099OID.USInt, (GetNumber(IAWBBump.OID(Stuff))))) + Round(GetCurrency(USD1099OID.StExempt, (GetNumber(IAWBBump.OID(Stuff))))) + Round(GetCurrency(USD1099OID.Nominee, (GetNumber(IAWBBump.OID(Stuff))))) + MaxValue(0, Round(GetCurrency(USD1099OID.BOIDAdjAmt, (GetNumber(IAWBBump.OID(Stuff)))))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID{n}{t}{t}ReturnVal = Round(GetCurrency(USD1099INT.USInt, (GetNumber(IAWBBump.INT(Stuff))))) + Round(GetCurrency(USD1099INT.Nominee, (GetNumber(IAWBBump.INT(Stuff))))) + Round(GetCurrency(USD1099INT.AccruedInt, (GetNumber(IAWBBump.INT(Stuff))))) + Round(GetCurrency(USD1099INT.ABP, (GetNumber(IAWBBump.INT(Stuff))))) + Round(GetCurrency(USD1099INT.StateExmpt, (GetNumber(IAWBBump.INT(Stuff))))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099{n}{t}{t}ReturnVal = GetCurrency(USDPartK1.NetStTEI, (GetNumber(IAWBBump.PartK1(Stuff)))) + GetCurrency(USDPartK1.FedStTEI, (GetNumber(IAWBBump.PartK1(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099 - PartK1{n}{t}{t}ReturnVal = GetCurrency(USDSCorpK1.NetStTEI, (GetNumber(IAWBBump.SCorpK1(Stuff)))) + GetCurrency(USDSCorpK1.FedStTEI, (GetNumber(IAWBBump.SCorpK1(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1{n}{t}{t}ReturnVal = GetCurrency(USDEstK1.NetStTEI, (GetNumber(IAWBBump.EstK1(Stuff)))) + GetCurrency(USDEstK1.FedStTEI, (GetNumber(IAWBBump.EstK1(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + GetBool(IASchB.TPAccMktDiscInt) > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1{n}{t}{t}ReturnVal = 0{n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - GetBool(IASchB.TPAccMktDiscInt){n}{t}{t}ReturnVal = 0{n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) + GetBool(IASchB.JtAccMktDiscInt) > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc - GetBool(IASchB.SPAccMktDiscInt){n}{t}{t}ReturnVal = 0{n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) + GetBool(IASchB.JtAccMktDiscInt) + GetBool(IASchB.TPContigentPay) > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc - GetBool(IASchB.SPAccMktDiscInt) - GetBool(IASchB.JtAccMktDiscInt){n}{t}{t}ReturnVal = 0{n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) + GetBool(IASchB.JtAccMktDiscInt) + GetBool(IASchB.TPContigentPay) + GetBool(IASchB.SPContigentPay) > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc - GetBool(IASchB.SPAccMktDiscInt) - GetBool(IASchB.JtAccMktDiscInt) - GetBool(IASchB.TPContigentPay){n}{t}{t}ReturnVal = 0{n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) + GetBool(IASchB.JtAccMktDiscInt) + GetBool(IASchB.TPContigentPay) + GetBool(IASchB.SPContigentPay) + GetBool(IASchB.JtContigentPay) > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc - GetBool(IASchB.SPAccMktDiscInt) - GetBool(IASchB.JtAccMktDiscInt) - GetBool(IASchB.TPContigentPay) - GetBool(IASchB.SPContigentPay){n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub IJ1_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}Dim ResSFM As Integer{n}{t}Dim OthSFM As Integer{n}{t}Dim OID As Integer{n}{t}Dim INT1099 As Integer{n}{t}Dim PartK1 As Integer{n}{t}Dim SCorpK1 As Integer{n}{t}Dim EstK1 As Integer{n}{t}Dim TPAccMktDisc As Boolean{n}{t}{n}{t}ResSFM = GetNumber(IAWBBump.ResSFMNbr){n}{t}OthSFM = GetNumber(IAWBBump.OthSFMNbr){n}{t}OID = GetNumber(IAWBBump.OIDNbr){n}{t}INT1099 = GetNumber(IAWBBump.INTNbr){n}{t}PartK1 = GetNumber(IAWBBump.PartK1Nbr){n}{t}SCorpK1 = GetNumber(IAWBBump.SCorpK1Nbr){n}{t}EstK1 = GetNumber(IAWBBump.EstK1Nbr){n}{t}TPAccMktDisc = GetBool(IASchB.TPAccMktDiscInt){n}{t}{n}{t}If Index = 6 And GetNumber(IASchB.TotINTCopies) > 7 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf ResSFM > Index Then{n}{t}{t}ReturnVal = GetBool(USDSFM.Joint, GetNumber(IAWBBump.ResSFM(Index))){n}{t}ElseIf ResSFM + OthSFM > Index Then{n}{t}{t}Stuff = (Index) - ResSFM{n}{t}{t}ReturnVal = GetBool(USDSFM.Joint, (GetNumber(IAWBBump.OthSFM(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM{n}{t}{t}ReturnVal = GetBool(USD1099OID.Joint, (GetNumber(IAWBBump.OID(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID{n}{t}{t}ReturnVal = GetBool(USD1099INT.Joint, (GetNumber(IAWBBump.Int(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099{n}{t}{t}ReturnVal = GetBool(USDPartK1.Joint, (GetNumber(IAWBBump.PartK1(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099 - PartK1{n}{t}{t}ReturnVal = GetBool(USDSCorpK1.Joint, (GetNumber(IAWBBump.SCorpK1(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1{n}{t}{t}ReturnVal = GetBool(USDEstK1.Joint, (GetNumber(IAWBBump.EstK1(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1{n}{t}{t}ReturnVal = 0{n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc{n}{t}{t}ReturnVal = 0{n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) + GetBool(IASchB.JtAccMktDiscInt) > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc - GetBool(IASchB.SPAccMktDiscInt){n}{t}{t}ReturnVal = 1{n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) + GetBool(IASchB.JtAccMktDiscInt) + GetBool(IASchB.TPContigentPay) > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc - GetBool(IASchB.SPAccMktDiscInt) - GetBool(IASchB.JtAccMktDiscInt){n}{t}{t}ReturnVal = 0{n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) + GetBool(IASchB.JtAccMktDiscInt) + GetBool(IASchB.TPContigentPay) + GetBool(IASchB.SPContigentPay) > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc - GetBool(IASchB.SPAccMktDiscInt) - GetBool(IASchB.JtAccMktDiscInt) - GetBool(IASchB.TPContigentPay){n}{t}{t}ReturnVal = 0{n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) + GetBool(IASchB.JtAccMktDiscInt) + GetBool(IASchB.TPContigentPay) + GetBool(IASchB.SPContigentPay) + GetBool(IASchB.JtContigentPay) > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc - GetBool(IASchB.SPAccMktDiscInt) - GetBool(IASchB.JtAccMktDiscInt) - GetBool(IASchB.TPContigentPay) - GetBool(IASchB.SPContigentPay){n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub IntAcctOwner_Calculation(Index As Integer){n}{t}If GetBool(IASchB.ITp1(Index)) = True Then{n}{t}{t}ReturnVal = "Taxpayer"{n}{t}ElseIf GetBool(IASchB.ISp1(Index)) = True Then{n}{t}{t}ReturnVal = "Spouse"{n}{t}ElseIf GetBool(IASchB.IJ1(Index)) = True Then{n}{t}{t}ReturnVal = "Joint"{n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub Interest_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}Dim ResSFM As Integer{n}{t}Dim OthSFM As Integer{n}{t}Dim OID As Integer{n}{t}Dim INT1099 As Integer{n}{t}Dim PartK1 As Integer{n}{t}Dim SCorpK1 As Integer{n}{t}Dim EstK1 As Integer{n}{t}Dim TPAccMktDisc As Boolean{n}{t}{n}{t}ResSFM = GetNumber(IAWBBump.ResSFMNbr){n}{t}OthSFM = GetNumber(IAWBBump.OthSFMNbr){n}{t}OID = GetNumber(IAWBBump.OIDNbr){n}{t}INT1099 = GetNumber(IAWBBump.INTNbr){n}{t}PartK1 = GetNumber(IAWBBump.PartK1Nbr){n}{t}SCorpK1 = GetNumber(IAWBBump.SCorpK1Nbr){n}{t}EstK1 = GetNumber(IAWBBump.EstK1Nbr){n}{t}TPAccMktDisc = GetBool(IASchB.TPAccMktDiscInt){n}{t}{n}{t}If Index = 6 And GetNumber(IASchB.TotINTCopies) > 7 Then{n}{t}{t}ReturnVal = GetCurrency(IAWBPInt.TotalInterest){n}{t}ElseIf ResSFM > Index Then{n}{t}{t}ReturnVal = Round(GetCurrency(USDSFM.Interest, GetNumber(IAWBBump.ResSFM(Index)))){n}{t}ElseIf ResSFM + OthSFM > Index Then{n}{t}{t}Stuff = (Index) - ResSFM{n}{t}{t}ReturnVal = Round(GetCurrency(USDSFM.Interest, (GetNumber(IAWBBump.OthSFM(Stuff))))){n}{t}ElseIf ResSFM + OthSFM + OID > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM{n}{t}{t}ReturnVal = GetCurrency(USD1099OID.BAmt, (GetNumber(IAWBBump.OID(Stuff)))) + Round(GetCurrency(USD1099OID.TaxExempt, (GetNumber(IAWBBump.OID(Stuff))))) - MinValue(0, Round(GetCurrency(USD1099OID.BOIDAdjAmt, (GetNumber(IAWBBump.OID(Stuff)))))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID{n}{t}{t}ReturnVal = GetCurrency(USD1099INT.BAmtEF, (GetNumber(IAWBBump.INT(Stuff)))) + GetCurrency(USD1099INT.FedExmpt, (GetNumber(IAWBBump.INT(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099{n}{t}{t}ReturnVal = GetCurrency(USDPartK1.HaveInt, (GetNumber(IAWBBump.PartK1(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099 - PartK1{n}{t}{t}ReturnVal = GetCurrency(USDSCorpK1.HaveInt, (GetNumber(IAWBBump.SCorpK1(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1{n}{t}{t}ReturnVal = GetCurrency(USDEstK1.HaveInt, (GetNumber(IAWBBump.EstK1(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1{n}{t}{t}ReturnVal = GetCurrency(IASchB.TPAccMktDiscInt){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc{n}{t}{t}ReturnVal = GetCurrency(IASchB.SPAccMktDiscInt){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) + GetBool(IASchB.JtAccMktDiscInt) > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc - GetBool(IASchB.SPAccMktDiscInt){n}{t}{t}ReturnVal = GetCurrency(IASchB.JtAccMktDiscInt){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) + GetBool(IASchB.JtAccMktDiscInt) + GetBool(IASchB.TPContigentPay) > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc - GetBool(IASchB.SPAccMktDiscInt) - GetBool(IASchB.JtAccMktDiscInt){n}{t}{t}ReturnVal = GetCurrency(IASchB.TPContigentPay){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) + GetBool(IASchB.JtAccMktDiscInt) + GetBool(IASchB.TPContigentPay) + GetBool(IASchB.SPContigentPay) > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc - GetBool(IASchB.SPAccMktDiscInt) - GetBool(IASchB.JtAccMktDiscInt) - GetBool(IASchB.TPContigentPay){n}{t}{t}ReturnVal = GetCurrency(IASchB.SPContigentPay){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) + GetBool(IASchB.JtAccMktDiscInt) + GetBool(IASchB.TPContigentPay) + GetBool(IASchB.SPContigentPay) + GetBool(IASchB.JtContigentPay) > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc - GetBool(IASchB.SPAccMktDiscInt) - GetBool(IASchB.JtAccMktDiscInt) - GetBool(IASchB.TPContigentPay) - GetBool(IASchB.SPContigentPay){n}{t}{t}ReturnVal = GetCurrency(IASchB.JtContigentPay){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub ISp1_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}Dim ResSFM As Integer{n}{t}Dim OthSFM As Integer{n}{t}Dim OID As Integer{n}{t}Dim INT1099 As Integer{n}{t}Dim PartK1 As Integer{n}{t}Dim SCorpK1 As Integer{n}{t}Dim EstK1 As Integer{n}{t}Dim TPAccMktDisc As Boolean{n}{t}{n}{t}ResSFM = GetNumber(IAWBBump.ResSFMNbr){n}{t}OthSFM = GetNumber(IAWBBump.OthSFMNbr){n}{t}OID = GetNumber(IAWBBump.OIDNbr){n}{t}INT1099 = GetNumber(IAWBBump.INTNbr){n}{t}PartK1 = GetNumber(IAWBBump.PartK1Nbr){n}{t}SCorpK1 = GetNumber(IAWBBump.SCorpK1Nbr){n}{t}EstK1 = GetNumber(IAWBBump.EstK1Nbr){n}{t}TPAccMktDisc = GetBool(IASchB.TPAccMktDiscInt){n}{t}{n}{t}If Index = 6 And GetNumber(IASchB.TotINTCopies) > 7 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf ResSFM > Index Then{n}{t}{t}ReturnVal = GetBool(USDSFM.Spouse, GetNumber(IAWBBump.ResSFM(Index))){n}{t}ElseIf ResSFM + OthSFM > Index Then{n}{t}{t}Stuff = (Index) - ResSFM{n}{t}{t}ReturnVal = GetBool(USDSFM.Spouse, (GetNumber(IAWBBump.OthSFM(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM{n}{t}{t}ReturnVal = GetBool(USD1099OID.Spouse, (GetNumber(IAWBBump.OID(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID{n}{t}{t}ReturnVal = GetBool(USD1099INT.Spouse, (GetNumber(IAWBBump.Int(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099{n}{t}{t}ReturnVal = GetBool(USDPartK1.Spouse, (GetNumber(IAWBBump.PartK1(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099 - PartK1{n}{t}{t}ReturnVal = GetBool(USDSCorpK1.Spouse, (GetNumber(IAWBBump.SCorpK1(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1{n}{t}{t}ReturnVal = GetBool(USDEstK1.Spouse, (GetNumber(IAWBBump.EstK1(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1{n}{t}{t}ReturnVal = 0{n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc{n}{t}{t}ReturnVal = 1{n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) + GetBool(IASchB.JtAccMktDiscInt) > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc - GetBool(IASchB.SPAccMktDiscInt){n}{t}{t}ReturnVal = 0{n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) + GetBool(IASchB.JtAccMktDiscInt) + GetBool(IASchB.TPContigentPay) > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc - GetBool(IASchB.SPAccMktDiscInt) - GetBool(IASchB.JtAccMktDiscInt){n}{t}{t}ReturnVal = 0{n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) + GetBool(IASchB.JtAccMktDiscInt) + GetBool(IASchB.TPContigentPay) + GetBool(IASchB.SPContigentPay) > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc - GetBool(IASchB.SPAccMktDiscInt) - GetBool(IASchB.JtAccMktDiscInt) - GetBool(IASchB.TPContigentPay){n}{t}{t}ReturnVal = 1{n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) + GetBool(IASchB.JtAccMktDiscInt) + GetBool(IASchB.TPContigentPay) + GetBool(IASchB.SPContigentPay) + GetBool(IASchB.JtContigentPay) > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc - GetBool(IASchB.SPAccMktDiscInt) - GetBool(IASchB.JtAccMktDiscInt) - GetBool(IASchB.TPContigentPay) - GetBool(IASchB.SPContigentPay){n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub ITp1_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}Dim ResSFM As Integer{n}{t}Dim OthSFM As Integer{n}{t}Dim OID As Integer{n}{t}Dim INT1099 As Integer{n}{t}Dim PartK1 As Integer{n}{t}Dim SCorpK1 As Integer{n}{t}Dim EstK1 As Integer{n}{t}Dim TPAccMktDisc As Boolean{n}{t}{n}{t}ResSFM = GetNumber(IAWBBump.ResSFMNbr){n}{t}OthSFM = GetNumber(IAWBBump.OthSFMNbr){n}{t}OID = GetNumber(IAWBBump.OIDNbr){n}{t}INT1099 = GetNumber(IAWBBump.INTNbr){n}{t}PartK1 = GetNumber(IAWBBump.PartK1Nbr){n}{t}SCorpK1 = GetNumber(IAWBBump.SCorpK1Nbr){n}{t}EstK1 = GetNumber(IAWBBump.EstK1Nbr){n}{t}TPAccMktDisc = GetBool(IASchB.TPAccMktDiscInt){n}{t}{n}{t}If Index = 6 And GetNumber(IASchB.TotINTCopies) > 7 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf ResSFM > Index Then{n}{t}{t}ReturnVal = GetBool(USDSFM.Taxpayer, GetNumber(IAWBBump.ResSFM(Index))){n}{t}ElseIf ResSFM + OthSFM > Index Then{n}{t}{t}Stuff = (Index) - ResSFM{n}{t}{t}ReturnVal = GetBool(USDSFM.Taxpayer, (GetNumber(IAWBBump.OthSFM(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM{n}{t}{t}ReturnVal = GetBool(USD1099OID.Taxpayer, (GetNumber(IAWBBump.OID(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID{n}{t}{t}ReturnVal = GetBool(USD1099INT.Taxpayer, (GetNumber(IAWBBump.Int(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099{n}{t}{t}ReturnVal = GetBool(USDPartK1.Taxpayer, (GetNumber(IAWBBump.PartK1(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099 - PartK1{n}{t}{t}ReturnVal = GetBool(USDSCorpK1.Taxpayer, (GetNumber(IAWBBump.SCorpK1(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1{n}{t}{t}ReturnVal = GetBool(USDEstK1.Taxpayer, (GetNumber(IAWBBump.EstK1(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1{n}{t}{t}ReturnVal = 1{n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc{n}{t}{t}ReturnVal = 0{n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) + GetBool(IASchB.JtAccMktDiscInt) > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc - GetBool(IASchB.SPAccMktDiscInt){n}{t}{t}ReturnVal = 0{n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) + GetBool(IASchB.JtAccMktDiscInt) + GetBool(IASchB.TPContigentPay) > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc - GetBool(IASchB.SPAccMktDiscInt) - GetBool(IASchB.JtAccMktDiscInt){n}{t}{t}ReturnVal = 1{n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) + GetBool(IASchB.JtAccMktDiscInt) + GetBool(IASchB.TPContigentPay) + GetBool(IASchB.SPContigentPay) > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc - GetBool(IASchB.SPAccMktDiscInt) - GetBool(IASchB.JtAccMktDiscInt) - GetBool(IASchB.TPContigentPay){n}{t}{t}ReturnVal = 0{n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) + GetBool(IASchB.JtAccMktDiscInt) + GetBool(IASchB.TPContigentPay) + GetBool(IASchB.SPContigentPay) + GetBool(IASchB.JtContigentPay) > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc - GetBool(IASchB.SPAccMktDiscInt) - GetBool(IASchB.JtAccMktDiscInt) - GetBool(IASchB.TPContigentPay) - GetBool(IASchB.SPContigentPay){n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub JtAccMktDiscInt_Calculation(){n}{t}Dim count As Integer{n}{t}Dim Lim As Integer{n}{t}Dim Total As Currency{n}{t}{n}{t}Lim = GetAllCopies(USDCapGain){n}{t}count = 1{n}{t}Total = 0{n}{t}{n}{t}Do While count <= Lim{n}{t}{t}If GetBool(USDCapGain.Joint, count) = True And GetCurrency(USDCapGain.IntIncome, count) > 0 Then{n}{t}{t}{t}Total = Total + GetCurrency(USDCapGain.IntIncome, count){n}{t}{t}Else{n}{t}{t}{t}Total = Total{n}{t}{t}End If{n}{t}{t}{n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = Total{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub JtContigentPay_Calculation(){n}{t}Dim count As Integer{n}{t}Dim Lim As Integer{n}{t}Dim Total As Currency{n}{t}{n}{t}Lim = GetAllCopies(USDCapGain){n}{t}count = 1{n}{t}Total = 0{n}{t}{n}{t}Do While count <= Lim{n}{t}{t}If GetBool(USDCapGain.Joint, count) = True And GetBool(USDCapGain.Ordinary, count) = True Then{n}{t}{t}{t}Total = Total + GetCurrency(USDCapGain.OrdGain, count) - GetCurrency(USDCapGain.OrdLoss, count){n}{t}{t}Else{n}{t}{t}{t}Total = Total{n}{t}{t}End If{n}{t}{t}{n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = Total{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Names_Calculation(){n}{t}ReturnVal = GetString(IARequired.CombNames){n}End Sub
Sub Payer_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}Dim ResSFM As Integer{n}{t}Dim OthSFM As Integer{n}{t}Dim OID As Integer{n}{t}Dim INT1099 As Integer{n}{t}Dim PartK1 As Integer{n}{t}Dim SCorpK1 As Integer{n}{t}Dim EstK1 As Integer{n}{t}Dim TPAccMktDisc As Boolean{n}{t}{n}{t}ResSFM = GetNumber(IAWBBump.ResSFMNbr){n}{t}OthSFM = GetNumber(IAWBBump.OthSFMNbr){n}{t}OID = GetNumber(IAWBBump.OIDNbr){n}{t}INT1099 = GetNumber(IAWBBump.INTNbr){n}{t}PartK1 = GetNumber(IAWBBump.PartK1Nbr){n}{t}SCorpK1 = GetNumber(IAWBBump.SCorpK1Nbr){n}{t}EstK1 = GetNumber(IAWBBump.EstK1Nbr){n}{t}TPAccMktDisc = GetBool(IASchB.TPAccMktDiscInt){n}{t}{n}{t}If Index = 6 And GetNumber(IASchB.TotINTCopies) > 7 Then{n}{t}{t}ReturnVal = "See Statement Attached"{n}{t}ElseIf ResSFM > Index Then{n}{t}{t}ReturnVal = GetString(USDSFM.NameAdd, GetNumber(IAWBBump.ResSFM(Index))){n}{t}ElseIf ResSFM + OthSFM > Index Then{n}{t}{t}Stuff = (Index) - ResSFM{n}{t}{t}ReturnVal = GetString(USDSFM.PayerName, (GetNumber(IAWBBump.OthSFM(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM{n}{t}{t}ReturnVal = GetString(USD1099OID.PayerName, (GetNumber(IAWBBump.OID(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID{n}{t}{t}ReturnVal = GetString(USD1099INT.PayerName, (GetNumber(IAWBBump.Int(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099{n}{t}{t}ReturnVal = GetString(USDPartK1.CoName, (GetNumber(IAWBBump.PartK1(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099 - PartK1{n}{t}{t}ReturnVal = GetString(USDSCorpK1.CoName, (GetNumber(IAWBBump.SCorpK1(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1{n}{t}{t}ReturnVal = GetString(USDEstK1.TrustName, (GetNumber(IAWBBump.EstK1(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1{n}{t}{t}ReturnVal = "Accrued Market Discount"{n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc{n}{t}{t}ReturnVal = "Accrued Market Discount"{n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) + GetBool(IASchB.JtAccMktDiscInt) > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc - GetBool(IASchB.SPAccMktDiscInt){n}{t}{t}ReturnVal = "Accrued Market Discount"{n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) + GetBool(IASchB.JtAccMktDiscInt) + GetBool(IASchB.TPContigentPay) > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc - GetBool(IASchB.SPAccMktDiscInt) - GetBool(IASchB.JtAccMktDiscInt){n}{t}{t}ReturnVal = "Contingent Payment Debt Instrument"{n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) + GetBool(IASchB.JtAccMktDiscInt) + GetBool(IASchB.TPContigentPay) + GetBool(IASchB.SPContigentPay) > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc - GetBool(IASchB.SPAccMktDiscInt) - GetBool(IASchB.JtAccMktDiscInt) - GetBool(IASchB.TPContigentPay){n}{t}{t}ReturnVal = "Contingent Payment Debt Instrument"{n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) + GetBool(IASchB.JtAccMktDiscInt) + GetBool(IASchB.TPContigentPay) + GetBool(IASchB.SPContigentPay) + GetBool(IASchB.JtContigentPay) > Index Then{n}{t}{t}Stuff = (Index) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc - GetBool(IASchB.SPAccMktDiscInt) - GetBool(IASchB.JtAccMktDiscInt) - GetBool(IASchB.TPContigentPay) - GetBool(IASchB.SPContigentPay){n}{t}{t}ReturnVal = "Contingent Payment Debt Instrument"{n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}{n}End Sub
Sub PrintIAB_Calculation(){n}{t}If GetCurrency(IASchB.TotalInterest) > 1500@ Or GetCurrency(IASchB.TotalDividend) > 1500@ Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPAccMktDiscInt_Calculation(){n}{t}Dim count As Integer{n}{t}Dim Lim As Integer{n}{t}Dim Total As Currency{n}{t}{n}{t}Lim = GetAllCopies(USDCapGain){n}{t}count = 1{n}{t}Total = 0{n}{t}{n}{t}Do While count <= Lim{n}{t}{t}If GetBool(USDCapGain.Spouse, count) = True And GetCurrency(USDCapGain.IntIncome, count) > 0 Then{n}{t}{t}{t}Total = Total + GetCurrency(USDCapGain.IntIncome, count){n}{t}{t}Else{n}{t}{t}{t}Total = Total{n}{t}{t}End If{n}{t}{t}{n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = Total{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPContigentPay_Calculation(){n}{t}Dim count As Integer{n}{t}Dim Lim As Integer{n}{t}Dim Total As Currency{n}{t}{n}{t}Lim = GetAllCopies(USDCapGain){n}{t}count = 1{n}{t}Total = 0{n}{t}{n}{t}Do While count <= Lim{n}{t}{t}If GetBool(USDCapGain.Spouse, count) = True And GetBool(USDCapGain.Ordinary, count) = True Then{n}{t}{t}{t}Total = Total + GetCurrency(USDCapGain.OrdGain, count) - GetCurrency(USDCapGain.OrdLoss, count){n}{t}{t}Else{n}{t}{t}{t}Total = Total{n}{t}{t}End If{n}{t}{t}{n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = Total{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IAF1040.SSN){n}End Sub
Sub TaxDiv_Calculation(Index As Integer){n}{t}ReturnVal = MaxValue(0, GetCurrency(IASchB.Dividend(Index)) - GetCurrency(IASchB.ExemptDiv(Index))){n}End Sub
Sub TaxInt_Calculation(Index As Integer){n}{t}ReturnVal = MaxValue(0, GetCurrency(IASchB.Interest(Index)) - GetCurrency(IASchB.ExemptInt(Index))){n}End Sub
Sub TotAccMktDiscInt_Calculation(){n}{t}Dim count As Integer{n}{t}Dim Lim As Integer{n}{t}Dim Total As Currency{n}{t}{n}{t}Lim = GetAllCopies(USDCapGain){n}{t}count = 1{n}{t}Total = 0{n}{t}{n}{t}Do While count <= Lim{n}{t}{t}If GetCurrency(USDCapGain.IntIncome, count) > 0 Then{n}{t}{t}{t}Total = Total + GetCurrency(USDCapGain.IntIncome, count){n}{t}{t}Else{n}{t}{t}{t}Total = Total{n}{t}{t}End If{n}{t}{t}{n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = Round(Total){n}End Sub
Sub TotalDividend_Calculation(){n}{t}Dim count As Integer{n}{t}Dim SubTot As Currency{n}{n}{t}count = 0{n}{t}SubTot = 0{n}{n}{t}Do While count < 7{n}{t}{t}SubTot = SubTot + GetCurrency(IASchB.Dividend(count)){n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = SubTot{n}End Sub
Sub TotalExemptDiv_Calculation(){n}{t}Dim count As Integer{n}{t}Dim SubTot As Currency{n}{n}{t}count = 0{n}{t}SubTot = 0{n}{n}{t}Do While count < 7{n}{t}{t}SubTot = SubTot + GetCurrency(IASchB.ExemptDiv(count)){n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = SubTot{n}End Sub
Sub TotalExemptInt_Calculation(){n}{t}Dim count As Integer{n}{t}Dim SubTot As Currency{n}{n}{t}count = 0{n}{t}SubTot = 0{n}{n}{t}Do While count < 7{n}{t}{t}SubTot = SubTot + GetCurrency(IASchB.ExemptInt(count)){n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = SubTot{n}End Sub
Sub TotalInterest_Calculation(){n}{t}Dim count As Integer{n}{t}Dim SubTot As Currency{n}{n}{t}count = 0{n}{t}SubTot = 0{n}{n}{t}Do While count < 7{n}{t}{t}SubTot = SubTot + GetCurrency(IASchB.Interest(count)){n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = SubTot{n}End Sub
Sub TotalTaxDiv_Calculation(){n}{t}Dim count As Integer{n}{t}Dim SubTot As Currency{n}{n}{t}count = 0{n}{t}SubTot = 0{n}{n}{t}Do While count < 7{n}{t}{t}SubTot = SubTot + GetCurrency(IASchB.TaxDiv(count)){n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = SubTot{n}End Sub
Sub TotalTaxInt_Calculation(){n}{t}Dim count As Integer{n}{t}Dim SubTot As Currency{n}{n}{t}count = 0{n}{t}SubTot = 0{n}{n}{t}Do While count < 7{n}{t}{t}SubTot = SubTot + GetCurrency(IASchB.TaxInt(count)){n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = SubTot{n}End Sub
Sub TotContigentPay_Calculation(){n}{t}Dim count As Integer{n}{t}Dim Lim As Integer{n}{t}Dim Total As Currency{n}{t}{n}{t}Lim = GetAllCopies(USDCapGain){n}{t}count = 1{n}{t}Total = 0{n}{t}{n}{t}Do While count <= Lim{n}{t}{t}If GetBool(USDCapGain.Ordinary, count) = True Then{n}{t}{t}{t}Total = Total + GetCurrency(USDCapGain.OrdGain, count) - GetCurrency(USDCapGain.OrdLoss, count){n}{t}{t}Else{n}{t}{t}{t}Total = Total{n}{t}{t}End If{n}{t}{t}{n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = Round(Total){n}End Sub
Sub TotDIVCopies_Calculation(){n}{t}ReturnVal = GetNumber(IAWBBump.DIVNbr) + GetNumber(IAWBBump.PartK1DivNbr) + GetNumber(IAWBBump.SCorpK1DivNbr) + GetNumber(IAWBBump.EstK1DivNbr) + GetNumber(IAWBBump.F5471Nbr) + GetNumber(IAWBBump.F8621Nbr) + GetNumber(IAWBBump.F8814Nbr){n}End Sub
Sub TotINTCopies_Calculation(){n}{t}ReturnVal = GetNumber(IAWBBump.ResSFMNbr) + GetNumber(IAWBBump.OthSFMNbr) + GetNumber(IAWBBump.OIDNbr) + GetNumber(IAWBBump.INTNbr) + GetNumber(IAWBBump.PartK1Nbr) + GetNumber(IAWBBump.SCorpK1Nbr) + GetNumber(IAWBBump.EstK1Nbr) + GetNumber(IASchB.AccMktDiscIntCopies) + GetNumber(IASchB.ContigentPayCopies){n}End Sub
Sub TPAccMktDiscInt_Calculation(){n}{t}ReturnVal = GetCurrency(IASchB.TotAccMktDiscInt) - GetCurrency(IASchB.SPAccMktDiscInt) - GetCurrency(IASchB.JtAccMktDiscInt){n}End Sub
Sub TPContigentPay_Calculation(){n}{t}ReturnVal = GetCurrency(IASchB.TotContigentPay) - GetCurrency(IASchB.SPContigentPay) - GetCurrency(IASchB.JtContigentPay){n}End SubSub Desc_Calculation(){n}{t}ReturnVal = CStr(GetCurrency(IAStateEst.TotIAEst)){n}End Sub
Sub Exist_Calculation(){n}{t}ReturnVal = 1{n}End Sub
Sub MobDisQual_Calculation(){n}{t}If GetCurrency(IAStateEst.TotIAEst) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Names_Calculation(){n}{t}ReturnVal = GetString(IARequired.CombNames){n}End Sub
Sub SPIAEst_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IAStateEst.SPStApply) + GetCurrency(IAStateEst.SPStQ1) + GetCurrency(IAStateEst.SPStQ2) + GetCurrency(IAStateEst.SPStQ3) + GetCurrency(IAStateEst.SPStQ4) + GetCurrency(IAStateEst.SPStLate){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPName_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.SPCommon){n}End Sub
Sub SPStLateDate_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetDate(IAStateEst.TPStLateDate){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub SPStQ1Date_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetDate(IAStateEst.TPStQ1Date){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub SPStQ2Date_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetDate(IAStateEst.TPStQ2Date){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub SPStQ3Date_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetDate(IAStateEst.TPStQ3Date){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub SPStQ4Date_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetDate(IAStateEst.TPStQ4Date){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IAF1040.SSN){n}End Sub
Sub StApply_Calculation(){n}{t}If GetString(USWEstPay.StName1) = "Iowa" Then{n}{t}{t}ReturnVal = GetCurrency(USWEstPay.StApply){n}{t}ElseIf GetString(USWEstPay.StName2) = "Iowa" Then{n}{t}{t}ReturnVal = GetCurrency(USWEstPay.St2Apply){n}{t}ElseIf GetString(USWEstPay.StName3) = "Iowa" Then{n}{t}{t}ReturnVal = GetCurrency(USWEstPay.St3Apply){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub StLate_Calculation(){n}{t}If GetString(USWEstPay.StName1) = "Iowa" Then{n}{t}{t}ReturnVal = GetCurrency(USWEstPay.StLate){n}{t}ElseIf GetString(USWEstPay.StName2) = "Iowa" Then{n}{t}{t}ReturnVal = GetCurrency(USWEstPay.St2Late){n}{t}ElseIf GetString(USWEstPay.StName3) = "Iowa" Then{n}{t}{t}ReturnVal = GetCurrency(USWEstPay.St3Late){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub StQ1_Calculation(){n}{t}If GetString(USWEstPay.StName1) = "Iowa" Then{n}{t}{t}ReturnVal = GetCurrency(USWEstPay.StQ1){n}{t}ElseIf GetString(USWEstPay.StName2) = "Iowa" Then{n}{t}{t}ReturnVal = GetCurrency(USWEstPay.St2Q1){n}{t}ElseIf GetString(USWEstPay.StName3) = "Iowa" Then{n}{t}{t}ReturnVal = GetCurrency(USWEstPay.St3Q1){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub StQ2_Calculation(){n}{t}If GetString(USWEstPay.StName1) = "Iowa" Then{n}{t}{t}ReturnVal = GetCurrency(USWEstPay.StQ2){n}{t}ElseIf GetString(USWEstPay.StName2) = "Iowa" Then{n}{t}{t}ReturnVal = GetCurrency(USWEstPay.St2Q2){n}{t}ElseIf GetString(USWEstPay.StName3) = "Iowa" Then{n}{t}{t}ReturnVal = GetCurrency(USWEstPay.St3Q2){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub StQ3_Calculation(){n}{t}If GetString(USWEstPay.StName1) = "Iowa" Then{n}{t}{t}ReturnVal = GetCurrency(USWEstPay.StQ3){n}{t}ElseIf GetString(USWEstPay.StName2) = "Iowa" Then{n}{t}{t}ReturnVal = GetCurrency(USWEstPay.St2Q3){n}{t}ElseIf GetString(USWEstPay.StName3) = "Iowa" Then{n}{t}{t}ReturnVal = GetCurrency(USWEstPay.St3Q3){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub StQ4_Calculation(){n}{t}If GetString(USWEstPay.StName1) = "Iowa" Then{n}{t}{t}ReturnVal = GetCurrency(USWEstPay.StQ4){n}{t}ElseIf GetString(USWEstPay.StName2) = "Iowa" Then{n}{t}{t}ReturnVal = GetCurrency(USWEstPay.St2Q4){n}{t}ElseIf GetString(USWEstPay.StName3) = "Iowa" Then{n}{t}{t}ReturnVal = GetCurrency(USWEstPay.St3Q4){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TotIAEst_Calculation(){n}{t}ReturnVal = GetCurrency(IAStateEst.StApply) + GetCurrency(IAStateEst.StQ1) + GetCurrency(IAStateEst.StQ2) + GetCurrency(IAStateEst.StQ3) + GetCurrency(IAStateEst.StQ4) + GetCurrency(IAStateEst.StLate){n}End Sub
Sub TPName_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.TPCommon){n}End Sub
Sub TPStApply_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(IAStateEst.StApply) - GetCurrency(IAStateEst.SPStApply)){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAStateEst.StApply){n}{t}End If{n}End Sub
Sub TPStLate_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(IAStateEst.StLate) - GetCurrency(IAStateEst.SPStLate)){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAStateEst.StLate){n}{t}End If{n}End Sub
Sub TPStLateDate_Calculation(){n}{t}If GetString(USWEstPay.StName1) = "Iowa" Then{n}{t}{t}ReturnVal = GetDate(USWEstPay.StLateDate){n}{t}ElseIf GetString(USWEstPay.StName2) = "Iowa" Then{n}{t}{t}ReturnVal = GetDate(USWEstPay.St2LateDate){n}{t}ElseIf GetString(USWEstPay.StName3) = "Iowa" Then{n}{t}{t}ReturnVal = GetDate(USWEstPay.St3LateDate){n}{t}Else{n}{t}{t}ReturnVal = #4/30/2019#{n}{t}End If{n}End Sub
Sub TPStQ1_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(IAStateEst.StQ1) - GetCurrency(IAStateEst.SPStQ1)){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAStateEst.StQ1){n}{t}End If{n}End Sub
Sub TPStQ1Date_Calculation(){n}{t}If GetString(USWEstPay.StName1) = "Iowa" Then{n}{t}{t}ReturnVal = GetDate(USWEstPay.StQ1Date){n}{t}ElseIf GetString(USWEstPay.StName2) = "Iowa" Then{n}{t}{t}ReturnVal = GetDate(USWEstPay.St2Q1Date){n}{t}ElseIf GetString(USWEstPay.StName3) = "Iowa" Then{n}{t}{t}ReturnVal = GetDate(USWEstPay.St3Q1Date){n}{t}Else{n}{t}{t}ReturnVal = #4/30/2018#{n}{t}End If{n}End Sub
Sub TPStQ2_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(IAStateEst.StQ2) - GetCurrency(IAStateEst.SPStQ2)){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAStateEst.StQ2){n}{t}End If{n}End Sub
Sub TPStQ2Date_Calculation(){n}{t}If GetString(USWEstPay.StName1) = "Iowa" Then{n}{t}{t}ReturnVal = GetDate(USWEstPay.StQ2Date){n}{t}ElseIf GetString(USWEstPay.StName2) = "Iowa" Then{n}{t}{t}ReturnVal = GetDate(USWEstPay.St2Q2Date){n}{t}ElseIf GetString(USWEstPay.StName3) = "Iowa" Then{n}{t}{t}ReturnVal = GetDate(USWEstPay.St3Q2Date){n}{t}Else{n}{t}{t}ReturnVal = #7/2/2018#{n}{t}End If{n}End Sub
Sub TPStQ3_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(IAStateEst.StQ3) - GetCurrency(IAStateEst.SPStQ3)){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAStateEst.StQ3){n}{t}End If{n}End Sub
Sub TPStQ3Date_Calculation(){n}{t}If GetString(USWEstPay.StName1) = "Iowa" Then{n}{t}{t}ReturnVal = GetDate(USWEstPay.StQ3Date){n}{t}ElseIf GetString(USWEstPay.StName2) = "Iowa" Then{n}{t}{t}ReturnVal = GetDate(USWEstPay.St2Q3Date){n}{t}ElseIf GetString(USWEstPay.StName3) = "Iowa" Then{n}{t}{t}ReturnVal = GetDate(USWEstPay.St3Q3Date){n}{t}Else{n}{t}{t}ReturnVal = #10/1/2018#{n}{t}End If{n}End Sub
Sub TPStQ4_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(IAStateEst.StQ4) - GetCurrency(IAStateEst.SPStQ4)){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAStateEst.StQ4){n}{t}End If{n}End Sub
Sub TPStQ4Date_Calculation(){n}{t}If GetString(USWEstPay.StName1) = "Iowa" Then{n}{t}{t}ReturnVal = GetDate(USWEstPay.StQ4Date){n}{t}ElseIf GetString(USWEstPay.StName2) = "Iowa" Then{n}{t}{t}ReturnVal = GetDate(USWEstPay.St2Q4Date){n}{t}ElseIf GetString(USWEstPay.StName3) = "Iowa" Then{n}{t}{t}ReturnVal = GetDate(USWEstPay.St3Q4Date){n}{t}Else{n}{t}{t}ReturnVal = #1/31/2019#{n}{t}End If{n}End SubSub Credit_Calculation(Index As Integer){n}{t}If Trim(GetString(IATuition.DepName(Index))) <> "" Then{n}{t}{t}ReturnVal = CDollar(CDbl(MinValue(GetCurrency(IATuition.Expenses(Index)), 1000@)) * 0.25){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub DepName_Calculation(Index As Integer){n}{t}Dim count As Integer{n}{t}Dim Hold As String{n}{t}count = 0{n}{t}Hold = ""{n}{t}{n}  {n}{t}If GetNumber(IAAddDep.FDepAge(0)) > 0 And GetNumber(IAAddDep.FDepAge(0)) < 20 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetString(IAAddDep.FDepName(0)) + " " + GetString(IAAddDep.FDepLast(0)){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetNumber(IAAddDep.FDepAge(1)) > 0 And GetNumber(IAAddDep.FDepAge(1)) < 20 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetString(IAAddDep.FDepName(1)) + " " + GetString(IAAddDep.FDepLast(1)){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetNumber(IAAddDep.FDepAge(2)) > 0 And GetNumber(IAAddDep.FDepAge(2)) < 20 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetString(IAAddDep.FDepName(2)) + " " + GetString(IAAddDep.FDepLast(2)){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetNumber(IAAddDep.FDepAge(3)) > 0 And GetNumber(IAAddDep.FDepAge(3)) < 20 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetString(IAAddDep.FDepName(3)) + " " + GetString(IAAddDep.FDepLast(3)){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetNumber(IAAddDep.FDepAge(4)) > 0 And GetNumber(IAAddDep.FDepAge(4)) < 20 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetString(IAAddDep.FDepName(4)) + " " + GetString(IAAddDep.FDepLast(4)){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetNumber(IAAddDep.FDepAge(5)) > 0 And GetNumber(IAAddDep.FDepAge(5)) < 20 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetString(IAAddDep.FDepName(5)) + " " + GetString(IAAddDep.FDepLast(5)){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetNumber(IAAddDep.FDepAge(6)) > 0 And GetNumber(IAAddDep.FDepAge(6)) < 20 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetString(IAAddDep.FDepName(6)) + " " + GetString(IAAddDep.FDepLast(6)){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetNumber(IAAddDep.FDepAge(7)) > 0 And GetNumber(IAAddDep.FDepAge(7)) < 20 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetString(IAAddDep.FDepName(7)) + " " + GetString(IAAddDep.FDepLast(7)){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetNumber(IAAddDep.FDepAge(8)) > 0 And GetNumber(IAAddDep.FDepAge(8)) < 20 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetString(IAAddDep.FDepName(8)) + " " + GetString(IAAddDep.FDepLast(8)){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetNumber(IAAddDep.FDepAge(9)) > 0 And GetNumber(IAAddDep.FDepAge(9)) < 20 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetString(IAAddDep.FDepName(9)) + " " + GetString(IAAddDep.FDepLast(9)){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetNumber(IAAddDep.FDepAge(10)) > 0 And GetNumber(IAAddDep.FDepAge(10)) < 20 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetString(IAAddDep.FDepName(10)) + " " + GetString(IAAddDep.FDepLast(10)){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetNumber(IAAddDep.FDepAge(11)) > 0 And GetNumber(IAAddDep.FDepAge(11)) < 20 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetString(IAAddDep.FDepName(11)) + " " + GetString(IAAddDep.FDepLast(11)){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetNumber(IAAddDep.FDepAge(12)) > 0 And GetNumber(IAAddDep.FDepAge(12)) < 20 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetString(IAAddDep.FDepName(12)) + " " + GetString(IAAddDep.FDepLast(12)){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetNumber(IAAddDep.FDepAge(13)) > 0 And GetNumber(IAAddDep.FDepAge(13)) < 20 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetString(IAAddDep.FDepName(13)) + " " + GetString(IAAddDep.FDepLast(13)){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetNumber(IAAddDep.FDepAge(14)) > 0 And GetNumber(IAAddDep.FDepAge(14)) < 20 Then{n}{t}{t}If Index = count Then{n}{t}{t}{t}Hold = GetString(IAAddDep.FDepName(14)) + " " + GetString(IAAddDep.FDepLast(14)){n}{t}{t}{t}count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}ReturnVal = Hold{n}End Sub
Sub Description_Calculation(){n}{t}ReturnVal = CStr(GetCurrency(IATuition.TotCR)){n}End Sub
Sub Names_Calculation(){n}{t}ReturnVal = GetString(IARequired.CombNames){n}End Sub
Sub Spouse_Calculation(Index As Integer){n}{t}If Trim(GetString(IATuition.DepName(Index))) <> "" Then{n}{t}{t}If GetBool(IAF1040.CombMFS) = False Then{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}ElseIf GetNumber(IAF1040.DC2) = 0 Then{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}ElseIf GetNumber(IAF1040.DC2) > Index Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IAF1040.SSN){n}End Sub
Sub STuit_Calculation(){n}{t}Dim count As Integer{n}{t}Dim SubTot As Currency{n}{n}{t}count = 0{n}{t}SubTot = 0{n}{n}{t}Do While count < 15{n}{t}{t}If GetBool(IATuition.Spouse(count)) = True Then{n}{t}{t}{t}SubTot = SubTot + GetCurrency(IATuition.Credit(count)){n}{t}{t}Else{n}{t}{t}{t}SubTot = SubTot{n}{t}{t}End If{n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}If GetBool(IAF1040.CombMFS) = True And GetNumber(IAF1040.DC2) > 0 Then{n}{t}{t}ReturnVal = SubTot{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Taxpayer_Calculation(Index As Integer){n}{t}If Trim(GetString(IATuition.DepName(Index))) <> "" And GetBool(IATuition.Spouse(Index)) = False Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TotCR_Calculation(){n}{t}Dim count As Integer{n}{t}Dim SubTot As Currency{n}{n}{t}count = 0{n}{t}SubTot = 0{n}{n}{t}Do While count < 15{n}{t}{t}SubTot = SubTot + GetCurrency(IATuition.Credit(count)){n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = SubTot{n}{t}{n}End Sub
Sub TotExp_Calculation(){n}{t}Dim count As Integer{n}{t}Dim SubTot As Currency{n}{n}{t}count = 0{n}{t}SubTot = 0{n}{n}{t}Do While count < 15{n}{t}{t}SubTot = SubTot + GetCurrency(IATuition.Expenses(count)){n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = SubTot{n}{t}{n}End Sub
Sub TTuit_Calculation(){n}{t}ReturnVal = GetCurrency(IATuition.TotCR) - GetCurrency(IATuition.STuit){n}End SubSub AMTInt_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = True Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAF1040.ItemCheck) = True Then{n}{t}{t}ReturnVal = MinValue(GetCurrency(IAW6251MortInt.TotMortInt), GetCurrency(IAW6251MortInt.MortInt98) + GetCurrency(IAW6251MortInt.RefinInt) + GetCurrency(IAW6251MortInt.OthInt)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Desc_Calculation(){n}{t}ReturnVal = CStr(GetCurrency(IAW6251MortInt.AMTInt)){n}End Sub
Sub Exist_Calculation(){n}{t}ReturnVal = 1{n}End Sub
Sub MortInt_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = True Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAF1040.ItemCheck) = True Then{n}{t}{t}ReturnVal = GetCurrency(IASchA.Mort){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub MortInt98_Calculation(){n}{t}If GetBool(IAF1040.ItemCheck) = True Then{n}{t}{t}ReturnVal = GetCurrency(USD1098.StateAdj){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub MtgePrem_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = True Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAF1040.ItemCheck) = True Then{n}{t}{t}ReturnVal = GetCurrency(IASchA.MtgePrem){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Names_Calculation(){n}{t}ReturnVal = GetString(IARequired.CombNames){n}End Sub
Sub Points_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = True Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAF1040.ItemCheck) = True Then{n}{t}{t}ReturnVal = GetCurrency(IASchA.PtsNot){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Sfm_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = True Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAF1040.ItemCheck) = True Then{n}{t}{t}ReturnVal = GetCurrency(IASchA.MortNot){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IAF1040.SSN){n}End Sub
Sub TotMortInt_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = True Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAF1040.ItemCheck) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAW6251MortInt.MortInt) + GetCurrency(IAW6251MortInt.Sfm) + GetCurrency(IAW6251MortInt.Points) + GetCurrency(IAW6251MortInt.MtgePrem){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End SubSub DIV_Calculation(Index As Integer){n}{t}Dim count As Long{n}{t}Dim max As Long{n}{t}Dim listedcount As Long{n}{t}{n}{t}listedcount = 0{n}{t}max = GetAllCopies(USD1099DIV){n}{t}count = 0{n}{t}{n}{t}Do While count < max{n}{t}{t}count = count + 1{n}{t}{t}If GetCurrency(USD1099DIV.OrdDiv, count) + GetCurrency(USD1099DIV.FedExmpt, count) > 0 Then{n}{t}{t}{t}If listedcount = Index Then{n}{t}{t}{t}{t}ReturnVal = count{n}{t}{t}{t}Else{n}{t}{t}{t}{t}listedcount = listedcount + 1{n}{t}{t}{t}End If{n}{t}{t}End If{n}{t}Loop{n}{t}{t}{n}{t}ReturnVal = 0{n}End Sub
Sub DIVNbr_Calculation(){n}{t}Dim count As Integer{n}{t}Dim Lim As Integer{n}{t}Dim Total As Integer{n}{t}{n}{t}Lim = GetAllCopies(USD1099DIV){n}{t}count = 1{n}{t}Total = 0{n}{t}{n}{t}Do While count <= Lim{n}{t}{t}If GetCurrency(USD1099DIV.OrdDiv, count) + GetCurrency(USD1099DIV.FedExmpt, count) > 0 Then{n}{t}{t}{t}Total = Total + 1{n}{t}{t}Else{n}{t}{t}{t}Total = Total{n}{t}{t}End If{n}{t}{t}{n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = Total{n}End Sub
Sub EstK1_Calculation(Index As Integer){n}{t}Dim count As Long{n}{t}Dim max As Long{n}{t}Dim listedcount As Long{n}{t}{n}{t}listedcount = 0{n}{t}max = GetAllCopies(USDEstK1){n}{t}count = 0{n}{t}{n}{t}Do While count < max{n}{t}{t}count = count + 1{n}{t}{t}If GetCurrency(USDEstK1.HaveInt, count) > 0 Then{n}{t}{t}{t}If listedcount = Index Then{n}{t}{t}{t}{t}ReturnVal = count{n}{t}{t}{t}Else{n}{t}{t}{t}{t}listedcount = listedcount + 1{n}{t}{t}{t}End If{n}{t}{t}End If{n}{t}Loop{n}{t}{t}{n}{t}ReturnVal = 0{n}End Sub
Sub EstK1Div_Calculation(Index As Integer){n}{t}Dim count As Long{n}{t}Dim max As Long{n}{t}Dim listedcount As Long{n}{t}{n}{t}listedcount = 0{n}{t}max = GetAllCopies(USDEstK1){n}{t}count = 0{n}{t}{n}{t}Do While count < max{n}{t}{t}count = count + 1{n}{t}{t}If GetCurrency(USDEstK1.Dividends, count) > 0 Then{n}{t}{t}{t}If listedcount = Index Then{n}{t}{t}{t}{t}ReturnVal = count{n}{t}{t}{t}Else{n}{t}{t}{t}{t}listedcount = listedcount + 1{n}{t}{t}{t}End If{n}{t}{t}End If{n}{t}Loop{n}{t}{t}{n}{t}ReturnVal = 0{n}End Sub
Sub EstK1DivNbr_Calculation(){n}{t}Dim count As Integer{n}{t}Dim Lim As Integer{n}{t}Dim Total As Integer{n}{t}{n}{t}Lim = GetAllCopies(USDEstK1){n}{t}count = 1{n}{t}Total = 0{n}{t}{n}{t}Do While count <= Lim{n}{t}{t}If GetCurrency(USDEstK1.Dividends, count) > 0 Then{n}{t}{t}{t}Total = Total + 1{n}{t}{t}Else{n}{t}{t}{t}Total = Total{n}{t}{t}End If{n}{t}{t}{n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = Total{n}End Sub
Sub EstK1Nbr_Calculation(){n}{t}Dim count As Integer{n}{t}Dim Lim As Integer{n}{t}Dim Total As Integer{n}{t}{n}{t}Lim = GetAllCopies(USDEstK1){n}{t}count = 1{n}{t}Total = 0{n}{t}{n}{t}Do While count <= Lim{n}{t}{t}If GetCurrency(USDEstK1.HaveInt, count) > 0 Then{n}{t}{t}{t}Total = Total + 1{n}{t}{t}Else{n}{t}{t}{t}Total = Total{n}{t}{t}End If{n}{t}{t}{n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = Total{n}End Sub
Sub F5471_Calculation(Index As Integer){n}{t}Dim count As Long{n}{t}Dim max As Long{n}{t}Dim listedcount As Long{n}{t}{n}{t}listedcount = 0{n}{t}max = GetAllCopies(USW5471SchI){n}{t}count = 0{n}{t}{n}{t}Do While count < max{n}{t}{t}count = count + 1{n}{t}{t}If GetCurrency(USW5471SchI.DivOrd, count) > 0 And ((GetString(USW5471SchI.SchISSN, count) = GetString(USWBasicInfo.SSN)) Or (GetString(USW5471SchI.SchISSN, count) = GetString(USWBasicInfo.SpouseSSN))) Then{n}{t}{t}{t}If listedcount = Index Then{n}{t}{t}{t}{t}ReturnVal = count{n}{t}{t}{t}Else{n}{t}{t}{t}{t}listedcount = listedcount + 1{n}{t}{t}{t}End If{n}{t}{t}End If{n}{t}Loop{n}{t}{t}{n}{t}ReturnVal = 0{n}End Sub
Sub F5471Nbr_Calculation(){n}{t}Dim count As Integer{n}{t}Dim Lim As Integer{n}{t}Dim Total As Integer{n}{t}{n}{t}Lim = GetAllCopies(USW5471SchI){n}{t}count = 1{n}{t}Total = 0{n}{t}{n}{t}Do While count <= Lim{n}{t}{t}If GetCurrency(USW5471SchI.DivOrd, count) > 0 And ((GetString(USW5471SchI.SchISSN, count) = GetString(USWBasicInfo.SSN)) Or (GetString(USW5471SchI.SchISSN, count) = GetString(USWBasicInfo.SpouseSSN))) Then{n}{t}{t}{t}Total = Total + 1{n}{t}{t}Else{n}{t}{t}{t}Total = Total{n}{t}{t}End If{n}{t}{t}{n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = Total{n}End Sub
Sub F8621_Calculation(Index As Integer){n}{t}Dim count As Long{n}{t}Dim max As Long{n}{t}Dim listedcount As Long{n}{t}{n}{t}listedcount = 0{n}{t}max = GetAllCopies(USF8621){n}{t}count = 0{n}{t}{n}{t}Do While count < max{n}{t}{t}count = count + 1{n}{t}{t}If GetCurrency(USF8621.DivTo1040, count) > 0 Then{n}{t}{t}{t}If listedcount = Index Then{n}{t}{t}{t}{t}ReturnVal = count{n}{t}{t}{t}Else{n}{t}{t}{t}{t}listedcount = listedcount + 1{n}{t}{t}{t}End If{n}{t}{t}End If{n}{t}Loop{n}{t}{t}{n}{t}ReturnVal = 0{n}End Sub
Sub F8621Nbr_Calculation(){n}{t}Dim count As Integer{n}{t}Dim Lim As Integer{n}{t}Dim Total As Integer{n}{t}{n}{t}Lim = GetAllCopies(USF8621){n}{t}count = 1{n}{t}Total = 0{n}{t}{n}{t}Do While count <= Lim{n}{t}{t}If GetCurrency(USF8621.DivTo1040, count) > 0 Then{n}{t}{t}{t}Total = Total + 1{n}{t}{t}Else{n}{t}{t}{t}Total = Total{n}{t}{t}End If{n}{t}{t}{n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = Total{n}End Sub
Sub F8814_Calculation(Index As Integer){n}{t}Dim count As Long{n}{t}Dim max As Long{n}{t}Dim listedcount As Long{n}{t}{n}{t}listedcount = 0{n}{t}max = GetAllCopies(USF8814){n}{t}count = 0{n}{t}{n}{t}Do While count < max{n}{t}{t}count = count + 1{n}{t}{t}If GetCurrency(USF8814.L6XL7, count) > 0 Then{n}{t}{t}{t}If listedcount = Index Then{n}{t}{t}{t}{t}ReturnVal = count{n}{t}{t}{t}Else{n}{t}{t}{t}{t}listedcount = listedcount + 1{n}{t}{t}{t}End If{n}{t}{t}End If{n}{t}Loop{n}{t}{t}{n}{t}ReturnVal = 0{n}End Sub
Sub F8814Nbr_Calculation(){n}{t}Dim count As Integer{n}{t}Dim Lim As Integer{n}{t}Dim Total As Integer{n}{t}{n}{t}Lim = GetAllCopies(USF8814){n}{t}count = 1{n}{t}Total = 0{n}{t}{n}{t}Do While count <= Lim{n}{t}{t}If GetCurrency(USF8814.L6XL7, count) > 0 Then{n}{t}{t}{t}Total = Total + 1{n}{t}{t}Else{n}{t}{t}{t}Total = Total{n}{t}{t}End If{n}{t}{t}{n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = Total{n}End Sub
Sub INT_Calculation(Index As Integer){n}{t}Dim count As Long{n}{t}Dim max As Long{n}{t}Dim listedcount As Long{n}{t}{n}{t}listedcount = 0{n}{t}max = GetAllCopies(USD1099INT){n}{t}count = 0{n}{t}{n}{t}Do While count < max{n}{t}{t}count = count + 1{n}{t}{t}If GetCurrency(USD1099INT.BAmtEF, count) + GetCurrency(USD1099INT.FedExmpt, count) > 0 Then{n}{t}{t}{t}If listedcount = Index Then{n}{t}{t}{t}{t}ReturnVal = count{n}{t}{t}{t}Else{n}{t}{t}{t}{t}listedcount = listedcount + 1{n}{t}{t}{t}End If{n}{t}{t}End If{n}{t}Loop{n}{t}{t}{n}{t}ReturnVal = 0{n}End Sub
Sub INTNbr_Calculation(){n}{t}Dim count As Integer{n}{t}Dim Lim As Integer{n}{t}Dim Total As Integer{n}{t}{n}{t}Lim = GetAllCopies(USD1099INT){n}{t}count = 1{n}{t}Total = 0{n}{t}{n}{t}Do While count <= Lim{n}{t}{t}If GetCurrency(USD1099INT.BAmtEF, count) + GetCurrency(USD1099INT.FedExmpt, count) > 0 Then{n}{t}{t}{t}Total = Total + 1{n}{t}{t}Else{n}{t}{t}{t}Total = Total{n}{t}{t}End If{n}{t}{t}{n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = Total{n}End Sub
Sub Names_Calculation(){n}{t}ReturnVal = GetString(IASchB.Names){n}End Sub
Sub OID_Calculation(Index As Integer){n}{t}Dim count As Long{n}{t}Dim max As Long{n}{t}Dim listedcount As Long{n}{t}{n}{t}listedcount = 0{n}{t}max = GetAllCopies(USD1099OID){n}{t}count = 0{n}{t}{n}{t}Do While count < max{n}{t}{t}count = count + 1{n}{t}{t}If GetCurrency(USD1099OID.BAmt, count) > 0 Or Round(GetCurrency(USD1099OID.BOIDAdjAmt, count)) <> 0 Or Round(GetCurrency(USD1099OID.TaxExempt, count)) <> 0 Then{n}{t}{t}{t}If listedcount = Index Then{n}{t}{t}{t}{t}ReturnVal = count{n}{t}{t}{t}Else{n}{t}{t}{t}{t}listedcount = listedcount + 1{n}{t}{t}{t}End If{n}{t}{t}End If{n}{t}Loop{n}{t}{t}{n}{t}ReturnVal = 0{n}End Sub
Sub OIDNbr_Calculation(){n}{t}Dim count As Integer{n}{t}Dim Lim As Integer{n}{t}Dim Total As Integer{n}{t}{n}{t}Lim = GetAllCopies(USD1099OID){n}{t}count = 1{n}{t}Total = 0{n}{t}{n}{t}Do While count <= Lim{n}{t}{t}If GetCurrency(USD1099OID.BAmt, count) > 0 Or Round(GetCurrency(USD1099OID.BOIDAdjAmt, count)) <> 0 Or Round(GetCurrency(USD1099OID.TaxExempt, count)) <> 0 Then{n}{t}{t}{t}Total = Total + 1{n}{t}{t}Else{n}{t}{t}{t}Total = Total{n}{t}{t}End If{n}{t}{t}{n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = Total{n}End Sub
Sub OthSFM_Calculation(Index As Integer){n}{t}Dim count As Long{n}{t}Dim max As Long{n}{t}Dim listedcount As Long{n}{t}{n}{t}listedcount = 0{n}{t}max = GetAllCopies(USDSFM){n}{t}count = 0{n}{t}{n}{t}Do While count < max{n}{t}{t}count = count + 1{n}{t}{t}If GetBool(USDSFM.Residence, count) = False And GetCurrency(USDSFM.Interest, count) > 0 Then{n}{t}{t}{t}If listedcount = Index Then{n}{t}{t}{t}{t}ReturnVal = count{n}{t}{t}{t}Else{n}{t}{t}{t}{t}listedcount = listedcount + 1{n}{t}{t}{t}End If{n}{t}{t}End If{n}{t}Loop{n}{t}{t}{n}{t}ReturnVal = 0{n}End Sub
Sub OthSFMNbr_Calculation(){n}{t}Dim count As Integer{n}{t}Dim Lim As Integer{n}{t}Dim Total As Integer{n}{t}{n}{t}Lim = GetAllCopies(USDSFM){n}{t}count = 1{n}{t}Total = 0{n}{t}{n}{t}Do While count <= Lim{n}{t}{t}If GetBool(USDSFM.Residence, count) = False And GetCurrency(USDSFM.Interest, count) > 0 Then{n}{t}{t}{t}Total = Total + 1{n}{t}{t}Else{n}{t}{t}{t}Total = Total{n}{t}{t}End If{n}{t}{t}{n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = Total{n}End Sub
Sub PartK1_Calculation(Index As Integer){n}{t}Dim count As Long{n}{t}Dim max As Long{n}{t}Dim listedcount As Long{n}{t}{n}{t}listedcount = 0{n}{t}max = GetAllCopies(USDPartK1){n}{t}count = 0{n}{t}{n}{t}Do While count < max{n}{t}{t}count = count + 1{n}{t}{t}If GetCurrency(USDPartK1.HaveInt, count) > 0 Then{n}{t}{t}{t}If listedcount = Index Then{n}{t}{t}{t}{t}ReturnVal = count{n}{t}{t}{t}Else{n}{t}{t}{t}{t}listedcount = listedcount + 1{n}{t}{t}{t}End If{n}{t}{t}End If{n}{t}Loop{n}{t}{t}{n}{t}ReturnVal = 0{n}End Sub
Sub PartK1Div_Calculation(Index As Integer){n}{t}Dim count As Long{n}{t}Dim max As Long{n}{t}Dim listedcount As Long{n}{t}{n}{t}listedcount = 0{n}{t}max = GetAllCopies(USDPartK1){n}{t}count = 0{n}{t}{n}{t}Do While count < max{n}{t}{t}count = count + 1{n}{t}{t}If GetCurrency(USDPartK1.Dividends, count) > 0 Then{n}{t}{t}{t}If listedcount = Index Then{n}{t}{t}{t}{t}ReturnVal = count{n}{t}{t}{t}Else{n}{t}{t}{t}{t}listedcount = listedcount + 1{n}{t}{t}{t}End If{n}{t}{t}End If{n}{t}Loop{n}{t}{t}{n}{t}ReturnVal = 0{n}End Sub
Sub PartK1DivNbr_Calculation(){n}{t}Dim count As Integer{n}{t}Dim Lim As Integer{n}{t}Dim Total As Integer{n}{t}{n}{t}Lim = GetAllCopies(USDPartK1){n}{t}count = 1{n}{t}Total = 0{n}{t}{n}{t}Do While count <= Lim{n}{t}{t}If GetCurrency(USDPartK1.Dividends, count) > 0 Then{n}{t}{t}{t}Total = Total + 1{n}{t}{t}Else{n}{t}{t}{t}Total = Total{n}{t}{t}End If{n}{t}{t}{n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = Total{n}End Sub
Sub PartK1Nbr_Calculation(){n}{t}Dim count As Integer{n}{t}Dim Lim As Integer{n}{t}Dim Total As Integer{n}{t}{n}{t}Lim = GetAllCopies(USDPartK1){n}{t}count = 1{n}{t}Total = 0{n}{t}{n}{t}Do While count <= Lim{n}{t}{t}If GetCurrency(USDPartK1.HaveInt, count) > 0 Then{n}{t}{t}{t}Total = Total + 1{n}{t}{t}Else{n}{t}{t}{t}Total = Total{n}{t}{t}End If{n}{t}{t}{n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = Total{n}End Sub
Sub ResSFM_Calculation(Index As Integer){n}{t}Dim count As Long{n}{t}Dim max As Long{n}{t}Dim listedcount As Long{n}{t}{n}{t}listedcount = 0{n}{t}max = GetAllCopies(USDSFM){n}{t}count = 0{n}{t}{n}{t}Do While count < max{n}{t}{t}count = count + 1{n}{t}{t}If GetBool(USDSFM.Residence, count) = True And GetCurrency(USDSFM.Interest, count) > 0 Then{n}{t}{t}{t}If listedcount = Index Then{n}{t}{t}{t}{t}ReturnVal = count{n}{t}{t}{t}Else{n}{t}{t}{t}{t}listedcount = listedcount + 1{n}{t}{t}{t}End If{n}{t}{t}End If{n}{t}Loop{n}{t}{t}{n}{t}ReturnVal = 0{n}End Sub
Sub ResSFMNbr_Calculation(){n}{t}Dim count As Integer{n}{t}Dim Lim As Integer{n}{t}Dim Total As Integer{n}{t}{n}{t}Lim = GetAllCopies(USDSFM){n}{t}count = 1{n}{t}Total = 0{n}{t}{n}{t}Do While count <= Lim{n}{t}{t}If GetBool(USDSFM.Residence, count) = True And GetCurrency(USDSFM.Interest, count) > 0 Then{n}{t}{t}{t}Total = Total + 1{n}{t}{t}Else{n}{t}{t}{t}Total = Total{n}{t}{t}End If{n}{t}{t}{n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = Total{n}End Sub
Sub SCorpK1_Calculation(Index As Integer){n}{t}Dim count As Long{n}{t}Dim max As Long{n}{t}Dim listedcount As Long{n}{t}{n}{t}listedcount = 0{n}{t}max = GetAllCopies(USDSCorpK1){n}{t}count = 0{n}{t}{n}{t}Do While count < max{n}{t}{t}count = count + 1{n}{t}{t}If GetCurrency(USDSCorpK1.HaveInt, count) > 0 Then{n}{t}{t}{t}If listedcount = Index Then{n}{t}{t}{t}{t}ReturnVal = count{n}{t}{t}{t}Else{n}{t}{t}{t}{t}listedcount = listedcount + 1{n}{t}{t}{t}End If{n}{t}{t}End If{n}{t}Loop{n}{t}{t}{n}{t}ReturnVal = 0{n}End Sub
Sub SCorpK1Div_Calculation(Index As Integer){n}{t}Dim count As Long{n}{t}Dim max As Long{n}{t}Dim listedcount As Long{n}{t}{n}{t}listedcount = 0{n}{t}max = GetAllCopies(USDSCorpK1){n}{t}count = 0{n}{t}{n}{t}Do While count < max{n}{t}{t}count = count + 1{n}{t}{t}If GetCurrency(USDSCorpK1.Dividends, count) > 0 Then{n}{t}{t}{t}If listedcount = Index Then{n}{t}{t}{t}{t}ReturnVal = count{n}{t}{t}{t}Else{n}{t}{t}{t}{t}listedcount = listedcount + 1{n}{t}{t}{t}End If{n}{t}{t}End If{n}{t}Loop{n}{t}{t}{n}{t}ReturnVal = 0{n}End Sub
Sub SCorpK1DivNbr_Calculation(){n}{t}Dim count As Integer{n}{t}Dim Lim As Integer{n}{t}Dim Total As Integer{n}{t}{n}{t}Lim = GetAllCopies(USDSCorpK1){n}{t}count = 1{n}{t}Total = 0{n}{t}{n}{t}Do While count <= Lim{n}{t}{t}If GetCurrency(USDSCorpK1.Dividends, count) > 0 Then{n}{t}{t}{t}Total = Total + 1{n}{t}{t}Else{n}{t}{t}{t}Total = Total{n}{t}{t}End If{n}{t}{t}{n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = Total{n}End Sub
Sub SCorpK1Nbr_Calculation(){n}{t}Dim count As Integer{n}{t}Dim Lim As Integer{n}{t}Dim Total As Integer{n}{t}{n}{t}Lim = GetAllCopies(USDSCorpK1){n}{t}count = 1{n}{t}Total = 0{n}{t}{n}{t}Do While count <= Lim{n}{t}{t}If GetCurrency(USDSCorpK1.HaveInt, count) > 0 Then{n}{t}{t}{t}Total = Total + 1{n}{t}{t}Else{n}{t}{t}{t}Total = Total{n}{t}{t}End If{n}{t}{t}{n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = Total{n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IASchB.SSN){n}End SubSub Desc_Calculation(){n}{t}ReturnVal = "Additonal Entities"{n}End Sub
Sub Names_Calculation(){n}{t}ReturnVal = GetString(IA148Sp.Names){n}End Sub
Sub Offset_Calculation(){n}{t}If GetCopy() = 1 Then{n}{t}{t}ReturnVal = 5{n}{t}ElseIf GetCopy() = 2 Then{n}{t}{t}ReturnVal = 35{n}{t}ElseIf GetCopy() = 3 Then{n}{t}{t}ReturnVal = 65{n}{t}ElseIf GetCopy() = 4 Then{n}{t}{t}ReturnVal = 95{n}{t}Else{n}{t}{t}ReturnVal = 125{n}{t}End If{n}End Sub
Sub Print_Calculation(){n}{t}If GetBool(IA148Sp.Print) = False Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf Trim(GetString(IAWBP148PTESp.PTEName(0))) <> "" Or Trim(GetString(IAWBP148PTESp.PTEEIN(0))) <> "" Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub PTEEIN_Calculation(Index As Integer){n}{t}Dim PTE As Integer{n}{t}Dim RefPTE As Integer{n}{t}Dim Stuff As Integer{n}{t}Dim Stuff2 As Integer{n}{t}Dim MoStuff As Integer{n}   {n}{t}PTE = GetNumber(IA148BumpSp.TotPTE){n}{t}RefPTE = GetNumber(IA148BumpSp.TotRefPTE){n}{t}{n}{t}MoStuff = Index + GetNumber(IAWBP148PTESp.Offset){n}{t}{n}{t}If GetNumber(IA148Sp.TotPTE) = 6 Then{n}{t}{t}ReturnVal = ""{n}{t}ElseIf PTE > MoStuff Then{n}{t}{t}Stuff2 = GetNumber(IA148BumpSp.PTEIndexNbr(MoStuff)){n}{t}{t}ReturnVal = GetString(IA148BumpSp.PTEEIN(Stuff2)){n}{t}ElseIf PTE + RefPTE > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - PTE{n}{t}{t}Stuff2 = GetNumber(IA148BumpSp.RefPTEIndexNbr(Stuff)){n}{t}{t}ReturnVal = GetString(IA148BumpSp.RefPTEEIN(Stuff2)){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub PTEName_Calculation(Index As Integer){n}{t}Dim PTE As Integer{n}{t}Dim RefPTE As Integer{n}{t}Dim Stuff As Integer{n}{t}Dim Stuff2 As Integer{n}{t}Dim MoStuff As Integer{n}   {n}{t}PTE = GetNumber(IA148BumpSp.TotPTE){n}{t}RefPTE = GetNumber(IA148BumpSp.TotRefPTE){n}{t}{n}{t}MoStuff = Index + GetNumber(IAWBP148PTESp.Offset){n}{t}{n}{t}If GetNumber(IA148Sp.TotPTE) = 6 Then{n}{t}{t}ReturnVal = ""{n}{t}ElseIf PTE > MoStuff Then{n}{t}{t}Stuff2 = GetNumber(IA148BumpSp.PTEIndexNbr(MoStuff)){n}{t}{t}ReturnVal = GetString(IA148BumpSp.PTEName(Stuff2)){n}{t}ElseIf PTE + RefPTE > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - PTE{n}{t}{t}Stuff2 = GetNumber(IA148BumpSp.RefPTEIndexNbr(Stuff)){n}{t}{t}ReturnVal = GetString(IA148BumpSp.RefPTEName(Stuff2)){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IA148Sp.SSN){n}End Sub
Sub TPPerc_Calculation(Index As Integer){n}{t}Dim PTE As Integer{n}{t}Dim RefPTE As Integer{n}{t}Dim Stuff As Integer{n}{t}Dim Stuff2 As Integer{n}{t}Dim MoStuff As Integer{n}   {n}{t}PTE = GetNumber(IA148BumpSp.TotPTE){n}{t}RefPTE = GetNumber(IA148BumpSp.TotRefPTE){n}{t}{n}{t}MoStuff = Index + GetNumber(IAWBP148PTESp.Offset){n}{t}{n}{t}If GetNumber(IA148Sp.TotPTE) = 6 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf PTE > MoStuff Then{n}{t}{t}Stuff2 = GetNumber(IA148BumpSp.PTEIndexNbr(MoStuff)){n}{t}{t}ReturnVal = GetFloat(IA148BumpSp.TPPerc(Stuff2)){n}{t}ElseIf PTE + RefPTE > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - PTE{n}{t}{t}Stuff2 = GetNumber(IA148BumpSp.RefPTEIndexNbr(Stuff)){n}{t}{t}ReturnVal = GetFloat(IA148BumpSp.RefTPPerc(Stuff2)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End SubSub Desc_Calculation(){n}{t}Dim Total1 As Currency{n}{t}{n}{t}Total1 = GetCurrency(IAWBP148RefSp.TotRefCr1) + GetCurrency(IAWBP148RefSp.TotRefCr2){n}{t}{n}{t}ReturnVal = CStr(Total1) & " Refundable Credits"{n}End Sub
Sub Names_Calculation(){n}{t}ReturnVal = GetString(IA148Sp.Names){n}End Sub
Sub Offset_Calculation(){n}{t}If GetCopy() = 1 Then{n}{t}{t}ReturnVal = 6{n}{t}Else{n}{t}{t}ReturnVal = 56{n}{t}End If{n}End Sub
Sub Print_Calculation(){n}{t}If GetCurrency(IAWBP148RefSp.TotRefCr1) > 0 Or GetCurrency(IAWBP148RefSp.TotRefCr2) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub PTERefTrig_Calculation(Index As Integer){n}{t}If GetString(IAWBP148RefSp.RefPTECode(Index)) = "64" Or GetString(IAWBP148RefSp.RefPTECode(Index)) = "58" Or GetString(IAWBP148RefSp.RefPTECode(Index)) = "55" Or GetString(IAWBP148RefSp.RefPTECode(Index)) = "52" Or GetString(IAWBP148RefSp.RefPTECode(Index)) = "59" Or GetString(IAWBP148RefSp.RefPTECode(Index)) = "65" Or GetString(IAWBP148RefSp.RefPTECode(Index)) = "66" Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf Trim(GetString(IAWBP148RefSp.RefPTEName(Index))) <> "" Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub RefCert_Calculation(Index As Integer){n}  Dim strindex As Long{n}  Dim copystr As String{n}  Dim Copy As Long{n}  {n}  strindex = ((((GetCopy() - 1) * 50) + 6 + Index) * 4) + 1{n}  copystr = Trim(Mid(GetString(IA148Sp.RefCopiesStr), strindex, 4)){n}  {n}  If GetNumber(IA148Sp.RefNbr) = 7 Then{n}{t}ReturnVal = ""{n}  ElseIf copystr <> "" Then{n}{t}Copy = CLng(copystr){n}{t}If (Copy > 100) And (Copy <= 200) Then{n}{t}  ReturnVal = ""{n}{t}ElseIf (Copy > 200) And (Copy <= 300) Then{n}{t}  ReturnVal = GetString(IACred.CertNumber, (Copy) - 200){n}{t}ElseIf (Copy > 300) And (Copy <= 400) Then{n}{t}  ReturnVal = ""{n}{t}ElseIf (Copy > 400) And (Copy <= 500) Then{n}{t}  ReturnVal = GetString(IACred.CertNumber, (Copy) - 400){n}{t}ElseIf (Copy > 500) And (Copy <= 600) Then{n}{t}  ReturnVal = ""{n}{t}ElseIf (Copy > 600) And (Copy <= 700) Then{n}{t}  ReturnVal = ""{n}{t}ElseIf (Copy > 700) And (Copy <= 800) Then{n}{t}  ReturnVal = GetString(IA128.SuppCertNbr, (Copy) - 700){n}{t}ElseIf (Copy > 800) And (Copy <= 900) Then{n}{t}  ReturnVal = GetString(IA128S.SuppCertNbr, (Copy) - 800){n}{t}ElseIf (Copy > 900) And (Copy <= 1000) Then{n}{t}  ReturnVal = ""{n}{t}ElseIf (Copy > 1000) And (Copy <= 1100) Then{n}{t}  ReturnVal = ""{n}{t}ElseIf (Copy > 1100) And (Copy <= 1200) Then{n}{t}  ReturnVal = ""{n}{t}ElseIf (Copy > 1200) And (Copy <= 1300) Then{n}{t}  ReturnVal = GetString(IACred.CertNumber, (Copy) - 1200){n}{t}ElseIf (Copy > 1300) And (Copy <= 1400) Then{n}{t}  ReturnVal = GetString(IACred.CertNumber, (Copy) - 1300){n}{t}ElseIf (Copy > 1400) And (Copy <= 1500) Then{n}{t}  ReturnVal = GetString(IACred.CertNumber, (Copy) - 1400){n}{t}End If{n}  End If{n} ReturnVal = ""{n}End Sub
Sub RefCode_Calculation(Index As Integer){n}  Dim strindex As Long{n}  Dim copystr As String{n}  Dim Copy As Long{n}  {n}  strindex = ((((GetCopy() - 1) * 50) + 6 + Index) * 4) + 1{n}  copystr = Trim(Mid(GetString(IA148Sp.RefCopiesStr), strindex, 4)){n}  {n}  If GetNumber(IA148Sp.RefNbr) = 7 Then{n}{t}ReturnVal = ""{n}  ElseIf copystr <> "" Then{n}{t}Copy = CLng(copystr){n}{t}If (Copy > 100) And (Copy <= 200) Then{n}{t}  ReturnVal = "52"{n}{t}ElseIf (Copy > 200) And (Copy <= 300) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 200){n}{t}ElseIf (Copy > 300) And (Copy <= 400) Then{n}{t}  ReturnVal = "55"{n}{t}ElseIf (Copy > 400) And (Copy <= 500) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 400){n}{t}ElseIf (Copy > 500) And (Copy <= 600) Then{n}{t}  ReturnVal = "58"{n}{t}ElseIf (Copy > 600) And (Copy <= 700) Then{n}{t}  ReturnVal = "58"{n}{t}ElseIf (Copy > 700) And (Copy <= 800) Then{n}{t}  ReturnVal = "59"{n}{t}ElseIf (Copy > 800) And (Copy <= 900) Then{n}{t}  ReturnVal = "59"{n}{t}ElseIf (Copy > 900) And (Copy <= 1000) Then{n}{t}  ReturnVal = "64"{n}{t}ElseIf (Copy > 1000) And (Copy <= 1100) Then{n}{t}  ReturnVal = "65"{n}{t}ElseIf (Copy > 1100) And (Copy <= 1200) Then{n}{t}  ReturnVal = "66"{n}{t}ElseIf (Copy > 1200) And (Copy <= 1300) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 1200){n}{t}ElseIf (Copy > 1300) And (Copy <= 1400) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 1300){n}{t}ElseIf (Copy > 1400) And (Copy <= 1500) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 1400){n}{t}End If{n}  End If{n}  ReturnVal = ""{n}End Sub
Sub RefCr_Calculation(Index As Integer){n}  Dim strindex As Long{n}  Dim copystr As String{n}  Dim Copy As Long{n}  {n}  strindex = ((((GetCopy() - 1) * 50) + 6 + Index) * 4) + 1{n}  copystr = Trim(Mid(GetString(IA148Sp.RefCopiesStr), strindex, 4)){n}  {n}  If GetNumber(IA148Sp.RefNbr) = 7 Then{n}{t}ReturnVal = 0{n}  ElseIf copystr <> "" Then{n}{t}Copy = CLng(copystr){n}{t}If (Copy > 100) And (Copy <= 200) Then{n}{t}  ReturnVal = GetCurrency(IA8864.BiodieselCr, (Copy) - 100){n}{t}ElseIf (Copy > 200) And (Copy <= 300) Then{n}{t}  ReturnVal = GetCurrency(IACred.CYCredit, (Copy) - 200){n}{t}ElseIf (Copy > 300) And (Copy <= 400) Then{n}{t}  ReturnVal = GetCurrency(IA135.E85Credit, (Copy) - 300){n}{t}ElseIf (Copy > 400) And (Copy <= 500) Then{n}{t}  ReturnVal = GetCurrency(IACred.CYCredit, (Copy) - 400){n}{t}ElseIf (Copy > 500) And (Copy <= 600) Then{n}{t}  ReturnVal = GetCurrency(IA128.TotResearchCr, (Copy) - 500){n}{t}ElseIf (Copy > 600) And (Copy <= 700) Then{n}{t}  ReturnVal = GetCurrency(IA128S.TotResearchCr, (Copy) - 600){n}{t}ElseIf (Copy > 700) And (Copy <= 800) Then{n}{t}  ReturnVal = GetCurrency(IA128.TotSuppResearchCr, (Copy) - 700){n}{t}ElseIf (Copy > 800) And (Copy <= 900) Then{n}{t}  ReturnVal = GetCurrency(IA128S.TotSuppResearchCr, (Copy) - 800){n}{t}ElseIf (Copy > 900) And (Copy <= 1000) Then{n}{t}  ReturnVal = GetCurrency(IA137.EthPromoteCr, (Copy) - 900){n}{t}ElseIf (Copy > 1000) And (Copy <= 1100) Then{n}{t}  ReturnVal = GetCurrency(IA138.E15Credit, (Copy) - 1000){n}{t}ElseIf (Copy > 1100) And (Copy <= 1200) Then{n}{t}  ReturnVal = GetCurrency(IA177.CYAdoptionTaxCr, (Copy) - 1100){n}{t}ElseIf (Copy > 1200) And (Copy <= 1300) Then{n}{t}  ReturnVal = GetCurrency(IACred.CYCredit, (Copy) - 1200){n}{t}ElseIf (Copy > 1300) And (Copy <= 1400) Then{n}{t}  ReturnVal = GetCurrency(IACred.CYCredit, (Copy) - 1300){n}{t}ElseIf (Copy > 1400) And (Copy <= 1500) Then{n}{t}  ReturnVal = GetCurrency(IACred.CYCredit, (Copy) - 1400){n}{t}End If{n}  End If{n}  ReturnVal = 0{n}End Sub
Sub RefPTECode_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}{n}{t}Stuff = Index + GetNumber(IAWBP148RefSp.Offset) + 1{n}{n}{t}ReturnVal = GetString(IA148BumpSp.RefPTECode(Stuff)){n}End Sub
Sub RefPTEEIN_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}{n}{t}Stuff = Index + GetNumber(IAWBP148RefSp.Offset) + 1{n}{n}{t}ReturnVal = GetString(IA148BumpSp.RefPTEEIN(Stuff)){n}End Sub
Sub RefPTEName_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}{n}{t}Stuff = Index + GetNumber(IAWBP148RefSp.Offset) + 1{n}{n}{t}ReturnVal = GetString(IA148BumpSp.RefPTEName(Stuff)){n}End Sub
Sub RefTPPerc_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}{n}{t}Stuff = Index + GetNumber(IAWBP148RefSp.Offset) + 1{n}{n}{t}ReturnVal = GetFloat(IA148BumpSp.RefTPPerc(Stuff)){n}End Sub
Sub RefTrig_Calculation(Index As Integer){n}{t}If GetString(IAWBP148RefSp.RefCode(Index)) = "64" Or GetString(IAWBP148RefSp.RefCode(Index)) = "58" Or GetString(IAWBP148RefSp.RefCode(Index)) = "55" Or GetString(IAWBP148RefSp.RefCode(Index)) = "52" Or GetString(IAWBP148RefSp.RefCode(Index)) = "59" Or GetString(IAWBP148RefSp.RefCode(Index)) = "65" Or GetString(IAWBP148RefSp.RefCode(Index)) = "66" Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetCurrency(IAWBP148RefSp.RefCr(Index)) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IA148Sp.SSN){n}End Sub
Sub TotRefCr1_Calculation(){n}{t}Dim count As Integer{n}{t}Dim SubTot As Currency{n}{n}{t}count = 0{n}{t}SubTot = 0{n}{n}{t}Do While count < 25{n}{t}{t}SubTot = SubTot + GetCurrency(IAWBP148RefSp.RefCr(count)){n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = SubTot{n}End Sub
Sub TotRefCr2_Calculation(){n}{t}Dim count As Integer{n}{t}Dim SubTot As Currency{n}{n}{t}count = 25{n}{t}SubTot = 0{n}{n}{t}Do While count < 50{n}{t}{t}SubTot = SubTot + GetCurrency(IAWBP148RefSp.RefCr(count)){n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = SubTot{n}End SubSub ArrayNonRefCr_Calculation(Index As Integer){n}{t}If Index = 0 Then{n}{t}{t}ReturnVal = GetCurrency(IAWBP148Sp.NonRefCr1){n}{t}ElseIf Index = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAWBP148Sp.NonRefCr2){n}{t}ElseIf Index = 2 Then{n}{t}{t}ReturnVal = GetCurrency(IAWBP148Sp.NonRefCr3){n}{t}ElseIf Index = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IAWBP148Sp.NonRefCr4){n}{t}ElseIf Index = 4 Then{n}{t}{t}ReturnVal = GetCurrency(IAWBP148Sp.NonRefCr5){n}{t}ElseIf Index = 5 Then{n}{t}{t}ReturnVal = GetCurrency(IAWBP148Sp.NonRefCr6){n}{t}ElseIf Index = 6 Then{n}{t}{t}ReturnVal = GetCurrency(IAWBP148Sp.NonRefCr7){n}{t}ElseIf Index = 7 Then{n}{t}{t}ReturnVal = GetCurrency(IAWBP148Sp.NonRefCr8){n}{t}ElseIf Index = 8 Then{n}{t}{t}ReturnVal = GetCurrency(IAWBP148Sp.NonRefCr9){n}{t}ElseIf Index = 9 Then{n}{t}{t}ReturnVal = GetCurrency(IAWBP148Sp.NonRefCr10){n}{t}ElseIf Index = 10 Then{n}{t}{t}ReturnVal = GetCurrency(IAWBP148Sp.NonRefCr11){n}{t}ElseIf Index = 11 Then{n}{t}{t}ReturnVal = GetCurrency(IAWBP148Sp.NonRefCr12){n}{t}ElseIf Index = 12 Then{n}{t}{t}ReturnVal = GetCurrency(IAWBP148Sp.NonRefCr13){n}{t}ElseIf Index = 13 Then{n}{t}{t}ReturnVal = GetCurrency(IAWBP148Sp.NonRefCr14){n}{t}ElseIf Index = 14 Then{n}{t}{t}ReturnVal = GetCurrency(IAWBP148Sp.NonRefCr15){n}{t}ElseIf Index = 15 Then{n}{t}{t}ReturnVal = GetCurrency(IAWBP148Sp.NonRefCr16){n}{t}ElseIf Index = 16 Then{n}{t}{t}ReturnVal = GetCurrency(IAWBP148Sp.NonRefCr17){n}{t}ElseIf Index = 17 Then{n}{t}{t}ReturnVal = GetCurrency(IAWBP148Sp.NonRefCr18){n}{t}ElseIf Index = 18 Then{n}{t}{t}ReturnVal = GetCurrency(IAWBP148Sp.NonRefCr19){n}{t}ElseIf Index = 19 Then{n}{t}{t}ReturnVal = GetCurrency(IAWBP148Sp.NonRefCr20){n}{t}ElseIf Index = 20 Then{n}{t}{t}ReturnVal = GetCurrency(IAWBP148Sp.NonRefCr21){n}{t}ElseIf Index = 21 Then{n}{t}{t}ReturnVal = GetCurrency(IAWBP148Sp.NonRefCr22){n}{t}ElseIf Index = 22 Then{n}{t}{t}ReturnVal = GetCurrency(IAWBP148Sp.NonRefCr23){n}{t}ElseIf Index = 23 Then{n}{t}{t}ReturnVal = GetCurrency(IAWBP148Sp.NonRefCr24){n}{t}ElseIf Index = 24 Then{n}{t}{t}ReturnVal = GetCurrency(IAWBP148Sp.NonRefCr25){n}{t}ElseIf Index = 25 Then{n}{t}{t}ReturnVal = GetCurrency(IAWBP148Sp.NonRefCr26){n}{t}ElseIf Index = 26 Then{n}{t}{t}ReturnVal = GetCurrency(IAWBP148Sp.NonRefCr27){n}{t}ElseIf Index = 27 Then{n}{t}{t}ReturnVal = GetCurrency(IAWBP148Sp.NonRefCr28){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAWBP148Sp.NonRefCr29){n}{t}End If{n}End Sub
Sub AvailCr_Calculation(Index As Integer){n}{t}If GetString(IAWBP148Sp.NonRefCode(Index)) = "09" Then{n}{t}{t}ReturnVal = GetCurrency(IA8801Sp.AMTCR){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAWBP148Sp.PYCarry(Index)) + GetCurrency(IAWBP148Sp.CYCredit(Index)){n}{t}End If{n}End Sub
Sub CYCarry_Calculation(Index As Integer){n}{t}If GetString(IAWBP148Sp.NonRefCode(Index)) = "09" Then{n}{t}{t}ReturnVal = GetCurrency(IA8801Sp.CYCarryforward){n}{t}Else{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(IAWBP148Sp.AvailCr(Index)) - GetCurrency(IAWBP148Sp.ArrayNonRefCr(Index)) - GetCurrency(IAWBP148Sp.ExpCr(Index))){n}{t}End If{n}End Sub
Sub CYCredit_Calculation(Index As Integer){n}  Dim strindex As Long{n}  Dim copystr As String{n}  Dim Copy As Long{n}  {n}  strindex = ((((GetCopy() - 1) * 29) + 9 + Index) * 4) + 1{n}  copystr = Trim(Mid(GetString(IA148Sp.NonRefCopiesStr), strindex, 4)){n}  {n}  If GetNumber(IA148Sp.NonRefNbr) = 10 Then{n}{t}ReturnVal = 0{n}  ElseIf copystr <> "" Then{n}{t}Copy = CLng(copystr){n}{t}If (Copy > 100) And (Copy <= 200) Then{n}{t}  ReturnVal = GetCurrency(IA147.FranchiseCr, (Copy) - 100){n}{t}ElseIf (Copy > 200) And (Copy <= 300) Then{n}{t}  ReturnVal = GetCurrency(IA134.Credit, (Copy) - 200){n}{t}ElseIf (Copy > 300) And (Copy <= 400) Then{n}{t}  ReturnVal = GetCurrency(IACred.CYCredit, (Copy) - 300){n}{t}ElseIf (Copy > 400) And (Copy <= 500) Then{n}{t}  ReturnVal = GetCurrency(IACred.CYCredit, (Copy) - 400){n}{t}ElseIf (Copy > 500) And (Copy <= 600) Then{n}{t}  ReturnVal = GetCurrency(IACred.CYCredit, (Copy) - 500){n}{t}ElseIf (Copy > 600) And (Copy <= 700) Then{n}{t}  ReturnVal = GetCurrency(IACred.CYCredit, (Copy) - 600){n}{t}ElseIf (Copy > 700) And (Copy <= 800) Then{n}{t}  ReturnVal = GetCurrency(IACred.CYCredit, (Copy) - 700){n}{t}ElseIf (Copy > 800) And (Copy <= 900) Then{n}{t}  ReturnVal = GetCurrency(IACred.CYCredit, (Copy) - 800){n}{t}ElseIf (Copy > 900) And (Copy <= 1000) Then{n}{t}  ReturnVal = GetCurrency(IACred.CYCredit, (Copy) - 900){n}{t}ElseIf (Copy > 1000) And (Copy <= 1100) Then{n}{t}  ReturnVal = GetCurrency(IACred.CYCredit, (Copy) - 1000){n}{t}ElseIf (Copy > 1100) And (Copy <= 1200) Then{n}{t}  ReturnVal = GetCurrency(IACred.CYCredit, (Copy) - 1100){n}{t}ElseIf (Copy > 1200) And (Copy <= 1300) Then{n}{t}  ReturnVal = GetCurrency(IACred.CYCredit, (Copy) - 1200){n}{t}ElseIf (Copy > 1300) And (Copy <= 1400) Then{n}{t}  ReturnVal = GetCurrency(IACred.CYCredit, (Copy) - 1300){n}{t}ElseIf (Copy > 1400) And (Copy <= 1500) Then{n}{t}  ReturnVal = GetCurrency(IACred.CYCredit, (Copy) - 1400){n}{t}ElseIf (Copy > 1500) And (Copy <= 1600) Then{n}{t}  ReturnVal = GetCurrency(IACred.CYCredit, (Copy) - 1500){n}{t}ElseIf (Copy > 1600) And (Copy <= 1700) Then{n}{t}  ReturnVal = GetCurrency(IACred.CYCredit, (Copy) - 1600){n}{t}ElseIf (Copy > 1700) And (Copy <= 1800) Then{n}{t}  ReturnVal = GetCurrency(IACred.CYCredit, (Copy) - 1700){n}{t}ElseIf (Copy > 1800) And (Copy <= 1900) Then{n}{t}  ReturnVal = GetCurrency(IACred.CYCredit, (Copy) - 1800){n}{t}ElseIf (Copy > 1900) And (Copy <= 2000) Then{n}{t}  ReturnVal = GetCurrency(IACred.CYCredit, (Copy) - 1900){n}{t}ElseIf (Copy > 2000) And (Copy <= 2100) Then{n}{t}  ReturnVal = GetCurrency(IACred.CYCredit, (Copy) - 2000){n}{t}ElseIf (Copy > 2100) And (Copy <= 2200) Then{n}{t}  ReturnVal = GetCurrency(IACred.CYCredit, (Copy) - 2100){n}{t}ElseIf (Copy > 2200) And (Copy <= 2300) Then{n}{t}  ReturnVal = GetCurrency(IACred.CYCredit, (Copy) - 2200){n}{t}ElseIf (Copy > 2300) And (Copy <= 2400) Then{n}{t}  ReturnVal = GetCurrency(IACred.CYCredit, (Copy) - 2300){n}{t}ElseIf (Copy > 2400) And (Copy <= 2500) Then{n}{t}  ReturnVal = GetCurrency(IA8801Sp.PYAMT){n}{t}End If{n}  End If{n}  ReturnVal = 0{n}End Sub
Sub Desc_Calculation(){n}{t}Dim Total1 As Currency{n}{t}{n}{t}Total1 = GetCurrency(IAWBP148Sp.TotNonRefCr){n}{t}{n}{t}ReturnVal = CStr(Total1) & " Nonrefundable Credits"{n}End Sub
Sub ExpCr_Calculation(Index As Integer){n}  Dim strindex As Long{n}  Dim copystr As String{n}  Dim Copy As Long{n}  {n}  strindex = ((((GetCopy() - 1) * 29) + 9 + Index) * 4) + 1{n}  copystr = Trim(Mid(GetString(IA148Sp.NonRefCopiesStr), strindex, 4)){n}  {n}  If GetNumber(IA148Sp.NonRefNbr) = 10 Then{n}{t}ReturnVal = 0{n}  ElseIf copystr <> "" Then{n}{t}Copy = CLng(copystr){n}{t}If (Copy > 100) And (Copy <= 200) Then{n}{t}  ReturnVal = MaxValue(0, GetCurrency(IA148Sp.AvailCr(Index)) - GetCurrency(IA148Sp.ArrayNonRefCr(Index))){n}{t}ElseIf (Copy > 200) And (Copy <= 300) Then{n}{t}  ReturnVal = MaxValue(0, GetCurrency(IA148Sp.AvailCr(Index)) - GetCurrency(IA148Sp.ArrayNonRefCr(Index))){n}{t}ElseIf (Copy > 300) And (Copy <= 400) Then{n}{t}  ReturnVal = GetCurrency(IACred.ExpCr, (Copy) - 300){n}{t}ElseIf (Copy > 400) And (Copy <= 500) Then{n}{t}  ReturnVal = GetCurrency(IACred.ExpCr, (Copy) - 400){n}{t}ElseIf (Copy > 500) And (Copy <= 600) Then{n}{t}  ReturnVal = GetCurrency(IACred.ExpCr, (Copy) - 500){n}{t}ElseIf (Copy > 600) And (Copy <= 700) Then{n}{t}  ReturnVal = GetCurrency(IACred.ExpCr, (Copy) - 600){n}{t}ElseIf (Copy > 700) And (Copy <= 800) Then{n}{t}  ReturnVal = GetCurrency(IACred.ExpCr, (Copy) - 700){n}{t}ElseIf (Copy > 800) And (Copy <= 900) Then{n}{t}  ReturnVal = GetCurrency(IACred.ExpCr, (Copy) - 800){n}{t}ElseIf (Copy > 900) And (Copy <= 1000) Then{n}{t}  ReturnVal = GetCurrency(IACred.ExpCr, (Copy) - 900){n}{t}ElseIf (Copy > 1000) And (Copy <= 1100) Then{n}{t}  ReturnVal = GetCurrency(IACred.ExpCr, (Copy) - 1000){n}{t}ElseIf (Copy > 1100) And (Copy <= 1200) Then{n}{t}  ReturnVal = GetCurrency(IACred.ExpCr, (Copy) - 1100){n}{t}ElseIf (Copy > 1200) And (Copy <= 1300) Then{n}{t}  ReturnVal = GetCurrency(IACred.ExpCr, (Copy) - 1200){n}{t}ElseIf (Copy > 1300) And (Copy <= 1400) Then{n}{t}  ReturnVal = GetCurrency(IACred.ExpCr, (Copy) - 1300){n}{t}ElseIf (Copy > 1400) And (Copy <= 1500) Then{n}{t}  ReturnVal = GetCurrency(IACred.ExpCr, (Copy) - 1400){n}{t}ElseIf (Copy > 1500) And (Copy <= 1600) Then{n}{t}  ReturnVal = GetCurrency(IACred.ExpCr, (Copy) - 1500){n}{t}ElseIf (Copy > 1600) And (Copy <= 1700) Then{n}{t}  ReturnVal = GetCurrency(IACred.ExpCr, (Copy) - 1600){n}{t}ElseIf (Copy > 1700) And (Copy <= 1800) Then{n}{t}  ReturnVal = GetCurrency(IACred.ExpCr, (Copy) - 1700){n}{t}ElseIf (Copy > 1800) And (Copy <= 1900) Then{n}{t}  ReturnVal = GetCurrency(IACred.ExpCr, (Copy) - 1800){n}{t}ElseIf (Copy > 1900) And (Copy <= 2000) Then{n}{t}  ReturnVal = GetCurrency(IACred.ExpCr, (Copy) - 1900){n}{t}ElseIf (Copy > 2000) And (Copy <= 2100) Then{n}{t}  ReturnVal = GetCurrency(IACred.ExpCr, (Copy) - 2000){n}{t}ElseIf (Copy > 2100) And (Copy <= 2200) Then{n}{t}  ReturnVal = GetCurrency(IACred.ExpCr, (Copy) - 2100){n}{t}ElseIf (Copy > 2200) And (Copy <= 2300) Then{n}{t}  ReturnVal = GetCurrency(IACred.ExpCr, (Copy) - 2200){n}{t}ElseIf (Copy > 2300) And (Copy <= 2400) Then{n}{t}  ReturnVal = GetCurrency(IACred.ExpCr, (Copy) - 2300){n}{t}ElseIf (Copy > 2400) And (Copy <= 2500) Then{n}{t}  ReturnVal = 0{n}{t}End If{n}  End If{n}  ReturnVal = 0{n}End Sub
Sub Names_Calculation(){n}{t}ReturnVal = GetString(IA148Sp.Names){n}End Sub
Sub NonRefCert_Calculation(Index As Integer){n}  Dim strindex As Long{n}  Dim copystr As String{n}  Dim Copy As Long{n}  {n}  strindex = ((((GetCopy() - 1) * 29) + 9 + Index) * 4) + 1{n}  copystr = Trim(Mid(GetString(IA148Sp.NonRefCopiesStr), strindex, 4)){n}  {n}  If GetNumber(IA148Sp.NonRefNbr) = 10 Then{n}{t}ReturnVal = ""{n}  ElseIf copystr <> "" Then{n}{t}Copy = CLng(copystr){n}{t}If (Copy > 100) And (Copy <= 200) Then{n}{t}  ReturnVal = ""{n}{t}ElseIf (Copy > 200) And (Copy <= 300) Then{n}{t}  ReturnVal = ""{n}{t}ElseIf (Copy > 300) And (Copy <= 400) Then{n}{t}  ReturnVal = GetString(IACred.CertNumber, (Copy) - 300){n}{t}ElseIf (Copy > 400) And (Copy <= 500) Then{n}{t}  ReturnVal = GetString(IACred.CertNumber, (Copy) - 400){n}{t}ElseIf (Copy > 500) And (Copy <= 600) Then{n}{t}  ReturnVal = GetString(IACred.CertNumber, (Copy) - 500){n}{t}ElseIf (Copy > 600) And (Copy <= 700) Then{n}{t}  ReturnVal = GetString(IACred.CertNumber, (Copy) - 600){n}{t}ElseIf (Copy > 700) And (Copy <= 800) Then{n}{t}  ReturnVal = GetString(IACred.CertNumber, (Copy) - 700){n}{t}ElseIf (Copy > 800) And (Copy <= 900) Then{n}{t}  ReturnVal = GetString(IACred.CertNumber, (Copy) - 800){n}{t}ElseIf (Copy > 900) And (Copy <= 1000) Then{n}{t}  ReturnVal = GetString(IACred.CertNumber, (Copy) - 900){n}{t}ElseIf (Copy > 1000) And (Copy <= 1100) Then{n}{t}  ReturnVal = GetString(IACred.CertNumber, (Copy) - 1000){n}{t}ElseIf (Copy > 1100) And (Copy <= 1200) Then{n}{t}  ReturnVal = GetString(IACred.CertNumber, (Copy) - 1100){n}{t}ElseIf (Copy > 1200) And (Copy <= 1300) Then{n}{t}  ReturnVal = GetString(IACred.CertNumber, (Copy) - 1200){n}{t}ElseIf (Copy > 1300) And (Copy <= 1400) Then{n}{t}  ReturnVal = GetString(IACred.CertNumber, (Copy) - 1300){n}{t}ElseIf (Copy > 1400) And (Copy <= 1500) Then{n}{t}  ReturnVal = GetString(IACred.CertNumber, (Copy) - 1400){n}{t}ElseIf (Copy > 1500) And (Copy <= 1600) Then{n}{t}  ReturnVal = GetString(IACred.CertNumber, (Copy) - 1500){n}{t}ElseIf (Copy > 1600) And (Copy <= 1700) Then{n}{t}  ReturnVal = GetString(IACred.CertNumber, (Copy) - 1600){n}{t}ElseIf (Copy > 1700) And (Copy <= 1800) Then{n}{t}  ReturnVal = GetString(IACred.CertNumber, (Copy) - 1700){n}{t}ElseIf (Copy > 1800) And (Copy <= 1900) Then{n}{t}  ReturnVal = GetString(IACred.CertNumber, (Copy) - 1800){n}{t}ElseIf (Copy > 1900) And (Copy <= 2000) Then{n}{t}  ReturnVal = GetString(IACred.CertNumber, (Copy) - 1900){n}{t}ElseIf (Copy > 2000) And (Copy <= 2100) Then{n}{t}  ReturnVal = GetString(IACred.CertNumber, (Copy) - 2000){n}{t}ElseIf (Copy > 2100) And (Copy <= 2200) Then{n}{t}  ReturnVal = GetString(IACred.CertNumber, (Copy) - 2100){n}{t}ElseIf (Copy > 2200) And (Copy <= 2300) Then{n}{t}  ReturnVal = GetString(IACred.CertNumber, (Copy) - 2200){n}{t}ElseIf (Copy > 2300) And (Copy <= 2400) Then{n}{t}  ReturnVal = GetString(IACred.CertNumber, (Copy) - 2300){n}{t}ElseIf (Copy > 2400) And (Copy <= 2500) Then{n}{t}  ReturnVal = ""{n}{t}End If{n}  End If{n}  ReturnVal = ""{n}End Sub
Sub NonRefCode_Calculation(Index As Integer){n}  Dim strindex As Long{n}  Dim copystr As String{n}  Dim Copy As Long{n}  {n}  strindex = ((((GetCopy() - 1) * 29) + 9 + Index) * 4) + 1{n}  copystr = Trim(Mid(GetString(IA148Sp.NonRefCopiesStr), strindex, 4)){n}  {n}  If GetNumber(IA148Sp.NonRefNbr) = 10 Then{n}{t}ReturnVal = ""{n}  ElseIf copystr <> "" Then{n}{t}Copy = CLng(copystr){n}{t}If (Copy > 100) And (Copy <= 200) Then{n}{t}  ReturnVal = "04"{n}{t}ElseIf (Copy > 200) And (Copy <= 300) Then{n}{t}  ReturnVal = "11"{n}{t}ElseIf (Copy > 300) And (Copy <= 400) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 300){n}{t}ElseIf (Copy > 400) And (Copy <= 500) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 400){n}{t}ElseIf (Copy > 500) And (Copy <= 600) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 500){n}{t}ElseIf (Copy > 600) And (Copy <= 700) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 600){n}{t}ElseIf (Copy > 700) And (Copy <= 800) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 700){n}{t}ElseIf (Copy > 800) And (Copy <= 900) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 800){n}{t}ElseIf (Copy > 900) And (Copy <= 1000) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 900){n}{t}ElseIf (Copy > 1000) And (Copy <= 1100) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 1000){n}{t}ElseIf (Copy > 1100) And (Copy <= 1200) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 1100){n}{t}ElseIf (Copy > 1200) And (Copy <= 1300) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 1200){n}{t}ElseIf (Copy > 1300) And (Copy <= 1400) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 1300){n}{t}ElseIf (Copy > 1400) And (Copy <= 1500) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 1400){n}{t}ElseIf (Copy > 1500) And (Copy <= 1600) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 1500){n}{t}ElseIf (Copy > 1600) And (Copy <= 1700) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 1600){n}{t}ElseIf (Copy > 1700) And (Copy <= 1800) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 1700){n}{t}ElseIf (Copy > 1800) And (Copy <= 1900) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 1800){n}{t}ElseIf (Copy > 1900) And (Copy <= 2000) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 1900){n}{t}ElseIf (Copy > 2000) And (Copy <= 2100) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 2000){n}{t}ElseIf (Copy > 2100) And (Copy <= 2200) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 2100){n}{t}ElseIf (Copy > 2200) And (Copy <= 2300) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 2200){n}{t}ElseIf (Copy > 2300) And (Copy <= 2400) Then{n}{t}  ReturnVal = GetString(IACred.Code, (Copy) - 2300){n}{t}ElseIf (Copy > 2400) And (Copy <= 2500) Then{n}{t}  ReturnVal = "09"{n}{t}End If{n}  End If{n}  ReturnVal = ""{n}End Sub
Sub NonRefCr1_Calculation(){n}{t}Dim PriorCopy As Long{n}{t}Dim PriorCopyTax As Currency{n}{t}{n}{t}PriorCopy = GetCopy(){n}{t}{n}{t}PriorCopyTax = GetCurrency(IAWBP148Sp.NonRefTax30, PriorCopy - 1){n}{t}{n}{t}If GetCopy() = 1 Then{n}{t}{t}ReturnVal = MinValue(GetCurrency(IAWBP148Sp.AvailCr(0)), GetCurrency(IA148Sp.NonRefTax10)){n}{t}Else{n}{t}{t}ReturnVal = MinValue(GetCurrency(IAWBP148Sp.AvailCr(0)), PriorCopyTax){n}{t}End If{n}End Sub
Sub NonRefCr10_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IAWBP148Sp.AvailCr(9)), GetCurrency(IAWBP148Sp.NonRefTax10)){n}End Sub
Sub NonRefCr11_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IAWBP148Sp.AvailCr(10)), GetCurrency(IAWBP148Sp.NonRefTax11)){n}End Sub
Sub NonRefCr12_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IAWBP148Sp.AvailCr(11)), GetCurrency(IAWBP148Sp.NonRefTax12)){n}End Sub
Sub NonRefCr13_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IAWBP148Sp.AvailCr(12)), GetCurrency(IAWBP148Sp.NonRefTax13)){n}End Sub
Sub NonRefCr14_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IAWBP148Sp.AvailCr(13)), GetCurrency(IAWBP148Sp.NonRefTax14)){n}End Sub
Sub NonRefCr15_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IAWBP148Sp.AvailCr(14)), GetCurrency(IAWBP148Sp.NonRefTax15)){n}End Sub
Sub NonRefCr16_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IAWBP148Sp.AvailCr(15)), GetCurrency(IAWBP148Sp.NonRefTax16)){n}End Sub
Sub NonRefCr17_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IAWBP148Sp.AvailCr(16)), GetCurrency(IAWBP148Sp.NonRefTax17)){n}End Sub
Sub NonRefCr18_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IAWBP148Sp.AvailCr(17)), GetCurrency(IAWBP148Sp.NonRefTax18)){n}End Sub
Sub NonRefCr19_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IAWBP148Sp.AvailCr(18)), GetCurrency(IAWBP148Sp.NonRefTax19)){n}End Sub
Sub NonRefCr2_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IAWBP148Sp.AvailCr(1)), GetCurrency(IAWBP148Sp.NonRefTax2)){n}End Sub
Sub NonRefCr20_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IAWBP148Sp.AvailCr(19)), GetCurrency(IAWBP148Sp.NonRefTax20)){n}End Sub
Sub NonRefCr21_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IAWBP148Sp.AvailCr(20)), GetCurrency(IAWBP148Sp.NonRefTax21)){n}End Sub
Sub NonRefCr22_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IAWBP148Sp.AvailCr(21)), GetCurrency(IAWBP148Sp.NonRefTax22)){n}End Sub
Sub NonRefCr23_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IAWBP148Sp.AvailCr(22)), GetCurrency(IAWBP148Sp.NonRefTax23)){n}End Sub
Sub NonRefCr24_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IAWBP148Sp.AvailCr(23)), GetCurrency(IAWBP148Sp.NonRefTax24)){n}End Sub
Sub NonRefCr25_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IAWBP148Sp.AvailCr(24)), GetCurrency(IAWBP148Sp.NonRefTax25)){n}End Sub
Sub NonRefCr26_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IAWBP148Sp.AvailCr(25)), GetCurrency(IAWBP148Sp.NonRefTax26)){n}End Sub
Sub NonRefCr27_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IAWBP148Sp.AvailCr(26)), GetCurrency(IAWBP148Sp.NonRefTax27)){n}End Sub
Sub NonRefCr28_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IAWBP148Sp.AvailCr(27)), GetCurrency(IAWBP148Sp.NonRefTax28)){n}End Sub
Sub NonRefCr29_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IAWBP148Sp.AvailCr(28)), GetCurrency(IAWBP148Sp.NonRefTax29)){n}End Sub
Sub NonRefCr3_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IAWBP148Sp.AvailCr(2)), GetCurrency(IAWBP148Sp.NonRefTax3)){n}End Sub
Sub NonRefCr4_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IAWBP148Sp.AvailCr(3)), GetCurrency(IAWBP148Sp.NonRefTax4)){n}End Sub
Sub NonRefCr5_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IAWBP148Sp.AvailCr(4)), GetCurrency(IAWBP148Sp.NonRefTax5)){n}End Sub
Sub NonRefCr6_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IAWBP148Sp.AvailCr(5)), GetCurrency(IAWBP148Sp.NonRefTax6)){n}End Sub
Sub NonRefCr7_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IAWBP148Sp.AvailCr(6)), GetCurrency(IAWBP148Sp.NonRefTax7)){n}End Sub
Sub NonRefCr8_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IAWBP148Sp.AvailCr(7)), GetCurrency(IAWBP148Sp.NonRefTax8)){n}End Sub
Sub NonRefCr9_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IAWBP148Sp.AvailCr(8)), GetCurrency(IAWBP148Sp.NonRefTax9)){n}End Sub
Sub NonRefTax10_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAWBP148Sp.NonRefTax9) - GetCurrency(IAWBP148Sp.NonRefCr9)){n}End Sub
Sub NonRefTax11_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAWBP148Sp.NonRefTax10) - GetCurrency(IAWBP148Sp.NonRefCr10)){n}End Sub
Sub NonRefTax12_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAWBP148Sp.NonRefTax11) - GetCurrency(IAWBP148Sp.NonRefCr11)){n}End Sub
Sub NonRefTax13_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAWBP148Sp.NonRefTax12) - GetCurrency(IAWBP148Sp.NonRefCr12)){n}End Sub
Sub NonRefTax14_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAWBP148Sp.NonRefTax13) - GetCurrency(IAWBP148Sp.NonRefCr13)){n}End Sub
Sub NonRefTax15_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAWBP148Sp.NonRefTax14) - GetCurrency(IAWBP148Sp.NonRefCr14)){n}End Sub
Sub NonRefTax16_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAWBP148Sp.NonRefTax15) - GetCurrency(IAWBP148Sp.NonRefCr15)){n}End Sub
Sub NonRefTax17_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAWBP148Sp.NonRefTax16) - GetCurrency(IAWBP148Sp.NonRefCr16)){n}End Sub
Sub NonRefTax18_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAWBP148Sp.NonRefTax17) - GetCurrency(IAWBP148Sp.NonRefCr17)){n}End Sub
Sub NonRefTax19_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAWBP148Sp.NonRefTax18) - GetCurrency(IAWBP148Sp.NonRefCr18)){n}End Sub
Sub NonRefTax2_Calculation(){n}{t}Dim PriorCopy As Long{n}{t}{n}{t}PriorCopy = GetCopy(){n}{t}{t}{n}{t}If GetCopy() = 1 Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(IA148Sp.NonRefTax10) - GetCurrency(IAWBP148Sp.NonRefCr1)){n}{t}Else{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(IAWBP148Sp.NonRefTax30, PriorCopy - 1) - GetCurrency(IAWBP148Sp.NonRefCr1)){n}{t}End If{n}End Sub
Sub NonRefTax20_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAWBP148Sp.NonRefTax19) - GetCurrency(IAWBP148Sp.NonRefCr19)){n}End Sub
Sub NonRefTax21_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAWBP148Sp.NonRefTax20) - GetCurrency(IAWBP148Sp.NonRefCr20)){n}End Sub
Sub NonRefTax22_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAWBP148Sp.NonRefTax21) - GetCurrency(IAWBP148Sp.NonRefCr21)){n}End Sub
Sub NonRefTax23_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAWBP148Sp.NonRefTax22) - GetCurrency(IAWBP148Sp.NonRefCr22)){n}End Sub
Sub NonRefTax24_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAWBP148Sp.NonRefTax23) - GetCurrency(IAWBP148Sp.NonRefCr23)){n}End Sub
Sub NonRefTax25_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAWBP148Sp.NonRefTax24) - GetCurrency(IAWBP148Sp.NonRefCr24)){n}End Sub
Sub NonRefTax26_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAWBP148Sp.NonRefTax25) - GetCurrency(IAWBP148Sp.NonRefCr25)){n}End Sub
Sub NonRefTax27_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAWBP148Sp.NonRefTax26) - GetCurrency(IAWBP148Sp.NonRefCr26)){n}End Sub
Sub NonRefTax28_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAWBP148Sp.NonRefTax27) - GetCurrency(IAWBP148Sp.NonRefCr27)){n}End Sub
Sub NonRefTax29_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAWBP148Sp.NonRefTax28) - GetCurrency(IAWBP148Sp.NonRefCr28)){n}End Sub
Sub NonRefTax3_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAWBP148Sp.NonRefTax2) - GetCurrency(IAWBP148Sp.NonRefCr2)){n}End Sub
Sub NonRefTax30_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAWBP148Sp.NonRefTax29) - GetCurrency(IAWBP148Sp.NonRefCr29)){n}End Sub
Sub NonRefTax4_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAWBP148Sp.NonRefTax3) - GetCurrency(IAWBP148Sp.NonRefCr3)){n}End Sub
Sub NonRefTax5_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAWBP148Sp.NonRefTax4) - GetCurrency(IAWBP148Sp.NonRefCr4)){n}End Sub
Sub NonRefTax6_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAWBP148Sp.NonRefTax5) - GetCurrency(IAWBP148Sp.NonRefCr5)){n}End Sub
Sub NonRefTax7_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAWBP148Sp.NonRefTax6) - GetCurrency(IAWBP148Sp.NonRefCr6)){n}End Sub
Sub NonRefTax8_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAWBP148Sp.NonRefTax7) - GetCurrency(IAWBP148Sp.NonRefCr7)){n}End Sub
Sub NonRefTax9_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAWBP148Sp.NonRefTax8) - GetCurrency(IAWBP148Sp.NonRefCr8)){n}End Sub
Sub NonRefTrig_Calculation(Index As Integer){n}{t}If GetString(IAWBP148Sp.NonRefCode(Index)) = "04" Or GetString(IAWBP148Sp.NonRefCode(Index)) = "11" Or GetString(IAWBP148Sp.NonRefCode(Index)) = "09" Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetCurrency(IAWBP148Sp.AvailCr(Index)) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Offset_Calculation(){n}{t}If GetCopy() = 1 Then{n}{t}{t}ReturnVal = 9{n}{t}ElseIf GetCopy() = 2 Then{n}{t}{t}ReturnVal = 38{n}{t}Else{n}{t}{t}ReturnVal = 67{n}{t}End If{n}End Sub
Sub Print_Calculation(){n}{t}If GetCurrency(IAWBP148Sp.TotNonRefCr) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf Trim(GetString(IAWBP148sp.NonRefCode(0))) <> "" Or GetCurrency(IAWBP148sp.CYCredit(0)) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub PTECode_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}{n}{t}Stuff = Index + GetNumber(IAWBP148Sp.Offset) + 1{n}{n}{t}ReturnVal = GetString(IA148BumpSp.PTECode(Stuff)){n}End Sub
Sub PTEEIN_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}{n}{t}Stuff = Index + GetNumber(IAWBP148Sp.Offset) + 1{n}{n}{t}ReturnVal = GetString(IA148BumpSp.PTEEIN(Stuff)){n}End Sub
Sub PTEName_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}{n}{t}Stuff = Index + GetNumber(IAWBP148Sp.Offset) + 1{n}{n}{t}ReturnVal = GetString(IA148BumpSp.PTEName(Stuff)){n}End Sub
Sub PTENRTrig_Calculation(Index As Integer){n}{t}If GetString(IAWBP148Sp.NonRefCode(Index)) = "04" Or GetString(IAWBP148Sp.PTECode(Index)) = "11" Or GetString(IAWBP148Sp.PTECode(Index)) = "09" Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf Trim(GetString(IAWBP148Sp.PTEName(Index))) <> "" Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub PYCarry_Calculation(Index As Integer){n}  Dim strindex As Long{n}  Dim copystr As String{n}  Dim Copy As Long{n}  {n}  strindex = ((((GetCopy() - 1) * 29) + 9 + Index) * 4) + 1{n}  copystr = Trim(Mid(GetString(IA148Sp.NonRefCopiesStr), strindex, 4)){n}  {n}  If GetNumber(IA148Sp.NonRefNbr) = 10 Then{n}{t}ReturnVal = 0{n}  ElseIf copystr <> "" Then{n}{t}Copy = CLng(copystr){n}{t}If (Copy > 100) And (Copy <= 200) Then{n}{t}  ReturnVal = 0{n}{t}ElseIf (Copy > 200) And (Copy <= 300) Then{n}{t}  ReturnVal = 0{n}{t}ElseIf (Copy > 300) And (Copy <= 400) Then{n}{t}  ReturnVal = GetCurrency(IACred.PYCarry, (Copy) - 300){n}{t}ElseIf (Copy > 400) And (Copy <= 500) Then{n}{t}  ReturnVal = GetCurrency(IACred.PYCarry, (Copy) - 400){n}{t}ElseIf (Copy > 500) And (Copy <= 600) Then{n}{t}  ReturnVal = GetCurrency(IACred.PYCarry, (Copy) - 500){n}{t}ElseIf (Copy > 600) And (Copy <= 700) Then{n}{t}  ReturnVal = GetCurrency(IACred.PYCarry, (Copy) - 600){n}{t}ElseIf (Copy > 700) And (Copy <= 800) Then{n}{t}  ReturnVal = GetCurrency(IACred.PYCarry, (Copy) - 700){n}{t}ElseIf (Copy > 800) And (Copy <= 900) Then{n}{t}  ReturnVal = GetCurrency(IACred.PYCarry, (Copy) - 800){n}{t}ElseIf (Copy > 900) And (Copy <= 1000) Then{n}{t}  ReturnVal = GetCurrency(IACred.PYCarry, (Copy) - 900){n}{t}ElseIf (Copy > 1000) And (Copy <= 1100) Then{n}{t}  ReturnVal = GetCurrency(IACred.PYCarry, (Copy) - 1000){n}{t}ElseIf (Copy > 1100) And (Copy <= 1200) Then{n}{t}  ReturnVal = GetCurrency(IACred.PYCarry, (Copy) - 1100){n}{t}ElseIf (Copy > 1200) And (Copy <= 1300) Then{n}{t}  ReturnVal = GetCurrency(IACred.PYCarry, (Copy) - 1200){n}{t}ElseIf (Copy > 1300) And (Copy <= 1400) Then{n}{t}  ReturnVal = GetCurrency(IACred.PYCarry, (Copy) - 1300){n}{t}ElseIf (Copy > 1400) And (Copy <= 1500) Then{n}{t}  ReturnVal = GetCurrency(IACred.PYCarry, (Copy) - 1400){n}{t}ElseIf (Copy > 1500) And (Copy <= 1600) Then{n}{t}  ReturnVal = GetCurrency(IACred.PYCarry, (Copy) - 1500){n}{t}ElseIf (Copy > 1600) And (Copy <= 1700) Then{n}{t}  ReturnVal = GetCurrency(IACred.PYCarry, (Copy) - 1600){n}{t}ElseIf (Copy > 1700) And (Copy <= 1800) Then{n}{t}  ReturnVal = GetCurrency(IACred.PYCarry, (Copy) - 1700){n}{t}ElseIf (Copy > 1800) And (Copy <= 1900) Then{n}{t}  ReturnVal = GetCurrency(IACred.PYCarry, (Copy) - 1800){n}{t}ElseIf (Copy > 1900) And (Copy <= 2000) Then{n}{t}  ReturnVal = GetCurrency(IACred.PYCarry, (Copy) - 1900){n}{t}ElseIf (Copy > 2000) And (Copy <= 2100) Then{n}{t}  ReturnVal = GetCurrency(IACred.PYCarry, (Copy) - 2000){n}{t}ElseIf (Copy > 2100) And (Copy <= 2200) Then{n}{t}  ReturnVal = GetCurrency(IACred.PYCarry, (Copy) - 2100){n}{t}ElseIf (Copy > 2200) And (Copy <= 2300) Then{n}{t}  ReturnVal = GetCurrency(IACred.PYCarry, (Copy) - 2200){n}{t}ElseIf (Copy > 2300) And (Copy <= 2400) Then{n}{t}  ReturnVal = GetCurrency(IACred.PYCarry, (Copy) - 2300){n}{t}ElseIf (Copy > 2400) And (Copy <= 2500) Then{n}{t}  ReturnVal = GetCurrency(IA8801Sp.PYCarryforward){n}{t}End If{n}  End If{n}  ReturnVal = 0{n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IA148Sp.SSN){n}End Sub
Sub TotNonRefCr_Calculation(){n}{t}Dim NonRefCr1 As Currency{n}{t}Dim NonRefCr2 As Currency{n}{t}Dim NonRefCr3 As Currency{n}{t}{n}{t}NonRefCr1 = GetCurrency(IAWBP148Sp.NonRefCr1) + GetCurrency(IAWBP148Sp.NonRefCr2) + GetCurrency(IAWBP148Sp.NonRefCr3) + GetCurrency(IAWBP148Sp.NonRefCr4) + GetCurrency(IAWBP148Sp.NonRefCr5) + GetCurrency(IAWBP148Sp.NonRefCr6) + GetCurrency(IAWBP148Sp.NonRefCr7) + GetCurrency(IAWBP148Sp.NonRefCr8) + GetCurrency(IAWBP148Sp.NonRefCr9) + GetCurrency(IAWBP148Sp.NonRefCr10){n}{t}NonRefCr2 = GetCurrency(IAWBP148Sp.NonRefCr11) + GetCurrency(IAWBP148Sp.NonRefCr12) + GetCurrency(IAWBP148Sp.NonRefCr13) + GetCurrency(IAWBP148Sp.NonRefCr14) + GetCurrency(IAWBP148Sp.NonRefCr15) + GetCurrency(IAWBP148Sp.NonRefCr16) + GetCurrency(IAWBP148Sp.NonRefCr17) + GetCurrency(IAWBP148Sp.NonRefCr18) + GetCurrency(IAWBP148Sp.NonRefCr19) + GetCurrency(IAWBP148Sp.NonRefCr20){n}{t}NonRefCr3 = GetCurrency(IAWBP148Sp.NonRefCr21) + GetCurrency(IAWBP148Sp.NonRefCr22) + GetCurrency(IAWBP148Sp.NonRefCr23) + GetCurrency(IAWBP148Sp.NonRefCr24) + GetCurrency(IAWBP148Sp.NonRefCr25) + GetCurrency(IAWBP148Sp.NonRefCr26) + GetCurrency(IAWBP148Sp.NonRefCr27) + GetCurrency(IAWBP148Sp.NonRefCr28) + GetCurrency(IAWBP148Sp.NonRefCr29){n}{t}{n}{t}ReturnVal = NonRefCr1 + NonRefCr2 + NonRefCr3{n}End Sub
Sub TPPerc_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}{n}{t}Stuff = Index + GetNumber(IAWBP148Sp.Offset) + 1{n}{n}{t}ReturnVal = GetFloat(IA148BumpSp.TPPerc(Stuff)){n}End SubSub AccFedDep_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}{n}{t}Stuff = Index + GetNumber(IAWBPDepSp.Offset){n}{t}{n}{t}If GetNumber(IA4562Sp.DepSeeAttBool) = 0 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetNumber(IA4562Sp.StateDeprNbr) > Stuff Then{n}{t}{t}ReturnVal = GetCurrency(IAWDepr.SPAccFedDep, GetNumber(IA4562Sp.StateDeprCopyNbr(Stuff))){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub AccIADep_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}{n}{t}Stuff = Index + GetNumber(IAWBPDepSp.Offset){n}{t}{n}{t}If GetNumber(IA4562Sp.DepSeeAttBool) = 0 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetNumber(IA4562Sp.StateDeprNbr) > Stuff Then{n}{t}{t}ReturnVal = GetCurrency(IAWDepr.SPAccIADep, GetNumber(IA4562Sp.StateDeprCopyNbr(Stuff))){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Basis_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}{n}{t}Stuff = Index + GetNumber(IAWBPDepSp.Offset){n}{t}{n}{t}If GetNumber(IA4562Sp.DepSeeAttBool) = 0 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetNumber(IA4562Sp.StateDeprNbr) > Stuff Then{n}{t}{t}ReturnVal = GetCurrency(IAWDepr.SPBasis, GetNumber(IA4562Sp.StateDeprCopyNbr(Stuff))){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub DateServ_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}{n}{t}Stuff = Index + GetNumber(IAWBPDepSp.Offset){n}{t}{n}{t}If GetNumber(IA4562Sp.DepSeeAttBool) = 0 Then{n}{t}{t}ReturnVal = ""{n}{t}ElseIf GetNumber(IA4562Sp.StateDeprNbr) > Stuff Then{n}{t}{t}ReturnVal = GetString(IAWDepr.DateServ, GetNumber(IA4562Sp.StateDeprCopyNbr(Stuff))){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub Desc_Calculation(){n}{t}ReturnVal = GetString(IAWBPDepSp.Names){n}End Sub
Sub Fed179_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}{n}{t}Stuff = Index + GetNumber(IAWBPDepSp.Offset){n}{t}{n}{t}If GetNumber(IA4562Sp.DepSeeAttBool) = 0 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetNumber(IA4562Sp.StateDeprNbr) > Stuff Then{n}{t}{t}ReturnVal = GetCurrency(IAWDepr.SPFed179, GetNumber(IA4562Sp.StateDeprCopyNbr(Stuff))){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub FedDepDed_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}{n}{t}Stuff = Index + GetNumber(IAWBPDepSp.Offset){n}{t}{n}{t}If GetNumber(IA4562Sp.DepSeeAttBool) = 0 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetNumber(IA4562Sp.StateDeprNbr) > Stuff Then{n}{t}{t}ReturnVal = GetCurrency(IAWDepr.SPFedDepDed, GetNumber(IA4562Sp.StateDeprCopyNbr(Stuff))){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub IA179_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}{n}{t}Stuff = Index + GetNumber(IAWBPDepSp.Offset){n}{t}{n}{t}If GetNumber(IA4562Sp.DepSeeAttBool) = 0 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetNumber(IA4562Sp.StateDeprNbr) > Stuff Then{n}{t}{t}ReturnVal = GetCurrency(IAWDepr.SPIA179, GetNumber(IA4562Sp.StateDeprCopyNbr(Stuff))){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Life_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}{n}{t}Stuff = Index + GetNumber(IAWBPDepSp.Offset){n}{t}{n}{t}If GetNumber(IA4562Sp.DepSeeAttBool) = 0 Then{n}{t}{t}ReturnVal = ""{n}{t}ElseIf GetNumber(IA4562Sp.StateDeprNbr) > Stuff Then{n}{t}{t}ReturnVal = GetString(IAWDepr.Life, GetNumber(IA4562Sp.StateDeprCopyNbr(Stuff))){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub MACRSIA_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}{n}{t}Stuff = Index + GetNumber(IAWBPDepSp.Offset){n}{t}{n}{t}If GetNumber(IA4562Sp.DepSeeAttBool) = 0 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetNumber(IA4562Sp.StateDeprNbr) > Stuff Then{n}{t}{t}ReturnVal = GetCurrency(IAWDepr.SPMACRSIA, GetNumber(IA4562Sp.StateDeprCopyNbr(Stuff))){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Names_Calculation(){n}{t}ReturnVal = GetString(IA4562Sp.Names){n}End Sub
Sub Offset_Calculation(){n}{t}If GetCopy() = 1 Then{n}{t}{t}ReturnVal = 3 - GetNumber(IA4562PIV.SpCopy){n}{t}ElseIf GetCopy() = 2 Then{n}{t}{t}ReturnVal = 32 - GetNumber(IA4562PIV.SpCopy){n}{t}ElseIf GetCopy() = 3 Then{n}{t}{t}ReturnVal = 61 - GetNumber(IA4562PIV.SpCopy){n}{t}ElseIf GetCopy() = 4 Then{n}{t}{t}ReturnVal = 90 - GetNumber(IA4562PIV.SpCopy){n}{t}ElseIf GetCopy() = 5 Then{n}{t}{t}ReturnVal = 119 - GetNumber(IA4562PIV.SpCopy){n}{t}ElseIf GetCopy() = 6 Then{n}{t}{t}ReturnVal = 148 - GetNumber(IA4562PIV.SpCopy){n}{t}ElseIf GetCopy() = 7 Then{n}{t}{t}ReturnVal = 177 - GetNumber(IA4562PIV.SpCopy){n}{t}ElseIf GetCopy() = 8 Then{n}{t}{t}ReturnVal = 206 - GetNumber(IA4562PIV.SpCopy){n}{t}ElseIf GetCopy() = 9 Then{n}{t}{t}ReturnVal = 235 - GetNumber(IA4562PIV.SpCopy){n}{t}ElseIf GetCopy() = 10 Then{n}{t}{t}ReturnVal = 264 - GetNumber(IA4562PIV.SpCopy){n}{t}ElseIf GetCopy() = 11 Then{n}{t}{t}ReturnVal = 293 - GetNumber(IA4562PIV.SpCopy){n}{t}ElseIf GetCopy() = 12 Then{n}{t}{t}ReturnVal = 322 - GetNumber(IA4562PIV.SpCopy){n}{t}ElseIf GetCopy() = 13 Then{n}{t}{t}ReturnVal = 351 - GetNumber(IA4562PIV.SpCopy){n}{t}ElseIf GetCopy() = 14 Then{n}{t}{t}ReturnVal = 380 - GetNumber(IA4562PIV.SpCopy){n}{t}ElseIf GetCopy() = 15 Then{n}{t}{t}ReturnVal = 409 - GetNumber(IA4562PIV.SpCopy){n}{t}ElseIf GetCopy() = 16 Then{n}{t}{t}ReturnVal = 438 - GetNumber(IA4562PIV.SpCopy){n}{t}ElseIf GetCopy() = 17 Then{n}{t}{t}ReturnVal = 467 - GetNumber(IA4562PIV.SpCopy){n}{t}ElseIf GetCopy() = 18 Then{n}{t}{t}ReturnVal = 496 - GetNumber(IA4562PIV.SpCopy){n}{t}ElseIf GetCopy() = 19 Then{n}{t}{t}ReturnVal = 525 - GetNumber(IA4562PIV.SpCopy){n}{t}Else{n}{t}{t}ReturnVal = 554 - GetNumber(IA4562PIV.SpCopy){n}{t}End If{n}End Sub
Sub PropDesc_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}{n}{t}Stuff = Index + GetNumber(IAWBPDepSp.Offset){n}{t}{n}{t}If GetNumber(IA4562Sp.DepSeeAttBool) = 0 Then{n}{t}{t}ReturnVal = ""{n}{t}ElseIf GetNumber(IA4562Sp.StateDeprNbr) > Stuff Then{n}{t}{t}ReturnVal = GetString(IAWDepr.PropDesc, GetNumber(IA4562Sp.StateDeprCopyNbr(Stuff))){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub PrWBPDep_Calculation(){n}{t}If GetCurrency(IAWBPDepSp.TotFed179) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IAWBPDepSp.TotFDD) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IAWBPDepSp.TotIA179) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IAWBPDepSp.TotMACRS) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IA4562Sp.SSN){n}End Sub
Sub TotFDD_Calculation(){n}{t}Dim count As Integer{n}{t}Dim SubTot As Currency{n}{t}{n}{t}count = 0{n}{t}SubTot = 0{n}{t}{n}{t}Do While count < 29{n}{t}{t}SubTot = SubTot + GetCurrency(IAWBPDepSp.FedDepDed(count)){n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = SubTot{n}End Sub
Sub TotFed179_Calculation(){n}{t}Dim count As Integer{n}{t}Dim SubTot As Currency{n}{t}{n}{t}count = 0{n}{t}SubTot = 0{n}{t}{n}{t}Do While count < 29{n}{t}{t}SubTot = SubTot + GetCurrency(IAWBPDepSp.Fed179(count)){n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = SubTot{n}End Sub
Sub TotIA179_Calculation(){n}{t}Dim count As Integer{n}{t}Dim SubTot As Currency{n}{t}{n}{t}count = 0{n}{t}SubTot = 0{n}{t}{n}{t}Do While count < 29{n}{t}{t}SubTot = SubTot + GetCurrency(IAWBPDepSp.IA179(count)){n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = SubTot{n}End Sub
Sub TotMACRS_Calculation(){n}{t}Dim count As Integer{n}{t}Dim SubTot As Currency{n}{t}{n}{t}count = 0{n}{t}SubTot = 0{n}{t}{n}{t}Do While count < 29{n}{t}{t}SubTot = SubTot + GetCurrency(IAWBPDepSp.MACRSIA(count)){n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = SubTot{n}End SubSub Desc_Calculation(){n}{t}ReturnVal = GetString(IAWBPDispSp.Names){n}End Sub
Sub DisAdj_Calculation(Index As Integer){n}{t}ReturnVal = GetCurrency(IAWBPDispSp.DisIADep(Index)) - GetCurrency(IAWBPDispSp.DisFedDep(Index)){n}End Sub
Sub DisDTServ_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}{n}{t}Stuff = Index + GetNumber(IAWBPDispSp.Offset){n}{t}{n}{t}If GetNumber(IA4562Sp.StateDispNbr) > Stuff Then{n}{t}{t}ReturnVal = GetString(IAWDepr.DateServ, GetNumber(IA4562Sp.StateDispCopyNbr(Stuff))){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub DisDTSld_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}{n}{t}Stuff = Index + GetNumber(IAWBPDispSp.Offset){n}{t}{n}{t}If GetNumber(IA4562Sp.StateDispNbr) > Stuff Then{n}{t}{t}ReturnVal = GetString(IAWDepr.DisDTSld, GetNumber(IA4562Sp.StateDispCopyNbr(Stuff))){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub DisFedDep_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}{n}{t}Stuff = Index + GetNumber(IAWBPDispSp.Offset){n}{t}{n}{t}If GetNumber(IA4562Sp.StateDispNbr) > Stuff Then{n}{t}{t}ReturnVal = GetCurrency(IAWDepr.SPDisFedDep, GetNumber(IA4562Sp.StateDispCopyNbr(Stuff))){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub DisIADep_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}{n}{t}Stuff = Index + GetNumber(IAWBPDispSp.Offset){n}{t}{n}{t}If GetNumber(IA4562Sp.StateDispNbr) > Stuff Then{n}{t}{t}ReturnVal = GetCurrency(IAWDepr.SPDisIADep, GetNumber(IA4562Sp.StateDispCopyNbr(Stuff))){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub DisPropDesc_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}{n}{t}Stuff = Index + GetNumber(IAWBPDispSp.Offset){n}{t}{n}{t}If GetNumber(IA4562Sp.StateDispNbr) > Stuff Then{n}{t}{t}ReturnVal = GetString(IAWDepr.PropDesc, GetNumber(IA4562Sp.StateDispCopyNbr(Stuff))){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub Names_Calculation(){n}{t}ReturnVal = GetString(IA4562Sp.Names){n}End Sub
Sub Offset_Calculation(){n}{t}If GetCopy() = 1 Then{n}{t}{t}ReturnVal = 3{n}{t}ElseIf GetCopy() = 2 Then{n}{t}{t}ReturnVal = 32{n}{t}ElseIf GetCopy() = 3 Then{n}{t}{t}ReturnVal = 61{n}{t}ElseIf GetCopy() = 4 Then{n}{t}{t}ReturnVal = 90{n}{t}ElseIf GetCopy() = 5 Then{n}{t}{t}ReturnVal = 119{n}{t}ElseIf GetCopy() = 6 Then{n}{t}{t}ReturnVal = 148{n}{t}ElseIf GetCopy() = 7 Then{n}{t}{t}ReturnVal = 177{n}{t}ElseIf GetCopy() = 8 Then{n}{t}{t}ReturnVal = 206{n}{t}ElseIf GetCopy() = 9 Then{n}{t}{t}ReturnVal = 235{n}{t}ElseIf GetCopy() = 10 Then{n}{t}{t}ReturnVal = 264{n}{t}ElseIf GetCopy() = 11 Then{n}{t}{t}ReturnVal = 293{n}{t}ElseIf GetCopy() = 12 Then{n}{t}{t}ReturnVal = 322{n}{t}ElseIf GetCopy() = 13 Then{n}{t}{t}ReturnVal = 351{n}{t}ElseIf GetCopy() = 14 Then{n}{t}{t}ReturnVal = 380{n}{t}ElseIf GetCopy() = 15 Then{n}{t}{t}ReturnVal = 409{n}{t}ElseIf GetCopy() = 16 Then{n}{t}{t}ReturnVal = 438{n}{t}ElseIf GetCopy() = 17 Then{n}{t}{t}ReturnVal = 467{n}{t}ElseIf GetCopy() = 18 Then{n}{t}{t}ReturnVal = 496{n}{t}ElseIf GetCopy() = 19 Then{n}{t}{t}ReturnVal = 525{n}{t}Else{n}{t}{t}ReturnVal = 554{n}{t}End If{n}End Sub
Sub PrWBPDisp_Calculation(){n}{t}If GetCurrency(IAWBPDispSp.TotDisAdj) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IA4562Sp.SSN){n}End Sub
Sub TotDisAdj_Calculation(){n}{t}Dim count As Integer{n}{t}Dim SubTot As Currency{n}{t}{n}{t}count = 0{n}{t}SubTot = 0{n}{t}{n}{t}Do While count < 29{n}{t}{t}SubTot = SubTot + GetCurrency(IAWBPDispSp.DisAdj(count)){n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = SubTot{n}End Sub
Sub TotDisFedDep_Calculation(){n}{t}Dim count As Integer{n}{t}Dim SubTot As Currency{n}{t}{n}{t}count = 0{n}{t}SubTot = 0{n}{t}{n}{t}Do While count < 29{n}{t}{t}SubTot = SubTot + GetCurrency(IAWBPDispSp.DisFedDep(count)){n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = SubTot{n}End Sub
Sub TotDisIADep_Calculation(){n}{t}Dim count As Integer{n}{t}Dim SubTot As Currency{n}{t}{n}{t}count = 0{n}{t}SubTot = 0{n}{t}{n}{t}Do While count < 29{n}{t}{t}SubTot = SubTot + GetCurrency(IAWBPDispSp.DisIADep(count)){n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = SubTot{n}End SubSub Desc_Calculation(){n}{t}ReturnVal = CStr(GetCurrency(IAWBPDiv.TotalDividend)) & " Additional Dividends"{n}End Sub
Sub DivAcctOwner_Calculation(Index As Integer){n}{t}If GetBool(IAWBPDiv.DTp1(Index)) = True Then{n}{t}{t}ReturnVal = "Taxpayer"{n}{t}ElseIf GetBool(IAWBPDiv.DSp1(Index)) = True Then{n}{t}{t}ReturnVal = "Spouse"{n}{t}ElseIf GetBool(IAWBPDiv.DJ1(Index)) = True Then{n}{t}{t}ReturnVal = "Joint"{n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub Dividend_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}Dim MoStuff As Integer{n}{t}Dim DIV As Integer{n}{t}Dim PartK1 As Integer{n}{t}Dim SCorpK1 As Integer{n}{t}Dim EstK1 As Integer{n}{t}Dim F5471 As Integer{n}{t}Dim F8621 As Integer{n}{t}Dim F8814 As Integer{n}{n}{t}DIV = GetNumber(IAWBBump.DIVNbr){n}{t}PartK1 = GetNumber(IAWBBump.PartK1DivNbr){n}{t}SCorpK1 = GetNumber(IAWBBump.SCorpK1DivNbr){n}{t}EstK1 = GetNumber(IAWBBump.EstK1DivNbr){n}{t}F5471 = GetNumber(IAWBBump.F5471Nbr){n}{t}F8621 = GetNumber(IAWBBump.F8621Nbr){n}{t}F8814 = GetNumber(IAWBBump.F8814Nbr){n}{t}{n}{t}MoStuff = Index + GetNumber(IAWBPDiv.Offset){n}{t}{n}{t}If GetNumber(IASchB.TotDIVCopies) = 7 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf DIV > MoStuff Then{n}{t}{t}ReturnVal = Round(GetCurrency(USD1099DIV.ORDDIV, GetNumber(IAWBBump.DIV(MoStuff)))) + Round(GetCurrency(USD1099DIV.FedExmpt, GetNumber(IAWBBump.DIV(MoStuff)))){n}{t}ElseIf DIV + PartK1 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - DIV{n}{t}{t}ReturnVal = GetCurrency(USDPartK1.Dividends, (GetNumber(IAWBBump.PartK1Div(Stuff)))){n}{t}ElseIf DIV + PartK1 + SCorpK1 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - DIV - PartK1{n}{t}{t}ReturnVal = GetCurrency(USDSCorpK1.Dividends, (GetNumber(IAWBBump.SCorpK1Div(Stuff)))){n}{t}ElseIf DIV + PartK1 + SCorpK1 + EstK1 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - DIV - PartK1 - SCorpK1{n}{t}{t}ReturnVal = GetCurrency(USDEstK1.Dividends, (GetNumber(IAWBBump.EstK1Div(Stuff)))){n}{t}ElseIf DIV + PartK1 + SCorpK1 + EstK1 + F5471 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - DIV - PartK1 - SCorpK1 - EstK1{n}{t}{t}ReturnVal = GetCurrency(USW5471SchI.DivOrd, (GetNumber(IAWBBump.F5471(Stuff)))){n}{t}ElseIf DIV + PartK1 + SCorpK1 + EstK1 + F5471 + F8621 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - DIV - PartK1 - SCorpK1 - EstK1 - F5471{n}{t}{t}ReturnVal = GetCurrency(USF8621.DivTo1040, (GetNumber(IAWBBump.F8621(Stuff)))){n}{t}ElseIf DIV + PartK1 + SCorpK1 + EstK1 + F5471 + F8621 + F8814 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - DIV - PartK1 - SCorpK1 - EstK1 - F5471 - F8621{n}{t}{t}ReturnVal = GetCurrency(USF8814.L6XL7, (GetNumber(IAWBBump.F8814(Stuff)))){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub DivNoPayer_Calculation(){n}{t}Dim count, Iter As Integer{n}{t}{n}{t}count = 0{n}{t}Iter = 0{n}{t}Do While Iter < 22{n}{t}{t}If GetCurrency(IAWBPDiv.Dividend(Iter)) > 0 And Trim(GetString(IAWBPDiv.DivPayer(Iter))) = "" Then{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}{t}Iter = Iter + 1{n}{t}Loop{n}{t}{n}{t}If GetBool(IAWBPDiv.Print) = True And count > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub DivPayer_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}Dim MoStuff As Integer{n}{t}Dim DIV As Integer{n}{t}Dim PartK1 As Integer{n}{t}Dim SCorpK1 As Integer{n}{t}Dim EstK1 As Integer{n}{t}Dim F5471 As Integer{n}{t}Dim F8621 As Integer{n}{t}Dim F8814 As Integer{n}{n}{t}DIV = GetNumber(IAWBBump.DIVNbr){n}{t}PartK1 = GetNumber(IAWBBump.PartK1DivNbr){n}{t}SCorpK1 = GetNumber(IAWBBump.SCorpK1DivNbr){n}{t}EstK1 = GetNumber(IAWBBump.EstK1DivNbr){n}{t}F5471 = GetNumber(IAWBBump.F5471Nbr){n}{t}F8621 = GetNumber(IAWBBump.F8621Nbr){n}{t}F8814 = GetNumber(IAWBBump.F8814Nbr){n}{t}{n}{t}MoStuff = Index + GetNumber(IAWBPDiv.Offset){n}{t}{n}{t}If GetNumber(IASchB.TotDIVCopies) = 7 Then{n}{t}{t}ReturnVal = ""{n}{t}ElseIf DIV > MoStuff Then{n}{t}{t}ReturnVal = GetString(USD1099DIV.PayerName, GetNumber(IAWBBump.DIV(MoStuff))){n}{t}ElseIf DIV + PartK1 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - DIV{n}{t}{t}ReturnVal = GetString(USDPartK1.CoName, (GetNumber(IAWBBump.PartK1Div(Stuff)))){n}{t}ElseIf DIV + PartK1 + SCorpK1 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - DIV - PartK1{n}{t}{t}ReturnVal = GetString(USDSCorpK1.CoName, (GetNumber(IAWBBump.SCorpK1Div(Stuff)))){n}{t}ElseIf DIV + PartK1 + SCorpK1 + EstK1 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - DIV - PartK1 - SCorpK1{n}{t}{t}ReturnVal = GetString(USDEstK1.TrustName, (GetNumber(IAWBBump.EstK1Div(Stuff)))){n}{t}ElseIf DIV + PartK1 + SCorpK1 + EstK1 + F5471 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - DIV - PartK1 - SCorpK1 - EstK1{n}{t}{t}ReturnVal = "Form 5471"{n}{t}ElseIf DIV + PartK1 + SCorpK1 + EstK1 + F5471 + F8621 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - DIV - PartK1 - SCorpK1 - EstK1 - F5471{n}{t}{t}ReturnVal = "Form 8621 - " & GetString(USF8621.CoName, (GetNumber(IAWBBump.F8621(Stuff)))){n}{t}ElseIf DIV + PartK1 + SCorpK1 + EstK1 + F5471 + F8621 + F8814 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - DIV - PartK1 - SCorpK1 - EstK1 - F5471 - F8621{n}{t}{t}ReturnVal = "Form 8814 - " & GetString(USF8814.ChName, (GetNumber(IAWBBump.F8814(Stuff)))){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub DJ1_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}Dim MoStuff As Integer{n}{t}Dim DIV As Integer{n}{t}Dim PartK1 As Integer{n}{t}Dim SCorpK1 As Integer{n}{t}Dim EstK1 As Integer{n}{t}Dim F5471 As Integer{n}{t}Dim F8621 As Integer{n}{t}Dim F8814 As Integer{n}{n}{t}DIV = GetNumber(IAWBBump.DIVNbr){n}{t}PartK1 = GetNumber(IAWBBump.PartK1DivNbr){n}{t}SCorpK1 = GetNumber(IAWBBump.SCorpK1DivNbr){n}{t}EstK1 = GetNumber(IAWBBump.EstK1DivNbr){n}{t}F5471 = GetNumber(IAWBBump.F5471Nbr){n}{t}F8621 = GetNumber(IAWBBump.F8621Nbr){n}{t}F8814 = GetNumber(IAWBBump.F8814Nbr){n}{t}{n}{t}MoStuff = Index + GetNumber(IAWBPDiv.Offset){n}{t}{n}{t}If GetNumber(IASchB.TotDIVCopies) = 7 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf DIV > MoStuff Then{n}{t}{t}ReturnVal = GetBool(USD1099DIV.Joint, GetNumber(IAWBBump.DIV(MoStuff))){n}{t}ElseIf DIV + PartK1 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - DIV{n}{t}{t}ReturnVal = GetBool(USDPartK1.Joint, (GetNumber(IAWBBump.PartK1Div(Stuff)))){n}{t}ElseIf DIV + PartK1 + SCorpK1 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - DIV - PartK1{n}{t}{t}ReturnVal = GetBool(USDSCorpK1.Joint, (GetNumber(IAWBBump.SCorpK1Div(Stuff)))){n}{t}ElseIf DIV + PartK1 + SCorpK1 + EstK1 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - DIV - PartK1 - SCorpK1{n}{t}{t}ReturnVal = GetBool(USDEstK1.Joint, (GetNumber(IAWBBump.EstK1Div(Stuff)))){n}{t}ElseIf DIV + PartK1 + SCorpK1 + EstK1 + F5471 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - DIV - PartK1 - SCorpK1 - EstK1{n}{t}{t}ReturnVal = 0{n}{t}ElseIf DIV + PartK1 + SCorpK1 + EstK1 + F5471 + F8621 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - DIV - PartK1 - SCorpK1 - EstK1 - F5471{n}{t}{t}ReturnVal = GetBool(USF8621.Joint, (GetNumber(IAWBBump.F8621(Stuff)))){n}{t}ElseIf DIV + PartK1 + SCorpK1 + EstK1 + F5471 + F8621 + F8814 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - DIV - PartK1 - SCorpK1 - EstK1 - F5471 - F8621{n}{t}{t}If GetBool(USWBasicInfo.JointCalc) = True Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub DSp1_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}Dim MoStuff As Integer{n}{t}Dim DIV As Integer{n}{t}Dim PartK1 As Integer{n}{t}Dim SCorpK1 As Integer{n}{t}Dim EstK1 As Integer{n}{t}Dim F5471 As Integer{n}{t}Dim F8621 As Integer{n}{t}Dim F8814 As Integer{n}{n}{t}DIV = GetNumber(IAWBBump.DIVNbr){n}{t}PartK1 = GetNumber(IAWBBump.PartK1DivNbr){n}{t}SCorpK1 = GetNumber(IAWBBump.SCorpK1DivNbr){n}{t}EstK1 = GetNumber(IAWBBump.EstK1DivNbr){n}{t}F5471 = GetNumber(IAWBBump.F5471Nbr){n}{t}F8621 = GetNumber(IAWBBump.F8621Nbr){n}{t}F8814 = GetNumber(IAWBBump.F8814Nbr){n}{t}{n}{t}MoStuff = Index + GetNumber(IAWBPDiv.Offset){n}{t}{n}{t}If GetNumber(IASchB.TotDIVCopies) = 7 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf DIV > MoStuff Then{n}{t}{t}ReturnVal = GetBool(USD1099DIV.Spouse, GetNumber(IAWBBump.DIV(MoStuff))){n}{t}ElseIf DIV + PartK1 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - DIV{n}{t}{t}ReturnVal = GetBool(USDPartK1.Spouse, (GetNumber(IAWBBump.PartK1Div(Stuff)))){n}{t}ElseIf DIV + PartK1 + SCorpK1 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - DIV - PartK1{n}{t}{t}ReturnVal = GetBool(USDSCorpK1.Spouse, (GetNumber(IAWBBump.SCorpK1Div(Stuff)))){n}{t}ElseIf DIV + PartK1 + SCorpK1 + EstK1 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - DIV - PartK1 - SCorpK1{n}{t}{t}ReturnVal = GetBool(USDEstK1.Spouse, (GetNumber(IAWBBump.EstK1Div(Stuff)))){n}{t}ElseIf DIV + PartK1 + SCorpK1 + EstK1 + F5471 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - DIV - PartK1 - SCorpK1 - EstK1{n}{t}{t}If GetString(USW5471SchI.SchISSN, (GetNumber(IAWBBump.F5471(Stuff)))) = GetString(USWBasicInfo.SpouseSSN) Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}ElseIf DIV + PartK1 + SCorpK1 + EstK1 + F5471 + F8621 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - DIV - PartK1 - SCorpK1 - EstK1 - F5471{n}{t}{t}ReturnVal = GetBool(USF8621.Spouse, (GetNumber(IAWBBump.F8621(Stuff)))){n}{t}ElseIf DIV + PartK1 + SCorpK1 + EstK1 + F5471 + F8621 + F8814 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - DIV - PartK1 - SCorpK1 - EstK1 - F5471 - F8621{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub DTp1_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}Dim MoStuff As Integer{n}{t}Dim DIV As Integer{n}{t}Dim PartK1 As Integer{n}{t}Dim SCorpK1 As Integer{n}{t}Dim EstK1 As Integer{n}{t}Dim F5471 As Integer{n}{t}Dim F8621 As Integer{n}{t}Dim F8814 As Integer{n}{n}{t}DIV = GetNumber(IAWBBump.DIVNbr){n}{t}PartK1 = GetNumber(IAWBBump.PartK1DivNbr){n}{t}SCorpK1 = GetNumber(IAWBBump.SCorpK1DivNbr){n}{t}EstK1 = GetNumber(IAWBBump.EstK1DivNbr){n}{t}F5471 = GetNumber(IAWBBump.F5471Nbr){n}{t}F8621 = GetNumber(IAWBBump.F8621Nbr){n}{t}F8814 = GetNumber(IAWBBump.F8814Nbr){n}{t}{n}{t}MoStuff = Index + GetNumber(IAWBPDiv.Offset){n}{t}{n}{t}If GetNumber(IASchB.TotDIVCopies) = 7 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf DIV > MoStuff Then{n}{t}{t}ReturnVal = GetBool(USD1099DIV.Taxpayer, GetNumber(IAWBBump.DIV(MoStuff))){n}{t}ElseIf DIV + PartK1 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - DIV{n}{t}{t}ReturnVal = GetBool(USDPartK1.Taxpayer, (GetNumber(IAWBBump.PartK1Div(Stuff)))){n}{t}ElseIf DIV + PartK1 + SCorpK1 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - DIV - PartK1{n}{t}{t}ReturnVal = GetBool(USDSCorpK1.Taxpayer, (GetNumber(IAWBBump.SCorpK1Div(Stuff)))){n}{t}ElseIf DIV + PartK1 + SCorpK1 + EstK1 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - DIV - PartK1 - SCorpK1{n}{t}{t}ReturnVal = GetBool(USDEstK1.Taxpayer, (GetNumber(IAWBBump.EstK1Div(Stuff)))){n}{t}ElseIf DIV + PartK1 + SCorpK1 + EstK1 + F5471 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - DIV - PartK1 - SCorpK1 - EstK1{n}{t}{t}If GetString(USW5471SchI.SchISSN, (GetNumber(IAWBBump.F5471(Stuff)))) = GetString(USWBasicInfo.SSN) Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}ElseIf DIV + PartK1 + SCorpK1 + EstK1 + F5471 + F8621 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - DIV - PartK1 - SCorpK1 - EstK1 - F5471{n}{t}{t}ReturnVal = GetBool(USF8621.Taxpayer, (GetNumber(IAWBBump.F8621(Stuff)))){n}{t}ElseIf DIV + PartK1 + SCorpK1 + EstK1 + F5471 + F8621 + F8814 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - DIV - PartK1 - SCorpK1 - EstK1 - F5471 - F8621{n}{t}{t}If GetBool(USWBasicInfo.JointCalc) = True Then{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub ExemptDiv_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}Dim MoStuff As Integer{n}{t}Dim DIV As Integer{n}{t}Dim PartK1 As Integer{n}{t}Dim SCorpK1 As Integer{n}{t}Dim EstK1 As Integer{n}{t}Dim F5471 As Integer{n}{t}Dim F8621 As Integer{n}{t}Dim F8814 As Integer{n}{n}{t}DIV = GetNumber(IAWBBump.DIVNbr){n}{t}PartK1 = GetNumber(IAWBBump.PartK1DivNbr){n}{t}SCorpK1 = GetNumber(IAWBBump.SCorpK1DivNbr){n}{t}EstK1 = GetNumber(IAWBBump.EstK1DivNbr){n}{t}F5471 = GetNumber(IAWBBump.F5471Nbr){n}{t}F8621 = GetNumber(IAWBBump.F8621Nbr){n}{t}F8814 = GetNumber(IAWBBump.F8814Nbr){n}{t}{n}{t}MoStuff = Index + GetNumber(IAWBPDiv.Offset){n}{t}{n}{t}If GetNumber(IASchB.TotDIVCopies) = 7 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf DIV > MoStuff Then{n}{t}{t}ReturnVal = Round(GetCurrency(USD1099DIV.Nominee, GetNumber(IAWBBump.DIV(MoStuff)))) + Round(GetCurrency(USD1099DIV.StExmpt, GetNumber(IAWBBump.DIV(MoStuff)))) + Round(GetCurrency(USD1099DIV.FedStExmpt, GetNumber(IAWBBump.DIV(MoStuff)))) + Round(GetCurrency(USD1099DIV.Restricted, GetNumber(IAWBBump.DIV(MoStuff)))){n}{t}ElseIf DIV + PartK1 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - DIV{n}{t}{t}ReturnVal = GetCurrency(USDPartK1.NetStTED, (GetNumber(IAWBBump.PartK1Div(Stuff)))){n}{t}ElseIf DIV + PartK1 + SCorpK1 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - DIV - PartK1{n}{t}{t}ReturnVal = GetCurrency(USDSCorpK1.NetStTED, (GetNumber(IAWBBump.SCorpK1Div(Stuff)))){n}{t}ElseIf DIV + PartK1 + SCorpK1 + EstK1 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - DIV - PartK1 - SCorpK1{n}{t}{t}ReturnVal = GetCurrency(USDEstK1.NetStTED, (GetNumber(IAWBBump.EstK1Div(Stuff)))){n}{t}ElseIf DIV + PartK1 + SCorpK1 + EstK1 + F5471 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - DIV - PartK1 - SCorpK1 - EstK1{n}{t}{t}ReturnVal = 0{n}{t}ElseIf DIV + PartK1 + SCorpK1 + EstK1 + F5471 + F8621 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - DIV - PartK1 - SCorpK1 - EstK1 - F5471{n}{t}{t}ReturnVal = 0{n}{t}ElseIf DIV + PartK1 + SCorpK1 + EstK1 + F5471 + F8621 + F8814 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - DIV - PartK1 - SCorpK1 - EstK1 - F5471 - F8621{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Exist_Calculation(){n}{t}ReturnVal = 1{n}End Sub
Sub Names_Calculation(){n}{t}ReturnVal = GetString(IARequired.CombNames){n}End Sub
Sub Offset_Calculation(){n}{t}If GetCopy() = 1 Then{n}{t}{t}ReturnVal = 6{n}{t}ElseIf GetCopy() = 2 Then{n}{t}{t}ReturnVal = 28{n}{t}ElseIf GetCopy() = 3 Then{n}{t}{t}ReturnVal = 50{n}{t}ElseIf GetCopy() = 4 Then{n}{t}{t}ReturnVal = 72{n}{t}ElseIf GetCopy() = 5 Then{n}{t}{t}ReturnVal = 94{n}{t}ElseIf GetCopy() = 6 Then{n}{t}{t}ReturnVal = 116{n}{t}ElseIf GetCopy() = 7 Then{n}{t}{t}ReturnVal = 138{n}{t}ElseIf GetCopy() = 8 Then{n}{t}{t}ReturnVal = 160{n}{t}ElseIf GetCopy() = 9 Then{n}{t}{t}ReturnVal = 182{n}{t}ElseIf GetCopy() = 10 Then{n}{t}{t}ReturnVal = 204{n}{t}Else{n}{t}{t}ReturnVal = 226{n}{t}End If{n}End Sub
Sub Print_Calculation(){n}{t}If GetNumber(IASchB.PrintIAB) = 1 And GetCurrency(IAWBPDiv.TotalDividend) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IAF1040.SSN){n}End Sub
Sub TaxDiv_Calculation(Index As Integer){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAWBPDiv.Dividend(Index)) - GetCurrency(IAWBPDiv.ExemptDiv(Index))){n}End Sub
Sub TotalDividend_Calculation(){n}{t}Dim count As Integer{n}{t}Dim SubTot As Currency{n}{n}{t}count = 0{n}{t}SubTot = 0{n}{n}{t}Do While count < 22{n}{t}{t}SubTot = SubTot + GetCurrency(IAWBPDiv.Dividend(count)){n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = SubTot{n}End Sub
Sub TotalExemptDiv_Calculation(){n}{t}Dim count As Integer{n}{t}Dim SubTot As Currency{n}{n}{t}count = 0{n}{t}SubTot = 0{n}{n}{t}Do While count < 22{n}{t}{t}SubTot = SubTot + GetCurrency(IAWBPDiv.ExemptDiv(count)){n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = SubTot{n}End Sub
Sub TotalTaxDiv_Calculation(){n}{t}Dim count As Integer{n}{t}Dim SubTot As Currency{n}{n}{t}count = 0{n}{t}SubTot = 0{n}{n}{t}Do While count < 22{n}{t}{t}SubTot = SubTot + GetCurrency(IAWBPDiv.TaxDiv(count)){n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = SubTot{n}End SubSub Desc_Calculation(){n}{t}ReturnVal = CStr(GetCurrency(IAWBPInt.TotalInterest)) & " Additional Interest"{n}End Sub
Sub ExemptInt_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}Dim MoStuff As Integer{n}{t}Dim ResSFM As Integer{n}{t}Dim OthSFM As Integer{n}{t}Dim OID As Integer{n}{t}Dim INT1099 As Integer{n}{t}Dim PartK1 As Integer{n}{t}Dim SCorpK1 As Integer{n}{t}Dim EstK1 As Integer{n}{t}Dim TPAccMktDisc As Boolean{n}{t}{n}{t}ResSFM = GetNumber(IAWBBump.ResSFMNbr){n}{t}OthSFM = GetNumber(IAWBBump.OthSFMNbr){n}{t}OID = GetNumber(IAWBBump.OIDNbr){n}{t}INT1099 = GetNumber(IAWBBump.INTNbr){n}{t}PartK1 = GetNumber(IAWBBump.PartK1Nbr){n}{t}SCorpK1 = GetNumber(IAWBBump.SCorpK1Nbr){n}{t}EstK1 = GetNumber(IAWBBump.EstK1Nbr){n}{t}TPAccMktDisc = GetBool(IASchB.TPAccMktDiscInt){n}{t}{n}{t}MoStuff = Index + GetNumber(IAWBPInt.Offset){n}{t}{n}{t}If GetNumber(IASchB.TotINTCopies) = 7 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf ResSFM > MoStuff Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf ResSFM + OthSFM > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM{n}{t}{t}ReturnVal = 0{n}{t}ElseIf ResSFM + OthSFM + OID > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM{n}{t}{t}ReturnVal = Round(GetCurrency(USD1099OID.USInt, (GetNumber(IAWBBump.OID(Stuff))))) + Round(GetCurrency(USD1099OID.StExempt, (GetNumber(IAWBBump.OID(Stuff))))) + Round(GetCurrency(USD1099OID.Nominee, (GetNumber(IAWBBump.OID(Stuff))))) + MaxValue(0, Round(GetCurrency(USD1099OID.BOIDAdjAmt, (GetNumber(IAWBBump.OID(Stuff)))))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID{n}{t}{t}ReturnVal = Round(GetCurrency(USD1099INT.USInt, (GetNumber(IAWBBump.INT(Stuff))))) + Round(GetCurrency(USD1099INT.Nominee, (GetNumber(IAWBBump.INT(Stuff))))) + Round(GetCurrency(USD1099INT.AccruedInt, (GetNumber(IAWBBump.INT(Stuff))))) + Round(GetCurrency(USD1099INT.ABP, (GetNumber(IAWBBump.INT(Stuff))))) + Round(GetCurrency(USD1099INT.StateExmpt, (GetNumber(IAWBBump.INT(Stuff))))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099{n}{t}{t}ReturnVal = GetCurrency(USDPartK1.NetStTEI, (GetNumber(IAWBBump.PartK1(Stuff)))) + GetCurrency(USDPartK1.FedStTEI, (GetNumber(IAWBBump.PartK1(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099 - PartK1{n}{t}{t}ReturnVal = GetCurrency(USDSCorpK1.NetStTEI, (GetNumber(IAWBBump.SCorpK1(Stuff)))) + GetCurrency(USDSCorpK1.FedStTEI, (GetNumber(IAWBBump.SCorpK1(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1{n}{t}{t}ReturnVal = GetCurrency(USDEstK1.NetStTEI, (GetNumber(IAWBBump.EstK1(Stuff)))) + GetCurrency(USDEstK1.FedStTEI, (GetNumber(IAWBBump.EstK1(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1{n}{t}{t}ReturnVal = 0{n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc{n}{t}{t}ReturnVal = 0{n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) + GetBool(IASchB.JtAccMktDiscInt) > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc - GetBool(IASchB.SPAccMktDiscInt){n}{t}{t}ReturnVal = 0{n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) + GetBool(IASchB.JtAccMktDiscInt) + GetBool(IASchB.TPContigentPay) > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc - GetBool(IASchB.SPAccMktDiscInt) - GetBool(IASchB.JtAccMktDiscInt){n}{t}{t}ReturnVal = 0{n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) + GetBool(IASchB.JtAccMktDiscInt) + GetBool(IASchB.TPContigentPay) + GetBool(IASchB.SPContigentPay) > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc - GetBool(IASchB.SPAccMktDiscInt) - GetBool(IASchB.JtAccMktDiscInt) - GetBool(IASchB.TPContigentPay){n}{t}{t}ReturnVal = 0{n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) + GetBool(IASchB.JtAccMktDiscInt) + GetBool(IASchB.TPContigentPay) + GetBool(IASchB.SPContigentPay) + GetBool(IASchB.JtContigentPay) > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc - GetBool(IASchB.SPAccMktDiscInt) - GetBool(IASchB.JtAccMktDiscInt) - GetBool(IASchB.TPContigentPay) - GetBool(IASchB.SPContigentPay){n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Exist_Calculation(){n}{t}ReturnVal = 1{n}End Sub
Sub IJ1_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}Dim MoStuff As Integer{n}{t}Dim ResSFM As Integer{n}{t}Dim OthSFM As Integer{n}{t}Dim OID As Integer{n}{t}Dim INT1099 As Integer{n}{t}Dim PartK1 As Integer{n}{t}Dim SCorpK1 As Integer{n}{t}Dim EstK1 As Integer{n}{t}Dim TPAccMktDisc As Boolean{n}{t}{n}{t}ResSFM = GetNumber(IAWBBump.ResSFMNbr){n}{t}OthSFM = GetNumber(IAWBBump.OthSFMNbr){n}{t}OID = GetNumber(IAWBBump.OIDNbr){n}{t}INT1099 = GetNumber(IAWBBump.INTNbr){n}{t}PartK1 = GetNumber(IAWBBump.PartK1Nbr){n}{t}SCorpK1 = GetNumber(IAWBBump.SCorpK1Nbr){n}{t}EstK1 = GetNumber(IAWBBump.EstK1Nbr){n}{t}TPAccMktDisc = GetBool(IASchB.TPAccMktDiscInt){n}{t}{n}{t}MoStuff = Index + GetNumber(IAWBPInt.Offset){n}{t}{n}{t}If GetNumber(IASchB.TotINTCopies) = 7 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf ResSFM > MoStuff Then{n}{t}{t}ReturnVal = GetBool(USDSFM.Joint, GetNumber(IAWBBump.ResSFM(MoStuff))){n}{t}ElseIf ResSFM + OthSFM > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM{n}{t}{t}ReturnVal = GetBool(USDSFM.Joint, (GetNumber(IAWBBump.OthSFM(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM{n}{t}{t}ReturnVal = GetBool(USD1099OID.Joint, (GetNumber(IAWBBump.OID(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID{n}{t}{t}ReturnVal = GetBool(USD1099INT.Joint, (GetNumber(IAWBBump.Int(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099{n}{t}{t}ReturnVal = GetBool(USDPartK1.Joint, (GetNumber(IAWBBump.PartK1(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099 - PartK1{n}{t}{t}ReturnVal = GetBool(USDSCorpK1.Joint, (GetNumber(IAWBBump.SCorpK1(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1{n}{t}{t}ReturnVal = GetBool(USDEstK1.Joint, (GetNumber(IAWBBump.EstK1(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1{n}{t}{t}ReturnVal = 0{n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc{n}{t}{t}ReturnVal = 0{n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) + GetBool(IASchB.JtAccMktDiscInt) > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc - GetBool(IASchB.SPAccMktDiscInt){n}{t}{t}ReturnVal = 1{n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) + GetBool(IASchB.JtAccMktDiscInt) + GetBool(IASchB.TPContigentPay) > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc - GetBool(IASchB.SPAccMktDiscInt) - GetBool(IASchB.JtAccMktDiscInt){n}{t}{t}ReturnVal = 0{n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) + GetBool(IASchB.JtAccMktDiscInt) + GetBool(IASchB.TPContigentPay) + GetBool(IASchB.SPContigentPay) > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc - GetBool(IASchB.SPAccMktDiscInt) - GetBool(IASchB.JtAccMktDiscInt) - GetBool(IASchB.TPContigentPay){n}{t}{t}ReturnVal = 0{n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) + GetBool(IASchB.JtAccMktDiscInt) + GetBool(IASchB.TPContigentPay) + GetBool(IASchB.SPContigentPay) + GetBool(IASchB.JtContigentPay) > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc - GetBool(IASchB.SPAccMktDiscInt) - GetBool(IASchB.JtAccMktDiscInt) - GetBool(IASchB.TPContigentPay) - GetBool(IASchB.SPContigentPay){n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub IntAcctOwner_Calculation(Index As Integer){n}{t}If GetBool(IAWBPInt.ITp1(Index)) = True Then{n}{t}{t}ReturnVal = "Taxpayer"{n}{t}ElseIf GetBool(IAWBPInt.ISp1(Index)) = True Then{n}{t}{t}ReturnVal = "Spouse"{n}{t}ElseIf GetBool(IAWBPInt.IJ1(Index)) = True Then{n}{t}{t}ReturnVal = "Joint"{n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub Interest_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}Dim MoStuff As Integer{n}{t}Dim ResSFM As Integer{n}{t}Dim OthSFM As Integer{n}{t}Dim OID As Integer{n}{t}Dim INT1099 As Integer{n}{t}Dim PartK1 As Integer{n}{t}Dim SCorpK1 As Integer{n}{t}Dim EstK1 As Integer{n}{t}Dim TPAccMktDisc As Boolean{n}{t}{n}{t}ResSFM = GetNumber(IAWBBump.ResSFMNbr){n}{t}OthSFM = GetNumber(IAWBBump.OthSFMNbr){n}{t}OID = GetNumber(IAWBBump.OIDNbr){n}{t}INT1099 = GetNumber(IAWBBump.INTNbr){n}{t}PartK1 = GetNumber(IAWBBump.PartK1Nbr){n}{t}SCorpK1 = GetNumber(IAWBBump.SCorpK1Nbr){n}{t}EstK1 = GetNumber(IAWBBump.EstK1Nbr){n}{t}TPAccMktDisc = GetBool(IASchB.TPAccMktDiscInt){n}{t}{n}{t}MoStuff = Index + GetNumber(IAWBPInt.Offset){n}{t}{n}{t}If GetNumber(IASchB.TotINTCopies) = 7 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf ResSFM > MoStuff Then{n}{t}{t}ReturnVal = Round(GetCurrency(USDSFM.Interest, GetNumber(IAWBBump.ResSFM(MoStuff)))){n}{t}ElseIf ResSFM + OthSFM > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM{n}{t}{t}ReturnVal = Round(GetCurrency(USDSFM.Interest, (GetNumber(IAWBBump.OthSFM(Stuff))))){n}{t}ElseIf ResSFM + OthSFM + OID > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM{n}{t}{t}ReturnVal = GetCurrency(USD1099OID.BAmt, (GetNumber(IAWBBump.OID(Stuff)))) + Round(GetCurrency(USD1099OID.TaxExempt, (GetNumber(IAWBBump.OID(Stuff))))) - MinValue(0, Round(GetCurrency(USD1099OID.BOIDAdjAmt, (GetNumber(IAWBBump.OID(Stuff)))))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID{n}{t}{t}ReturnVal = GetCurrency(USD1099INT.BAmtEF, (GetNumber(IAWBBump.INT(Stuff)))) + GetCurrency(USD1099INT.FedExmpt, (GetNumber(IAWBBump.INT(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099{n}{t}{t}ReturnVal = GetCurrency(USDPartK1.HaveInt, (GetNumber(IAWBBump.PartK1(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099 - PartK1{n}{t}{t}ReturnVal = GetCurrency(USDSCorpK1.HaveInt, (GetNumber(IAWBBump.SCorpK1(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1{n}{t}{t}ReturnVal = GetCurrency(USDEstK1.HaveInt, (GetNumber(IAWBBump.EstK1(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1{n}{t}{t}ReturnVal = GetCurrency(IASchB.TPAccMktDiscInt){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc{n}{t}{t}ReturnVal = GetCurrency(IASchB.SPAccMktDiscInt){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) + GetBool(IASchB.JtAccMktDiscInt) > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc - GetBool(IASchB.SPAccMktDiscInt){n}{t}{t}ReturnVal = GetCurrency(IASchB.JtAccMktDiscInt){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) + GetBool(IASchB.JtAccMktDiscInt) + GetBool(IASchB.TPContigentPay) > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc - GetBool(IASchB.SPAccMktDiscInt) - GetBool(IASchB.JtAccMktDiscInt){n}{t}{t}ReturnVal = GetCurrency(IASchB.TPContigentPay){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) + GetBool(IASchB.JtAccMktDiscInt) + GetBool(IASchB.TPContigentPay) + GetBool(IASchB.SPContigentPay) > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc - GetBool(IASchB.SPAccMktDiscInt) - GetBool(IASchB.JtAccMktDiscInt) - GetBool(IASchB.TPContigentPay){n}{t}{t}ReturnVal = GetCurrency(IASchB.SPContigentPay){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) + GetBool(IASchB.JtAccMktDiscInt) + GetBool(IASchB.TPContigentPay) + GetBool(IASchB.SPContigentPay) + GetBool(IASchB.JtContigentPay) > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc - GetBool(IASchB.SPAccMktDiscInt) - GetBool(IASchB.JtAccMktDiscInt) - GetBool(IASchB.TPContigentPay) - GetBool(IASchB.SPContigentPay){n}{t}{t}ReturnVal = GetCurrency(IASchB.JtContigentPay){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub IntNoPayer_Calculation(){n}{t}Dim count, Iter As Integer{n}{t}{n}{t}count = 0{n}{t}Iter = 0{n}{t}Do While Iter < 22{n}{t}{t}If GetCurrency(IAWBPInt.Interest(Iter)) > 0 And Trim(GetString(IAWBPInt.Payer(Iter))) = "" Then{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}{t}Iter = Iter + 1{n}{t}Loop{n}{t}{n}{t}If GetBool(IAWBPInt.Print) = True And count > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub ISp1_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}Dim MoStuff As Integer{n}{t}Dim ResSFM As Integer{n}{t}Dim OthSFM As Integer{n}{t}Dim OID As Integer{n}{t}Dim INT1099 As Integer{n}{t}Dim PartK1 As Integer{n}{t}Dim SCorpK1 As Integer{n}{t}Dim EstK1 As Integer{n}{t}Dim TPAccMktDisc As Boolean{n}{t}{n}{t}ResSFM = GetNumber(IAWBBump.ResSFMNbr){n}{t}OthSFM = GetNumber(IAWBBump.OthSFMNbr){n}{t}OID = GetNumber(IAWBBump.OIDNbr){n}{t}INT1099 = GetNumber(IAWBBump.INTNbr){n}{t}PartK1 = GetNumber(IAWBBump.PartK1Nbr){n}{t}SCorpK1 = GetNumber(IAWBBump.SCorpK1Nbr){n}{t}EstK1 = GetNumber(IAWBBump.EstK1Nbr){n}{t}TPAccMktDisc = GetBool(IASchB.TPAccMktDiscInt){n}{t}{n}{t}MoStuff = Index + GetNumber(IAWBPInt.Offset){n}{t}{n}{t}If GetNumber(IASchB.TotINTCopies) = 7 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf ResSFM > MoStuff Then{n}{t}{t}ReturnVal = GetBool(USDSFM.Spouse, GetNumber(IAWBBump.ResSFM(MoStuff))){n}{t}ElseIf ResSFM + OthSFM > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM{n}{t}{t}ReturnVal = GetBool(USDSFM.Spouse, (GetNumber(IAWBBump.OthSFM(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM{n}{t}{t}ReturnVal = GetBool(USD1099OID.Spouse, (GetNumber(IAWBBump.OID(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID{n}{t}{t}ReturnVal = GetBool(USD1099INT.Spouse, (GetNumber(IAWBBump.Int(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099{n}{t}{t}ReturnVal = GetBool(USDPartK1.Spouse, (GetNumber(IAWBBump.PartK1(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099 - PartK1{n}{t}{t}ReturnVal = GetBool(USDSCorpK1.Spouse, (GetNumber(IAWBBump.SCorpK1(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1{n}{t}{t}ReturnVal = GetBool(USDEstK1.Spouse, (GetNumber(IAWBBump.EstK1(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1{n}{t}{t}ReturnVal = 0{n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc{n}{t}{t}ReturnVal = 1{n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) + GetBool(IASchB.JtAccMktDiscInt) > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc - GetBool(IASchB.SPAccMktDiscInt){n}{t}{t}ReturnVal = 0{n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) + GetBool(IASchB.JtAccMktDiscInt) + GetBool(IASchB.TPContigentPay) > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc - GetBool(IASchB.SPAccMktDiscInt) - GetBool(IASchB.JtAccMktDiscInt){n}{t}{t}ReturnVal = 0{n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) + GetBool(IASchB.JtAccMktDiscInt) + GetBool(IASchB.TPContigentPay) + GetBool(IASchB.SPContigentPay) > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc - GetBool(IASchB.SPAccMktDiscInt) - GetBool(IASchB.JtAccMktDiscInt) - GetBool(IASchB.TPContigentPay){n}{t}{t}ReturnVal = 1{n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) + GetBool(IASchB.JtAccMktDiscInt) + GetBool(IASchB.TPContigentPay) + GetBool(IASchB.SPContigentPay) + GetBool(IASchB.JtContigentPay) > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc - GetBool(IASchB.SPAccMktDiscInt) - GetBool(IASchB.JtAccMktDiscInt) - GetBool(IASchB.TPContigentPay) - GetBool(IASchB.SPContigentPay){n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub ITp1_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}Dim MoStuff As Integer{n}{t}Dim ResSFM As Integer{n}{t}Dim OthSFM As Integer{n}{t}Dim OID As Integer{n}{t}Dim INT1099 As Integer{n}{t}Dim PartK1 As Integer{n}{t}Dim SCorpK1 As Integer{n}{t}Dim EstK1 As Integer{n}{t}Dim TPAccMktDisc As Boolean{n}{t}{n}{t}ResSFM = GetNumber(IAWBBump.ResSFMNbr){n}{t}OthSFM = GetNumber(IAWBBump.OthSFMNbr){n}{t}OID = GetNumber(IAWBBump.OIDNbr){n}{t}INT1099 = GetNumber(IAWBBump.INTNbr){n}{t}PartK1 = GetNumber(IAWBBump.PartK1Nbr){n}{t}SCorpK1 = GetNumber(IAWBBump.SCorpK1Nbr){n}{t}EstK1 = GetNumber(IAWBBump.EstK1Nbr){n}{t}TPAccMktDisc = GetBool(IASchB.TPAccMktDiscInt){n}{t}{n}{t}MoStuff = Index + GetNumber(IAWBPInt.Offset){n}{t}{n}{t}If GetNumber(IASchB.TotINTCopies) = 7 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf ResSFM > MoStuff Then{n}{t}{t}ReturnVal = GetBool(USDSFM.Taxpayer, GetNumber(IAWBBump.ResSFM(MoStuff))){n}{t}ElseIf ResSFM + OthSFM > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM{n}{t}{t}ReturnVal = GetBool(USDSFM.Taxpayer, (GetNumber(IAWBBump.OthSFM(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM{n}{t}{t}ReturnVal = GetBool(USD1099OID.Taxpayer, (GetNumber(IAWBBump.OID(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID{n}{t}{t}ReturnVal = GetBool(USD1099INT.Taxpayer, (GetNumber(IAWBBump.Int(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099{n}{t}{t}ReturnVal = GetBool(USDPartK1.Taxpayer, (GetNumber(IAWBBump.PartK1(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099 - PartK1{n}{t}{t}ReturnVal = GetBool(USDSCorpK1.Taxpayer, (GetNumber(IAWBBump.SCorpK1(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1{n}{t}{t}ReturnVal = GetBool(USDEstK1.Taxpayer, (GetNumber(IAWBBump.EstK1(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1{n}{t}{t}ReturnVal = 1{n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc{n}{t}{t}ReturnVal = 0{n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) + GetBool(IASchB.JtAccMktDiscInt) > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc - GetBool(IASchB.SPAccMktDiscInt){n}{t}{t}ReturnVal = 0{n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) + GetBool(IASchB.JtAccMktDiscInt) + GetBool(IASchB.TPContigentPay) > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc - GetBool(IASchB.SPAccMktDiscInt) - GetBool(IASchB.JtAccMktDiscInt){n}{t}{t}ReturnVal = 1{n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) + GetBool(IASchB.JtAccMktDiscInt) + GetBool(IASchB.TPContigentPay) + GetBool(IASchB.SPContigentPay) > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc - GetBool(IASchB.SPAccMktDiscInt) - GetBool(IASchB.JtAccMktDiscInt) - GetBool(IASchB.TPContigentPay){n}{t}{t}ReturnVal = 0{n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) + GetBool(IASchB.JtAccMktDiscInt) + GetBool(IASchB.TPContigentPay) + GetBool(IASchB.SPContigentPay) + GetBool(IASchB.JtContigentPay) > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc - GetBool(IASchB.SPAccMktDiscInt) - GetBool(IASchB.JtAccMktDiscInt) - GetBool(IASchB.TPContigentPay) - GetBool(IASchB.SPContigentPay){n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Names_Calculation(){n}{t}ReturnVal = GetString(IARequired.CombNames){n}End Sub
Sub Offset_Calculation(){n}{t}If GetCopy() = 1 Then{n}{t}{t}ReturnVal = 6{n}{t}ElseIf GetCopy() = 2 Then{n}{t}{t}ReturnVal = 28{n}{t}ElseIf GetCopy() = 3 Then{n}{t}{t}ReturnVal = 50{n}{t}ElseIf GetCopy() = 4 Then{n}{t}{t}ReturnVal = 72{n}{t}ElseIf GetCopy() = 5 Then{n}{t}{t}ReturnVal = 94{n}{t}ElseIf GetCopy() = 6 Then{n}{t}{t}ReturnVal = 116{n}{t}ElseIf GetCopy() = 7 Then{n}{t}{t}ReturnVal = 138{n}{t}ElseIf GetCopy() = 8 Then{n}{t}{t}ReturnVal = 160{n}{t}ElseIf GetCopy() = 9 Then{n}{t}{t}ReturnVal = 182{n}{t}ElseIf GetCopy() = 10 Then{n}{t}{t}ReturnVal = 204{n}{t}ElseIf GetCopy() = 11 Then{n}{t}{t}ReturnVal = 226{n}{t}Else{n}{t}{t}ReturnVal = 248{n}{t}End If{n}End Sub
Sub Payer_Calculation(Index As Integer){n}{t}Dim Stuff As Integer{n}{t}Dim MoStuff As Integer{n}{t}Dim ResSFM As Integer{n}{t}Dim OthSFM As Integer{n}{t}Dim OID As Integer{n}{t}Dim INT1099 As Integer{n}{t}Dim PartK1 As Integer{n}{t}Dim SCorpK1 As Integer{n}{t}Dim EstK1 As Integer{n}{t}Dim TPAccMktDisc As Boolean{n}{t}{n}{t}ResSFM = GetNumber(IAWBBump.ResSFMNbr){n}{t}OthSFM = GetNumber(IAWBBump.OthSFMNbr){n}{t}OID = GetNumber(IAWBBump.OIDNbr){n}{t}INT1099 = GetNumber(IAWBBump.INTNbr){n}{t}PartK1 = GetNumber(IAWBBump.PartK1Nbr){n}{t}SCorpK1 = GetNumber(IAWBBump.SCorpK1Nbr){n}{t}EstK1 = GetNumber(IAWBBump.EstK1Nbr){n}{t}TPAccMktDisc = GetBool(IASchB.TPAccMktDiscInt){n}{t}{n}{t}MoStuff = Index + GetNumber(IAWBPInt.Offset){n}{t}{n}{t}If GetNumber(IASchB.TotINTCopies) = 7 Then{n}{t}{t}ReturnVal = ""{n}{t}ElseIf ResSFM > MoStuff Then{n}{t}{t}ReturnVal = GetString(USDSFM.NameAdd, GetNumber(IAWBBump.ResSFM(MoStuff))){n}{t}ElseIf ResSFM + OthSFM > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM{n}{t}{t}ReturnVal = GetString(USDSFM.PayerName, (GetNumber(IAWBBump.OthSFM(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM{n}{t}{t}ReturnVal = GetString(USD1099OID.PayerName, (GetNumber(IAWBBump.OID(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID{n}{t}{t}ReturnVal = GetString(USD1099INT.PayerName, (GetNumber(IAWBBump.INT(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099{n}{t}{t}ReturnVal = GetString(USDPartK1.CoName, (GetNumber(IAWBBump.PartK1(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099 - PartK1{n}{t}{t}ReturnVal = GetString(USDSCorpK1.CoName, (GetNumber(IAWBBump.SCorpK1(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1{n}{t}{t}ReturnVal = GetString(USDEstK1.TrustName, (GetNumber(IAWBBump.EstK1(Stuff)))){n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1{n}{t}{t}ReturnVal = "Accrued Market Discount"{n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc{n}{t}{t}ReturnVal = "Accrued Market Discount"{n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) + GetBool(IASchB.JtAccMktDiscInt) > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc - GetBool(IASchB.SPAccMktDiscInt){n}{t}{t}ReturnVal = "Accrued Market Discount"{n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) + GetBool(IASchB.JtAccMktDiscInt) + GetBool(IASchB.TPContigentPay) > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc - GetBool(IASchB.SPAccMktDiscInt) - GetBool(IASchB.JtAccMktDiscInt){n}{t}{t}ReturnVal = "Contingent Payment Debt Instrument"{n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) + GetBool(IASchB.JtAccMktDiscInt) + GetBool(IASchB.TPContigentPay) + GetBool(IASchB.SPContigentPay) > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc - GetBool(IASchB.SPAccMktDiscInt) - GetBool(IASchB.JtAccMktDiscInt) - GetBool(IASchB.TPContigentPay){n}{t}{t}ReturnVal = "Contingent Payment Debt Instrument"{n}{t}ElseIf ResSFM + OthSFM + OID + INT1099 + PartK1 + SCorpK1 + EstK1 + TPAccMktDisc + GetBool(IASchB.SPAccMktDiscInt) + GetBool(IASchB.JtAccMktDiscInt) + GetBool(IASchB.TPContigentPay) + GetBool(IASchB.SPContigentPay) + GetBool(IASchB.JtContigentPay) > MoStuff Then{n}{t}{t}Stuff = (MoStuff) - ResSFM - OthSFM - OID - INT1099 - PartK1 - SCorpK1 - EstK1 - TPAccMktDisc - GetBool(IASchB.SPAccMktDiscInt) - GetBool(IASchB.JtAccMktDiscInt) - GetBool(IASchB.TPContigentPay) - GetBool(IASchB.SPContigentPay){n}{t}{t}ReturnVal = "Contingent Payment Debt Instrument"{n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub Print_Calculation(){n}{t}If GetNumber(IASchB.PrintIAB) = 1 And GetCurrency(IAWBPInt.TotalInterest) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IAF1040.SSN){n}End Sub
Sub TaxInt_Calculation(Index As Integer){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAWBPInt.Interest(Index)) - GetCurrency(IAWBPInt.ExemptInt(Index))){n}End Sub
Sub TotalExemptInt_Calculation(){n}{t}Dim count As Integer{n}{t}Dim SubTot As Currency{n}{n}{t}count = 0{n}{t}SubTot = 0{n}{n}{t}Do While count < 22{n}{t}{t}SubTot = SubTot + GetCurrency(IAWBPInt.ExemptInt(count)){n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = SubTot{n}End Sub
Sub TotalInterest_Calculation(){n}{t}Dim count As Integer{n}{t}Dim SubTot As Currency{n}{n}{t}count = 0{n}{t}SubTot = 0{n}{n}{t}Do While count < 22{n}{t}{t}SubTot = SubTot + GetCurrency(IAWBPInt.Interest(count)){n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = SubTot{n}End Sub
Sub TotalTaxInt_Calculation(){n}{t}Dim count As Integer{n}{t}Dim SubTot As Currency{n}{n}{t}count = 0{n}{t}SubTot = 0{n}{n}{t}Do While count < 22{n}{t}{t}SubTot = SubTot + GetCurrency(IAWBPInt.TaxInt(count)){n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = SubTot{n}End SubSub AGI20_Calculation(){n}{t}ReturnVal = MaxValue(0, CDollar(GetFloat(IAWContLimit.CYAGI) * 0.2)){n}End Sub
Sub AGI30_Calculation(){n}{t}ReturnVal = MaxValue(0, CDollar(GetFloat(IAWContLimit.CYAGI) * 0.3)){n}End Sub
Sub AGI50_Calculation(){n}{t}ReturnVal = MaxValue(0, CDollar(GetFloat(IAWContLimit.CYAGI) * 0.5)){n}End Sub
Sub AGI100_Calculation(){n}{t}ReturnVal = MaxValue(0, CDollar(GetFloat(IAWContLimit.CYAGI) * 1#)){n}End Sub
Sub CY20After_Calculation(){n}{t}ReturnVal = GetCurrency(IAWContLimit.DedCY20) + GetCurrency(IAWContLimit.DedPY20){n}End Sub
Sub CY20Lim_Calculation(){n}{t}ReturnVal = GetCurrency(USWContLimit.CY20Lim){n}End Sub
Sub CY30After_Calculation(){n}{t}ReturnVal = GetCurrency(IAWContLimit.DedCY30) + GetCurrency(IAWContLimit.DedPY30){n}End Sub
Sub CY30AfterCG_Calculation(){n}{t}ReturnVal = GetCurrency(IAWContLimit.DedCY30CG) + GetCurrency(IAWContLimit.DedPY30CG){n}End Sub
Sub CY30Lim_Calculation(){n}{t}ReturnVal = GetCurrency(USWContLimit.CY30Lim){n}End Sub
Sub CY30LimCG_Calculation(){n}{t}ReturnVal = GetCurrency(USWContLimit.CY30LimCG){n}End Sub
Sub CY50After_Calculation(){n}{t}ReturnVal = GetCurrency(IAWContLimit.DedCY50) + GetCurrency(IAWContLimit.DedPY50){n}End Sub
Sub CY50Lim_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAWContLimit.CYTot) - GetCurrency(IAWContLimit.CY30Lim) - GetCurrency(IAWContLimit.CY30LimCG) - GetCurrency(IAWContLimit.CY20Lim) - GetCurrency(IAWContLimit.CYNoLim) - GetCurrency(IAWContLimit.CYQualLim)){n}End Sub
Sub CYAGI_Calculation(){n}{t}ReturnVal = GetCurrency(IASchA.IAAGI){n}End Sub
Sub CYNoLim_Calculation(){n}{t}ReturnVal = GetCurrency(USWContLimit.CYNoLim){n}End Sub
Sub CYNoLimit2_Calculation(){n}{t}ReturnVal = GetCurrency(IAWContLimit.DedCY100) + GetCurrency(IAWContLimit.DedPY100){n}End Sub
Sub CYQualAfter_Calculation(){n}{t}Dim Contributions As Currency{n}{t}{n}{t}Contributions = MinValue(GetCurrency(IAWContLimit.CYQualLim), GetCurrency(IAWContLimit.CYAGI) - GetCurrency(IAWContLimit.CY50After) - GetCurrency(IAWContLimit.CY30After) - GetCurrency(IAWContLimit.CY30AfterCG) - GetCurrency(IAWContLimit.CY20After) - GetCurrency(IAWContLimit.CYNoLimit2)){n}{n}{t}ReturnVal = MaxValue(0, Contributions){n}End Sub
Sub CYTot_Calculation(){n}{t}ReturnVal = GetCurrency(IASchA.Contrib) + GetCurrency(IASchA.Gifts){n}End Sub
Sub CYTotAfter_Calculation(){n}{t}ReturnVal = GetCurrency(IAWContLimit.CY50After) + GetCurrency(IAWContLimit.CY30After) + GetCurrency(IAWContLimit.CY30AfterCG) + GetCurrency(IAWContLimit.CY20After) + GetCurrency(IAWContLimit.CYNoLimit2) + GetCurrency(IAWContLimit.CYQualAfter){n}End Sub
Sub DedCY20_Calculation(){n}{t}'per pub 526 limited to lesser of 20% of AGI, or 30% of AGI minus 30% contributions or 50% of AGI minus 50% contributions{n}{t}Dim Rem20 As Currency{n}{t}Dim Rem30 As Currency{n}{t}Dim Rem30CG As Currency{n}{t}Dim Rem50 As Currency{n}{t}Dim Min2 As Currency{n}{t}Dim Min3 As Currency{n}{t}{n}{t}Rem20 = MaxValue(0, MinValue(GetCurrency(IAWContLimit.AGI20), GetCurrency(IAWContLimit.CY20Lim))){n}{t}Rem30 = MaxValue(0, GetCurrency(IAWContLimit.AGI30) - GetCurrency(IAWContLimit.Tot30Cont)){n}{t}Rem30CG = MaxValue(0, GetCurrency(IAWContLimit.AGI30) - GetCurrency(IAWContLimit.Tot30ContCG)){n}{t}Rem50 = MaxValue(0, GetCurrency(IAWContLimit.AGI50) - GetCurrency(IAWContLimit.Tot50Cont) - GetCurrency(IAWContLimit.Tot30ContCG) - GetCurrency(IAWContLimit.Tot30Cont)){n}{t}{n}{t}Min2 = MinValue(Rem20, Rem30){n}{t}Min3 = MinValue(Min2, Rem30CG){n}{t}{n}{t}ReturnVal = MaxValue(0, MinValue(Min3, Rem50)){n}End Sub
Sub DedCY30_Calculation(){n}{t}Dim Rem30 As Currency{n}{t}Dim Rem50 As Currency{n}{t}Dim Thirty As Currency{n}{t}{n}{t}Rem30 = MaxValue(0, MinValue(GetCurrency(IAWContLimit.AGI30), GetCurrency(IAWContLimit.CY30Lim))){n}{t}Rem50 = MaxValue(0, GetCurrency(IAWContLimit.AGI50) - GetCurrency(IAWContLimit.Tot50Cont) - GetCurrency(IAWContLimit.Tot30ContCG)){n}{t}{n}{t}ReturnVal = MaxValue(0, MinValue(Rem30, Rem50)){n}End Sub
Sub DedCY30CG_Calculation(){n}{t}Dim Rem30 As Currency{n}{t}{t}{n}{t}Rem30 = MaxValue(0, MinValue(GetCurrency(IAWContLimit.AGI30), GetCurrency(IAWContLimit.CY30LimCG))){n}{t}{n}{t}ReturnVal = MaxValue(0, MinValue(Rem30, GetCurrency(IAWContLimit.AGI50) - GetCurrency(IAWContLimit.Tot50Cont))){n}End Sub
Sub DedCY50_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IAWContLimit.CY50Lim), GetCurrency(IAWContLimit.AGI50)){n}End Sub
Sub DedCY100_Calculation(){n}{t}Dim Rem100 As Currency{n}{t}Dim Hundred As Currency{n}{t}{n}{t}Rem100 = MaxValue(0, MinValue(GetCurrency(IAWContLimit.AGI100), GetCurrency(IAWContLimit.CYNoLim))){n}{t}Hundred = MaxValue(0, MinValue(Rem100, GetCurrency(IAWContLimit.AGI100) - GetCurrency(IAWContLimit.Tot50Cont) - GetCurrency(IAWContLimit.Tot30ContCG) - GetCurrency(IAWContLimit.Tot30Cont) - GetCurrency(IAWContLimit.Tot20Cont))){n}{t}{n}{t}ReturnVal = MaxValue(0, MinValue(Rem100, Hundred)){n}End Sub
Sub DedPY20_Calculation(){n}{t}Dim Rem20 As Currency{n}{t}Dim Rem30CG As Currency{n}{t}Dim Rem30 As Currency{n}{t}Dim Rem50 As Currency{n}{t}Dim Min2 As Currency{n}{t}Dim Min3 As Currency{n}{t}Dim Min4 As Currency{n}{t}Dim Twenty As Currency{n}{t}{n}{t}Rem20 = MaxValue(0, MinValue(GetCurrency(IAWContLimit.AGI20), GetCurrency(IAWContLimit.PY20Lim))){n}{t}Rem30CG = MaxValue(0, GetCurrency(IAWContLimit.AGI30) - GetCurrency(IAWContLimit.Tot30ContCG) - GetCurrency(IAWContLimit.DedCY20)){n}{t}Rem30 = MaxValue(0, GetCurrency(IAWContLimit.AGI30) - GetCurrency(IAWContLimit.Tot30Cont) - GetCurrency(IAWContLimit.DedCY20)){n}{t}Rem50 = MaxValue(0, GetCurrency(IAWContLimit.AGI50) - GetCurrency(IAWContLimit.Tot50Cont) - GetCurrency(IAWContLimit.Tot30ContCG) - GetCurrency(IAWContLimit.Tot30Cont) - GetCurrency(IAWContLimit.DedCY20)){n}{t}Twenty = MaxValue(0, GetCurrency(IAWContLimit.AGI20) - GetCurrency(IAWContLimit.DedCY20)){n}{t}{n}{t}Min2 = MinValue(Rem20, Rem30CG){n}{t}Min3 = MinValue(Rem30, Rem50){n}{t}Min4 = MinValue(Min2, Twenty){n}{t}{n}{t}ReturnVal = MaxValue(0, MinValue(Min3, Min4)){n}End Sub
Sub DedPY30_Calculation(){n}{t}Dim Rem30 As Currency{n}{t}Dim Tot30 As Currency{n}{t}Dim Thirty As Currency{n}{t}{t}{n}{t}Rem30 = MaxValue(0, MinValue(GetCurrency(IAWContLimit.AGI30), GetCurrency(IAWContLimit.PY30Lim))){n}{t}Tot30 = MaxValue(0, GetCurrency(IAWContLimit.AGI30) - GetCurrency(IAWContLimit.CY30Lim)){n}{t}Thirty = MaxValue(0, MinValue(Rem30, GetCurrency(IAWContLimit.AGI50) - GetCurrency(IAWContLimit.Tot50Cont) - GetCurrency(IAWContLimit.Tot30ContCG) - GetCurrency(IAWContLimit.DedCY30))){n}{n}{t}ReturnVal = MinValue(Thirty, Tot30){n}End Sub
Sub DedPY30CG_Calculation(){n}{t}Dim Rem30CG As Currency{n}{t}Dim Rem50 As Currency{n}{t}Dim Min2 As Currency{n}{t}Dim ThirtyCG As Currency{n}{t}{n}{t}Rem30CG = MaxValue(0, MinValue(GetCurrency(IAWContLimit.AGI30), GetCurrency(IAWContLimit.PY30LimCG))){n}{t}Rem50 = MaxValue(0, GetCurrency(IAWContLimit.AGI50) - GetCurrency(IAWContLimit.Tot50Cont) - GetCurrency(IAWContLimit.DedCY30CG)){n}{t}ThirtyCG = MaxValue(0, GetCurrency(IAWContLimit.AGI30) - GetCurrency(IAWContLimit.DedCY30CG)){n}{t}Min2 = MinValue(Rem30CG, Rem50){n}{t}{n}{t}ReturnVal = MaxValue(0, MinValue(Min2, ThirtyCG)){n}End Sub
Sub DedPY50_Calculation(){n}{t}Dim Rem50 As Currency{n}{t}{n}{t}Rem50 = MaxValue(0, MinValue(GetCurrency(IAWContLimit.AGI50), GetCurrency(IAWContLimit.PY50Lim))){n}{t}{n}{t}ReturnVal = MaxValue(0, MinValue(Rem50, GetCurrency(IAWContLimit.AGI50) - GetCurrency(IAWContLimit.DedCY50))){n}End Sub
Sub DedPY100_Calculation(){n}{t}Dim Hundred As Currency{n}{t}Dim Rem100 As Currency{n}{n}{t}Rem100 = MaxValue(0, MinValue(GetCurrency(IAWContLimit.AGI100), GetCurrency(IAWContLimit.PYNoLim))){n}{t}Hundred = MaxValue(0, MinValue(Rem100, GetCurrency(IAWContLimit.AGI100) - GetCurrency(IAWContLimit.Tot50Cont) - GetCurrency(IAWContLimit.Tot30ContCG) - GetCurrency(IAWContLimit.Tot30Cont) - GetCurrency(IAWContLimit.Tot20Cont) - GetCurrency(IAWContLimit.DedCY100))){n}{t}{n}{t}ReturnVal = MaxValue(0, MinValue(Rem100, Hundred)){n}End Sub
Sub Desc_Calculation(){n}{t}ReturnVal = "Contribution Limitation Worksheet"{n}End Sub
Sub Exist_Calculation(){n}{t}ReturnVal = 1{n}End Sub
Sub Names_Calculation(){n}{t}ReturnVal = GetString(IARequired.CombNames){n}End Sub
Sub NY20Lim_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAWContLimit.Tot20Cont) - GetCurrency(IAWContLimit.CY20After)){n}End Sub
Sub NY30Lim_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAWContLimit.Tot30Cont) - GetCurrency(IAWContLimit.CY30After)){n}End Sub
Sub NY30LimCG_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAWContLimit.Tot30ContCG) - GetCurrency(IAWContLimit.CY30AfterCG)){n}End Sub
Sub NY50Lim_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAWContLimit.Tot50Cont) - GetCurrency(IAWContLimit.CY50After)){n}End Sub
Sub NYNoLim_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAWContLimit.Tot100Cont) - GetCurrency(IAWContLimit.CYNoLimit2)){n}End Sub
Sub NYQualLim_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAWContLimit.TotQualCont) - GetCurrency(IAWContLimit.CYQualAfter)){n}End Sub
Sub NYTot_Calculation(){n}{t}ReturnVal = GetCurrency(IAWContLimit.NY50Lim) + GetCurrency(IAWContLimit.NY30Lim) + GetCurrency(IAWContLimit.NY30LimCG) + GetCurrency(IAWContLimit.NY20Lim) + GetCurrency(IAWContLimit.NYNoLim) + GetCurrency(IAWContLimit.NYQualLim){n}End Sub
Sub PY20Lim_Calculation(){n}{t}ReturnVal = GetCurrency(USWContLimit.PY20Lim){n}End Sub
Sub PY30Lim_Calculation(){n}{t}ReturnVal = GetCurrency(USWContLimit.PY30Lim){n}End Sub
Sub PY30LimCG_Calculation(){n}{t}ReturnVal = GetCurrency(USWContLimit.PY30LimCG){n}End Sub
Sub PY50Lim_Calculation(){n}{t}ReturnVal = GetCurrency(USWContLimit.PY50Lim){n}End Sub
Sub PYNoLim_Calculation(){n}{t}ReturnVal = GetCurrency(USWContLimit.PYNoLim){n}End Sub
Sub PYTot_Calculation(){n}{t}ReturnVal = GetCurrency(IAWContLimit.PY50Lim) + GetCurrency(IAWContLimit.PY30Lim) + GetCurrency(IAWContLimit.PY30LimCG) + GetCurrency(IAWContLimit.PY20Lim) + GetCurrency(IAWContLimit.PYNoLim){n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IAF1040.SSN){n}End Sub
Sub Tot20Cont_Calculation(){n}{t}ReturnVal = GetCurrency(IAWContLimit.PY20Lim) + GetCurrency(IAWContLimit.CY20Lim){n}End Sub
Sub Tot30Cont_Calculation(){n}{t}ReturnVal = GetCurrency(IAWContLimit.PY30Lim) + GetCurrency(IAWContLimit.CY30Lim){n}End Sub
Sub Tot30ContCG_Calculation(){n}{t}ReturnVal = GetCurrency(IAWContLimit.PY30LimCG) + GetCurrency(IAWContLimit.CY30LimCG){n}End Sub
Sub Tot50Cont_Calculation(){n}{t}ReturnVal = GetCurrency(IAWContLimit.PY50Lim) + GetCurrency(IAWContLimit.CY50Lim){n}End Sub
Sub Tot100Cont_Calculation(){n}{t}ReturnVal = GetCurrency(IAWContLimit.PYNoLim) + GetCurrency(IAWContLimit.CYNoLim){n}End Sub
Sub TotCont_Calculation(){n}{t}ReturnVal = GetCurrency(IAWContLimit.PYTot) + GetCurrency(IAWContLimit.CYTot){n}End Sub
Sub TotQualCont_Calculation(){n}{t}ReturnVal = GetCurrency(IAWContLimit.CYQualLim){n}End SubSub ExpressCantFile_Calculation(){n}If GetBool(IAF1040.HOH) = True Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetBool(IAF1040.QualWidow) = True Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetBool(IAF126.SpPYNR) = True Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetBool(IAF126.TpPYNR) = True Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetBool(IAF1040.ItemCheck) = True Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub NotQualifyEF_Calculation(){n}{t}If GetBool(IAWEFQual.QualifiesForEF) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = 1{n}{t}End If{n}End Sub
Sub Qual10_Calculation(){n}{t}'State now allows{n}{t}'If GetBool(USWResidency.F1040NR) = True Then{n}{t}'{t}ReturnVal = 1{n}{t}'Else{n}{t}{t}ReturnVal = 0{n}{t}'End If{n}End Sub
Sub Qual20_Calculation(){n}{t}If GetCurrency(IAF1040.AGainDed) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetCurrency(IAF1040.BGainDed) <> 0 And GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Qual30_Calculation(){n}{t}Dim count As Integer{n}{t}Dim Lim As Integer{n}{t}Dim Total As Integer{n}{t}{n}{t}Lim = GetAllCopies(IACred){n}{t}count = 1{n}{t}Total = 0{n}{t}{n}{t}Do While count <= Lim{n}{t}{t}If GetBool(IACred.NonRefCr, count) = True And GetBool(IACred.Taxpayer, count) = True And GetString(IACred.Code, count) = "08" Then{n}{t}{t}{t}Total = Total + 1{n}{t}{t}Else{n}{t}{t}{t}Total = Total{n}{t}{t}End If{n}{t}{t}{n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}Dim count2 As Integer{n}{t}Dim Lim2 As Integer{n}{t}Dim Total2 As Integer{n}{t}{n}{t}Lim2 = GetAllCopies(IACred){n}{t}count2 = 1{n}{t}Total2 = 0{n}{t}{n}{t}Do While count2 <= Lim2{n}{t}{t}If GetBool(IACred.NonRefCr, count2) = True And GetBool(IACred.Spouse, count2) = True And GetString(IACred.Code, count2) = "08" Then{n}{t}{t}{t}Total2 = Total2 + 1{n}{t}{t}Else{n}{t}{t}{t}Total2 = Total2{n}{t}{t}End If{n}{t}{t}{n}{t}{t}count2 = count2 + 1{n}{t}Loop{n}{t}{n}{n}{t}If Total <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetBool(IAF1040.CombMFS) = False Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf Total2 <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Qual40_Calculation(){n}{t}ReturnVal = 0{n}End Sub
Sub Qual45_Calculation(){n}{t}Dim count As Integer{n}{t}Dim Lim As Integer{n}{t}Dim Total As Integer{n}{t}{n}{t}Lim = GetAllCopies(IACred){n}{t}count = 1{n}{t}Total = 0{n}{t}{n}{t}Do While count <= Lim{n}{t}{t}If GetBool(IACred.NonRefCr, count) = True And GetBool(IACred.Taxpayer, count) = True And GetString(IACred.Code, count) = "28" Then{n}{t}{t}{t}Total = Total + 1{n}{t}{t}Else{n}{t}{t}{t}Total = Total{n}{t}{t}End If{n}{t}{t}{n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}Dim count2 As Integer{n}{t}Dim Lim2 As Integer{n}{t}Dim Total2 As Integer{n}{t}{n}{t}Lim2 = GetAllCopies(IACred){n}{t}count2 = 1{n}{t}Total2 = 0{n}{t}{n}{t}Do While count2 <= Lim2{n}{t}{t}If GetBool(IACred.NonRefCr, count2) = True And GetBool(IACred.Spouse, count2) = True And GetString(IACred.Code, count2) = "28" Then{n}{t}{t}{t}Total2 = Total2 + 1{n}{t}{t}Else{n}{t}{t}{t}Total2 = Total2{n}{t}{t}End If{n}{t}{t}{n}{t}{t}count2 = count2 + 1{n}{t}Loop{n}{t}{n}{n}{t}If Total <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetBool(IAF1040.CombMFS) = False Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf Total2 <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Qual50_Calculation(){n}{t}If (GetCurrency(IA2210.Penalty) > 0) Or (GetCurrency(IA2210Sp.Penalty) > 0) Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub QualifiesForEF_Calculation(){n}{t}If IsPhone() = True Then{n}{t}{t}If GetBool(IAWEFQual.Qual10) = True Or GetBool(IAWEFQual.Qual20) = True Or GetBool(IAWEFQual.Qual30) = True Or GetBool(IAWEFQual.Qual40) = True Or GetBool(IAWEFQual.Qual45) = True Or GetBool(IAWEFQual.Qual50) = True Then{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}End If{n}{t}ElseIf GetBool(IAWEFQual.Qual10) = True Or GetBool(IAWEFQual.Qual20) = True Or GetBool(IAWEFQual.Qual30) = True Or GetBool(IAWEFQual.Qual40) = True Or GetBool(IAWEFQual.Qual45) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = 1{n}{t}End If{n}End Sub
Sub Names_Calculation(){n}{t}ReturnVal = GetString(IARequired.CombNames){n}End Sub
Sub Reject10_Calculation(){n}{t}Dim SameRTN As Integer{n}{t}Dim SameDAN As Integer{n}{t}Dim SameType As Integer{n}{t}{n}{t}If GetString(USWRALApp.StateRTRTN) = GetString(IAEFWksht.DirDepRTN) Then{n}{t}{t}SameRTN = 1{n}{t}Else{n}{t}{t}SameRTN = 0{n}{t}End If{n}{t}{n}{t}If GetString(USWRALApp.StateRTDAN) = GetString(IAEFWksht.DirDepDan) Then{n}{t}{t}SameDAN = 1{n}{t}Else{n}{t}{t}SameDAN = 0{n}{t}End If{n}{t}{n}{t}If GetBool(USWRALApp.StRTCheck) = True And GetBool(IAEFWksht.DirDepChecking) = True Then{n}{t}{t}SameType = 1{n}{t}ElseIf GetBool(USWRALApp.StRTSave) = True And GetBool(IAEFWksht.DirDepSavings) = True Then{n}{t}{t}SameType = 1{n}{t}Else{n}{t}{t}SameType = 0{n}{t}End If{n}{t}{n}{t}If GetBool(USWBankProd.IsStateRPT) = True And GetBool(IAEFWksht.IsStateRPT) = True And GetBool(USWRALApp.StateRTDD) = True Then{n}{t}{t}If SameRTN + SameDAN + SameType <> 3 Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}{n}End Sub
Sub Reject20_Calculation(){n}{t}If GetBool(IAEFWksht.IsStateRPT) = True Then{n}{t}{t}If GetBool(USWRALApp.StateRTDD) = True And GetBool(IAEFWksht.DirDeposit) = False Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}ElseIf GetBool(USWRALApp.StateRTDC) = True And GetBool(IAEFWksht.DebitCard) = False And GetBool(IAEFWksht.AskDebitCard) = True Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Reject50_Calculation(){n}{t}If GetBool(IAEFWksht.PrepBPTrans) = True Then{t}{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAEFWksht.DebitCard) = True And GetCurrency(IAEFWksht.Refund) > 0 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetNumber(IAEFWksht.EFDDCode) <> 0 Then{n}{t}{t}If Trim(GetString(IAEFWksht.Acct)) = "" Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Reject60_Calculation(){n}{t}If GetNumber(IAEFWksht.EFDDCode) = 2 Then{n}{t}{t}If GetYear(GetDate(IAEFWksht.EFWDate)) = YearNumber + 1 Then{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End SubSub Exist_Calculation(){n}{t}ReturnVal = 1{n}End Sub
Sub Description_Calculation(){n}{t}Dim Total As Currency{n}{t}{n}{t}Total = GetCurrency(IAWHealth.TPTotal) + GetCurrency(IAWHealth.SPTotal){n}{t}{n}{t}ReturnVal = CStr(Total){n}End Sub
Sub MobDisQual_Calculation(){n}{t}If GetCurrency(IAWHealth.TPTotal) + GetCurrency(IAWHealth.SPTotal) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Names_Calculation(){n}{t}ReturnVal = GetString(IARequired.CombNames){n}End Sub
Sub SERatio_Calculation(){n}{t}Dim TotSE As Currency{n}{t}{n}{t}TotSE = GetCurrency(IAWHealth.SPTotSE) + GetCurrency(IAWHealth.TPTotSE){n}{t}{n}{t}If TotSE > 0 Then{n}{t}{t}ReturnVal = MinValue(1#, MaxValue(0, GetFloat(IAWHealth.SPTotSE) / (GetFloat(IAWHealth.SPTotSE) + GetFloat(IAWHealth.TPTotSE)))){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPMedicare_Calculation(){n}{t}Dim MedBReduce As Currency{n}{t}{n}{t}If GetCurrency(IAWHealth.TPSEHealth) > 0 And GetCurrency(IAWHealth.SPSEHealth) > 0 Then{n}{t}{t}MedBReduce = CDollar(GetFloat(USWMedicalWS.MedBPremOff) * 0.5){n}{t}ElseIf GetCurrency(IAWHealth.TPSEHealth) = 0 And GetCurrency(IAWHealth.SPSEHealth) > 0 Then{n}{t}{t}MedBReduce = GetCurrency(USWMedicalWS.MedBPremOff){n}{t}Else{n}{t}{t}MedBReduce = 0{n}{t}End If{n}{n}{t}ReturnVal = MaxValue(0, (GetCurrency(USWSSBDetail.SPMedB) + Round(GetCurrency(USDRRB1099R.MedB, FieldCopies(USDRRB1099R.Spouse)))) - MedBReduce){n}End Sub
Sub SPName_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.SPCommon){n}End Sub
Sub SPSE_Calculation(){n}{t}ReturnVal = GetCurrency(USDSCorpK1.SeHealthInc, FieldCopies(USDSCorpK1.Spouse)) + CDollar(GetFloat(USDSCorpK1.SeHealthInc, FieldCopies(USDSCorpK1.Joint)) * 0.5){n}End Sub
Sub SPSEHealth_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IAWHealth.TotHealth) * GetFloat(IAWHealth.SERatio)){n}End Sub
Sub SPTotal_Calculation(){n}{t}ReturnVal = GetCurrency(IAWHealth.SPSEHealth) + GetCurrency(IAWHealth.SPInsPrem) + GetCurrency(IAWHealth.SPMedicare) + GetCurrency(IAWHealth.SPLTC) + GetCurrency(IAWHealth.SPPYRepayPTC){n}End Sub
Sub SPTotSE_Calculation(){n}{t}ReturnVal = GetCurrency(USSchSESpouse.ANetEarn) + GetCurrency(USSchSESpouse.BNetEarn) + GetCurrency(IAWHealth.SPSE){n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IAF1040.SSN){n}End Sub
Sub TotHealth_Calculation(){n}{t}ReturnVal = GetCurrency(USWSEHealth.InsPrem){n}End Sub
Sub TotLTC_Calculation(){n}{t}ReturnVal = GetCurrency(USWMedicalWS.LTCPrem) + GetCurrency(USWMedicalWS.LTCPrem2) + GetCurrency(USWMedicalWS.LTCPrem3) + GetCurrency(USWMedicalWS.LTCPrem4){n}End Sub
Sub TotSE_Calculation(){n}{t}ReturnVal = GetCurrency(USDSCorpK1.SeHealthInc){n}End Sub
Sub TPInsPrem_Calculation(){n}'removed adjustment for USWMedicalWS.PTCAdj in order to only report what was actually paid out of pocket in the current year. The PTC adjustment (either credit or excess repayment) is handled by including repayment on IA 1040 line 28(current year)/line 18(import from prior year) and IA 1040 line 14 for any current year PTC credit to be imported as income the following year.{n}'change was made based on US 433238 see also CSS ticket 8605571{n}{t}Dim AdjInsPrem As Currency{n}{t}{n}{t}AdjInsPrem = MaxValue(0, GetCurrency(USWMedicalWS.MarketplaceIns)) + GetCurrency(USWMedicalWS.TPSPDepIns){n}{t}{n}{t}ReturnVal = MaxValue(0, AdjInsPrem - GetCurrency(IAWHealth.SPInsPrem)){n}End Sub
Sub TPLTC_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAWHealth.TotLTC) - GetCurrency(IAWHealth.SPLTC)){n}End Sub
Sub TPMedicare_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(USWMedicalWS.MedBPremTot) - GetCurrency(IAWHealth.SPMedicare)){n}End Sub
Sub TPName_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.TPCommon){n}End Sub
Sub TPPYRepayPTC_Calculation(){n}{t}If GetBool(USWSpouse.NonRes) = True Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(USWRec.PYRepayPTCNR) - GetCurrency(IAWHealth.SPPYRepayPTC)){n}{t}Else{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(USWRec.PYRepayPTC) - GetCurrency(IAWHealth.SPPYRepayPTC)){n}{t}End If{n}End Sub
Sub TPSE_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAWHealth.TotSE) - GetCurrency(IAWHealth.SPSE)){n}End Sub
Sub TPSEHealth_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAWHealth.TotHealth) - GetCurrency(IAWHealth.SPSEHealth)){n}End Sub
Sub TPTotal_Calculation(){n}{t}ReturnVal = GetCurrency(IAWHealth.TPSEHealth) + GetCurrency(IAWHealth.TPInsPrem) + GetCurrency(IAWHealth.TPMedicare) + GetCurrency(IAWHealth.TPLTC) + GetCurrency(IAWHealth.TPPYRepayPTC){n}End Sub
Sub TPTotSE_Calculation(){n}{t}ReturnVal = GetCurrency(USSchSE.ANetEarn) + GetCurrency(USSchSE.BNetEarn) + GetCurrency(IAWHealth.TPSE){n}End SubSub AGI_Calculation(){n}{t}ReturnVal = GetCurrency(IASchA.IAAGI){n}End Sub
Sub AllowableDed2_Calculation(){n}{t}ReturnVal = GetCurrency(IAWItmDed.AllowableDed){n}End Sub
Sub AllowableDed_Calculation(){n}{t}ReturnVal = MaxValue(0, (GetCurrency(IAWItmDed.IATotDed) - GetCurrency(IAWItmDed.Limit))){n}End Sub
Sub Description_Calculation(){n}{t}ReturnVal = CStr(GetCurrency(IAWItmDed.LimitDed)) & " Itemized Deductions"{n}End Sub
Sub Divide_Calculation(){n}{t}If GetCurrency(IAWItmDed.Subtract2) = 0 Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = Round(GetFloat(IAWItmDed.Subtract1) / GetFloat(IAWItmDed.Subtract2), 3){n}{t}End If{n}End Sub
Sub ExcInc_Calculation(){n}{t}ReturnVal = MaxValue(0, (GetCurrency(IAWItmDed.AGI) - GetCurrency(IAWItmDed.IncLimit))){n}End Sub
Sub IADedTax2_Calculation(){n}{t}ReturnVal = GetCurrency(IAWItmDed.IADedTax){n}End Sub
Sub IADedTax_Calculation(){n}{t}If GetBool(USWRec.ItmDdn) = True Then{n}{t}{t}If GetBool(USSchA.Income) = True Or GetBool(USWResidency.F1040NR) = True Then{n}{t}{t}{t}ReturnVal = MaxValue(0, GetCurrency(IASchA.IATax)){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub IATotDed2_Calculation(){n}{t}ReturnVal = GetCurrency(IAWItmDed.IATotDed){n}End Sub
Sub IATotDed_Calculation(){n}{t}ReturnVal = GetCurrency(IAWItmDed.TotDed) + GetCurrency(IAWItmDed.IADedTax){n}End Sub
Sub IncLimit_Calculation(){n}' updated for 2018 - RJ{n}{n}{t}If FedFS() = 1 Then{n}{t}{t}ReturnVal = 266700@{n}{t}ElseIf FedFS() = 3 Then{n}{t}{t}ReturnVal = 160000@{n}{t}ElseIf FedFS() = 4 Then{n}{t}{t}ReturnVal = 293350@{n}{t}Else{n}{t}{t}ReturnVal = 320000@{n}{t}End If{n}End Sub
Sub Limit3_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IAWItmDed.ExcInc) * 0.03){n}End Sub
Sub Limit80_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IAWItmDed.PODed) * 0.8){n}End Sub
Sub Limit_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IAWItmDed.Limit80), GetCurrency(IAWItmDed.Limit3)){n}End Sub
Sub LimitDed_Calculation(){n}{t}ReturnVal = MaxValue(0, (GetCurrency(IAWItmDed.AllowableDed2) - GetCurrency(IAWItmDed.Multiply))){n}End Sub
Sub Multiply_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IAWItmDed.IADedTax2) * GetFloat(IAWItmDed.Divide)){n}End Sub
Sub Names_Calculation(){n}{t}ReturnVal = GetString(IARequired.CombNames){n}End Sub
Sub No1_Calculation(){n}{t}If GetCurrency(IAWItmDed.NonPODed) < GetCurrency(IAWItmDed.IATotDed) Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = 1{n}{t}End If{n}End Sub
Sub No2_Calculation(){n}{t}If GetCurrency(IAWItmDed.IncLimit) < GetCurrency(IAWItmDed.AGI) Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = 1{n}{t}End If{n}End Sub
Sub NonPODed2_Calculation(){n}{t}ReturnVal = GetCurrency(IAWItmDed.NonPODed){n}End Sub
Sub NonPODed_Calculation(){n}{t}Dim GamblingLoss As Currency{n}{t}{n}{t}If GetBool(USWResidency.F1040NR) = True Then{n}{t}{t}GamblingLoss = 0{n}{t}Else{n}{t}{t}GamblingLoss = GetCurrency(IAWSchAPrint.GamblingLoss){n}{t}End If{n}{t}{t}{n}{t}ReturnVal = GetCurrency(IASchA.MedDed) + GetCurrency(IASchA.Invest) + GetCurrency(IASchA.Theft) + GetCurrency(IAWSchAPrint.Form4684) + GamblingLoss{n}End Sub
Sub PODed_Calculation(){n}{t}ReturnVal = MaxValue(0, (GetCurrency(IAWItmDed.IATotDed) - GetCurrency(IAWItmDed.NonPODed))){n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IAF1040.SSN){n}End Sub
Sub Subtract1_Calculation(){n}{t}ReturnVal = MaxValue(0, (GetCurrency(IAWItmDed.AllowableDed2) - GetCurrency(IAWItmDed.NonPODed2))){n}End Sub
Sub Subtract2_Calculation(){n}{t}ReturnVal = MaxValue(0, (GetCurrency(IAWItmDed.IATotDed2) - GetCurrency(IAWItmDed.NonPODed2))){n}End Sub
Sub TotDed_Calculation(){n}{t}ReturnVal = GetCurrency(IASchA.MedDed) + GetCurrency(IASchA.TaxPd) + GetCurrency(IASchA.TotInt) + GetCurrency(IASchA.TotGifts) + GetCurrency(IASchA.Theft) + GetCurrency(IASchA.AllowExp) + GetCurrency(IASchA.OthMisc){n}End Sub
Sub Yes1_Calculation(){n}{t}If GetBool(IAWItmDed.No1) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = 1{n}{t}End If{n}End Sub
Sub Yes2_Calculation(){n}{t}If GetBool(IAWItmDed.No2) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = 1{n}{t}End If{n}End SubSub Description_Calculation(){n}{t}ReturnVal = "Nonconformity Adjustment " + CStr(GetCurrency(IAWNonConformAdj.PrTotNonConformAdj)){n}End Sub
Sub EOYDate_Calculation(){n}{t}ReturnVal = MakeDate(12, 31, YearNumber){n}End Sub
Sub PrAlaskaNativeCorp_Calculation(){n}{t}ReturnVal = GetCurrency(IAWNonConformAdj.SPAlaskaNativeCorp) + GetCurrency(IAWNonConformAdj.TPAlaskaNativeCorp){n}End Sub
Sub PrBasisLifeIns_Calculation(){n}{t}ReturnVal = GetCurrency(IAWNonConformAdj.SPBasisLifeIns) + GetCurrency(IAWNonConformAdj.TPBasisLifeIns){n}End Sub
Sub PrBasisLimitPartLoss_Calculation(){n}{t}ReturnVal = GetCurrency(IAWNonConformAdj.SPBasisLimitPartLoss) + GetCurrency(IAWNonConformAdj.TPBasisLimitPartLoss){n}End Sub
Sub PrBuiltInLosses_Calculation(){n}{t}ReturnVal = GetCurrency(IAWNonConformAdj.SPBuiltInLosses) + GetCurrency(IAWNonConformAdj.TPBuiltInLosses){n}End Sub
Sub PrBusInterestLimit_Calculation(){n}{t}ReturnVal = GetCurrency(IAWNonConformAdj.SPBusInterestLimit) + GetCurrency(IAWNonConformAdj.TPBusInterestLimit){n}End Sub
Sub PrCapContr_Calculation(){n}{t}ReturnVal = GetCurrency(IAWNonConformAdj.SPCapContr) + GetCurrency(IAWNonConformAdj.TPCapContr){n}End Sub
Sub PrCapRules_Calculation(){n}{t}ReturnVal = GetCurrency(IAWNonConformAdj.SPCapRules) + GetCurrency(IAWNonConformAdj.TPCapRules){n}End Sub
Sub PrCertCapAssets_Calculation(){n}{t}ReturnVal = GetCurrency(IAWNonConformAdj.SPCertCapAssets) + GetCurrency(IAWNonConformAdj.TPCertCapAssets){n}End Sub
Sub PrCertSettlement_Calculation(){n}{t}ReturnVal = GetCurrency(IAWNonConformAdj.SPCertSettlement) + GetCurrency(IAWNonConformAdj.TPCertSettlement){n}End Sub
Sub PrCharContLimit_Calculation(){n}{t}ReturnVal = GetCurrency(IAWNonConformAdj.SPCharContLimit) + GetCurrency(IAWNonConformAdj.TPCharContLimit){n}End Sub
Sub PrDomProd_Calculation(){n}{t}ReturnVal = GetCurrency(IAWNonConformAdj.SPDomProd) + GetCurrency(IAWNonConformAdj.TPDomProd){n}End Sub
Sub PrExcessBusLossLimit_Calculation(){n}{t}ReturnVal = GetCurrency(IAWNonConformAdj.SPExcessBusLossLimit) + GetCurrency(IAWNonConformAdj.TPExcessBusLossLimit){n}End Sub
Sub PrExcessiveRemun_Calculation(){n}{t}ReturnVal = GetCurrency(IAWNonConformAdj.SPExcessiveRemun) + GetCurrency(IAWNonConformAdj.TPExcessiveRemun){n}End Sub
Sub PrFDICPrem_Calculation(){n}{t}ReturnVal = GetCurrency(IAWNonConformAdj.SPFDICPrem) + GetCurrency(IAWNonConformAdj.TPFDICPrem){n}End Sub
Sub PrForSourceDiv_Calculation(){n}{t}ReturnVal = GetCurrency(IAWNonConformAdj.SPForSourceDiv) + GetCurrency(IAWNonConformAdj.TPForSourceDiv){n}End Sub
Sub PrGlobalLowTI_Calculation(){n}{t}ReturnVal = GetCurrency(IAWNonConformAdj.SPGlobalLowTI) + GetCurrency(IAWNonConformAdj.TPGlobalLowTI){n}End Sub
Sub PrInventorySales_Calculation(){n}{t}ReturnVal = GetCurrency(IAWNonConformAdj.SPInventorySales) + GetCurrency(IAWNonConformAdj.TPInventorySales){n}End Sub
Sub PrIRC965Repat_Calculation(){n}{t}ReturnVal = GetCurrency(IAWNonConformAdj.SPIRC965Repat) + GetCurrency(IAWNonConformAdj.TPIRC965Repat){n}End Sub
Sub PrLikeKind_Calculation(){n}{t}ReturnVal = GetCurrency(IAWNonConformAdj.SPLikeKind) + GetCurrency(IAWNonConformAdj.TPLikeKind){n}End Sub
Sub PrOthBusDed_Calculation(){n}{t}ReturnVal = GetCurrency(IAWNonConformAdj.SPOthBusDed) + GetCurrency(IAWNonConformAdj.TPOthBusDed){n}End Sub
Sub PrOtherAdj_Calculation(){n}{t}ReturnVal = GetCurrency(IAWNonConformAdj.SPOtherAdj) + GetCurrency(IAWNonConformAdj.TPOtherAdj){n}End Sub
Sub PrOwnedForCorp_Calculation(){n}{t}ReturnVal = GetCurrency(IAWNonConformAdj.SPOwnedForCorp) + GetCurrency(IAWNonConformAdj.TPOwnedForCorp){n}End Sub
Sub PrQualEquityGrants_Calculation(){n}{t}ReturnVal = GetCurrency(IAWNonConformAdj.SPQualEquityGrants) + GetCurrency(IAWNonConformAdj.TPQualEquityGrants){n}End Sub
Sub PrQualOppZone_Calculation(){n}{t}ReturnVal = GetCurrency(IAWNonConformAdj.SPQualOppZone) + GetCurrency(IAWNonConformAdj.TPQualOppZone){n}End Sub
Sub PrRelParHybridTrans_Calculation(){n}{t}ReturnVal = GetCurrency(IAWNonConformAdj.SPRelParHybridTrans) + GetCurrency(IAWNonConformAdj.TPRelParHybridTrans){n}End Sub
Sub PrSCorpCharCont_Calculation(){n}{t}ReturnVal = GetCurrency(IAWNonConformAdj.SPSCorpCharCont) + GetCurrency(IAWNonConformAdj.TPSCorpCharCont){n}End Sub
Sub PrSec199CoopDed_Calculation(){n}{t}ReturnVal = GetCurrency(IAWNonConformAdj.SPSec199CoopDed) + GetCurrency(IAWNonConformAdj.TPSec199CoopDed){n}End Sub
Sub PrSec199QBIDed_Calculation(){n}{t}ReturnVal = GetCurrency(IAWNonConformAdj.SPSec199QBIDed) + GetCurrency(IAWNonConformAdj.TPSec199QBIDed){n}End Sub
Sub PrSubPartF_Calculation(){n}{t}ReturnVal = GetCurrency(IAWNonConformAdj.SPSubPartF) + GetCurrency(IAWNonConformAdj.TPSubPartF){n}End Sub
Sub PrTotNonConformAdj_Calculation(){n}{t}ReturnVal = GetCurrency(IAWNonConformAdj.SPTotNonConformAdj) + GetCurrency(IAWNonConformAdj.TPTotNonConformAdj){n}End Sub
Sub PrTransferValueLifeIns_Calculation(){n}{t}ReturnVal = GetCurrency(IAWNonConformAdj.SPTransferValueLifeIns) + GetCurrency(IAWNonConformAdj.TPTransferValueLifeIns){n}End Sub
Sub SPExcessBusLossLimit_Calculation(){n}{t}ReturnVal = 0{n}End Sub
Sub SPLikeKind_Calculation(){n}{t}ReturnVal = 0{n}End Sub
Sub SPName_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.SPCommon){n}End Sub
Sub SPQualEquityGrants_Calculation(){n}{t}ReturnVal = Round(GetCurrency(USDW2.CodeHH, FieldCopies(USDW2.Spouse))){n}End Sub
Sub SPTotNonConformAdj_Calculation(){n}{t}Dim Tot1to10 As Currency{n}{t}Dim Tot11to20 As Currency{n}{t}Dim Tot21to30 As Currency{n}{t}{n}{t}Tot1to10 = GetCurrency(IAWNonConformAdj.SPCapContr) + GetCurrency(IAWNonConformAdj.SPLikeKind) + GetCurrency(IAWNonConformAdj.SPBusInterestLimit) + GetCurrency(IAWNonConformAdj.SPExcessiveRemun) + GetCurrency(IAWNonConformAdj.SPCertSettlement) + GetCurrency(IAWNonConformAdj.SPFDICPrem) + GetCurrency(IAWNonConformAdj.SPDomProd) + GetCurrency(IAWNonConformAdj.SPSec199QBIDed) + GetCurrency(IAWNonConformAdj.SPSec199CoopDed) + GetCurrency(IAWNonConformAdj.SPOthBusDed){n}{t}Tot11to20 = GetCurrency(IAWNonConformAdj.SPCharContLimit) + GetCurrency(IAWNonConformAdj.SPSCorpCharCont) + GetCurrency(IAWNonConformAdj.SPExcessBusLossLimit) + GetCurrency(IAWNonConformAdj.SPQualEquityGrants) + GetCurrency(IAWNonConformAdj.SPCapRules) + GetCurrency(IAWNonConformAdj.SPCertCapAssets) + GetCurrency(IAWNonConformAdj.SPQualOppZone) + GetCurrency(IAWNonConformAdj.SPBuiltInLosses) + GetCurrency(IAWNonConformAdj.SPBasisLimitPartLoss) + GetCurrency(IAWNonConformAdj.SPBasisLifeIns){n}{t}Tot21to30 = GetCurrency(IAWNonConformAdj.SPTransferValueLifeIns) + GetCurrency(IAWNonConformAdj.SPAlaskaNativeCorp) + GetCurrency(IAWNonConformAdj.SPGlobalLowTI) + GetCurrency(IAWNonConformAdj.SPRelParHybridTrans) + GetCurrency(IAWNonConformAdj.SPInventorySales) + GetCurrency(IAWNonConformAdj.SPOwnedForCorp) + GetCurrency(IAWNonConformAdj.SPSubPartF) + GetCurrency(IAWNonConformAdj.SPForSourceDiv) + GetCurrency(IAWNonConformAdj.SPIRC965Repat) + GetCurrency(IAWNonConformAdj.SPOtherAdj){n}{t}{n}{t}ReturnVal = Tot1to10 + Tot11to20 + Tot21to30{n}End Sub
Sub TPExcessBusLossLimit_Calculation(){n}{t}ReturnVal = 0{n}End Sub
Sub Exist_Calculation(){n}{t}ReturnVal = 1{n}End Sub
Sub TPLikeKind_Calculation(){n}{t}ReturnVal = 0{n}End Sub
Sub Names_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.CombNames){n}End Sub
Sub PrintMe_Calculation(){n}{t}If GetCurrency(IAWNonConformAdj.SPTotNonConformAdj) <> 0 Or GetCurrency(IAWNonConformAdj.TPTotNonConformAdj) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPName_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.TPCommon){n}End Sub
Sub TPQualEquityGrants_Calculation(){n}{t}ReturnVal = Round(GetCurrency(USDW2.CodeHH, FieldCopies(USDW2.Taxpayer))){n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IAF1040.SSN){n}End Sub
Sub TPTotNonConformAdj_Calculation(){n}{t}Dim Tot1to10 As Currency{n}{t}Dim Tot11to20 As Currency{n}{t}Dim Tot21to30 As Currency{n}{t}{n}{t}Tot1to10 = GetCurrency(IAWNonConformAdj.TPCapContr) + GetCurrency(IAWNonConformAdj.TPLikeKind) + GetCurrency(IAWNonConformAdj.TPBusInterestLimit) + GetCurrency(IAWNonConformAdj.TPExcessiveRemun) + GetCurrency(IAWNonConformAdj.TPCertSettlement) + GetCurrency(IAWNonConformAdj.TPFDICPrem) + GetCurrency(IAWNonConformAdj.TPDomProd) + GetCurrency(IAWNonConformAdj.TPSec199QBIDed) + GetCurrency(IAWNonConformAdj.TPSec199CoopDed) + GetCurrency(IAWNonConformAdj.TPOthBusDed){n}{t}Tot11to20 = GetCurrency(IAWNonConformAdj.TPCharContLimit) + GetCurrency(IAWNonConformAdj.TPSCorpCharCont) + GetCurrency(IAWNonConformAdj.TPExcessBusLossLimit) + GetCurrency(IAWNonConformAdj.TPQualEquityGrants) + GetCurrency(IAWNonConformAdj.TPCapRules) + GetCurrency(IAWNonConformAdj.TPCertCapAssets) + GetCurrency(IAWNonConformAdj.TPQualOppZone) + GetCurrency(IAWNonConformAdj.TPBuiltInLosses) + GetCurrency(IAWNonConformAdj.TPBasisLimitPartLoss) + GetCurrency(IAWNonConformAdj.TPBasisLifeIns){n}{t}Tot21to30 = GetCurrency(IAWNonConformAdj.TPTransferValueLifeIns) + GetCurrency(IAWNonConformAdj.TPAlaskaNativeCorp) + GetCurrency(IAWNonConformAdj.TPGlobalLowTI) + GetCurrency(IAWNonConformAdj.TPRelParHybridTrans) + GetCurrency(IAWNonConformAdj.TPInventorySales) + GetCurrency(IAWNonConformAdj.TPOwnedForCorp) + GetCurrency(IAWNonConformAdj.TPSubPartF) + GetCurrency(IAWNonConformAdj.TPForSourceDiv) + GetCurrency(IAWNonConformAdj.TPIRC965Repat) + GetCurrency(IAWNonConformAdj.TPOtherAdj){n}{t}{n}{t}ReturnVal = Tot1to10 + Tot11to20 + Tot21to30{n}End SubSub Code_Calculation(Index As Integer){n}{t}Dim count As Integer{n}{t}Dim Hold As String{n}{t}count = 0{n}{t}Hold = ""{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPOth1) <> 0 Or GetCurrency(IAWOthInc.SPOth1) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPOth2) <> 0 Or GetCurrency(IAWOthInc.SPOth2) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPBabySit) <> 0 Or GetCurrency(IAWOthInc.SPBabySit) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "a"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPBonus) <> 0 Or GetCurrency(IAWOthInc.SPBonus) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "b"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPIAEd) <> 0 Or GetCurrency(IAWOthInc.SPIAEd) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "d"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPDirector) <> 0 Or GetCurrency(IAWOthInc.SPDirector) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "e"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPIntangDrill) <> 0 Or GetCurrency(IAWOthInc.SPIntangDrill) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "f"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPExecutor) <> 0 Or GetCurrency(IAWOthInc.SPExecutor) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "g"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPFirstHmBuy) <> 0 Or GetCurrency(IAWOthInc.SPFirstHmBuy) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "h"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPK1) <> 0 Or GetCurrency(IAWOthInc.SPK1) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "i"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPRefundCr) <> 0 Or GetCurrency(IAWOthInc.SPRefundCr) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "j"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPStRefund) <> 0 Or GetCurrency(IAWOthInc.SPStRefund) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "k"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPDepl) <> 0 Or GetCurrency(IAWOthInc.SPDepl) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "l"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPJury) <> 0 Or GetCurrency(IAWOthInc.SPJury) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPPerRent) <> 0 Or GetCurrency(IAWOthInc.SPPerRent) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TP8814) <> 0 Or GetCurrency(IAWOthInc.SP8814) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPMSA) <> 0 Or GetCurrency(IAWOthInc.SPMSA) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPMedMSA) <> 0 Or GetCurrency(IAWOthInc.SPMedMSA) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPLTC) <> 0 Or GetCurrency(IAWOthInc.SPLTC) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPMisc) <> 0 Or GetCurrency(IAWOthInc.SPMisc) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPAlaska) <> 0 Or GetCurrency(IAWOthInc.SPAlaska) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPCoverdell) <> 0 Or GetCurrency(IAWOthInc.SPCoverdell) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPCanceled) <> 0 Or GetCurrency(IAWOthInc.SPCanceled) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPPshipCan) <> 0 Or GetCurrency(IAWOthInc.SPPshipCan) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPHSA) <> 0 Or GetCurrency(IAWOthInc.SPHSA) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPAltTrade) <> 0 Or GetCurrency(IAWOthInc.SPAltTrade) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPRecapTuit) <> 0 Or GetCurrency(IAWOthInc.SPRecapTuit) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPRecapChar) <> 0 Or GetCurrency(IAWOthInc.SPRecapChar) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TP5471) <> 0 Or GetCurrency(IAWOthInc.SP5471) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPHobby) <> 0 Or GetCurrency(IAWOthInc.SPHobby) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TP8621) <> 0 Or GetCurrency(IAWOthInc.SP8621) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPDefDist) <> 0 Or GetCurrency(IAWOthInc.SPDefDist) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPDisaster) <> 0 Or GetCurrency(IAWOthInc.SPDisaster) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPFoster) <> 0 Or GetCurrency(IAWOthInc.SPFoster) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{t}{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPCredAdj) <> 0 Or GetCurrency(IAWOthInc.SPCredAdj) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPPYNPTC) <> 0 Or GetCurrency(IAWOthInc.SPPYNPTC) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "n"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TP1099QA) <> 0 Or GetCurrency(IAWOthInc.SP1099QA) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPAirline) <> 0 Or GetCurrency(IAWOthInc.SPAirline) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TP1099B) <> 0 Or GetCurrency(IAWOthInc.SP1099B) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPIAABLE) <> 0 Or GetCurrency(IAWOthInc.SPIAABLE) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "o"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPBusPass) <> 0 Or GetCurrency(IAWOthInc.SPBusPass) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "p"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPFarmLoss) <> 0 Or GetCurrency(IAWOthInc.SPFarmLoss) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "m"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TP8824) <> 0 Or GetCurrency(IAWOthInc.SP8824) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "q"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPStudLoanDis) <> 0 Or GetCurrency(IAWOthInc.SPStudLoanDis) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "r"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TP4684) <> 0 Or GetCurrency(IAWOthInc.SP4684) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "s"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TP3903) <> 0 Or GetCurrency(IAWOthInc.SP3903) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "t"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPBusInt) <> 0 Or GetCurrency(IAWOthInc.SPBusInt) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "u"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPEntExp) <> 0 Or GetCurrency(IAWOthInc.SPEntExp) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "v"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TP2106) <> 0 Or GetCurrency(IAWOthInc.SP2106) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "w"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPOthNC) <> 0 Or GetCurrency(IAWOthInc.SPOthNC) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "x"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}ReturnVal = Hold{n}{t}{n}End Sub
Sub Desc_Calculation(){n}{t}Dim Total As Currency{n}{t}{n}{t}Total = GetCurrency(IAWOthInc.TPTot) + GetCurrency(IAWOthInc.SPTot){n}{t}{n}{t}ReturnVal = CStr(Total){n}End Sub
Sub Description_Calculation(Index As Integer){n}{t}Dim count As Integer{n}{t}Dim Hold As String{n}{t}count = 0{n}{t}Hold = ""{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPOth1) <> 0 Or GetCurrency(IAWOthInc.SPOth1) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetString(IAWOthInc.Txt1){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPOth2) <> 0 Or GetCurrency(IAWOthInc.SPOth2) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetString(IAWOthInc.Txt2){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPBabySit) <> 0 Or GetCurrency(IAWOthInc.SPBabySit) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Baby-sitting income not reported on federal Schedule C"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPBonus) <> 0 Or GetCurrency(IAWOthInc.SPBonus) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Bonus depreciation/section 179 adjustment"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPIAEd) <> 0 Or GetCurrency(IAWOthInc.SPIAEd) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "College Savings Iowa or Iowa Advisor 529 Plan"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPDirector) <> 0 Or GetCurrency(IAWOthInc.SPDirector) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Director's fees"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPIntangDrill) <> 0 Or GetCurrency(IAWOthInc.SPIntangDrill) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Drilling"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPExecutor) <> 0 Or GetCurrency(IAWOthInc.SPExecutor) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Executor's fees"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPFirstHmBuy) <> 0 Or GetCurrency(IAWOthInc.SPFirstHmBuy) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "First-time homebuyers account non-qualifying withdrawals"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPK1) <> 0 Or GetCurrency(IAWOthInc.SPK1) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Partnership income and/or S Corporation income"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{t}{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPRefundCr) <> 0 Or GetCurrency(IAWOthInc.SPRefundCr) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Refundable Iowa credits"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPStRefund) <> 0 Or GetCurrency(IAWOthInc.SPStRefund) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "State income tax refunds"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPDepl) <> 0 Or GetCurrency(IAWOthInc.SPDepl) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Wells"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPJury) <> 0 Or GetCurrency(IAWOthInc.SPJury) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Jury pay"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPPerRent) <> 0 Or GetCurrency(IAWOthInc.SPPerRent) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Income from personal property"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TP8814) <> 0 Or GetCurrency(IAWOthInc.SP8814) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Child's income amount, federal Form 8814"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPMSA) <> 0 Or GetCurrency(IAWOthInc.SPMSA) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "MSA distributions, federal Form 8853"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPMedMSA) <> 0 Or GetCurrency(IAWOthInc.SPMedMSA) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Medicare Advantage distributions, federal Form 8853"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPLTC) <> 0 Or GetCurrency(IAWOthInc.SPLTC) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Long-term care distribution, federal Form 8853"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPMisc) <> 0 Or GetCurrency(IAWOthInc.SPMisc) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Form 1099-MISC, boxes 3 or 8"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPAlaska) <> 0 Or GetCurrency(IAWOthInc.SPAlaska) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Alaska Permanent Fund dividends"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPCoverdell) <> 0 Or GetCurrency(IAWOthInc.SPCoverdell) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Coverdell ESA Or Qualified Tuition Program"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPCanceled) <> 0 Or GetCurrency(IAWOthInc.SPCanceled) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Cancellation of nonbusiness debt, federal Form 1099-C"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPPshipCan) <> 0 Or GetCurrency(IAWOthInc.SPPshipCan) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Cancellation of business debt, Partnership Schedule K-1"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPHSA) <> 0 Or GetCurrency(IAWOthInc.SPHSA) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "HSA distributions, federal Form 8889"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPAltTrade) <> 0 Or GetCurrency(IAWOthInc.SPAltTrade) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Alternative trade adjustment assistance payments"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPRecapTuit) <> 0 Or GetCurrency(IAWOthInc.SPRecapTuit) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Recapture of prior year tuition and fees deduction"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPRecapChar) <> 0 Or GetCurrency(IAWOthInc.SPRecapChar) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Recapture of charitable contribution deduction"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TP5471) <> 0 Or GetCurrency(IAWOthInc.SP5471) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Income from a foreign corporation, federal Form 5471"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPHobby) <> 0 Or GetCurrency(IAWOthInc.SPHobby) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Hobby income"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TP8621) <> 0 Or GetCurrency(IAWOthInc.SP8621) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Income or loss from Section 1291, federal Form 8621"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPDefDist) <> 0 Or GetCurrency(IAWOthInc.SPDefDist) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Loss on excess deferral distribution"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPDisaster) <> 0 Or GetCurrency(IAWOthInc.SPDisaster) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Disaster relief payments"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPFoster) <> 0 Or GetCurrency(IAWOthInc.SPFoster) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Medicaid waiver payments to care provider"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{t}{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPCredAdj) <> 0 Or GetCurrency(IAWOthInc.SPCredAdj) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Credit adjustment income, federal Forms 6478 and 8864"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPPYNPTC) <> 0 Or GetCurrency(IAWOthInc.SPPYNPTC) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Net Premium Tax Credit"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TP1099QA) <> 0 Or GetCurrency(IAWOthInc.SP1099QA) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Distributions from ABLE account"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPAirline) <> 0 Or GetCurrency(IAWOthInc.SPAirline) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Qualified airline payments"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TP1099B) <> 0 Or GetCurrency(IAWOthInc.SP1099B) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Foreign currency transaction"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPIAABLE) <> 0 Or GetCurrency(IAWOthInc.SPIAABLE) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Distributions from an Iowa ABLE account"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPBusPass) <> 0 Or GetCurrency(IAWOthInc.SPBusPass) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Employer provided bus pass or transportation expenses"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPFarmLoss) <> 0 Or GetCurrency(IAWOthInc.SPFarmLoss) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Section 461(j) excess farm loss limitation adjustments"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TP8824) <> 0 Or GetCurrency(IAWOthInc.SP8824) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "IA 8824 worksheet, due to nonconformity"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPStudLoanDis) <> 0 Or GetCurrency(IAWOthInc.SPStudLoanDis) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Discharge of student loan debt - death or disability"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TP4684) <> 0 Or GetCurrency(IAWOthInc.SP4684) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "IA 4684 worksheet, due to nonconformity"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TP3903) <> 0 Or GetCurrency(IAWOthInc.SP3903) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "IA 3903 worksheet line 8a, due to nonconformity"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPBusInt) <> 0 Or GetCurrency(IAWOthInc.SPBusInt) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Business interest expense limitation, due to nonconformity"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPEntExp) <> 0 Or GetCurrency(IAWOthInc.SPEntExp) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Entertainment expenses, due to nonconformity"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TP2106) <> 0 Or GetCurrency(IAWOthInc.SP2106) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "IA 2106 worksheet line 8, due to nonconformity"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPOthNC) <> 0 Or GetCurrency(IAWOthInc.SPOthNC) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = "Other nonconformity adjustments"{n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}ReturnVal = Hold{n}End Sub
Sub Exist_Calculation(){n}{t}ReturnVal = 1{n}End Sub
Sub Names_Calculation(){n}{t}ReturnVal = GetString(IARequired.CombNames){n}End Sub
Sub Print_Calculation(){n}{t}If GetCurrency(IAWOthInc.TPTot) <> 0 Or GetCurrency(IAWOthInc.SPTot) <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SP1099B_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.SP1099B){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SP1099QA_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.SP1099QA){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SP2106_Calculation(){n}{t}ReturnVal = GetCurrency(IA2106.IAWages, FieldCopies(IA2106.Spouse)){n}End Sub
Sub SP3903_Calculation(){n}{t}ReturnVal = GetCurrency(IARequired.SIAExReimb){n}End Sub
Sub SP5471_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.SP5471){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SP8621_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.SP8621){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SP8814_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.SP8814){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SP8824_Calculation(){n}{t}ReturnVal = GetCurrency(IARequired.SP8824){n}End Sub
Sub SPAirline_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.SPAirline){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPAlaska_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.SPAlaska){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPAltTrade_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.SPAltTrade){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPAmount_Calculation(Index As Integer){n}{t}Dim count As Integer{n}{t}Dim Hold As Currency{n}{t}count = 0{n}{t}Hold = 0{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPOth1) <> 0 Or GetCurrency(IAWOthInc.SPOth1) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.SPOth1){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPOth2) <> 0 Or GetCurrency(IAWOthInc.SPOth2) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.SPOth2){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPBabySit) <> 0 Or GetCurrency(IAWOthInc.SPBabySit) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.SPBabySit){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPBonus) <> 0 Or GetCurrency(IAWOthInc.SPBonus) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.SPBonus){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPIAEd) <> 0 Or GetCurrency(IAWOthInc.SPIAEd) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.SPIAEd){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPDirector) <> 0 Or GetCurrency(IAWOthInc.SPDirector) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.SPDirector){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPIntangDrill) <> 0 Or GetCurrency(IAWOthInc.SPIntangDrill) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.SPIntangDrill){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPExecutor) <> 0 Or GetCurrency(IAWOthInc.SPExecutor) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.SPExecutor){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPFirstHmBuy) <> 0 Or GetCurrency(IAWOthInc.SPFirstHmBuy) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.SPFirstHmBuy){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPK1) <> 0 Or GetCurrency(IAWOthInc.SPK1) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.SPK1){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPRefundCr) <> 0 Or GetCurrency(IAWOthInc.SPRefundCr) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.SPRefundCr){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{n}{t}If GetCurrency(IAWOthInc.TPStRefund) <> 0 Or GetCurrency(IAWOthInc.SPStRefund) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.SPStRefund){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPDepl) <> 0 Or GetCurrency(IAWOthInc.SPDepl) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.SPDepl){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPJury) <> 0 Or GetCurrency(IAWOthInc.SPJury) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.SPJury){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPPerRent) <> 0 Or GetCurrency(IAWOthInc.SPPerRent) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.SPPerRent){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TP8814) <> 0 Or GetCurrency(IAWOthInc.SP8814) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.SP8814){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPMSA) <> 0 Or GetCurrency(IAWOthInc.SPMSA) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.SPMSA){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPMedMSA) <> 0 Or GetCurrency(IAWOthInc.SPMedMSA) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.SPMedMSA){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPLTC) <> 0 Or GetCurrency(IAWOthInc.SPLTC) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.SPLTC){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPMisc) <> 0 Or GetCurrency(IAWOthInc.SPMisc) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.SPMisc){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPAlaska) <> 0 Or GetCurrency(IAWOthInc.SPAlaska) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.SPAlaska){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPCoverdell) <> 0 Or GetCurrency(IAWOthInc.SPCoverdell) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.SPCoverdell){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPCanceled) <> 0 Or GetCurrency(IAWOthInc.SPCanceled) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.SPCanceled){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPPshipCan) <> 0 Or GetCurrency(IAWOthInc.SPPshipCan) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.SPPshipCan){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPHSA) <> 0 Or GetCurrency(IAWOthInc.SPHSA) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.SPHSA){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPAltTrade) <> 0 Or GetCurrency(IAWOthInc.SPAltTrade) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.SPAltTrade){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPRecapTuit) <> 0 Or GetCurrency(IAWOthInc.SPRecapTuit) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.SPRecapTuit){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPRecapChar) <> 0 Or GetCurrency(IAWOthInc.SPRecapChar) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.SPRecapChar){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{t}{n}   {n}{t}If GetCurrency(IAWOthInc.TP5471) <> 0 Or GetCurrency(IAWOthInc.SP5471) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.SP5471){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPHobby) <> 0 Or GetCurrency(IAWOthInc.SPHobby) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.SPHobby){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TP8621) <> 0 Or GetCurrency(IAWOthInc.SP8621) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.SP8621){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPDefDist) <> 0 Or GetCurrency(IAWOthInc.SPDefDist) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.SPDefDist){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPDisaster) <> 0 Or GetCurrency(IAWOthInc.SPDisaster) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.SPDisaster){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPFoster) <> 0 Or GetCurrency(IAWOthInc.SPFoster) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.SPFoster){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{t}{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPCredAdj) <> 0 Or GetCurrency(IAWOthInc.SPCredAdj) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.SPCredAdj){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPPYNPTC) <> 0 Or GetCurrency(IAWOthInc.SPPYNPTC) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.SPPYNPTC){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TP1099QA) <> 0 Or GetCurrency(IAWOthInc.SP1099QA) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.SP1099QA){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPAirline) <> 0 Or GetCurrency(IAWOthInc.SPAirline) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.SPAirline){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TP1099B) <> 0 Or GetCurrency(IAWOthInc.SP1099B) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.SP1099B){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPIAABLE) <> 0 Or GetCurrency(IAWOthInc.SPIAABLE) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.SPIAABLE){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPBusPass) <> 0 Or GetCurrency(IAWOthInc.SPBusPass) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.SPBusPass){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPFarmLoss) <> 0 Or GetCurrency(IAWOthInc.SPFarmLoss) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.SPFarmLoss){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TP8824) <> 0 Or GetCurrency(IAWOthInc.SP8824) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.SP8824){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPStudLoanDis) <> 0 Or GetCurrency(IAWOthInc.SPStudLoanDis) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.SPStudLoanDis){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TP4684) <> 0 Or GetCurrency(IAWOthInc.SP4684) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.SP4684){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TP3903) <> 0 Or GetCurrency(IAWOthInc.SP3903) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.SP3903){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPBusInt) <> 0 Or GetCurrency(IAWOthInc.SPBusInt) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.SPBusInt){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPEntExp) <> 0 Or GetCurrency(IAWOthInc.SPEntExp) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.SPEntExp){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TP2106) <> 0 Or GetCurrency(IAWOthInc.SP2106) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.SP2106){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPOthNC) <> 0 Or GetCurrency(IAWOthInc.SPOthNC) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.SPOthNC){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}ReturnVal = Hold{n}End Sub
Sub SPBonus_Calculation(){n}{t}ReturnVal = GetCurrency(IAWOthInc.TotBonus) - GetCurrency(IAWOthInc.TPBonus){n}End Sub
Sub SPCanceled_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.SPCanceled){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPCoverdell_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.SPCoverdell){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPCredAdj_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.SPCredAdj){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPDefDist_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.SPDefDist){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPDisaster_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.SPDisaster){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPFoster_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.SPFoster){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPHobby_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.SPHobby){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPHSA_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.SPHSA){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPJury_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.SPJury){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPK1_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(USWOthInc.SPK1)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPLTC_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.SPLTC){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPMedMSA_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.SPMedMSA){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPMisc_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.SPMisc) + GetCurrency(USWOthInc.SPIndianGaming) + GetCurrency(USWOthInc.SPTribDist) + GetCurrency(USWOthInc.SPNativeDist){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPMSA_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.SP8853){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPName_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.SPCommon){n}End Sub
Sub SPOth1_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.SPOth1){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPOth2_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.SPOth2){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPOthNC_Calculation(){n}{t}ReturnVal = GetCurrency(IAWNonConformAdj.SPTotNonConformAdj){n}End Sub
Sub SPPerRent_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.SPPerRent){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPPshipCan_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.SPPshipCan){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPRecapChar_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.SPRecapChContTax) + GetCurrency(USWOthInc.SPRecapChar){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPRecapTuit_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.SPRecapTuit){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPTot_Calculation(){n}{t}ReturnVal = GetCurrency(IAWOthInc.SPOth1) + GetCurrency(IAWOthInc.SPOth2) + GetCurrency(IAWOthInc.SPBabySit) + GetCurrency(IAWOthInc.SPBonus) + GetCurrency(IAWOthInc.SPIAEd) + GetCurrency(IAWOthInc.SPDirector) + GetCurrency(IAWOthInc.SPIntangDrill) + GetCurrency(IAWOthInc.SPExecutor) + GetCurrency(IAWOthInc.SPFirstHmBuy) + GetCurrency(IAWOthInc.SPK1) + GetCurrency(IAWOthInc.SPRefundCr) + GetCurrency(IAWOthInc.SPStRefund) + GetCurrency(IAWOthInc.SPDepl) + GetCurrency(IAWOthInc.SPJury) + GetCurrency(IAWOthInc.SPPerRent) + GetCurrency(IAWOthInc.SP8814) + GetCurrency(IAWOthInc.SPMSA) + GetCurrency(IAWOthInc.SPMedMSA) + GetCurrency(IAWOthInc.SPLTC) + GetCurrency(IAWOthInc.SPMisc) + GetCurrency(IAWOthInc.SPAlaska) + GetCurrency(IAWOthInc.SPCoverdell) + GetCurrency(IAWOthInc.SPCanceled) + GetCurrency(IAWOthInc.SPPshipCan) + GetCurrency(IAWOthInc.SPHSA) + GetCurrency(IAWOthInc.SPAltTrade) + GetCurrency(IAWOthInc.SPRecapTuit) + GetCurrency(IAWOthInc.SPRecapChar) + GetCurrency(IAWOthInc.SP5471) + GetCurrency(IAWOthInc.SPHobby) + GetCurrency(IAWOthInc.SP8621) + GetCurrency(IAWOthInc.SPDefDist) + GetCurrency(IAWOthInc.SPDisaster) + GetCurrency(IAWOthInc.SPFoster) + GetCurrency(IAWOthInc.SPCredAdj) + GetCurrency(IAWOthInc.SPPYNPTC) + GetCurrency(IAWOthInc.SP1099QA) + GetCurrency(IAWOthInc.SPIAABLE) + GetCurrency(IAWOthInc.SPBusPass) + GetCurrency(IAWOthInc.SPAirline) + GetCurrency(IAWOthInc.SP1099B) + GetCurrency(IAWOthInc.SPFarmLoss) + GetCurrency(IAWOthInc.SP8824) + GetCurrency(IAWOthInc.SPStudLoanDis) + GetCurrency(IAWOthInc.SP4684) + GetCurrency(IAWOthInc.SP3903) + GetCurrency(IAWOthInc.SPBusInt) + GetCurrency(IAWOthInc.SPEntExp) + GetCurrency(IAWOthInc.SP2106) + GetCurrency(IAWOthInc.SPOthNC){n}End Sub
Sub SPTotNonConform_Calculation(){n}{t}ReturnVal = GetCurrency(IAWOthInc.SPFarmLoss) + GetCurrency(IAWOthInc.SP8824) + GetCurrency(IAWOthInc.SPStudLoanDis) + GetCurrency(IAWOthInc.SP4684) + GetCurrency(IAWOthInc.SP3903) + GetCurrency(IAWOthInc.SPBusInt) + GetCurrency(IAWOthInc.SPEntExp) + GetCurrency(IAWOthInc.SP2106) + GetCurrency(IAWOthInc.SPOthNC){n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IAF1040.SSN){n}End Sub
Sub TotBonus_Calculation(){n}{t}ReturnVal = GetCurrency(IA4562.TotDepAdj) + GetCurrency(IA4562Sp.TotDepAdj) + GetCurrency(IA4562A.TotDepAdj){n}End Sub
Sub TotNonConform_Calculation(){n}{t}ReturnVal = GetCurrency(IAWOthInc.SPTotNonConform) + GetCurrency(IAWOthInc.TPTotNonConform){n}End Sub
Sub TP1099B_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.TP1099B){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USWOthIncNR.TP1099B){n}{t}End If{n}End Sub
Sub TP1099QA_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.TP1099QA){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USWOthIncNR.TP1099QA){n}{t}End If{n}End Sub
Sub TP2106_Calculation(){n}{t}ReturnVal = GetCurrency(IA2106.IAWages, FieldCopies(IA2106.Taxpayer)){n}End Sub
Sub TP3903_Calculation(){n}{t}ReturnVal = GetCurrency(IARequired.TIAExReimb){n}End Sub
Sub TP4684_Calculation(){n}{t}ReturnVal = GetCurrency(IA4684.IANonConformAdj) - GetCurrency(IAWOthInc.SP4684){n}End Sub
Sub TP5471_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.TP5471){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USWOthIncNR.TP5471){n}{t}End If{n}End Sub
Sub TP8621_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.TP8621){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TP8814_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.TP8814){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USWOthIncNR.TP8814){n}{t}End If{n}End Sub
Sub TP8824_Calculation(){n}{t}ReturnVal = GetCurrency(IARequired.TP8824){n}End Sub
Sub TPAirline_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.TPAirline){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPAlaska_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.TPAlaska){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPAltTrade_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.TPAltTrade){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USWOthIncNR.TPAltTrade){n}{t}End If{n}End Sub
Sub TPAmount_Calculation(Index As Integer){n}{t}Dim count As Integer{n}{t}Dim Hold As Currency{n}{t}count = 0{n}{t}Hold = 0{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPOth1) <> 0 Or GetCurrency(IAWOthInc.SPOth1) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.TPOth1){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPOth2) <> 0 Or GetCurrency(IAWOthInc.SPOth2) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.TPOth2){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPBabySit) <> 0 Or GetCurrency(IAWOthInc.SPBabySit) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.TPBabySit){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPBonus) <> 0 Or GetCurrency(IAWOthInc.SPBonus) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.TPBonus){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPIAEd) <> 0 Or GetCurrency(IAWOthInc.SPIAEd) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.TPIAEd){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPDirector) <> 0 Or GetCurrency(IAWOthInc.SPDirector) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.TPDirector){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPIntangDrill) <> 0 Or GetCurrency(IAWOthInc.SPIntangDrill) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.TPIntangDrill){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPExecutor) <> 0 Or GetCurrency(IAWOthInc.SPExecutor) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.TPExecutor){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPFirstHmBuy) <> 0 Or GetCurrency(IAWOthInc.SPFirstHmBuy) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.TPFirstHmBuy){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPK1) <> 0 Or GetCurrency(IAWOthInc.SPK1) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.TPK1){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPRefundCr) <> 0 Or GetCurrency(IAWOthInc.SPRefundCr) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.TPRefundCr){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPStRefund) <> 0 Or GetCurrency(IAWOthInc.SPStRefund) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.TPStRefund){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPDepl) <> 0 Or GetCurrency(IAWOthInc.SPDepl) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.TPDepl){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPJury) <> 0 Or GetCurrency(IAWOthInc.SPJury) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.TPJury){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPPerRent) <> 0 Or GetCurrency(IAWOthInc.SPPerRent) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.TPPerRent){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TP8814) <> 0 Or GetCurrency(IAWOthInc.SP8814) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.TP8814){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPMSA) <> 0 Or GetCurrency(IAWOthInc.SPMSA) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.TPMSA){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPMedMSA) <> 0 Or GetCurrency(IAWOthInc.SPMedMSA) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.TPMedMSA){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPLTC) <> 0 Or GetCurrency(IAWOthInc.SPLTC) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.TPLTC){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPMisc) <> 0 Or GetCurrency(IAWOthInc.SPMisc) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.TPMisc){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPAlaska) <> 0 Or GetCurrency(IAWOthInc.SPAlaska) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.TPAlaska){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPCoverdell) <> 0 Or GetCurrency(IAWOthInc.SPCoverdell) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.TPCoverdell){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPCanceled) <> 0 Or GetCurrency(IAWOthInc.SPCanceled) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.TPCanceled){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPPshipCan) <> 0 Or GetCurrency(IAWOthInc.SPPshipCan) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.TPPshipCan){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPHSA) <> 0 Or GetCurrency(IAWOthInc.SPHSA) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.TPHSA){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPAltTrade) <> 0 Or GetCurrency(IAWOthInc.SPAltTrade) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.TPAltTrade){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPRecapTuit) <> 0 Or GetCurrency(IAWOthInc.SPRecapTuit) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.TPRecapTuit){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPRecapChar) <> 0 Or GetCurrency(IAWOthInc.SPRecapChar) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.TPRecapChar){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TP5471) <> 0 Or GetCurrency(IAWOthInc.SP5471) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.TP5471){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPHobby) <> 0 Or GetCurrency(IAWOthInc.SPHobby) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.TPHobby){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TP8621) <> 0 Or GetCurrency(IAWOthInc.SP8621) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.TP8621){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPDefDist) <> 0 Or GetCurrency(IAWOthInc.SPDefDist) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.TPDefDist){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPDisaster) <> 0 Or GetCurrency(IAWOthInc.SPDisaster) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.TPDisaster){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPFoster) <> 0 Or GetCurrency(IAWOthInc.SPFoster) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.TPFoster){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{t}{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPCredAdj) <> 0 Or GetCurrency(IAWOthInc.SPCredAdj) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.TPCredAdj){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPPYNPTC) <> 0 Or GetCurrency(IAWOthInc.SPPYNPTC) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.TPPYNPTC){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TP1099QA) <> 0 Or GetCurrency(IAWOthInc.SP1099QA) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.TP1099QA){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPAirline) <> 0 Or GetCurrency(IAWOthInc.SPAirline) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.TPAirline){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TP1099B) <> 0 Or GetCurrency(IAWOthInc.SP1099B) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.TP1099B){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPIAABLE) <> 0 Or GetCurrency(IAWOthInc.SPIAABLE) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.TPIAABLE){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPBusPass) <> 0 Or GetCurrency(IAWOthInc.SPBusPass) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.TPBusPass){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPFarmLoss) <> 0 Or GetCurrency(IAWOthInc.SPFarmLoss) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.TPFarmLoss){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TP8824) <> 0 Or GetCurrency(IAWOthInc.SP8824) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.TP8824){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPStudLoanDis) <> 0 Or GetCurrency(IAWOthInc.SPStudLoanDis) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.TPStudLoanDis){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TP4684) <> 0 Or GetCurrency(IAWOthInc.SP4684) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.TP4684){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TP3903) <> 0 Or GetCurrency(IAWOthInc.SP3903) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.TP3903){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPBusInt) <> 0 Or GetCurrency(IAWOthInc.SPBusInt) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.TPBusInt){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPEntExp) <> 0 Or GetCurrency(IAWOthInc.SPEntExp) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.TPEntExp){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TP2106) <> 0 Or GetCurrency(IAWOthInc.SP2106) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.TP2106){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}If GetCurrency(IAWOthInc.TPOthNC) <> 0 Or GetCurrency(IAWOthInc.SPOthNC) <> 0 Then{n}{t}{t}If Index = count Then{n}{t}{t}   Hold = GetCurrency(IAWOthInc.TPOthNC){n}{t}{t}   count = 99{n}{t}{t}Else{n}{t}{t}{t}count = count + 1{n}{t}{t}End If{n}{t}End If{n}{t}{n}{t}ReturnVal = Hold{n}{n}End Sub
Sub TPBonus_Calculation(){n}{t}Dim JT As Currency{n}{t}{n}{t}JT = CDollar(CDbl(Round(GetCurrency(IAWDepr.TotAdj, FieldCopies(IAWDepr.Joint)))) * 0.5){n}{n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}ReturnVal = JT + GetCurrency(IAWDepr.TotAdj, FieldCopies(IAWDepr.Taxpayer)) + GetCurrency(IA4562A.TotDepAdj, FieldCopies(IA4562A.Taxpayer)) + GetCurrency(IA4562PIV.TPTotAdj){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TotBonus){n}{t}End If{n}End Sub
Sub TPBonusTrigger_Calculation(){n}{t}If IAFS() = 3 Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TPBonus){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TPBonus) + GetCurrency(IAWOthInc.SPBonus){n}{t}End If{n}End Sub
Sub TPCanceled_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.TPCanceled){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USWOthIncNR.TPCanceled){n}{t}End If{n}End Sub
Sub TPCoverdell_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.TPCoverdell){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USWOthIncNR.TPCoverdell){n}{t}End If{n}End Sub
Sub TPCredAdj_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.TPCredAdj){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USWOthIncNR.TPCredAdj){n}{t}End If{n}End Sub
Sub TPDefDist_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.TPDefDist){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USWOthIncNR.TPDefDist){n}{t}End If{n}End Sub
Sub TPDepl_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(USF6251.Depl) - GetCurrency(IAWOthInc.SPDepl)){n}End Sub
Sub TPDisaster_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.TPDisaster){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USWOthIncNR.TPDisaster){n}{t}End If{n}End Sub
Sub TPFarmLoss_Calculation(){n}{t}ReturnVal = MaxValue(0, Abs(GetCurrency(IAWSchFLoss.ExcessLoss)) - GetCurrency(IAWOthInc.SPFarmLoss)){n}End Sub
Sub TPFoster_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.TPFoster){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USWOthIncNR.TPFoster){n}{t}End If{n}End Sub
Sub TPHobby_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.TPHobby){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPHSA_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.TPHSA){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USWOthIncNR.TPHSA){n}{t}End If{n}End Sub
Sub TPIntangDrill_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(USF6251.IntangDrill) - GetCurrency(IAWOthInc.SPIntangDrill)){n}End Sub
Sub TPJointAmount_Calculation(Index As Integer){n}{t}If GetBool(IAF1040.CombMFS) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TPAmount(Index)){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAWOthInc.TPAmount(Index)) + GetCurrency(IAWOthInc.SPAmount(Index)){n}{t}End If{n}End Sub
Sub TPJury_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.TPJury){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPK1_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(USWOthInc.TPK1)){n}{t}Else{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(USWOthIncNR.TPK1)){n}{t}End If{n}End Sub
Sub TPLTC_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.TPLTC){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USWOthIncNR.TPLTC){n}{t}End If{n}End Sub
Sub TPMedMSA_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.TPMedMSA){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USWOthIncNR.TPMedMSA){n}{t}End If{n}End Sub
Sub TPMisc_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.TPMisc) + GetCurrency(USWOthInc.TPIndianGaming) + GetCurrency(USWOthInc.TPTribDist) + GetCurrency(USWOthInc.TPNativeDist){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USWOthIncNR.TPMisc){n}{t}End If{n}End Sub
Sub TPMSA_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.TP8853){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USWOthIncNR.TP8853){n}{t}End If{n}End Sub
Sub TPName_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.TPCommon){n}End Sub
Sub TPOth1_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.TPOth1){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USWOthIncNR.TPOth1){n}{t}End If{n}End Sub
Sub TPOth2_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.TPOth2){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USWOthIncNR.TPOth2){n}{t}End If{n}End Sub
Sub TPOthNC_Calculation(){n}{t}ReturnVal = GetCurrency(IAWNonConformAdj.TPTotNonConformAdj){n}End Sub
Sub TPPerRent_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.TPPerRent){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPPshipCan_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.TPPshipCan){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USWOthIncNR.TPPshipCan){n}{t}End If{n}End Sub
Sub TPPYNPTC_Calculation(){n}{t}If GetBool(USWSpouse.NonRes) = True Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(USWRec.PYNPTCNR) - GetCurrency(IAWOthInc.SPPYNPTC)){n}{t}Else{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(USWRec.PYNPTC) - GetCurrency(IAWOthInc.SPPYNPTC)){n}{t}End If{n}End Sub
Sub TPRecapChar_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.TPRecapChContTax) + GetCurrency(USWOthInc.TPRecapChar){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USWOthIncNR.TPRecapChContTax) + GetCurrency(USWOthIncNR.TPRecapChar){n}{t}End If{n}End Sub
Sub TPRecapTuit_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWOthInc.TPRecapTuit){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPTot_Calculation(){n}{t}ReturnVal = GetCurrency(IAWOthInc.TPOth1) + GetCurrency(IAWOthInc.TPOth2) + GetCurrency(IAWOthInc.TPBabySit) + GetCurrency(IAWOthInc.TPBonus) + GetCurrency(IAWOthInc.TPIAEd) + GetCurrency(IAWOthInc.TPDirector) + GetCurrency(IAWOthInc.TPIntangDrill) + GetCurrency(IAWOthInc.TPExecutor) + GetCurrency(IAWOthInc.TPFirstHmBuy) + GetCurrency(IAWOthInc.TPK1) + GetCurrency(IAWOthInc.TPRefundCr) + GetCurrency(IAWOthInc.TPStRefund) + GetCurrency(IAWOthInc.TPDepl) + GetCurrency(IAWOthInc.TPJury) + GetCurrency(IAWOthInc.TPPerRent) + GetCurrency(IAWOthInc.TP8814) + GetCurrency(IAWOthInc.TPMSA) + GetCurrency(IAWOthInc.TPMedMSA) + GetCurrency(IAWOthInc.TPLTC) + GetCurrency(IAWOthInc.TPMisc) + GetCurrency(IAWOthInc.TPAlaska) + GetCurrency(IAWOthInc.TPCoverdell) + GetCurrency(IAWOthInc.TPCanceled) + GetCurrency(IAWOthInc.TPPshipCan) + GetCurrency(IAWOthInc.TPHSA) + GetCurrency(IAWOthInc.TPAltTrade) + GetCurrency(IAWOthInc.TPRecapTuit) + GetCurrency(IAWOthInc.TPRecapChar) + GetCurrency(IAWOthInc.TP5471) + GetCurrency(IAWOthInc.TPHobby) + GetCurrency(IAWOthInc.TP8621) + GetCurrency(IAWOthInc.TPDefDist) + GetCurrency(IAWOthInc.TPDisaster) + GetCurrency(IAWOthInc.TPFoster) + GetCurrency(IAWOthInc.TPCredAdj) + GetCurrency(IAWOthInc.TPPYNPTC) + GetCurrency(IAWOthInc.TP1099QA) + GetCurrency(IAWOthInc.TPIAABLE) + GetCurrency(IAWOthInc.TPBusPass) + GetCurrency(IAWOthInc.TPAirline) + GetCurrency(IAWOthInc.TP1099B) + GetCurrency(IAWOthInc.TPFarmLoss) + GetCurrency(IAWOthInc.TP8824) + GetCurrency(IAWOthInc.TPStudLoanDis) + GetCurrency(IAWOthInc.TP4684) + GetCurrency(IAWOthInc.TP3903) + GetCurrency(IAWOthInc.TPBusInt) + GetCurrency(IAWOthInc.TPEntExp) + GetCurrency(IAWOthInc.TP2106) + GetCurrency(IAWOthInc.TPOthNC){n}End Sub
Sub TPTotNonConform_Calculation(){n}{t}ReturnVal = GetCurrency(IAWOthInc.TPFarmLoss) + GetCurrency(IAWOthInc.TP8824) + GetCurrency(IAWOthInc.TPStudLoanDis) + GetCurrency(IAWOthInc.TP4684) + GetCurrency(IAWOthInc.TP3903) + GetCurrency(IAWOthInc.TPBusInt) + GetCurrency(IAWOthInc.TPEntExp) + GetCurrency(IAWOthInc.TP2106) + GetCurrency(IAWOthInc.TPOthNC){n}End Sub
Sub Txt1_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetString(USWOthInc.Txt1){n}{t}Else{n}{t}{t}ReturnVal = GetString(USWOthIncNR.Txt1){n}{t}End If{n}End Sub
Sub Txt2_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetString(USWOthInc.Txt2){n}{t}Else{n}{t}{t}ReturnVal = GetString(USWOthIncNR.Txt2){n}{t}End If{n}End SubSub Description_Calculation(){n}{t}Dim Total As Currency{n}{t}{n}{t}Total = GetCurrency(IAWPenExc.TPPenExc) + GetCurrency(IAWPenExc.SPPenExc){n}{t}{n}{t}ReturnVal = CStr(Total){n}{n}End Sub
Sub Eligible_Calculation(){n}{t}If IAFS() = 2 Or IAFS() = 3 Then{n}{t}{t}If GetBool(IAWPenExc.ExTP) = True Or GetBool(IAWPenExc.ExSp) = True Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}ElseIf GetBool(IAWPenExc.ExTP) = True Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub ExSp_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True Then{n}{t}{t}If GetNumber(USWBasicInfo.SPAgeRec) > 54 Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub ExTP_Calculation(){n}{t}If GetNumber(USWBasicInfo.TPAgeRec) > 54 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub MaxExc_Calculation(){n}{t}If GetBool(IAWPenExc.Eligible) = True Then{n}{t}{t}If IAFS() = 4 Then{n}{t}{t}{t}If GetCurrency(IAF1040.SpPenExcl) = 0 And GetBool(IAF1040.NoSpPenExcl) = True Then{n}{t}{t}{t}{t}ReturnVal = 12000@{n}{t}{t}{t}ElseIf GetCurrency(IAF1040.SpPenExcl) > 0 Then{n}{t}{t}{t}{t}ReturnVal = MaxValue(0, 12000@ - GetCurrency(IAF1040.SpPenExcl)){n}{t}{t}{t}Else{n}{t}{t}{t}{t}ReturnVal = 6000@{n}{t}{t}{t}End If{n}{t}{t}ElseIf IAFS() = 2 Or IAFS() = 3 Then{n}{t}{t}{t}ReturnVal = 12000@{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 6000@{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub MinExc_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IAWPenExc.TotRetire), GetCurrency(IAWPenExc.MaxExc)){n}End Sub
Sub MobDisQual_Calculation(){n}{t}If GetCurrency(IAWPenExc.TPPenExc) + GetCurrency(IAWPenExc.SPPenExc) > 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Names_Calculation(){n}{t}ReturnVal = GetString(IARequired.CombNames){n}End Sub
Sub NREligible_Calculation(){n}{t}If IAFS() = 2 Or IAFS() = 3 Then{n}{t}{t}If GetBool(IAWPenExc.NRExTP) = True Or GetBool(IAWPenExc.NRExSp) = True Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}ElseIf GetBool(IAWPenExc.NRExTP) = True Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub NRExSp_Calculation(){n}{t}If GetBool(IAF126.SpPYRes) = True And GetBool(IAWPenExc.ExSp) = True Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub NRExTP_Calculation(){n}{t}If GetBool(IAF126.TpPYRes) = True And GetBool(IAWPenExc.ExTP) = True Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub NRMaxExc_Calculation(){n}{t}If GetBool(IAWPenExc.NREligible) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWPenExc.MaxExc){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub NRMinExc_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IAWPenExc.NRTotRetire), GetCurrency(IAWPenExc.NRMaxExc)){n}End Sub
Sub NRSPIRA_Calculation(){n}{t}If GetBool(IAF126.SpPYRes) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWPenExc.SPIRA){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub NRSPPenExc_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAWPenExc.NRMinExc) - GetCurrency(IAWPenExc.NRTPPenExc)){n}End Sub
Sub NRSPPensions_Calculation(){n}{t}If GetBool(IAF126.SpPYRes) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWPenExc.SPPensions){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub NRSPRatio_Calculation(){n}{t}If GetCurrency(IAWPenExc.NRTotRetire) = 0 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IAF126.SpPYRes) = True Then{n}{t}{t}ReturnVal = MaxValue(0, 1# - GetFloat(IAWPenExc.NRTPRatio)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub NRSPRetire_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True And GetBool(IAWPenExc.NRExSp) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWPenExc.NRSPIRA) + GetCurrency(IAWPenExc.NRSPPensions){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub NRTotRetire_Calculation(){n}{t}ReturnVal = GetCurrency(IAWPenExc.NRTPRetire) + GetCurrency(IAWPenExc.NRSPRetire){n}End Sub
Sub NRTPIRA_Calculation(){n}{t}If GetBool(IAF126.TpPYRes) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWPenExc.TPIRA){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub NRTPPenExc_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IAWPenExc.NRMinExc) * GetFloat(IAWPenExc.NRTPRatio)){n}End Sub
Sub NRTPPensions_Calculation(){n}{t}If GetBool(IAF126.TpPYRes) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWPenExc.TPPensions){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub NRTPRatio_Calculation(){n}{t}If GetCurrency(IAWPenExc.NRTotRetire) = 0 Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = MinValue(1#, GetFloat(IAWPenExc.NRTPRetire) / GetFloat(IAWPenExc.NRTotRetire)){n}{t}End If{n}End Sub
Sub NRTPRetire_Calculation(){n}{t}If GetBool(IAWPenExc.NRExTP) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWPenExc.NRTPIRA) + GetCurrency(IAWPenExc.NRTPPensions){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPIRA_Calculation(){n}'See Expanded instructions on Iowa website for 'Taxable IRA Distributions Step 5 Gross Income'. In 2016 QCD was to be added back to IA income and then were allowed a deduction on line 21{n}'For 2018 the expanded instructions say Iowa has conformed, no addback needed{n}'Extender: + GetCurrency(USWRetirement.SPAddQCD){n}{t}ReturnVal = GetCurrency(USWRec.SIRAInc){n}End Sub
Sub SPMilPen_Calculation(){n}{t}Dim Count1 As Long{n}{t}Dim MilPen As Currency{n}{t}{n}{t}Count1 = 1{n}{t}MilPen = 0{n}{t}{n}{t}Do While Count1 <= GetAllCopies(USD1099R){n}{t}{t}If GetBool(USD1099R.MilPen, Count1) = True And GetBool(USD1099R.Spouse, Count1) = True Then{n}{t}{t}{t}MilPen = MilPen + Round(GetCurrency(USD1099R.PenTax, Count1)){n}{t}{t}Else{n}{t}{t}{t}MilPen = MilPen{n}{t}{t}End If{n}{t}{t}Count1 = Count1 + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = Round(MilPen){n}{n}End Sub
Sub SPName_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.SPCommon){n}End Sub
Sub SPName2_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.SPCommon){n}End Sub
Sub SPPenExc_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAWPenExc.MinExc) - GetCurrency(IAWPenExc.TPPenExc)){n}End Sub
Sub SPPensions_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(USWRec.SPension) - GetCurrency(IAWPenExc.SPMilPen) - Round(GetCurrency(USDRRB1099R.PenTax, FieldCopies(USDRRB1099R.Spouse)))){n}End Sub
Sub SPRatio_Calculation(){n}{t}If GetCurrency(IAWPenExc.TotRetire) = 0 Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = MaxValue(0, 1# - GetFloat(IAWPenExc.TPRatio)){n}{t}End If{n}End Sub
Sub SPRetire_Calculation(){n}{t}If GetBool(IARequired.AskSpouse) = True And GetBool(IAWPenExc.ExSp) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWPenExc.SPIRA) + GetCurrency(IAWPenExc.SPPensions){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IAF1040.SSN){n}End Sub
Sub TotRetire_Calculation(){n}{t}ReturnVal = GetCurrency(IAWPenExc.TPRetire) + GetCurrency(IAWPenExc.SPRetire){n}End Sub
Sub TPIRA_Calculation(){n}'See Expanded instructions on Iowa website for 'Taxable IRA Distributions Step 5 Gross Income'. In 2016 QCD was to be added back to IA income and then were allowed a deduction on line 21{n}'For 2018 the expanded instructions say Iowa has conformed, no addback needed{n}'Extender: + GetCurrency(USWRetirement.TPAddQCD){n}{t}ReturnVal = GetCurrency(USWRec.TIRAInc){n}End Sub
Sub TPMilPen_Calculation(){n}{t}Dim Count1 As Long{n}{t}Dim MilPen As Currency{n}{t}{n}{t}Count1 = 1{n}{t}MilPen = 0{n}{t}{n}{t}Do While Count1 <= GetAllCopies(USD1099R){n}{t}{t}If GetBool(USD1099R.MilPen, Count1) = True And GetBool(USD1099R.Taxpayer, Count1) = True Then{n}{t}{t}{t}MilPen = MilPen + Round(GetCurrency(USD1099R.PenTax, Count1)){n}{t}{t}Else{n}{t}{t}{t}MilPen = MilPen{n}{t}{t}End If{n}{t}{t}Count1 = Count1 + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = Round(MilPen){n}End Sub
Sub TPName_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.TPCommon){n}End Sub
Sub TPName2_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.TPCommon){n}End Sub
Sub TPPenExc_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IAWPenExc.MinExc) * GetFloat(IAWPenExc.TPRatio)){n}End Sub
Sub TPPensions_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(USWRec.TPension) - GetCurrency(IAWPenExc.TPMilPen) - Round(GetCurrency(USDRRB1099R.PenTax, FieldCopies(USDRRB1099R.Taxpayer)))){n}End Sub
Sub TPRatio_Calculation(){n}{t}If GetCurrency(IAWPenExc.TotRetire) = 0 Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = MinValue(1#, GetFloat(IAWPenExc.TPRetire) / GetFloat(IAWPenExc.TotRetire)){n}{t}End If{n}End Sub
Sub TPRetire_Calculation(){n}{t}If GetBool(IAWPenExc.ExTP) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWPenExc.TPIRA) + GetCurrency(IAWPenExc.TPPensions){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End SubSub CBF_Calculation(){n}{t}ReturnVal = GetBool(USWPrepBInv.StY){n}End Sub
Sub CBF1040_Calculation(){n}{t}ReturnVal = GetCurrency(USZIAMasterCBF.CBF1040){n}End Sub
Sub CBF1040ES_Calculation(){n}{t}ReturnVal = GetCurrency(USZIAMasterCBF.CBF1040ES){n}End Sub
Sub CBF1040V_Calculation(){n}{t}ReturnVal = GetCurrency(USZIAMasterCBF.CBF1040V){n}End Sub
Sub CBF1040X_Calculation(){n}{t}ReturnVal = GetCurrency(USZIAMasterCBF.CBF1040X){n}End Sub
Sub CBF1040XV_Calculation(){n}{t}ReturnVal = GetCurrency(USZIAMasterCBF.CBF1040XV){n}End Sub
Sub CBF2210_Calculation(){n}{t}ReturnVal = GetCurrency(USZIAMasterCBF.CBF2210){n}End Sub
Sub CBF2210SchAI_Calculation(){n}{t}ReturnVal = GetCurrency(USZIAMasterCBF.CBF2210SchAI){n}End Sub
Sub CBF4136_Calculation(){n}{t}ReturnVal = GetCurrency(USZIAMasterCBF.CBF4136){n}End Sub
Sub CBF4562A_Calculation(){n}{t}ReturnVal = GetCurrency(USZIAMasterCBF.CBF4562A){n}End Sub
Sub CBF4562B_Calculation(){n}{t}ReturnVal = GetCurrency(USZIAMasterCBF.CBF4562B){n}End Sub
Sub CBF6251_Calculation(){n}{t}ReturnVal = GetCurrency(USZIAMasterCBF.CBF6251){n}End Sub
Sub CBF8453_Calculation(){n}{t}{t}ReturnVal = GetCurrency(USZIAMasterCBF.CBF8453){n}End Sub
Sub CBF8801_Calculation(){n}{t}ReturnVal = GetCurrency(USZIAMasterCBF.CBF8801){n}End Sub
Sub CBF8864_Calculation(){n}{t}ReturnVal = GetCurrency(USZIAMasterCBF.CBF8864){n}End Sub
Sub CBFName_Calculation(){n}{t}ReturnVal = GetString(IARequired.CombNames){n}End Sub
Sub CBFOthAmt_Calculation(Index As Integer){n}{t}ReturnVal = GetCurrency(USZIAMasterCBF.CBFOthAmt(Index)){n}End Sub
Sub CBFSch126_Calculation(){n}{t}ReturnVal = GetCurrency(USZIAMasterCBF.CBFSch126){n}End Sub
Sub CBFSch128_Calculation(){n}{t}ReturnVal = GetCurrency(USZIAMasterCBF.CBFSch128){n}End Sub
Sub CBFSch128S_Calculation(){n}{t}ReturnVal = GetCurrency(USZIAMasterCBF.CBFSch128S){n}End Sub
Sub CBFSch130_Calculation(){n}{t}ReturnVal = GetCurrency(USZIAMasterCBF.CBFSch130){n}End Sub
Sub CBFSch134_Calculation(){n}{t}ReturnVal = GetCurrency(USZIAMasterCBF.CBFSch134){n}End Sub
Sub CBFSch135_Calculation(){n}{t}ReturnVal = GetCurrency(USZIAMasterCBF.CBFSch135){n}End Sub
Sub CBFSch137_Calculation(){n}{t}ReturnVal = GetCurrency(USZIAMasterCBF.CBFSch137){n}End Sub
Sub CBFSch138_Calculation(){n}{t}ReturnVal = GetCurrency(USZIAMasterCBF.CBFSch138){n}End Sub
Sub CBFSch147_Calculation(){n}{t}ReturnVal = GetCurrency(USZIAMasterCBF.CBFSch147){n}End Sub
Sub CBFSch148_Calculation(){n}{t}ReturnVal = GetCurrency(USZIAMasterCBF.CBFSch148){n}End Sub
Sub CBFSch177_Calculation(){n}{t}ReturnVal = GetCurrency(USZIAMasterCBF.CBFSch177){n}End Sub
Sub CBFSchA_Calculation(){n}{t}ReturnVal = GetCurrency(USZIAMasterCBF.CBFSchA){n}End Sub
Sub CBFSchB_Calculation(){n}{t}ReturnVal = GetCurrency(USZIAMasterCBF.CBFSchB){n}End Sub
Sub CF147_Calculation(){n}{t}ReturnVal = GetNumber(IA147.Print){n}End Sub
Sub CF177_Calculation(){n}{t}ReturnVal = GetNumber(IA177.Print){n}End Sub
Sub CF1040_Calculation(){n}{t}ReturnVal = 1{n}End Sub
Sub CF126_Calculation(){n}{t}ReturnVal = GetNumber(IAF126.Print){n}End Sub
Sub CF128_Calculation(){n}{t}ReturnVal = GetNumber(IA128.Print){n}End Sub
Sub CF128S_Calculation(){n}{t}ReturnVal = GetNumber(IA128S.Print){n}End Sub
Sub CF130_Calculation(){n}{t}ReturnVal = GetNumber(IA130.PrintMe){n}End Sub
Sub CF134_Calculation(){n}{t}ReturnVal = GetNumber(IA134.Print) + GetNumber(IA134Sp.Print){n}End Sub
Sub CF135_Calculation(){n}{t}ReturnVal = GetNumber(IA135.Print){n}End Sub
Sub CF137_Calculation(){n}{t}ReturnVal = GetNumber(IA137.Print){n}End Sub
Sub CF138_Calculation(){n}{t}ReturnVal = GetNumber(IA138.Print){n}End Sub
Sub CF148_Calculation(){n}{t}ReturnVal = GetNumber(IA148.Print) + GetNumber(IA148Sp.Print){n}End Sub
Sub CF1040V_Calculation(){n}{t}ReturnVal = GetNumber(IA1040V.PrVou){n}End Sub
Sub CF1040XV_Calculation(){n}{t}ReturnVal = GetNumber(IA1040XV.PrVou){n}End Sub
Sub CF2210_Calculation(){n}{t}ReturnVal = GetNumber(IA2210.Print) + GetNumber(IA2210Sp.Print){n}End Sub
Sub CF2210SchAI_Calculation(){n}{t}ReturnVal = GetNumber(IA2210An.Print) + GetNumber(IA2210AnSp.Print){n}End Sub
Sub CF4136_Calculation(){n}{t}ReturnVal = GetBool(IASch4136.TotCr, 1) + GetBool(IASch4136.TotCr, 2){n}End Sub
Sub CF4562A_Calculation(){n}{t}ReturnVal = GetNumber(IA4562.PrIA4562) + GetNumber(IA4562Sp.PrIA4562) + GetNumber(IA4562A.PrIA4562A){n}End Sub
Sub CF4562B_Calculation(){n}{t}ReturnVal = GetNumber(IA4562B.Print) + GetNumber(IA4562BSp.Print){n}End Sub
Sub CF6251_Calculation(){n}{t}ReturnVal = GetNumber(IA6251.Print) + GetNumber(IA6251Sp.Print){n}End Sub
Sub CF8801_Calculation(){n}{t}ReturnVal = GetNumber(IA8801.Print) + GetNumber(IA8801Sp.Print){n}End Sub
Sub CF8864_Calculation(){n}{t}ReturnVal = GetNumber(IA8864.Print){n}End Sub
Sub CFA_Calculation(){n}{t}ReturnVal = GetNumber(IASchA.PrintSchA){n}End Sub
Sub CFB_Calculation(){n}{t}ReturnVal = GetNumber(IASchB.PrintIAB){n}End Sub
Sub CFES_Calculation(){n}{t}ReturnVal = GetNumber(IAEstimates.Print){n}End Sub
Sub CFX_Calculation(){n}{t}ReturnVal = GetNumber(IA1040X.Exist){n}End Sub
Sub CopFOthName_Calculation(Index As Integer){n}{t}ReturnVal = GetString(USZIAMasterCBF.CBFOth1Name(Index)){n}End Sub
Sub FOthAmt_Calculation(Index As Integer){n}{t}ReturnVal = GetCurrency(IAWPrepCBF.CopFOth(Index)) * GetCurrency(IAWPrepCBF.CBFOthAmt(Index)){n}End Sub
Sub FTotal1040_Calculation(){n}{t}ReturnVal = GetCurrency(IAWPrepCBF.CF1040) * GetCurrency(IAWPrepCBF.CBF1040){n}End Sub
Sub FTotal1040ES_Calculation(){n}{t}ReturnVal = GetCurrency(IAWPrepCBF.CFES) * GetCurrency(IAWPrepCBF.CBF1040ES){n}End Sub
Sub FTotal1040V_Calculation(){n}{t}ReturnVal = GetCurrency(IAWPrepCBF.CF1040V) * GetCurrency(IAWPrepCBF.CBF1040V){n}End Sub
Sub FTotal1040X_Calculation(){n}{t}ReturnVal = GetCurrency(IAWPrepCBF.CFX) * GetCurrency(IAWPrepCBF.CBF1040X){n}End Sub
Sub FTotal1040XV_Calculation(){n}{t}ReturnVal = GetCurrency(IAWPrepCBF.CF1040XV) * GetCurrency(IAWPrepCBF.CBF1040XV){n}End Sub
Sub FTotal2210_Calculation(){n}{t}ReturnVal = GetCurrency(IAWPrepCBF.CF2210) * GetCurrency(IAWPrepCBF.CBF2210){n}End Sub
Sub FTotal2210SchAI_Calculation(){n}{t}ReturnVal = GetCurrency(IAWPrepCBF.CF2210SchAI) * GetCurrency(IAWPrepCBF.CBF2210SchAI){n}End Sub
Sub FTotal4136_Calculation(){n}{t}ReturnVal = GetCurrency(IAWPrepCBF.CF4136) * GetCurrency(IAWPrepCBF.CBF4136){n}End Sub
Sub FTotal4562A_Calculation(){n}{t}ReturnVal = GetCurrency(IAWPrepCBF.CF4562A) * GetCurrency(IAWPrepCBF.CBF4562A){n}End Sub
Sub FTotal4562B_Calculation(){n}{t}ReturnVal = GetCurrency(IAWPrepCBF.CF4562B) * GetCurrency(IAWPrepCBF.CBF4562B){n}End Sub
Sub FTotal6251_Calculation(){n}{t}ReturnVal = GetCurrency(IAWPrepCBF.CF6251) * GetCurrency(IAWPrepCBF.CBF6251){n}End Sub
Sub FTotal8453_Calculation(){n}{t}ReturnVal = GetCurrency(IAWPrepCBF.CF8453) * GetCurrency(IAWPrepCBF.CBF8453){n}End Sub
Sub FTotal8801_Calculation(){n}{t}ReturnVal = GetCurrency(IAWPrepCBF.CF8801) * GetCurrency(IAWPrepCBF.CBF8801){n}End Sub
Sub FTotal8864_Calculation(){n}{t}ReturnVal = GetCurrency(IAWPrepCBF.CF8864) * GetCurrency(IAWPrepCBF.CBF8864){n}End Sub
Sub FTotalSch126_Calculation(){n}{t}ReturnVal = GetCurrency(IAWPrepCBF.CF126) * GetCurrency(IAWPrepCBF.CBFSch126){n}End Sub
Sub FTotalSch128_Calculation(){n}{t}ReturnVal = GetCurrency(IAWPrepCBF.CF128) * GetCurrency(IAWPrepCBF.CBFSch128){n}End Sub
Sub FTotalSch128S_Calculation(){n}{t}ReturnVal = GetCurrency(IAWPrepCBF.CF128S) * GetCurrency(IAWPrepCBF.CBFSch128S){n}End Sub
Sub FTotalSch130_Calculation(){n}{t}ReturnVal = GetCurrency(IAWPrepCBF.CF130) * GetCurrency(IAWPrepCBF.CBFSch130){n}End Sub
Sub FTotalSch134_Calculation(){n}{t}ReturnVal = GetCurrency(IAWPrepCBF.CF134) * GetCurrency(IAWPrepCBF.CBFSch134){n}End Sub
Sub FTotalSch135_Calculation(){n}{t}ReturnVal = GetCurrency(IAWPrepCBF.CF135) * GetCurrency(IAWPrepCBF.CBFSch135){n}End Sub
Sub FTotalSch137_Calculation(){n}{t}ReturnVal = GetCurrency(IAWPrepCBF.CF137) * GetCurrency(IAWPrepCBF.CBFSch137){n}End Sub
Sub FTotalSch138_Calculation(){n}{t}ReturnVal = GetCurrency(IAWPrepCBF.CF138) * GetCurrency(IAWPrepCBF.CBFSch138){n}End Sub
Sub FTotalSch147_Calculation(){n}{t}ReturnVal = GetCurrency(IAWPrepCBF.CF147) * GetCurrency(IAWPrepCBF.CBFSch147){n}End Sub
Sub FTotalSch148_Calculation(){n}{t}ReturnVal = GetCurrency(IAWPrepCBF.CF148) * GetCurrency(IAWPrepCBF.CBFSch148){n}End Sub
Sub FTotalSch177_Calculation(){n}{t}ReturnVal = GetCurrency(IAWPrepCBF.CF177) * GetCurrency(IAWPrepCBF.CBFSch177){n}End Sub
Sub FTotalSchA_Calculation(){n}{t}ReturnVal = GetCurrency(IAWPrepCBF.CFA) * GetCurrency(IAWPrepCBF.CBFSchA){n}End Sub
Sub FTotalSchB_Calculation(){n}{t}ReturnVal = GetCurrency(IAWPrepCBF.CFB) * GetCurrency(IAWPrepCBF.CBFSchB){n}End Sub
Sub TotCharge_Calculation(){n}{t}Dim TotCharge1 As Currency{n}{t}Dim TotCharge2 As Currency{n}{n}{t}TotCharge1 = GetCurrency(IAWPrepCBF.FTotal1040) + GetCurrency(IAWPrepCBF.FTotal1040ES) + GetCurrency(IAWPrepCBF.FTotal1040V) + GetCurrency(IAWPrepCBF.FTotal1040X) + GetCurrency(IAWPrepCBF.FTotal1040XV) + GetCurrency(IAWPrepCBF.FTotalSchA) + GetCurrency(IAWPrepCBF.FTotalSchB) + GetCurrency(IAWPrepCBF.FTotalSch126) + GetCurrency(IAWPrepCBF.FTotalSch128) + GetCurrency(IAWPrepCBF.FTotalSch128S) + GetCurrency(IAWPrepCBF.FTotalSch130) + GetCurrency(IAWPrepCBF.FTotalSch134) + GetCurrency(IAWPrepCBF.FTotalSch135) + GetCurrency(IAWPrepCBF.FTotalSch137) + GetCurrency(IAWPrepCBF.FTotalSch138) + GetCurrency(IAWPrepCBF.FTotalSch147) + GetCurrency(IAWPrepCBF.FTotalSch148){n}{t}TotCharge2 = GetCurrency(IAWPrepCBF.FTotalSch177) + GetCurrency(IAWPrepCBF.FTotal2210) + GetCurrency(IAWPrepCBF.FTotal2210SchAI) + GetCurrency(IAWPrepCBF.FTotal4136) + GetCurrency(IAWPrepCBF.FTotal4562A) + GetCurrency(IAWPrepCBF.FTotal4562B) + GetCurrency(IAWPrepCBF.FTotal6251) + GetCurrency(IAWPrepCBF.FTotal8453) + GetCurrency(IAWPrepCBF.FTotal8801) + GetCurrency(IAWPrepCBF.FTotal8864) + GetCurrency(IAWPrepCBF.FOthAmt(0)) + GetCurrency(IAWPrepCBF.FOthAmt(1)) + GetCurrency(IAWPrepCBF.FOthAmt(2)) + GetCurrency(IAWPrepCBF.FOthAmt(3)) + GetCurrency(IAWPrepCBF.FOthAmt(4)){n}{t}{n}{t}ReturnVal = TotCharge1 + TotCharge2{n}End SubSub AddComm1_Calculation(){n}{t}If Trim(GetString(IAWPrepCLtr.Comm1)) <> "" Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub AddComm2_Calculation(){n}{t}If Trim(GetString(IAWPrepCLtr.Comm2)) <> "" Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub AddComm3_Calculation(){n}{t}If Trim(GetString(IAWPrepCLtr.Comm3)) <> "" Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub AddComm4_Calculation(){n}{t}If Trim(GetString(IAWPrepCLtr.Comm4)) <> "" Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub AddComm5_Calculation(){n}{t}If Trim(GetString(IAWPrepCLtr.Comm5)) <> "" Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub AddComm6_Calculation(){n}{t}If Trim(GetString(IAWPrepCLtr.Comm6)) <> "" Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub C1EstInfo_Calculation(){n}{t}If GetBool(IAWPrepCLtr.NEst) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetBool(IAFilingInst.C1EstInfo){n}{t}End If{n}End Sub
Sub C2EstInfo_Calculation(){n}{t}If GetBool(IAWPrepCLtr.NEst) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetBool(IAFilingInst.C2EstInfo){n}{t}End If{n}End Sub
Sub Comm1_Calculation(){n}{t}ReturnVal = GetString(USWPrepMasterLet.StComm1){n}End Sub
Sub Comm2_Calculation(){n}{t}ReturnVal = GetString(USWPrepMasterLet.StComm2){n}End Sub
Sub Comm3_Calculation(){n}{t}ReturnVal = GetString(USWPrepMasterLet.StComm3){n}End Sub
Sub Comm4_Calculation(){n}{t}ReturnVal = GetString(USWPrepMasterLet.StComm4){n}End Sub
Sub Comm5_Calculation(){n}{t}ReturnVal = GetString(USWPrepMasterLet.StComm5){n}End Sub
Sub Comm6_Calculation(){n}{t}ReturnVal = GetString(USWPrepMasterLet.StComm6){n}End Sub
Sub Date_Calculation(){n}{t}ReturnVal = GetString(USWPrepCLtr.Date){n}End Sub
Sub EFAccept_Calculation(){n}{t}If GetBool(IAWPrepCLtr.EFRet) = True Then{n}{t}{t}If GetBool(USWPrepCLtr.Transmit) = True Then{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}ElseIf GetBool(USWPrepCLtr.WasTran) = True Then{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}ElseIf GetBool(USWPrepCLtr.F8879) = True Then{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub EFDate_Calculation(){n}{t}ReturnVal = GetString(IAWPrepCLtr.StSubmitDate){n}End Sub
Sub EFRet_Calculation(){n}{t}If GetBool(IAWPrepCLtr.PaperRet) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = 1{n}{t}End If{n}End Sub
Sub EFTrans_Calculation(){n}{t}If GetBool(IAWPrepCLtr.EFRet) = True Then{n}{t}{t}If GetBool(USWPrepCLtr.Transmit) = True Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub EFWasTran_Calculation(){n}{t}If GetBool(IAWPrepCLtr.EFRet) = True Then{n}{t}{t}If GetBool(USWPrepCLtr.WasTran) = True Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub EstInfo_Calculation(){n}{t}If GetBool(IAWPrepCLtr.NEst) = True Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetBool(IAFilingInst.EstInfo){n}{t}End If{n}End Sub
Sub Exist_Calculation(){n}{t}ReturnVal = 1{n}End Sub
Sub Names_Calculation(){n}{t}ReturnVal = GetString(USWPrepCLtr.Names){n}End Sub
Sub NEst_Calculation(){n}{t}If GetBool(IAEstimates.Print, 1) = False And GetBool(IAEstimates.Print, 2) = False Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub PaperAdd1_Calculation(){n}{t}If GetBool(IAWPrepCLtr.PaperRet) = True Then{n}{t}{t}ReturnVal = GetString(IAFilingInst.IRSAdd1) + "<br>" + GetString(IAFilingInst.IRSAdd2) + "<br>" + GetString(IAFilingInst.IRSAdd3){n}{t}ElseIf GetBool(IAWPrepCLtr.EFRet) = True And GetNumber(IA1040V.PrVou) = 1 Then{n}{t}{t}ReturnVal = GetString(IAFilingInst.IRSAdd1) + "<br>" + GetString(IAFilingInst.IRSAdd2) + "<br>" + GetString(IAFilingInst.IRSAdd3){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub PaperRet_Calculation(){n}{t}If GetBool(USWEFQual.QualifiesForEF) = False Then{n}{t}{t}ReturnVal = 1{n}{t}ElseIf GetBool(IAWEFQual.NotQualifyEF) = True Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub PrepPaymentDate_Calculation(){n}{t}ReturnVal = GetVerboseDate(GetDate(IAEFWksht.EFEFWDate)){n}End Sub
Sub Refund_Calculation(){n}{t}ReturnVal = GetBool(USWPrepCLtr.Refund){n}End Sub
Sub Ret1_Calculation(){n}{t}If GetBool(IAWPrepCLtr.EFRet) = True Then{n}{t}{t}ReturnVal = "Please find enclosed a copy of your " + YearString + " Iowa income tax return for your records."{n}{t}Else{n}{t}{t}ReturnVal = "Please find enclosed your " + YearString + " Iowa income tax return as well as a copy for your records."{n}{t}End If{n}End Sub
Sub Ret2_Calculation(){n}{t}If GetBool(IAWPrepCLtr.EFRet) = True And GetBool(USWPrepCLtr.NA) = True Then{n}{t}{t}ReturnVal = "Your Iowa return was electronically transmitted to the Iowa Department of Revenue;"{n}{t}ElseIf GetBool(IAWPrepCLtr.EFWasTran) = True Then{n}{t}{t}ReturnVal = "Your Iowa return was electronically transmitted to the Iowa Department of Revenue on " + GetString(IAWPrepCLtr.VerbEFDate) + ";"{n}{t}ElseIf GetBool(IAWPrepCLtr.EFAccept) = True Then{n}{t}{t}ReturnVal = "Your Iowa return was electronically filed and accepted by the Iowa Department of Revenue on " + GetString(IAWPrepCLtr.VerbEFDate) + ";"{n}{t}ElseIf GetBool(IAWPrepCLtr.EFTrans) = True Then{n}{t}{t}ReturnVal = "Your Iowa return will be electronically transmitted to the Iowa Department of Revenue on " + GetString(IAWPrepCLtr.VerbEFDate) + ";"{n}{t}ElseIf GetBool(IAWPrepCLtr.EFRet) = True Then{n}{t}{t}ReturnVal = "Your Iowa return will be electronically transmitted to the Iowa Department of Revenue;"{n}{t}Else{n}{t}{t}ReturnVal = "Your Iowa return is due " + GetString(IAWPrepCLtr.VerbStDate) + "."{n}{t}End If{n}End Sub
Sub Ret3_Calculation(){n}{t}If GetBool(IAWPrepCLtr.EFRet) = True Then{n}{t}{t}ReturnVal = "therefore, do not mail your Iowa Form 1040 to the Iowa Department of Revenue."{n}{t}Else{n}{t}{t}ReturnVal = "Please sign and date your Iowa Form 1040."{n}{t}End If{n}End Sub
Sub Ret3a_Calculation(){n}{t}If GetBool(IAWPrepCLtr.PaperRet) = True And GetNumber(IA1040V.PrVou) = 1 Then{n}{t}{t}ReturnVal = "Mail your Iowa Form 1040, Iowa payment voucher, payment and required attachments to:"{n}{t}ElseIf GetBool(IAWPrepCLtr.PaperRet) = True Then{n}{t}{t}ReturnVal = "Mail your Iowa Form 1040 and required attachments to:"{n}{t}ElseIf GetBool(IAWPrepCLtr.EFRet) = True And GetNumber(IA1040V.PrVou) = 1 And GetDate(IAWPrepCLtr.Date) > GetDate(IAWPrepCLtr.StDueDate) Then{n}{t}{t}ReturnVal = "Mail your payment and Iowa payment voucher (Form IA 1040-V) to:"{n}{t}ElseIf GetBool(IAWPrepCLtr.EFRet) = True And GetNumber(IA1040V.PrVou) = 1 Then{n}{t}{t}ReturnVal = "Mail your payment and Iowa payment voucher (Form IA 1040-V) by " + GetString(IAWPrepCLtr.VerbStDate) + " to:"{n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub Ret4_Calculation(){n}{t}ReturnVal = GetString(IAWPrepCLtr.PaperAdd1){n}End Sub
Sub Ret7_Calculation(){n}{t}If GetCurrency(IAF1040.RefBalDue) < 0 Then{n}{t}{t}ReturnVal = "The amount you owe on your Iowa return is "{n}{t}Else{n}{t}{t}ReturnVal = "The amount you overpaid on your Iowa return is "{n}{t}End If{n}End Sub
Sub Ret7Amount_Calculation(){n}{t}If GetCurrency(IAF1040.RefBalDue) < 0 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.TotDue){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAF1040.OVerPaid){n}{t}End If{n}End Sub
Sub Ret8_Calculation(){n}{t}If GetBool(IAWPrepCLtr.EFRet) = True And GetCurrency(IAF1040.RefBalDue) < 0 And GetString(IAEFWksht.EFDDCode) = "2" Then{n}{t}{t}ReturnVal = "Your payment is scheduled to be withdrawn from your bank account on " + GetString(IAWPrepCLtr.PrepPaymentDate) + "."{n}{t}ElseIf GetCurrency(IAF1040.RefBalDue) < 0 Then{n}{t}{t}ReturnVal = "Make your check or money order payable to ' Treasurer - State of Iowa '."{n}{t}Else{n}{t}{t}ReturnVal = "The amount of overpayment applied to your " + NextYearString + " estimates is "{n}{t}End If{n}End Sub
Sub Ret8Amount_Calculation(){n}{t}ReturnVal = GetCurrency(IARequired.TotApplied){n}End Sub
Sub Ret8Trig_Calculation(){n}{t}If GetCurrency(IAF1040.RefBalDue) < 0 Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = 1{n}{t}End If{n}End Sub
Sub Ret9_Calculation(){n}' balance due{n}{t}If GetBool(IAWPrepCLtr.EFRet) = True And GetString(IAEFWksht.EFDDCode) = "2" Then{n}{t}{t}ReturnVal = ""{n}{t}ElseIf GetCurrency(IAF1040.RefBalDue) < 0 Then{n}{t}{t}ReturnVal = "Write '" + YearString + " Form 1040' on your check."{n}' refund{n}{t}ElseIf GetBool(IAWPrepCLtr.EFRet) = True And GetBool(IAWPrepCLtr.Refund) = True And GetBool(IAEFWksht.PrepBPTrans) = True Then{n}{t}{t}ReturnVal = "The amount to be refunded to you is "{n}{t}ElseIf GetBool(IAWPrepCLtr.EFRet) = True And GetBool(IAWPrepCLtr.Refund) = True And GetString(IAEFWksht.EFDDCode) = "1" Then{n}{t}{t}ReturnVal = "The amount to be refunded to you by direct deposit is "{n}{t}ElseIf GetBool(IAWPrepCLtr.Refund) = True And GetCurrency(IAF1040.Refund) > 0 And Trim(GetString(IAF1040.ActNum)) <> "" Then{n}{t}{t}ReturnVal = "The amount to be refunded to you by direct deposit is "{n}{t}ElseIf GetBool(IAWPrepCLtr.Refund) = True And GetCurrency(IAF1040.Refund) > 0 Then{n}{t}{t}ReturnVal = "The amount to be refunded to you by paper check is "{n}{t}Else{n}{t}{t}ReturnVal = "The amount to be refunded to you is "{n}{t}End If{n}End Sub
Sub Ret9Amount_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.Refund){n}End Sub
Sub StateEF_Calculation(){n}{t}Dim TempStr As String{n}{t}Dim TempCount As Long{n}{t}Dim TempHold As Long{n}{t}Dim Submission As String{n}{t}{n}{t}TempStr = GetString(USWEFOptions.EFSubmissionHistory){n}{t}TempCount = 1{n}{t}TempHold = 0{n}{t}{n}{t}Submission = GetParam(TempStr, TempCount, "|"){n}{t}{n}{t}Do While Submission <> ""{n}{t}{t}If GetParam(Submission, 1, ";") = "IA" And GetParam(Submission, 2, ";") = "0" Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}End If{n}{t}{t}{n}{t}{t}TempCount = TempCount + 1{n}{t}{t}Submission = GetParam(TempStr, TempCount, "|"){n}{t}Loop{n}{n}{t}ReturnVal = 0{n}End Sub
Sub StDueDate_Calculation(){n}{t}ReturnVal = #4/30/2019#{n}End Sub
Sub StSubmitDate_Calculation(){n}{t}Dim TempStr As String{n}{t}Dim TempCount As Long{n}{t}Dim TempHold As Long{n}{t}Dim Submission As String{n}{t}{n}{t}TempStr = GetString(USWEFOptions.EFSubmissionHistory){n}{t}TempCount = 1{n}{t}TempHold = 0{n}{t}{n}{t}Submission = GetParam(TempStr, TempCount, "|"){n}{t}{n}{t}Do While Submission <> ""{n}{t}{t}If GetParam(Submission, 1, ";") = "IA" And GetParam(Submission, 2, ";") = "0" Then{n}{t}{t}{t}ReturnVal = GetParam(Submission, 4, ";"){n}{t}{t}End If{n}{t}{t}{n}{t}{t}TempCount = TempCount + 1{n}{t}{t}Submission = GetParam(TempStr, TempCount, "|"){n}{t}Loop{n}{n}{t}ReturnVal = ""{n}End Sub
Sub VerbDate_Calculation(){n}{t}ReturnVal = GetVerboseDate(GetDate(IAWPrepCLtr.Date)){n}End Sub
Sub VerbEFDate_Calculation(){n}{t}ReturnVal = GetVerboseDate(GetDate(IAWPrepCLtr.EFDate)){n}End Sub
Sub VerbStDate_Calculation(){n}{t}ReturnVal = GetVerboseDate(GetDate(IAWPrepCLtr.StDueDate)){n}End Sub
Sub YEst_Calculation(){n}{t}If GetBool(IAEstimates.Print, 1) = True Or GetBool(IAEstimates.Print, 2) = True Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End SubSub Alert10_Calculation(){n}{t}If GetNumber(IASchA.PrintSchA) = 1 Then{n}{t}{t}If GetCurrency(IAWSchAPrint.OtherExp) <> 0 And Not IsValidEFileString(GetString(IAWSchAPrint.OtherMiscText)) Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}ElseIf GetCurrency(IAWSchAPrint.OtherExp2) <> 0 And Not IsValidEFileString(GetString(IAWSchAPrint.OtherMiscText2)) Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert20_Calculation(){n}{t}If GetNumber(IASchA.PrintSchA) = 1 Then{n}{t}{t}If GetCurrency(IAWSchAPrint.OthExp) <> 0 And Not IsValidEFileString(GetString(IAWSchAPrint.OtherText)) Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}ElseIf GetCurrency(IAWSchAPrint.OthExp2) <> 0 And Not IsValidEFileString(GetString(IAWSchAPrint.OtherText2)) Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert30_Calculation(){n}{t}If GetNumber(IASchA.PrintSchA) = 1 Then{n}{t}{t}If GetCurrency(IAWSchAPrint.Hobby) > (GetCurrency(IAWOthInc.TPHobby) + GetCurrency(IAWOthInc.SPHobby)) Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Bond_Calculation(){n}{t}ReturnVal = GetCurrency(USWSchAPrint.Bond){n}End Sub
Sub CasualtyLoss_Calculation(){n}'believe current conditions being used to pull from 4684B ST and LT are not correct, the fed 4684 will not have amounts of an employee, just remove condition or use a different condition?{n}'verify .Ln22Employee will still be calced on Fed Sch A{n}{t}Dim TOne As Currency{n}{t}Dim TTwo As Currency{n}{t}{n}{t}'If GetCurrency(USF4684.STIncPro) > 0 Then{n}{t}{t}TOne = GetCurrency(USF4684B.TotEmplST){n}{t}'Else{n}{t}'{t}TOne = 0{n}{t}'End If{n}{t}{n}{t}'If GetCurrency(USF4684.L35bii) > 0 Then{n}{t}{t}TTwo = GetCurrency(USF4684B.TotEmplLT){n}{t}'Else{n}{t}'{t}TTwo = 0{n}{t}'End If{n}{t}{n}{t}ReturnVal = TOne + TTwo + GetCurrency(USSchA.Ln22Employee){n}End Sub
Sub Debt_Calculation(){n}{t}ReturnVal = GetCurrency(USWSchAPrint.Debt){n}End Sub
Sub Description_Calculation(){n}{t}If GetString(USWBasicInfo.FECombo) = "" Then{n}{t}{t}ReturnVal = "Iowa Itemized Deductions"{n}{t}Else{n}{t}{t}ReturnVal = GetString(USWBasicInfo.FECombo){n}{t}End If{n}End Sub
Sub ExcessDed_Calculation(){n}{t}ReturnVal = GetCurrency(USDEstK1.ExcDed){n}End Sub
Sub Exist_Calculation(){n}{t}ReturnVal = 1{n}End Sub
Sub F2106_Calculation(){n}{t}ReturnVal = GetCurrency(IA2106.SchAAMt){n}End Sub
Sub Form4684_Calculation(){n}{t}ReturnVal = GetCurrency(USWSchAPrint.Form4684){n}End Sub
Sub GamblingLoss_Calculation(){n}{t}ReturnVal = GetCurrency(USWSchAPrint.GamblingLoss){n}End Sub
Sub ImpWrkExp_Calculation(){n}{t}ReturnVal = GetCurrency(USWSchAPrint.ImpWrkExp){n}End Sub
Sub Indirect_Calculation(){n}'how will these expenses now be reported by the entity? Seems they still need to be passed through. Will we have an entry point on fed at all?{n}{t}'ReturnVal = GetCurrency(USWPartK1Detail.PortfolioDed2) + GetCurrency(USWPartK1Detail.MiscItmDed) + GetCurrency(USWSCorpK1Detail.PortfolioDed2) + GetCurrency(USWSCorpK1Detail.MiscItmDed){n}{t}ReturnVal = 0{n}End Sub
Sub Invest_Calculation(){n}{t}ReturnVal = Round(GetCurrency(USD1099DIV.InvExp) + GetCurrency(USD1099INT.InvExp) + GetCurrency(USD1099OID.InvExp)){n}End Sub
Sub K1DedPort_Calculation(){n}{t}ReturnVal = GetCurrency(USWSchAPrint.K1DedPort){n}End Sub
Sub Names_Calculation(){n}{t}ReturnVal = GetString(IARequired.CombNames){n}End Sub
Sub Pension_Calculation(){n}{t}ReturnVal = GetCurrency(USWSchAPrint.Pension){n}End Sub
Sub REMIC_Calculation(){n}{t}ReturnVal = GetCurrency(USSchEP2.RemicOtherInc){n}End Sub
Sub Repay_Calculation(){n}{t}ReturnVal = GetCurrency(USWSchAPrint.Repay){n}End Sub
Sub RepayInc_Calculation(){n}{t}If GetCurrency(USWUnempl.TPPrevUnemRepay) > 3000@ Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USWUnempl.TPPrevUnemRepay){n}{t}End If{n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IAF1040.SSN){n}End Sub
Sub TotEstK1_Calculation(){n}{t}ReturnVal = GetCurrency(USWSchAPrint.TotEstK1){n}End Sub
Sub TotExp_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWSchAPrint.Legal) + GetCurrency(IAWSchAPrint.OthLegal) + GetCurrency(IAWSchAPrint.Clerical) + GetCurrency(IAWSchAPrint.Custodial) + GetCurrency(IAWSchAPrint.Invest) + GetCurrency(IAWSchAPrint.InsolventLoss) + GetCurrency(IAWSchAPrint.CasualtyLoss) + GetCurrency(IAWSchAPrint.Appraisal) + GetCurrency(IAWSchAPrint.DeprTot) + GetCurrency(IAWSchAPrint.Amort) + GetCurrency(IAWSchAPrint.ExcessDed) + GetCurrency(IAWSchAPrint.Fees) + GetCurrency(IAWSchAPrint.Indirect) + GetCurrency(IAWSchAPrint.REMIC) + GetCurrency(IAWSchAPrint.IRALoss) + GetCurrency(IAWSchAPrint.RepayInc) + GetCurrency(IAWSchAPrint.SafeBox) + GetCurrency(IAWSchAPrint.ServiceCharge) + GetCurrency(IAWSchAPrint.TaxAdvice) + GetCurrency(IAWSchAPrint.Trustee) + GetCurrency(IAWSchAPrint.CreditFees) + GetCurrency(IAWSchAPrint.OthExp) + GetCurrency(IAWSchAPrint.OthExp2){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAWSchAPrint.Legal) + GetCurrency(IAWSchAPrint.OthLegal) + GetCurrency(IAWSchAPrint.Clerical) + GetCurrency(IAWSchAPrint.Custodial) + GetCurrency(IAWSchAPrint.Invest) + GetCurrency(IAWSchAPrint.InsolventLoss) + GetCurrency(IAWSchAPrint.CasualtyLoss) + GetCurrency(IAWSchAPrint.Appraisal) + GetCurrency(IAWSchAPrint.DeprTot) + GetCurrency(IAWSchAPrint.Amort) + GetCurrency(IAWSchAPrint.ExcessDed) + GetCurrency(IAWSchAPrint.Fees) + GetCurrency(IAWSchAPrint.Hobby) + GetCurrency(IAWSchAPrint.Indirect) + GetCurrency(IAWSchAPrint.REMIC) + GetCurrency(IAWSchAPrint.IRALoss) + GetCurrency(IAWSchAPrint.RepayInc) + GetCurrency(IAWSchAPrint.RepaySSB) + GetCurrency(IAWSchAPrint.SafeBox) + GetCurrency(IAWSchAPrint.ServiceCharge) + GetCurrency(IAWSchAPrint.TaxAdvice) + GetCurrency(IAWSchAPrint.Trustee) + GetCurrency(IAWSchAPrint.CreditFees) + GetCurrency(IAWSchAPrint.OthExp) + GetCurrency(IAWSchAPrint.OthExp2){n}{t}End If{n}End Sub
Sub TotOthDed_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = True Then{n}{t}{t}ReturnVal = GetCurrency(IAWSchAPrint.Form4684) + GetCurrency(IAWSchAPrint.K1DedPort) + GetCurrency(IAWSchAPrint.ImpWrkExp) + GetCurrency(IAWSchAPrint.Repay) + GetCurrency(IAWSchAPrint.Pension){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAWSchAPrint.Form4684) + GetCurrency(IAWSchAPrint.GamblingLoss) + GetCurrency(IAWSchAPrint.K1DedPort) + GetCurrency(IAWSchAPrint.ImpWrkExp) + GetCurrency(IAWSchAPrint.TotEstK1) + GetCurrency(IAWSchAPrint.Repay) + GetCurrency(IAWSchAPrint.Bond) + GetCurrency(IAWSchAPrint.Pension) + GetCurrency(IAWSchAPrint.Debt){n}{t}End If{n}End Sub
Sub TotOtherExp_Calculation(){n}{t}ReturnVal = GetCurrency(IAWSchAPrint.F2106) + GetCurrency(IAWSchAPrint.BadDebt) + GetCurrency(IAWSchAPrint.LiabilityPrem) + GetCurrency(IAWSchAPrint.Breach) + GetCurrency(IAWSchAPrint.ChamberDues) + GetCurrency(IAWSchAPrint.ProffDues) + GetCurrency(IAWSchAPrint.JobSearch) + GetCurrency(IAWSchAPrint.LabFees) + GetCurrency(IAWSchAPrint.LegalFees) + GetCurrency(IAWSchAPrint.LicenseFees) + GetCurrency(IAWSchAPrint.Malpractice) + GetCurrency(IAWSchAPrint.MedExam) + GetCurrency(IAWSchAPrint.Occupational) + GetCurrency(IAWSchAPrint.Passport) + GetCurrency(IAWSchAPrint.RepayEmpInc) + GetCurrency(IAWSchAPrint.Research) + GetCurrency(IAWSchAPrint.Subscriptions) + GetCurrency(IAWSchAPrint.Tools) + GetCurrency(IAWSchAPrint.Union) + GetCurrency(IAWSchAPrint.Uniforms) + GetCurrency(IAWSchAPrint.WorkEdu) + GetCurrency(IAWSchAPrint.OtherExp) + GetCurrency(IAWSchAPrint.OtherExp2){n}End Sub
Sub Union_Calculation(){n}{t}ReturnVal = Round(GetCurrency(USDW2.UnionDues)){n}End SubSub ATax_Calculation(){n}{t}If GetNumber(IAWkAltTax.ProRate) = 1 Then{n}{t}{t}ReturnVal = CDollar(GetFloat(IAWkAltTax.Lesser) * GetFloat(IAWkAltTax.BProRate)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BProRate_Calculation(){n}{t}If GetNumber(IAWkAltTax.ProRate) = 1 Then{n}{t}{t}If GetCurrency(IAWkAltTax.SPModNI) < 0 And GetCurrency(IAWkAltTax.TPModNI) < 0 Then{n}{t}{t}{t}If GetCurrency(IAWkAltTax.TPModNI) < GetCurrency(IAWkAltTax.SPModNI) Then{n}{t}{t}{t}{t}ReturnVal = 0{n}{t}{t}{t}Else{n}{t}{t}{t}{t}ReturnVal = 1{n}{t}{t}{t}End If{n}{t}{t}ElseIf GetCurrency(IAWkAltTax.TPModNI) < 0 Then{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}ElseIf GetCurrency(IAWkAltTax.TPModNI) > 0 And GetCurrency(IAWkAltTax.TotAdjIANetInc) <= 0 Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}ElseIf GetCurrency(IAWkAltTax.TotAdjIANetInc) = 0 Then{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = MaxValue(0, (MinValue(1#, Round(GetFloat(IAWkAltTax.TPModNI) / GetFloat(IAWkAltTax.TotAdjIANetInc), 3)))){n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub BTax_Calculation(){n}{t}If GetNumber(IAWkAltTax.ProRate) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAWkAltTax.Lesser) - GetCurrency(IAWkAltTax.ATax){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Description_Calculation(){n}{t}ReturnVal = CStr(GetCurrency(IAWkAltTax.Lesser)){n}End Sub
Sub IncLimit_Calculation(){n}{t}If GetBool(IAF1040.Over65) = True Then{n}{t}{t}ReturnVal = 32000@{n}{t}Else{n}{t}{t}ReturnVal = 13500@{n}{t}End If{n}End Sub
Sub Lesser_Calculation(){n}{t}If GetBool(IAWkAltTax.Qualify) = True Then{n}{t}{t}ReturnVal = MinValue(GetCurrency(IAWkAltTax.Mult), GetCurrency(IAWkAltTax.Tables)){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAWkAltTax.Tables){n}{t}End If{n}End Sub
Sub Ln26_Calculation(){n}{t}ReturnVal = GetCurrency(IAWkAltTax.TotSPLine1) + GetCurrency(IAWkAltTax.TotLine1){n}End Sub
Sub LumpSum_Calculation(){n}{t}ReturnVal = GetCurrency(USF4972.TPCapGain) + GetCurrency(USF4972.TPTaxAmt){n}End Sub
Sub Mult_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IAWkAltTax.Sub1) * 0.0898){n}End Sub
Sub Names_Calculation(){n}{t}ReturnVal = GetString(IARequired.CombNames){n}End Sub
Sub NetInc_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.ANet){n}End Sub
Sub PenExcl_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.APenExcl){n}End Sub
Sub ProRate_Calculation(){n}{t}If IAFS() = 3 Or IAFS() = 4 Then{n}{t}{t}If (GetCurrency(IAWkAltTax.Mult) < GetCurrency(IAWkAltTax.Tables)) And GetBool(IAWkAltTax.Qualify) = True Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Qualify_Calculation(){n}{t}Dim NoMFSQual As Long{n}{t}{n}{t}If GetCurrency(IAF1040.SpIncome) = 0 And GetBool(IAF1040.NoMFSInc) = False Then{n}{t}{t}NoMFSQual = 1{n}{t}Else{n}{t}{t}NoMFSQual = 0{n}{t}End If{n}{n}{t}If IAFS() = 1 Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf GetBool(IARequired.AskFilStat) = True And GetBool(IAWkAltTax.NOL) = True Then{n}{t}{t}ReturnVal = 0{n}{t}ElseIf IAFS() = 4 And NoMFSQual = 1 Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = 1{n}{t}End If{n}End Sub
Sub SPLumpSum_Calculation(){n}'probably should ask for the form 4972 amounts on the IA 1040 under the filing status 4 section, however for the number of users that will fall in this situation not going to add this year.{n}{t}If IAFS() = 4 Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USF4972Spouse.TPCapGain) + GetCurrency(USF4972Spouse.TPTaxAmt){n}{t}End If{n}End Sub
Sub SPModNI_Calculation(){n}{t}If GetNumber(IAWkAltTax.ProRate) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAWkAltTax.TotSPLine1){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SPNetInc_Calculation(){n}{t}If IAFS() = 4 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.SpIncome){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BNet){n}{t}End If{n}End Sub
Sub SPPenExcl_Calculation(){n}{t}If IAFS() = 4 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.SpPenExcl){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BPenExcl){n}{t}End If{n}End Sub
Sub SPSSB_Calculation(){n}{t}If IAFS() = 4 Then{n}{t}{t}ReturnVal = GetCurrency(IAF1040.SpSSB){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(IAF1040.BRepSSB){n}{t}End If{n}End Sub
Sub SSB_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.ARepSSB){n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IAF1040.SSN){n}End Sub
Sub Sub1_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAWkAltTax.Ln26) - GetCurrency(IAWkAltTax.IncLimit)){n}End Sub
Sub Tables_Calculation(){n}{t}ReturnVal = GetCurrency(IAF1040.ARegTax) + GetCurrency(IAF1040.BRegTax){n}End Sub
Sub TotAdjIANetInc_Calculation(){n}{t}ReturnVal = GetCurrency(IAWkAltTax.SPModNI) + GetCurrency(IAWkAltTax.TPModNI){n}End Sub
Sub TotLine1_Calculation(){n}{t}ReturnVal = GetCurrency(IAWkAltTax.NetInc) + GetCurrency(IAWkAltTax.PenExcl) + GetCurrency(IAWkAltTax.SSB) + GetCurrency(IAWkAltTax.LumpSum){n}End Sub
Sub TotSPLine1_Calculation(){n}{t}ReturnVal = GetCurrency(IAWkAltTax.SPNetInc) + GetCurrency(IAWkAltTax.SPPenExcl) + GetCurrency(IAWkAltTax.SPSSB) + GetCurrency(IAWkAltTax.SPLumpSum){n}End Sub
Sub TPModNI_Calculation(){n}{t}If GetNumber(IAWkAltTax.ProRate) = 1 Then{n}{t}{t}ReturnVal = GetCurrency(IAWkAltTax.TotLine1){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End SubSub Box5_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(USWSSBDetail.TotSS)){n}{t}Else{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(USWSSBDetailNR.TPSS)){n}{t}End If{n}End Sub
Sub Description_Calculation(){n}{t}ReturnVal = CStr(GetCurrency(IAWkSSB.ReportSSB)) & " Reportable Benefits"{n}End Sub
Sub FilStat_Calculation(){n}{t}If FedFS() = 2 Then{n}{t}{t}ReturnVal = 32000@{n}{t}ElseIf FedFS() = 3 And GetBool(USWBasicInfo.MFSAllYr) = False Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = 25000@{n}{t}End If{n}End Sub
Sub Half10_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IAWkSSB.Sub9) * 0.5){n}End Sub
Sub Half2_Calculation(){n}{t}ReturnVal = CDollar(GetFloat(IAWkSSB.Box5) * 0.5){n}End Sub
Sub Line31_Calculation(){n}{t}ReturnVal = GetCurrency(USWRec.TotEdExp) + GetCurrency(USWRec.TotBusExp2106) + GetCurrency(USWRec.TotHealthSav) + GetCurrency(USWRec.TotMove) + GetCurrency(USWRec.TotHalfSE) + GetCurrency(USWRec.TotKeough) + GetCurrency(USWRec.TotSEHealth) + GetCurrency(USWRec.TotEarlyPen) + GetCurrency(USWRec.TotAlimonyAdj) + GetCurrency(USWRec.TotScholEx) + GetCurrency(USWRec.TotIRAAdj) + GetCurrency(USWRec.TotOthAdj){n}End Sub
Sub Line8b_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USF1040.TEI){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USF1040NR.TEI){n}{t}End If{n}End Sub
Sub Names_Calculation(){n}{t}ReturnVal = GetString(IARequired.CombNames){n}End Sub
Sub ReportSSB_Calculation(){n}{t}ReturnVal = MinValue(GetCurrency(IAWkSSB.Half2), GetCurrency(IAWkSSB.Half10)){n}End Sub
Sub SPRepSSB_Calculation(){n}{t}Dim TotSSB As Currency{n}{t}Dim SpSSB As Currency{n}{t}{n}{t}TotSSB = GetCurrency(IAWkSSB.Box5){n}{t}SpSSB = GetCurrency(USWSSBDetail.SPSS){n}{t}{n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}If TotSSB > 0 Then{n}{t}{t}{t}ReturnVal = CDollar((CDbl(SpSSB) / CDbl(TotSSB)) * GetFloat(IAWkSSB.ReportSSB)){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(IAF1040.SSN){n}End Sub
Sub Sub_Calculation(){n}{t}ReturnVal = GetCurrency(IAWkSSB.Sum5) - GetCurrency(IAWkSSB.Line31){n}End Sub
Sub Sub9_Calculation(){n}{t}ReturnVal = MaxValue(0, (GetCurrency(IAWkSSB.Sub) - GetCurrency(IAWkSSB.FilStat))){n}End Sub
Sub Sum3_Calculation(){n}{t}If GetBool(USWResidency.F1040NR) = False Then{n}{t}{t}ReturnVal = GetCurrency(USWSSB.SSBInc) + GetCurrency(USWSSB.TotExempt) + GetCurrency(IAWOthInc.TotBonus) + GetCurrency(IAWOthInc.TotNonConform) - GetCurrency(IARequired.NCMove) - GetCurrency(IARequired.NCDomProd) + CDollar(GetFloat(USWSSBDetail.TotRR) / 2){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USF1040NR.TECI) + GetCurrency(USF8839.SumL22) + GetCurrency(IAWOthInc.TotBonus) + GetCurrency(IAWOthInc.TotNonConform) - GetCurrency(IARequired.NCMove) - GetCurrency(IARequired.NCDomProd) + CDollar(GetFloat(USWSSBDetailNR.TPRR) / 2){n}{t}End If{n}End Sub
Sub Sum5_Calculation(){n}{t}ReturnVal = GetCurrency(IAWkSSB.Half2) + GetCurrency(IAWkSSB.Sum3) + GetCurrency(IAWkSSB.Line8b){n}End Sub
Sub TPRepSSB_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(IAWkSSB.ReportSSB) - GetCurrency(IAWkSSB.SPRepSSB)){n}End SubSub ActValue_Calculation(){n}{t}Dim ActValue As Currency{n}{t}Dim count As Integer{n}{t}{n}{t}count = 1{n}{t}ActValue = 0{n}{t}{n}{t}Do While count <= GetAllCopies(USD1099R){n}{t}{t}If GetBool(USD1099R.Qual4972, count) = True And GetBool(USD1099R.Spouse, count) = True Then{n}{t}{t}{t}ActValue = ActValue + Round(GetCurrency(USD1099R.Other, count)){n}{t}{t}Else{n}{t}{t}{t}ActValue = ActValue{n}{t}{t}End If{n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}If GetBool(USF4972Spouse.UseForm) = True And GetBool(USF4972Spouse.Choose10Year) = True Then{n}{t}{t}If GetBool(USF4972Spouse.MRD) = True And GetBool(USF4972Spouse.Box8Perc) <> 0 Then{n}{t}{t}{t}ReturnVal = CCur(ActValue / (GetFloat(USF4972Spouse.Box8Perc) / 100#)){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = ActValue{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub AdjTotTaxable_Calculation(){n}{t}If GetBool(USF4972Spouse.UseForm) = True And GetBool(USF4972Spouse.Choose10Year) = True Then{n}{t}{t}ReturnVal = GetCurrency(USF4972Spouse.TotTaxable) + GetCurrency(USF4972Spouse.ActValue){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert10_Calculation(){n}{t}Dim count As Integer{n}{t}Dim Hit As Long{n}{t}{n}{t}count = 1{n}{t}Hit = 0{n}{t}{n}{t}Do While count <= GetAllCopies(USD1099R){n}{t}{t}If GetBool(USD1099R.Spouse, count) = True And GetBool(USD1099R.Qual4972, count) = True Then{n}{t}{t}{t}Hit = Hit + 1{n}{t}{t}Else{n}{t}{t}{t}Hit = Hit{n}{t}{t}End If{n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}If GetBool(USF4972Spouse.UseForm) = True And GetBool(USF4972Spouse.ChooseCapGain) = False And GetBool(USF4972Spouse.Choose10Year) = False And Hit <> 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert20_Calculation(){n}{t}Dim count As Integer{n}{t}Dim Hit As Long{n}{t}{n}{t}count = 1{n}{t}Hit = 0{n}{t}{n}{t}Do While count <= GetAllCopies(USD1099R){n}{t}{t}If GetBool(USD1099R.Spouse, count) = True And GetBool(USD1099R.Qual4972, count) = True Then{n}{t}{t}{t}Hit = Hit + 1{n}{t}{t}Else{n}{t}{t}{t}Hit = Hit{n}{t}{t}End If{n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}If GetNumber(USF4972Spouse.Print) = 1 And Hit > 1 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert30_Calculation(){n}{t}ReturnVal = 0{n}End Sub
Sub Alert40_Calculation(){n}{t}ReturnVal = 0{n}End Sub
Sub Alert5_Calculation(){n}{t}If GetNumber(USWRetirement.SP4972) = 1 And GetStatus(UserModifiedStatus) = False Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert50_Calculation(){n}{t}If GetBool(USF4972Spouse.MRD) = True And GetBool(USF4972Spouse.Choose10Year) = True And GetBool(USF4972Spouse.UseForm) = True And GetFloat(USF4972Spouse.Box9aPerc) = 0 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert60_Calculation(){n}{t}Dim count As Integer{n}{t}Dim Hit As Long{n}{t}{n}{t}count = 1{n}{t}Hit = 0{n}{t}{n}{t}Do While count <= GetAllCopies(USD1099R){n}{t}{t}If GetCurrency(USD1099R.Other, count) > 0 And GetBool(USD1099R.Spouse, count) = True And GetBool(USD1099R.Qual4972, count) = True Then{n}{t}{t}{t}Hit = Hit + 1{n}{t}{t}Else{n}{t}{t}{t}Hit = Hit{n}{t}{t}End If{n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}If GetBool(USF4972Spouse.MRD) = True And GetBool(USF4972Spouse.Choose10Year) = True And GetBool(USF4972Spouse.UseForm) = True Then{n}{t}{t}If Hit <> 0 And GetFloat(USF4972Spouse.Box8Perc) = 0 Then{n}{t}{t}{t}ReturnVal = 1{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Alert70_Calculation(){n}{t}ReturnVal = 0{n}End Sub
Sub CapGain_Calculation(){n}{t}Dim Estate As Currency{n}{n}{t}Estate = CDollar(GetCurrency(USF4972Spouse.EstateTax) * GetFloat(USF4972Spouse.DBWC)){n}{t}{n}{t}If GetBool(USF4972Spouse.UseForm) = True And GetBool(USF4972Spouse.ChooseCapGain) = True Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(USF4972Spouse.DBWF) - Estate){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub CapGainTax_Calculation(){n}{t}ReturnVal = CDollar(GetCurrency(USF4972Spouse.CapGain) * 0.2){n}End Sub
Sub Common_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.SPCommon){n}End Sub
Sub DBWA_Calculation(){n}{t}ReturnVal = GetCurrency(USF4972Spouse.NUAG){n}End Sub
Sub DBWB_Calculation(){n}{t}If GetBool(USF4972Spouse.NUA) = True Then{n}{t}{t}ReturnVal = GetCurrency(USF4972Spouse.NUAB) + GetCurrency(USF4972Spouse.NUAD){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USF4972Spouse.NUAB){n}{t}End If{n}End Sub
Sub DBWC_Calculation(){n}{t}If GetCurrency(USF4972Spouse.DBWB) = 0 Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetFloat(USF4972Spouse.DBWA) / GetFloat(USF4972Spouse.DBWB){n}{t}End If{n}End Sub
Sub DBWD_Calculation(){n}{t}ReturnVal = GetCurrency(USF4972Spouse.DeathExcl){n}End Sub
Sub DBWE_Calculation(){n}{t}ReturnVal = CDollar(GetCurrency(USF4972Spouse.DBWD) * GetFloat(USF4972Spouse.DBWC)){n}End Sub
Sub DBWF_Calculation(){n}{t}ReturnVal = GetCurrency(USF4972Spouse.DBWA) - GetCurrency(USF4972Spouse.DBWE){n}End Sub
Sub Death_Calculation(){n}{t}Dim TPShare As Currency{n}{t}{n}{t}If GetBool(USF4972Spouse.CapGain) = True Then{n}{t}{t}TPShare = GetCurrency(USF4972Spouse.DBWD) - GetCurrency(USF4972Spouse.DBWE){n}{t}Else{n}{t}{t}TPShare = GetCurrency(USF4972Spouse.DeathExcl){n}{t}End If{n}{t}{n}{t}If GetBool(USF4972Spouse.UseForm) = True And GetBool(USF4972Spouse.Choose10Year) = True Then{n}{t}{t}If GetBool(USF4972Spouse.MRD) = True And GetFloat(USF4972Spouse.Box9aPerc) <> 0 Then{n}{t}{t}{t}ReturnVal = CCur(TPShare / (GetFloat(USF4972Spouse.Box9aPerc) / 100#)){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = TPShare{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Desc_Calculation(){n}{t}ReturnVal = GetString(USF4972Spouse.Common){n}End Sub
Sub Estate_Calculation(){n}{t}Dim CapGainEstate As Currency{n}{t}{n}{t}If GetBool(USF4972Spouse.ChooseCapGain) = True Then{n}{t}{t}CapGainEstate = CDollar(GetCurrency(USF4972Spouse.EstateTax) * GetFloat(USF4972Spouse.DBWC)){n}{t}Else{n}{t}{t}CapGainEstate = 0{n}{t}End If{n}{t}{n}{t}If GetBool(USF4972Spouse.UseForm) = True And GetBool(USF4972Spouse.Choose10Year) = True Then{n}{t}{t}If GetBool(USF4972Spouse.MRD) = True And GetFloat(USF4972Spouse.Box9aPerc) <> 0 Then{n}{t}{t}{t}ReturnVal = CCur((GetCurrency(USF4972Spouse.EstateTax) - CapGainEstate) / (GetFloat(USF4972Spouse.Box9aPerc) / 100#)){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = GetCurrency(USF4972Spouse.EstateTax) - CapGainEstate{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Exist_Calculation(){n}{t}ReturnVal = 1{n}End Sub
Sub Ln13_Calculation(){n}{t}If GetCurrency(USF4972Spouse.AdjTotTaxable) > 69999@ Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = MinValue(10000@, CDollar(GetCurrency(USF4972Spouse.AdjTotTaxable) * 0.5)){n}{t}End If{n}End Sub
Sub Ln14_Calculation(){n}{t}If GetCurrency(USF4972Spouse.AdjTotTaxable) > 69999@ Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(USF4972Spouse.AdjTotTaxable) - 20000@){n}{t}End If{n}End Sub
Sub Ln15_Calculation(){n}{t}ReturnVal = CDollar(GetCurrency(USF4972Spouse.Ln14) * 0.2){n}End Sub
Sub Ln17_Calculation(){n}{t}ReturnVal = GetCurrency(USF4972Spouse.AdjTotTaxable) - GetCurrency(USF4972Spouse.MinDisAllow){n}End Sub
Sub Ln19_Calculation(){n}{t}If GetBool(USF4972Spouse.UseForm) = True And GetBool(USF4972Spouse.Choose10Year) = True Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(USF4972Spouse.Ln17) - GetCurrency(USF4972Spouse.Estate)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Ln20_Calculation(){n}{t}If GetBool(USF4972Spouse.UseForm) = True And GetBool(USF4972Spouse.Choose10Year) = True Then{n}{t}{t}If GetCurrency(USF4972Spouse.ActValue) > 0 Then{n}{t}{t}{t}If GetCurrency(USF4972Spouse.AdjTotTaxable) = 0 Then{n}{t}{t}{t}{t}ReturnVal = 0{n}{t}{t}{t}Else{n}{t}{t}{t}{t}ReturnVal = GetFloat(USF4972Spouse.ActValue) / GetFloat(USF4972Spouse.AdjTotTaxable){n}{t}{t}{t}End If{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = 0{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Ln21_Calculation(){n}{t}ReturnVal = CDollar(GetCurrency(USF4972Spouse.MinDisAllow) * GetFloat(USF4972Spouse.Ln20)){n}End Sub
Sub Ln22_Calculation(){n}{t}If GetBool(USF4972Spouse.UseForm) = True And GetBool(USF4972Spouse.Choose10Year) = True Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(USF4972Spouse.ActValue) - GetCurrency(USF4972Spouse.Ln21)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Ln23_Calculation(){n}{t}ReturnVal = CDollar(GetCurrency(USF4972Spouse.Ln19) * 0.1){n}End Sub
Sub Ln26_Calculation(){n}{t}ReturnVal = CDollar(GetCurrency(USF4972Spouse.Ln22) * 0.1){n}End Sub
Sub MinDisAllow_Calculation(){n}{t}ReturnVal = GetCurrency(USF4972Spouse.Ln13) - GetCurrency(USF4972Spouse.Ln15){n}End Sub
Sub MobDisQual_Calculation(){n}{t}If GetBool(USF4972Spouse.Print) = True Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub MRDText_Calculation(){n}{t}If GetNumber(USF4972Spouse.Print) = 1 And GetBool(USF4972Spouse.Choose10Year) = True And GetBool(USF4972Spouse.MRD) = True Then{n}{t}{t}ReturnVal = "MRD"{n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub Names_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.SPCombName){n}End Sub
Sub NUAA_Calculation(){n}{t}Dim CapGain As Currency{n}{t}Dim count As Integer{n}{t}{n}{t}count = 1{n}{t}CapGain = 0{n}{t}{n}{t}Do While count <= GetAllCopies(USD1099R){n}{t}{t}If GetBool(USD1099R.Qual4972, count) = True And GetBool(USD1099R.Spouse, count) = True Then{n}{t}{t}{t}CapGain = CapGain + Round(GetCurrency(USD1099R.CapGain, count)){n}{t}{t}Else{n}{t}{t}{t}CapGain = CapGain{n}{t}{t}End If{n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = CapGain{n}End Sub
Sub NUAAmt_Calculation(){n}{t}If GetNumber(USF4972Spouse.Print) = 1 And GetBool(USF4972Spouse.NUA) = True And GetBool(USF4972Spouse.ChooseCapGain) = True And GetCurrency(USF4972Spouse.NUAD) > 0 Then{n}{t}{t}ReturnVal = GetCurrency(USF4972Spouse.NUAE){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub NUAAmt2_Calculation(){n}{t}If GetNumber(USF4972Spouse.Print) = 1 And GetBool(USF4972Spouse.NUA) = True And GetBool(USF4972Spouse.ChooseCapGain) = False And GetCurrency(USF4972Spouse.NUAD) > 0 Then{n}{t}{t}ReturnVal = GetCurrency(USF4972Spouse.NUAD){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub NUAB_Calculation(){n}{t}Dim Taxable As Currency{n}{t}Dim count As Integer{n}{t}{n}{t}count = 1{n}{t}Taxable = 0{n}{t}{n}{t}Do While count <= GetAllCopies(USD1099R){n}{t}{t}If GetBool(USD1099R.Qual4972, count) = True And GetBool(USD1099R.Spouse, count) = True Then{n}{t}{t}{t}Taxable = Taxable + Round(GetCurrency(USD1099R.LumpSum, count)){n}{t}{t}Else{n}{t}{t}{t}Taxable = Taxable{n}{t}{t}End If{n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = Taxable{n}End Sub
Sub NUAC_Calculation(){n}{t}If GetCurrency(USF4972Spouse.NUAB) = 0 Then{n}{t}{t}ReturnVal = 0{n}{t}Else{n}{t}{t}ReturnVal = GetFloat(USF4972Spouse.NUAA) / GetFloat(USF4972Spouse.NUAB){n}{t}End If{n}End Sub
Sub NUAD_Calculation(){n}{t}Dim NUA As Currency{n}{t}Dim count As Integer{n}{t}{n}{t}count = 1{n}{t}NUA = 0{n}{t}{n}{t}Do While count <= GetAllCopies(USD1099R){n}{t}{t}If GetBool(USD1099R.Qual4972, count) = True And GetBool(USD1099R.Spouse, count) = True Then{n}{t}{t}{t}NUA = NUA + Round(GetCurrency(USD1099R.UnRealApp, count)){n}{t}{t}Else{n}{t}{t}{t}NUA = NUA{n}{t}{t}End If{n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = NUA{n}End Sub
Sub NUAE_Calculation(){n}'pulls from each R instead of computing the amount in total{n}{t}Dim NUA As Currency{n}{t}Dim count As Integer{n}{t}{n}{t}count = 1{n}{t}NUA = 0{n}{t}{n}{t}Do While count <= GetAllCopies(USD1099R){n}{t}{t}If GetBool(USD1099R.Qual4972, count) = True And GetBool(USD1099R.Spouse, count) = True Then{n}{t}{t}{t}NUA = NUA + Round(GetCurrency(USD1099R.F4972NUA, count)){n}{t}{t}Else{n}{t}{t}{t}NUA = NUA{n}{t}{t}End If{n}{t}{t}count = count + 1{n}{t}Loop{n}{t}{n}{t}ReturnVal = NUA{n}End Sub
Sub NUAF_Calculation(){n}{t}ReturnVal = GetCurrency(USF4972Spouse.NUAD) - GetCurrency(USF4972Spouse.NUAE){n}End Sub
Sub NUAG_Calculation(){n}{t}If GetBool(USF4972Spouse.NUA) = True Then{n}{t}{t}ReturnVal = GetCurrency(USF4972Spouse.NUAA) + GetCurrency(USF4972Spouse.NUAE){n}{t}Else{n}{t}{t}ReturnVal = GetCurrency(USF4972Spouse.NUAA){n}{t}End If{n}End Sub
Sub NUALn6_Calculation(){n}{t}If GetString(USF4972Spouse.NUAText) <> "" Then{n}{t}{t}ReturnVal = GetString(USF4972Spouse.NUAText) & " " & GetString(USF4972Spouse.NUAAmt){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub NUALn8_Calculation(){n}{t}If GetString(USF4972Spouse.NUAText2) <> "" Then{n}{t}{t}ReturnVal = GetString(USF4972Spouse.NUAText2) & " " & GetString(USF4972Spouse.NUAAmt2){n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub NUAText_Calculation(){n}{t}If GetNumber(USF4972Spouse.Print) = 1 And GetBool(USF4972Spouse.NUA) = True And GetBool(USF4972Spouse.ChooseCapGain) = True And GetCurrency(USF4972Spouse.NUAD) > 0 Then{n}{t}{t}ReturnVal = "NUA"{n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub NUAText2_Calculation(){n}{t}If GetNumber(USF4972Spouse.Print) = 1 And GetBool(USF4972Spouse.NUA) = True And GetBool(USF4972Spouse.ChooseCapGain) = False And GetCurrency(USF4972Spouse.NUAD) > 0 Then{n}{t}{t}ReturnVal = "NUA"{n}{t}Else{n}{t}{t}ReturnVal = ""{n}{t}End If{n}End Sub
Sub OrdInc_Calculation(){n}{t}Dim OrdInc As Currency{n}{t}Dim Taxable As Currency{n}{t}Dim CapGain As Currency{n}{t}{n}{t}Taxable = GetCurrency(USF4972Spouse.NUAB){n}{t}CapGain = GetCurrency(USF4972Spouse.NUAA){n}{t}{n}{t}If GetBool(USF4972Spouse.NUA) = True And GetBool(USF4972Spouse.CapGain) = True Then{n}{t}{t}OrdInc = MaxValue(0, Taxable - CapGain) + GetCurrency(USF4972Spouse.NUAF){n}{t}ElseIf GetBool(USF4972Spouse.NUA) = True And GetBool(USF4972Spouse.CapGain) = False Then{n}{t}{t}OrdInc = Taxable + GetCurrency(USF4972Spouse.NUAD){n}{t}ElseIf GetBool(USF4972Spouse.NUA) = False And GetBool(USF4972Spouse.CapGain) = True Then{n}{t}{t}OrdInc = MaxValue(0, Taxable - CapGain){n}{t}Else{n}{t}{t}OrdInc = Taxable{n}{t}End If{n}{t}{n}{t}If GetBool(USF4972Spouse.UseForm) = True And GetBool(USF4972Spouse.Choose10Year) = True Then{n}{t}{t}If GetBool(USF4972Spouse.MRD) = True Then{n}{t}{t}{t}If GetFloat(USF4972Spouse.Box9aPerc) <> 0 Then{n}{t}{t}{t}{t}ReturnVal = CCur(OrdInc / (GetFloat(USF4972Spouse.Box9aPerc) / 100#)){n}{t}{t}{t}Else{n}{t}{t}{t}{t}ReturnVal = OrdInc{n}{t}{t}{t}End If{n}{t}{t}Else{n}{t}{t}{t}ReturnVal = OrdInc{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Print_Calculation(){n}{t}If GetCurrency(USF4972Spouse.Tax) > 0 And FS() = 2 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub SSN_Calculation(){n}{t}ReturnVal = GetString(USWBasicInfo.SpouseSSN){n}End Sub
Sub StopR_Calculation(){n}'to stop the calculation of pensions on 1099-R{n}{t}If GetBool(USF4972Spouse.UseForm) = True And GetBool(USF4972Spouse.Choose10Year) = True Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub Tax_Calculation(){n}{t}ReturnVal = GetCurrency(USF4972Spouse.CapGainTax) + GetCurrency(USF4972Spouse.Tax1MTax2){n}End Sub
Sub Tax1_Calculation(){n}{t}ReturnVal = LumpSumTax(GetCurrency(USF4972Spouse.Ln23)){n}End Sub
Sub Tax1By10_Calculation(){n}{t}ReturnVal = CDollar(GetCurrency(USF4972Spouse.Tax1) * 10#){n}End Sub
Sub Tax1MTax2_Calculation(){n}{t}Dim Line29 As Currency{n}{t}{n}{t}Line29 = MaxValue(0, GetCurrency(USF4972Spouse.Tax1By10) - GetCurrency(USF4972Spouse.Tax2By10)){n}{t}{n}{t}If GetBool(USF4972Spouse.MRD) = True And GetFloat(USF4972Spouse.Box9aPerc) <> 0 Then{n}{t}{t}ReturnVal = CDollar(Line29 * (GetFloat(USF4972Spouse.Box9aPerc) / 100#)){n}{t}Else{n}{t}{t}ReturnVal = Line29{n}{t}End If{n}End Sub
Sub Tax2_Calculation(){n}{t}ReturnVal = LumpSumTax(GetCurrency(USF4972Spouse.Ln26)){n}End Sub
Sub Tax2By10_Calculation(){n}{t}ReturnVal = CDollar(GetCurrency(USF4972Spouse.Tax2) * 10#){n}End Sub
Sub TotTaxable_Calculation(){n}{t}If GetBool(USF4972Spouse.UseForm) = True Then{n}{t}{t}ReturnVal = MaxValue(0, GetCurrency(USF4972Spouse.OrdInc) - GetCurrency(USF4972Spouse.Death)){n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPAddback_Calculation(){n}{t}ReturnVal = MaxValue(0, GetCurrency(USF4972Spouse.TPCapGain) + GetCurrency(USF4972Spouse.TPTaxAmt) - GetCurrency(USF4972Spouse.TPEstate)){n}End Sub
Sub TPAddbackNoEx_Calculation(){n}{t}ReturnVal = GetCurrency(USF4972Spouse.TPCapGainNoEx) + GetCurrency(USF4972Spouse.TPOrdInc){n}End Sub
Sub TPCapGain_Calculation(){n}{t}ReturnVal = GetCurrency(USF4972Spouse.CapGain){n}End Sub
Sub TPCapGainNoEx_Calculation(){n}{t}Dim Estate As Currency{n}{n}{t}Estate = CDollar(GetCurrency(USF4972Spouse.EstateTax) * GetFloat(USF4972Spouse.DBWC)){n}{t}{n}{t}If GetBool(USF4972Spouse.ChooseCapGain) = True And GetBool(USF4972Spouse.UseForm) = True Then{n}{t}{t}ReturnVal = GetCurrency(USF4972Spouse.CapGain) + GetCurrency(USF4972Spouse.DBWE) + Estate{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPDBE_Calculation(){n}{t}Dim CapGainDBE As Currency{n}{t}{n}{t}If GetBool(USF4972Spouse.ChooseCapGain) = True Then{n}{t}{t}CapGainDBE = GetCurrency(USF4972Spouse.DBWE){n}{t}Else{n}{t}{t}CapGainDBE = 0{n}{t}End If{n}{t}{n}{t}If GetBool(USF4972Spouse.UseForm) = True And GetBool(USF4972Spouse.Choose10Year) = True Then{n}{t}{t}ReturnVal = GetCurrency(USF4972Spouse.DeathExcl) - CapGainDBE{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPEstate_Calculation(){n}'to reduce line 10{n}{t}Dim CapGainEstate As Currency{n}{t}{n}{t}If GetBool(USF4972Spouse.ChooseCapGain) = True Then{n}{t}{t}CapGainEstate = CDollar(GetCurrency(USF4972Spouse.EstateTax) * GetFloat(USF4972Spouse.DBWC)){n}{t}Else{n}{t}{t}CapGainEstate = 0{n}{t}End If{n}{t}{n}{t}If GetBool(USF4972Spouse.UseForm) = True And GetBool(USF4972Spouse.Choose10Year) = True Then{n}{t}{t}ReturnVal = GetCurrency(USF4972Spouse.EstateTax) - CapGainEstate{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPOrdInc_Calculation(){n}{t}Dim Taxable As Currency{n}{t}Dim CapGain As Currency{n}{t}{n}{t}Taxable = GetCurrency(USF4972Spouse.NUAB){n}{t}CapGain = GetCurrency(USF4972Spouse.NUAA){n}{t}{n}{t}If GetBool(USF4972Spouse.UseForm) = True And GetBool(USF4972Spouse.Choose10Year) = True Then{n}{t}{t}If GetBool(USF4972Spouse.NUA) = True And GetBool(USF4972Spouse.CapGain) = True Then{n}{t}{t}{t}ReturnVal = MaxValue(0, Taxable - CapGain) + GetCurrency(USF4972Spouse.NUAF){n}{t}{t}ElseIf GetBool(USF4972Spouse.NUA) = True And GetBool(USF4972Spouse.CapGain) = False Then{n}{t}{t}{t}ReturnVal = Taxable + GetCurrency(USF4972Spouse.NUAD){n}{t}{t}ElseIf GetBool(USF4972Spouse.NUA) = False And GetBool(USF4972Spouse.CapGain) = True Then{n}{t}{t}{t}ReturnVal = MaxValue(0, Taxable - CapGain){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = Taxable{n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub TPTaxAmt_Calculation(){n}{t}If GetBool(USF4972Spouse.UseForm) = True And GetBool(USF4972Spouse.Choose10Year) = True Then{n}{t}{t}If GetBool(USF4972Spouse.MRD) = True And GetFloat(USF4972Spouse.Box9aPerc) <> 0 Then{n}{t}{t}{t}ReturnVal = CCur(GetCurrency(USF4972Spouse.TotTaxable) * (GetFloat(USF4972Spouse.Box9aPerc) / 100#)){n}{t}{t}Else{n}{t}{t}{t}ReturnVal = GetCurrency(USF4972Spouse.TotTaxable){n}{t}{t}End If{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
Sub UseForm_Calculation(){n}{t}Dim Ln1 As Long{n}{t}Dim Ln2 As Long{n}{t}Dim Ln3and4 As Long{n}{t}Dim Ln5a As Long{n}{t}Dim Ln5b As Long{n}{t}{n}{t}If GetBool(USF4972Spouse.Ln1Yes) = True Then{n}{t}{t}Ln1 = 0{n}{t}Else{n}{t}{t}Ln1 = 1{n}{t}End If{n}{t}{n}{t}If GetBool(USF4972Spouse.Ln2No) = True Then{n}{t}{t}Ln2 = 0{n}{t}Else{n}{t}{t}Ln2 = 1{n}{t}End If{n}{t}{n}{t}If GetBool(USF4972Spouse.Ln3Yes) = True And GetBool(USF4972Spouse.Ln4Yes) = True Then{n}{t}{t}Ln3and4 = 0{n}{t}ElseIf GetBool(USF4972Spouse.Ln3Yes) = True And GetBool(USF4972Spouse.Ln4No) = True Then{n}{t}{t}Ln3and4 = 0{n}{t}ElseIf GetBool(USF4972Spouse.Ln3No) = True And GetBool(USF4972Spouse.Ln4Yes) = True Then{n}{t}{t}Ln3and4 = 0{n}{t}Else{n}{t}{t}Ln3and4 = 1{n}{t}End If{n}{t}{n}{t}If GetBool(USF4972Spouse.Ln5aNo) = True Then{n}{t}{t}Ln5a = 0{n}{t}Else{n}{t}{t}Ln5a = 1{n}{t}End If{n}{t}{n}{t}If GetBool(USF4972Spouse.Ln5bYes) = True Then{n}{t}{t}Ln5b = 1{n}{t}Else{n}{t}{t}Ln5b = 0{n}{t}End If{n}'condition above reversed since it applies only if rec'd as beneficiary{n}{t}{n}{t}If Ln1 + Ln2 + Ln3and4 + Ln5a + Ln5b = 0 And FS() = 2 Then{n}{t}{t}ReturnVal = 1{n}{t}Else{n}{t}{t}ReturnVal = 0{n}{t}End If{n}End Sub
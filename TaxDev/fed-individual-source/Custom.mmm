
Private Sub SetPickLists()
    Call SetListItems("AssPrograms", "IRS-PREPARED", "IRS-REVIEWED", "IRS-PREPARED")
    Call SetListItems("CalcYears", "Year", "2021", "2022", "2023")
    Call SetListItems("LumpSumYears", "Earlier Year", "2020", "2019", "2018", "2017", "2016", "2015", "2014", "2013", "2012", "2011", "2010", "2009", "2008", "2007", "2006", "2005", "2004", "2003", "2002", "2001", "2000", "1999", "1998", "1997", "1996", "1995", "1994")
    Call SetListItems("LEYearPurchased", "Year Purchased", "2021", "2020", "2019", "2018", "2017", "2016", "2015", "2014", "2013", "2012", "2011", "2010", "2009", "2008", "2007", "2006", "2005", "2004", "2003", "2002", "2001", "2000", "Before 2000")
    Call SetListItems("DepCitizenship", "Dependent Citizenship", "U.S. citizen, U.S. national, or U.S. resident alien|U.S. citizen, U.S. national, or U.S. resident alien", "Resident of Canada or Mexico|Resident of Canada or Mexico", "Other non-citizen or nonresident alien|Other non-citizen or nonresident alien")
    Call SetListItems("FEIRelList", "Relationship To You", "Son", "Daughter", "Child", "Spouse", "Grandchild", "Fosterchild", "Grandparent", "Parent", "Brother", "Sister", "Aunt", "Uncle", "Nephew", "Niece", "Other", "None")
    Call SetListItems("OnLineStates", "States", "Alabama|AL", "Arizona|AZ", "Arkansas|AR", "California|CA", "Colorado|CO", "Connecticut|CT", "Delaware|DE", "District of Columbia|DC", "Georgia|GA", "Hawaii|HI", "Idaho|ID", "Illinois|IL", "Indiana|IN", "Iowa|IA", "Kansas|KS", "Kentucky|KY", "Louisiana|LA", "Maine|ME", "Maryland|MD", "Massachusetts|MA", "Michigan|MI", "Minnesota|MN", "Mississippi|MS", "Missouri|MO", "Montana|MT", "Nebraska|NE", "New Hampshire|NH", "New Jersey|NJ", "New Mexico|NM", "New York|NY", "North Carolina|NC", "North Dakota|ND", "Ohio|OH", "Oklahoma|OK", "Oregon|OR", "Pennsylvania|PA", "Rhode Island|RI", "South Carolina|SC", "Utah|UT", "Vermont|VT", "Virginia|VA", "West Virginia|WV", "Wisconsin|WI")
    Call SetListItems("FiftyState", "States", "Alabama|AL", "Alaska|AK", "Arizona|AZ", "Arkansas|AR", "California|CA", "Colorado|CO", "Connecticut|CT", "Delaware|DE", "District of Columbia|DC", "Florida|FL", "Georgia|GA", "Hawaii|HI", "Idaho|ID", "Illinois|IL", "Indiana|IN", "Iowa|IA", "Kansas|KS", "Kentucky|KY", "Louisiana|LA", "Maine|ME", "Maryland|MD", "Massachusetts|MA", "Michigan|MI", "Minnesota|MN", "Mississippi|MS", "Missouri|MO", "Montana|MT", "Nebraska|NE", "Nevada|NV", "New Hampshire|NH", "New Jersey|NJ", "New Mexico|NM", "New York|NY", "North Carolina|NC", "North Dakota|ND", "Ohio|OH", "Oklahoma|OK", "Oregon|OR", "Pennsylvania|PA", "Rhode Island|RI", "South Carolina|SC", "South Dakota|SD", "Tennessee|TN", "Texas|TX", "Utah|UT", "Vermont|VT", "Virginia|VA", "Washington|WA", "West Virginia|WV", "Wisconsin|WI", "Wyoming|WY", "None| ")
    Call SetListItems("CommPropState", "States", "Arizona|AZ", "California|CA", "Idaho|ID", "Louisiana|LA", "Nevada|NV", "New Mexico|NM", "Texas|TX", "Washington|WA", "Wisconsin|WI", "None| ")
    Call SetListItems("FuelUse1c", "Type of Fuel Use - 1c", "4-Commercial fishing boat|04", "5-Intercity or local bus|05", "7-School bus|07", "11-Exclusive use by qualified blood collector organization|11", "13-Exclusive use by a nonprofit educational organization|13", "14-Exclusive use by a state, a state political subdivision or DC|14", "15-In an aircraft or vehicle owned by an aircraft museum|15")
    Call SetListItems("FuelUse2b", "Type of Fuel Use - 2b", "1-Farming purposes|01", "2-Off-highway business|02", "9-In Foreign Trade|09", "10-Air ambulance|10", "11-Exclusive use by qualified blood collector organization|11", "13-Exclusive use by a nonprofit educational organization|13", "14-Exclusive use by a state, a state political subdivision or DC|14", "15-In an aircraft or vehicle owned by an aircraft museum|15")
    Call SetListItems("FuelUse3a", "Type of Fuel Use - 3a", "2-Off-highway business|02", "6-Qualified local bus|06", "7-School bus|07", "8-Not in train or highway vehicle|08", "11-Exclusive use by qualified blood collector organization|11", "13-Exclusive use by a nonprofit educational organization|13", "14-Exclusive use by a state, a state political subdivision or DC|14", "15-In an aircraft or vehicle owned by an aircraft museum|15")
    Call SetListItems("FuelUse4a", "Type of Fuel Use - 4a", "2-Off-highway business|02", "6-For diesel fuel or kerosene in a qualified local bus|06", "7-School bus|07", "8-Not in train or highway vehicle|08", "11-Exclusive use by qualified blood collector organization|11", "13-Exclusive use by a nonprofit educational organization|13", "14-Exclusive use by a state, a state political subdivision or DC|14", "15-In an aircraft or vehicle owned by an aircraft museum|15")
    Call SetListItems("FuelUse4e", "Type of Fuel Use - 4e", "2-Off-highway business|02")
    Call SetListItems("FuelUse4f", "Type of Fuel Use - 4f", "2-Off-highway business|02")
    Call SetListItems("FuelUse5c", "Type of Fuel Use - 5c", "1-Farming purposes|01", "9-In Foreign Trade|09", "10-Certain helicopter and fixed-wing air ambulance uses|10", "11-Aviation grade kerosene not used in an aircraft|11", "13-Exclusive use by a nonprofit educational organization|13", "15-In an aircraft or vehicle owned by an aircraft museum|15", "16-In Military Aircraft|16")
    Call SetListItems("FuelUse5d", "Type of Fuel Use - 5d", "1-Farming purposes|01", "9-In Foreign Trade|09", "10-Certain helicopter and fixed-wing air ambulance uses|10", "11-Aviation grade kerosene not used in an aircraft|11", "13-Exclusive use by a nonprofit educational organization|13", "15-In an aircraft or vehicle owned by an aircraft museum|15", "16-In Military Aircraft|16")
    Call SetListItems("FuelUse8d", "Type of Fuel Use - 8d", "1-Farming purposes|01", "9-In Foreign Trade|09", "10-Certain helicopter and fixed-wing air ambulance uses|10", "11-Aviation grade kerosene not used in an aircraft|11", "13-Exclusive use by a nonprofit educational organization|13", "14-Exclusive use by a state, a state political subdivision or DC|14", "15-In an aircraft or vehicle owned by an aircraft museum|15", "16-In Military Aircraft|16")
    Call SetListItems("FuelUse8e", "Type of Fuel Use - 8e", "1-Farming purposes|01", "9-In Foreign Trade|09", "10-Certain helicopter and fixed-wing air ambulance uses|10", "11-Aviation grade kerosene not used in an aircraft|11", "13-Exclusive use by a nonprofit educational organization|13", "14-Exclusive use by a state, a state political subdivision or DC|14", "15-In an aircraft or vehicle owned by an aircraft museum|15", "16-In Military Aircraft|16")
    Call SetListItems("FuelUse11a", "Type of Fuel Use - 11a", "1-Farming purposes|01", "2-Off-highway business|02", "4-Commercial fishing boat|04", "5-In certain intercity and local buses|05", "6-Qualified local bus|06", "7-School bus|07", "11-Exclusive use by qualified blood collector organization|11", "13-Exclusive use by a nonprofit educational organization|13", "14-Exclusive use by a state, a state political subdivision or DC|14", "15-In an aircraft or vehicle owned by an aircraft museum|15")
    Call SetListItems("FuelUse11a", "Type of Fuel Use - 11a", "1-Farming purposes|01", "2-Off-highway business|02", "4-Commercial fishing boat|04", "5-In certain intercity and local buses|05", "6-Qualified local bus|06", "7-School bus|07", "11-Exclusive use by qualified blood collector organization|11", "13-Exclusive use by a nonprofit educational organization|13", "14-Exclusive use by a state, a state political subdivision or DC|14", "15-In an aircraft or vehicle owned by an aircraft museum|15")
    Call SetListItems("FuelUse11b", "Type of Fuel Use - 11b", "1-Farming purposes|01", "2-Off-highway business|02", "4-Commercial fishing boat|04", "5-In certain intercity and local buses|05", "6-Qualified local bus|06", "7-School bus|07", "11-Exclusive use by qualified blood collector organization|11", "13-Exclusive use by a nonprofit educational organization|13", "14-Exclusive use by a state, a state political subdivision or DC|14", "15-In an aircraft or vehicle owned by an aircraft museum|15")
    Call SetListItems("FuelUse11c", "Type of Fuel Use - 11c", "1-Farming purposes|01", "2-Off-highway business|02", "4-Commercial fishing boat|04", "5-In certain intercity and local buses|05", "6-Qualified local bus|06", "7-School bus|07", "11-Exclusive use by qualified blood collector organization|11", "13-Exclusive use by a nonprofit educational organization|13", "14-Exclusive use by a state, a state political subdivision or DC|14", "15-In an aircraft or vehicle owned by an aircraft museum|15")
    Call SetListItems("FuelUse11d", "Type of Fuel Use - 11d", "1-Farming purposes|01", "2-Off-highway business|02", "4-Commercial fishing boat|04", "5-In certain intercity and local buses|05", "6-Qualified local bus|06", "7-School bus|07", "11-Exclusive use by qualified blood collector organization|11", "13-Exclusive use by a nonprofit educational organization|13", "14-Exclusive use by a state, a state political subdivision or DC|14", "15-In an aircraft or vehicle owned by an aircraft museum|15")
    Call SetListItems("FuelUse11e", "Type of Fuel Use - 11e", "1-Farming purposes|01", "2-Off-highway business|02", "4-Commercial fishing boat|04", "5-In certain intercity and local buses|05", "6-Qualified local bus|06", "7-School bus|07", "11-Exclusive use by qualified blood collector organization|11", "13-Exclusive use by a nonprofit educational organization|13", "14-Exclusive use by a state, a state political subdivision or DC|14", "15-In an aircraft or vehicle owned by an aircraft museum|15")
    Call SetListItems("FuelUse11f", "Type of Fuel Use - 11f", "1-Farming purposes|01", "2-Off-highway business|02", "4-Commercial fishing boat|04", "5-In certain intercity and local buses|05", "6-Qualified local bus|06", "7-School bus|07", "11-Exclusive use by qualified blood collector organization|11", "13-Exclusive use by a nonprofit educational organization|13", "14-Exclusive use by a state, a state political subdivision or DC|14", "15-In an aircraft or vehicle owned by an aircraft museum|15")
    Call SetListItems("FuelUse11g", "Type of Fuel Use - 11g", "1-Farming purposes|01", "2-Off-highway business|02", "4-Commercial fishing boat|04", "5-In certain intercity and local buses|05", "6-Qualified local bus|06", "7-School bus|07", "11-Exclusive use by qualified blood collector organization|11", "13-Exclusive use by a nonprofit educational organization|13", "14-Exclusive use by a state, a state political subdivision or DC|14", "15-In an aircraft or vehicle owned by an aircraft museum|15")
    Call SetListItems("FuelUse11h", "Type of Fuel Use - 11h", "1-Farming purposes|01", "2-Off-highway business|02", "4-Commercial fishing boat|04", "5-In certain intercity and local buses|05", "6-Qualified local bus|06", "7-School bus|07", "11-Exclusive use by qualified blood collector organization|11", "13-Exclusive use by a nonprofit educational organization|13", "14-Exclusive use by a state, a state political subdivision or DC|14", "15-In an aircraft or vehicle owned by an aircraft museum|15")
    Call SetListItems("FuelUse14a", "Type of Fuel Use - 14a", "1-Farming purposes|01", "2-Off-highway business|02", "5-In certain intercity and local buses|05", "6-Qualified local bus|06", "7-School bus|07", "8-Not in train or highway vehicle|08", "11-Exclusive use by qualified blood collector organization|11", "13-Exclusive use by a nonprofit educational organization|13", "14-Exclusive use by a state, a state political subdivision or DC|14", "15-In an aircraft or vehicle owned by an aircraft museum|15")
    Call SetListItems("DeprLife", "Recovery Period", "3", "4", "5", "6", "7", "9", "10", "12", "15", "20", "25", "27.5", "30", "31.5", "39", "40")
    Call SetListItems("DeprMethod", "Depreciation Method", "MACRS 200% Declining Balance|MACRS 200DB", "MACRS 150% Declining Balance|MACRS 150DB", "MACRS Straight Line|MACRS SL", "Alternative MACRS 150% Declining Balance|Alt-MACRS 150DB", "Alternative MACRS Straight Line|Alt-MACRS SL")
    Call SetListItems("DeprType", "Asset Type", "Car|Car", "Light Truck/SUV|Light Truck", "Heavy Truck|Heavy Truck", "Heavy SUV|Heavy SUV", "Over-The-Road Tractor|Over-The-Road Tractor", "Computers and Peripheral Equipment|Computers and Equipment", "Off-the-Shelf Computer Software|Off-the-Shelf Computer Software", "Equipment, Machinery, Etc.|Equipment, Machinery, Etc.", "Office Equipment|Office Equipment", "Office Furniture and Fixtures|Office Furniture and Fixtures", "Agricultural Machinery|Agricultural Machinery", "Land Improvements|Land Improvements", "Land - Nondepreciable|Land - Nondepreciable", "Qualified Improvement Property|Qualified Improvement Property", "Rental Property Furniture and Fixtures|Rental Property Furniture and Fixtures", "Residential Rental Property|Residential Rental Property", "Nonresidential Real Property|Nonresidential Real Property", "Other Asset|Other Asset", "Non-listed Property|Non-listed Property", "Listed Property|Listed Property", "Other Nondepreciable Asset|Other Nondepreciable Asset")
    Call SetListItems("DeprConv", "First Year Covention", "Half-Year|HY", "Mid-Month|MM", "Mid-Quarter|MQ", "Full Month|Month")
    Call SetListItems("DeprConv3115", "First Year Covention 3115", "Half-Year|HY", "Mid-Month|MM", "Mid-Quarter|MQ", "Straight-Line|S/L")
    Call SetListItems("ACRSMethod", "ACRS And Other Depreciation", "Alternate - ACRS|Alt-ACRS", "Straight-Line|SL", "150% Declining Balance|150 DB", "200% Declining Balance|200 DB", "Nondepreciable|Nondepr.", "Fully Depreciated|Fully Dep.")
    Call SetListItems("ACRSLife", "Recovery Period", "30", "35", "45", "Rate Provided")
    Call SetListItems("ACRSConv", "ACRS And Other Conventions", "Mid-Month|MM", "Full Month|Month")
    Call SetListItems("FilingStatus", "Filing Status", "Single", "Married Filing Joint", "Married Filing Separate", "Head of Household", "Qualifying Widow(er)")
    Call SetListItems("ShortStatus", "Filing Status", "Single|Single", "Married Filing Joint|Joint", "Married Filing Separate|Separate", "Head of Household|Head Of H.", "Qualifying Widow(er)|Widow(er)")
    Call SetListItems("QCodes", "1099-Q Codes", "1-Distributions (including transfers)|1", "2-Excess Contrib Plus Earnings-Taxable in 2021|2", "3-Excess Contrib Plus Earnings-Taxable in 2020|3", "4-Disability|4", "5-Death|5", "6-Prohibited Transaction|6")
    Call SetListItems("RCodes", "1099-R Codes", "1-Early distribution - no known exception|1", "2-Early distribution - exception applies|2", "3-Disability|3", "4-Death|4", "5-Prohibited transaction|5", "6-Tax free exchange|6", "7-Normal distribution|7", "8-Excess contributions plus earnings taxable in 2021|8", "9-Cost of current life insurance|9", "A-May be eligible for 10-year averaging|A", "B-Designated Roth account distribution|B", "C-Reportable death benefits under section 6050Y|C", "D-Annuity payments from nonqualified annuities|D", "E-Distributions under EPCRS|E", "F-Charitable gift annuity|F", "G-Direct rollover|G", "H-Direct rollover of a designated Roth account to a Roth IRA|H", "J-Early distribution from Roth IRA|J", "K-Distribution of IRA without FMV|K", "L-Loan treated as distribution|L", "M-Qualified plan loan offset|M", "N-Recharacterized 2021 IRA contribution|N", "P-Excess contributions plus earnings taxable in 2020|P", "Q-Qualified Roth IRA distribution|Q", "R-Recharacterized 2020 IRA contribution|R", "S-Early SIMPLE distribution - no known exception|S", "T-Roth IRA distribution - exception applies|T", "U-Dividend distribution from an ESOP|U", "W-Long-term care insurance payments|W")
    Call SetListItems("DesignatedRothYr", "First Year Designated Roth", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021")
    Call SetListItems("SACodes", "1099-SA Codes", "1-Normal Distribution|1", "2-Excess Contributions|2", "3-Disability|3", "4-Death (Other than Code 6)|4", "5-Prohibited Transaction|5", "6-Death (Nonspouse Beneficiary)|6")
    Call SetListItems("HSAContrType", "HSA Contribution Type", "W-2 Box 12 with Code W", "Pre-Tax Payroll Deduction", "Pre-Tax Retirement Benefit", "After-Tax Contributions", "W-2 Box 12 with Code W (To Spouse HSA)")
    Call SetListItems("LocalityList", "Locality Name", "Alabama Locality|AL", "Indiana Locality|IN", "Kentucky Locality|KY", "Maryland Locality|MD", "Michigan Locality|MI", "Missouri Locality|MO", "Ohio School District|OH SD", "Ohio Locality|OH", "Oregon: Multnomah County PFA|PFA", "Oregon: Portland Metro SHS|SHS", "Pennsylvania Locality|PA", "City of New York|NYC", "City of Yonkers|YONKERS", "Other Locality|OTHER")
    Call SetListItems("RLocalityList", "Locality Name", "Alabama Locality|AL", "Indiana Locality|IN", "Kentucky Locality|KY", "Maryland Locality|MD", "Maryland Pickup Contributions|STPICKUP", "Michigan Locality|MI", "Missouri Locality|MO", "Ohio School District|OH SD", "Ohio Locality|OH", "Pennsylvania Locality|PA", "City of New York|NYC", "City of Yonkers|YONKERS", "Other Locality|OTHER")
    Call SetListItems("LocalList", "Locality Name", "Kentucky Locality|KY", "Michigan City|MI", "Missouri Locality|MO", "Ohio School District|OH SD", "Ohio Locality|OH", "Pennsylvania Locality|PA", "City of New York|NYC", "City of Yonkers|YONKERS", "New York MCTMT|MCTMT", "Other Locality|OTHER")
    Call SetListItems("MICityList", "Michigan City Name", "ALBION|ALBION", "BATTLE CREEK|BATTLE CREEK", "BENTON HARBOR|BENTON HARBOR", "BIG RAPIDS|BIG RAPIDS", "DETROIT|DETROIT", "EAST LANSING|EAST LANSING", "FLINT|FLINT", "GRAND RAPIDS|GRAND RAPIDS", "GRAYLING|GRAYLING", "HAMTRAMCK|HAMTRAMCK", "HIGHLAND PARK|HIGHLAND PARK", "IONIA|IONIA", "JACKSON|JACKSON", "LANSING|LANSING", "LAPEER|LAPEER", "MUSKEGON|MUSKEGON", "MUSKEGON HEIGHTS|MUSKEGON HEIGHTS", "PONTIAC|PONTIAC", "PORT HURON|PORT HURON", "PORTLAND|PORTLAND", "SAGINAW|SAGINAW", "SPRINGFIELD|SPRINGFIELD", "WALKER|WALKER")
    Call SetListItems("DistList", "Premature Penalty Exceptions", "01-Separation|01", "02-Periodic Payments|02", "03-Disability|03", "04-Death|04", "05-Medical|05", "06-Domestic Relations|06", "07-Unemployed Hlth Ins|07", "08-Higher Ed Exp|08", "09-First Home|09", "10-IRS Levy|10", "11-Active Duty Reserve|11", "12-Other|12")
    Call SetListItems("4797Type", "Asset Type", "Depreciable or amortizable business property (Sec. 1245)", "Depreciable real property (Sec. 1250)", "Non-depreciable real property (i.e. Land)", "Farmland with soil or water expenses (Sec. 1252)", "Oil, gas, geothermal, or mineral property (Sec. 1254)", "Cost-sharing property (Sec. 1255)", "Cattle and horses (Sec. 1245)", "Raised cattle and horses (Sec. 1245)", "Livestock other than cattle and horses (Sec. 1245)", "Raised livestock other than cattle and horses (Sec. 1245)")
    Call SetListItems("4797TypeDepr", "Asset Type", "Depreciable or amortizable business property (Sec. 1245)", "Depreciable real property (Sec. 1250)", "Non-depreciable real property (i.e. Land)", "Farmland with soil or water expenses (Sec. 1252)", "Oil, gas, geothermal, or mineral property (Sec. 1254)", "Cost-sharing property (Sec. 1255)", "Cattle and horses (Sec. 1245)", "Livestock other than cattle and horses (Sec. 1245)")
    Call SetListItems("SGRMonths", "Months Payments Received", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12")
    Call SetListItems("ReturnType", "Return Type", "FORM 1040", "FORM 1040SS", "FORM 1040-NR")
    Call SetListItems("CCExpMo", "Expiration Month", "January|01", "February|02", "March|03", "April|04", "May|05", "June|06", "July|07", "August|08", "September|09", "October|10", "November|11", "December|12")
    Call SetListItems("CCExpYr", "Expiration Year", "2019|19", "2020|20", "2021|21", "2022|22", "2023|23", "2024|24", "2025|25", "2026|26", "2027|27", "2028|28", "2029|29", "2030|30", "2031|31")
    Call SetListItems("CCType", "Credit Card Type", "VISA", "MASTERCARD", "DISCOVER", "AMERICAN EXPRESS")
    Call SetListItems("PayDays", "Payment Days", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28")
    Call SetListItems("PayPeriod", "Payment Period", "Weekly", "Biweekly", "Semimonthly", "Monthly")
    Call SetListItems("LTCAge", "LTC", "Age 40 or younger", "Age 41 to 50", "Age 51 to 60", "Age 61 to 70", "Age 71 or older")
    Call SetListItems("AmortLife", "Recovery Period", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40")
    Call SetListItems("2106Type", "Vehicle Type", "Car|Car", "Light Truck/SUV or Van|Truck or Van", "Heavy SUV|Heavy SUV", "Heavy Truck|Heavy Truck")
    Call SetListItems("AutoYearList", "Auto Year", "2010|2010", "2011|2011", "2012|2012", "2013|2013", "2014|2014", "2015|2015", "2016|2016", "2017|2017", "2018|2018", "2019|2019", "2020|2020", "2021|2021", "2022|2022")
    Call SetListItems("MissEIN", "Reason for missing EIN", "Applied For|APPLD FOR", "Foreign Entity|FOREIGNUS", "Not Applicable| ")
    Call SetListItems("ForeignCategory", "Category of Income", "Section 901(j) income|Sec 901(j)", "Certain income re-sourced by treaty|Re-sourced", "Lump-sum distributions|Lump-Sum")
    Call SetListItems("RehabBuilding", "Property Type", "Pre-1936 buildings|Pre-1936", "Certified historic structures under transition rule|CHS", "Certified historic structures not under transition rule|CHS-NT")
    Call SetListItems("RehabArea", "Property Area", "Gulf opportunity zone|GO ZONE", "Midwestern Disaster|MDIS", "Other|Other")
    Call SetListItems("EnergyList", "Energy Credit", "Geothermal energy|Geothermal", "Solar energy|Solar", "Fuel cell property before 10/4/2008|Fuel Cell (Pre)", "Fuel cell property after 10/3/2008|Fuel Cell (Post)", "Qualified microturbine property|Microturbine", "Combined heat and power system property|Heat and Power", "Qualified small wind energy property before 1/1/2009|Small Wind (Pre)", "Qualified small wind energy property after 12/31/2008|Small Wind (Post)", "Geothermal heat pump systems|Geo HeatPump", "Qualified investment credit facility property|Facility", "Wind facility property constr. in 2017|Wind 2017", "Wind facility property constr. in 2018|Wind 2018", "Wind facility property constr. in 2019|Wind 2019")
    Call SetListItems("NumSchools", "Schools", "0|0", "1|1", "2|2", "3|3", "4|4")
    Call SetListItems("Request3115", "Type", "Private Letter Ruling", "Request for Change in Accounting Method", "Request for Technical Advice")
    Call SetListItems("Method3115", "Type", "cash", "accrual", "hybrid")
    Call SetListItems("Exp1116List", "Exp", "Adjustment to income|A", "Itemized deduction|I", "Other expense|O")
    Call SetListItems("StartMonth", "Start Month", "January|01", "February|02", "March|03", "April|04", "May|05", "June|06", "July|07", "August|08", "September|09", "October|10", "November|11", "December|12")
    Call SetListItems("HealthExempt", "Health Exemption Type", "A-Coverage considered unaffordable|A", "B-Short coverage gap|B", "C-Citizens living abroad and certain noncitizens|C", "D-Healthcare sharing ministry member|D", "E-Indian tribe member|E", "F-Incarceration|F", "G-Aggregate self-only coverage considered unaffordable|G", "G-State of residency did not expand Medicaid eligibility under ACA|G", "G-General hardship|G", "H-Member of tax household born, adopted, or died|H")
    Call SetListItems("DCIDTypes", "Type", "Driver's License", "State Identification")
    Call SetListItems("DCPhoneType", "Type", "Mobile", "Home", "Other")
    Call SetListItems("NonImmigrantVisaTypeCd", "Type", "A1", "A2", "A3", "B1", "B2", "B1/B2", "C1", "C1/D", "C2", "C3", "CW1", "CW2", "D", "E1", "E2", "E2C", "E3", "E3D", "E3R", "F1", "F2", "F3", "G1", "G2", "G3", "G4", "G5", "H1B", "H1B1", "H1C", "H2A", "H2B", "H3", "H4", "I", "J1", "J2", "K1", "K2", "K3", "K4", "L1", "L2", "M1", "M2", "M3", "N8", "N9", "NATO 1", "NATO 2", "NATO 3", "NATO 4", "NATO 5", "NATO 6", "NATO 7", "O1", "O2", "O3", "P1", "P2", "P3", "P4", "Q1", "R1", "R2", "S5", "S6", "S7", "T1", "T2", "T3", "T4", "T5", "TN", "TD", "U1", "U2", "U3", "U4", "U5", "V1", "V2", "V3")
    Call SetListItems("ImmigrantVisaTypeCd", "Type", "IR1", "IR2", "IR3", "IH3", "IR4", "IH4", "IR5", "CR1", "CR2", "IW1", "IW2", "IB1", "IB2", "IB3", "VI5", "AM1", "AM2", "AM3", "SB1", "SC1", "SC2", "SI1", "SI2", "SI3", "SM1", "SM2", "SM3", "SQ1", "SQ2", "SQ3", "SU2", "SU3", "SU5", "F11", "F12", "B11", "B12", "F21", "F22", "F23", "F24", "F25", "C21", "C22", "C23", "C24", "C25", "B21", "B22", "B23", "B24", "B25", "FX1", "FX3", "CX1", "CX2", "CX3", "BX1", "BX2", "BX3", "F31", "F32", "F33", "C31", "C32", "C33", "B31", "B32", "B33", "F41", "F42", "F43", "E11", "E12", "E13", "E14", "E15", "E21", "E22", "E23", "E31", "E32", "E34", "E35", "EW3", "EW4", "EW5", "BC1", "BC2", "BC3", "SD1", "SD2", "SD3", "SE1", "SE2", "SE3", "SF1", "SF2", "SG1", "SG2", "SH1", "SH2", "SJ1", "SJ2", "SK1", "SK2", "SK3", "SK4", "SL1", "SN1", "SN2", "SN3", "SN4", "SP", "SR1", "SR2", "SR3", "C51", "C52", "C53", "T51", "T52", "T53", "R51", "R52", "R53", "I51", "I52", "I53", "DV1", "DV2", "DV3")
    Call SetListItems("ReturnTypeOI", "Return Type", "1040", "1040NR")
    Call SetListItems("IncCd1042S", "Income Code", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "50", "51", "52", "53", "54", "55")
    Call SetListItems("Chapter3Cd", "Chapter 3 Code", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "22", "23", "24", "00")
    Call SetListItems("Chapter4Cd", "Chapter 4 Code", "13", "14", "15", "16", "17", "18", "19", "20", "21", "00")
    Call SetListItems("Chapter3StCd", "Chapter 3 Status Code", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "34", "35", "36", "37")
    Call SetListItems("Chapter4StCd", "Chapter 4 Status Code", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50")
    Call SetListItems("LOBCd", "LOB Code", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11")
    Call SetListItems("Rate1042S3b", "1042S Tax Rates", "00.00", "02.00", "04.00", "04.90", "04.95", "05.00", "07.00", "08.00", "10.00", "12.00", "12.50", "14.00", "15.00", "17.50", "20.00", "21.00", "24.00", "25.00", "27.50", "28.00", "30.00", "37.00")
    Call SetListItems("Rate1042S4b", "1042S Tax Rates", "00.00", "30.00")
    Call SetListItems("RateRRB1042S", "RRB-1042S Tax Rates", ".0000", ".1500", ".3000")
    Call SetListItems("TeacherVisa", "Teacher Visa Code", "J-1|J-1", "J-2|J-2", "Q-1|Q-1", "Q-2|Q-2", "Q-3|Q-3", "None|")
    Call SetListItems("StudentVisa", "Student Visa Code", "F-1|F-1", "F-2|F-2", "J-1|J-1", "J-2|J-2", "M-1|M-1", "M-2|M-2", "Q-1|Q-1", "Q-2|Q-2", "Q-3|Q-3", "None|")
    Call SetListItems("MilitaryService", "MilitaryService", "STATIONED IN THE U.S.", "COMBAT ZONE", "DESERT STORM", "ENDURING FREEDOM", "FORMER YUGOSLAVIA", "HAITI", "IRAQI FREEDOM", "JOINT FORGE", "JOINT GUARD", "KOSOVO OPERATION", "NORTHERN FORGE", "NORTHERN WATCH", "OPERATION ALLIED FORCE", "SINAI PENINSULA-EGYPT", "UN OPERATION")
    Call SetListItems("SMSProvider", "Name of Provider", "AllTel", "Arch Paging(USA Mobility)", "AT&T", "BlueGrass", "Boost", "CellCom", "Cellular South", "Centennial Wireless", "Cincinnati Bell", "Cricket", "Dobson", "East Kentucky Network", "ECIT_Cellular1 E. Central IL", "GCI", "Illinois Valley", "Immix", "Inland Cellular", "Metro PCS", "Nex-Tech Wireless", "Nextel", "nTelos", "ReVol", "Sprint", "T-Mobile", "Unicell", "US Cellular", "Verizon Wireless", "Virgin Mobile", "West Central Wireless")
    Call SetListItems("StockClasses", "Description of Stock", "Common|COMMON", "Preferred|PREFERRED", "Treasury|TREASURY")
    Call SetListItems("SeparateCategory", "Separate Category Code", "GEN|GEN", "PAS|PAS")
    Call SetListItems("SepCatSchE", "Separate Category Code 5471 Schedule E", "GEN|GEN", "PAS|PAS", "901j|901j", "951A|951A", "FB|FB", "RBT PAS|RBT PAS", "RBT GEN|RBT GEN", "RBT FB|RBT FB", "RBT 951A|RBT 951A", "TOTAL|TOTAL")
    Call SetListItems("SepCatSchI", "Separate Category Code 5471 Schedule I", "GEN|GEN", "PAS|PAS")
    Call SetListItems("SepCatSchJ", "Separate Category Code 5471 Schedule J", "GEN|GEN", "PAS|PAS", "901j|901j", "951A|951A", "FB|FB", "RBT PAS|RBT PAS", "RBT GEN|RBT GEN", "RBT FB|RBT FB", "RBT 951A|RBT 951A", "TOTAL|TOTAL")
    Call SetListItems("SepCatSchP", "Separate Category Code 5471 Schedule P", "GEN|GEN", "PAS|PAS", "901j|901j", "951A|951A", "FB|FB", "RBT PAS|RBT PAS", "RBT GEN|RBT GEN", "RBT FB|RBT FB", "RBT 951A|RBT 951A")
    Call SetListItems("SepCatSchQ", "Separate Category Code 5471 Schedule Q", "TOTAL|TOTAL", "GEN|GEN", "PAS|PAS", "901j|901j")
    Call SetListItems("MDCountyList", "County", "ALLEGANY", "ANNE ARUNDEL", "BALTIMORE", "BALTIMORE CITY", "CALVERT", "CAROLINE", "CARROLL", "CECIL", "CHARLES", "DORCHESTER", "FREDERICK", "GARRETT", "HARFORD", "HOWARD", "KENT", "MONTGOMERY", "NONRESIDENT", "PRINCE GEORGE'S", "QUEEN ANNE'S", "ST. MARY'S", "SOMERSET", "TALBOT", "WASHINGTON", "WICOMICO", "WORCESTER", "None|")
    Call SetListItems("GradeList", "Grades", "KG|KG", "01|01", "02|02", "03|03", "04|04", "05|05", "06|06", "07|07", "08|08", "09|09", "10|10", "11|11", "12|12", "None| ")
    Call SetListItems("2555RevoYear", "Revocation Year", "FOREIGN EARNED INCOME EXCLUSION", "HOUSING EXCLUSION", "FOREIGN EARNED INCOME EXCLUSION AND HOUSING EXCLUSION", "None| ")
    Call SetListItems("ExpatGainForm", "Form List for Reporting ExPat Gain", "F4797", "F8949", "F1040 SCHD")
    Call SetListItems("965ATranCode", "Transaction Code", "INITIAL INCLUSION", "SUBSEQUENT ADJUSTMENT", "TRANSFER IN", "TRANSFER OUT", "TRIGGERING EVENT")
    Call SetListItems("FTCTaxTypes", "FTC Tax Types", "WHTD", "WHTP", "WHTB", "WHTR", "WHTI", "ECI", "OTHS", "OTHR", "OTH")
    Call SetListItems("PTEPGroup", "PTEP Group Code", "R965a", "R965b", "959c1", "R951A", "R245Ad", "965a", "965b", "951A", "245Ad", "951a1A")
    Call SetListItems("AltInfoCd", "Alternative Information Code", "01", "02", "03", "04", "05", "06", "07", "08")
    Call SetListItems("PassiveGrpCd", "Passive Group Code", "i", "ii", "iii", "iv")
    Call SetListItems("ForeignCurrCd", "Foreign Currency Code", "XUA", "AFN", "DZD", "ARS", "AMD", "AWG", "AUD", "AZN", "BSD", "BHD", "THB", "PAB", "BBD", "BYN", "BZD", "BMD", "VES", "BOB", "BRL", "BND", "BGN", "BIF", "CVE", "CAD", "KYD", "XOF", "XAF", "XPF", "CLP", "COP", "KMF", "CDF", "BAM", "NIO", "CRC", "CUP", "CZK", "GMD", "DKK", "MKD", "DJF", "STN", "DOP", "VND", "XCD", "EGP", "SVC", "ETB", "EUR", "FKP", "FJD", "HUF", "GHS", "GIP", "HTG", "PYG", "GNF", "GYD", "HKD", "UAH", "ISK", "INR", "IRR", "IQD", "JMD", "JOD", "KES", "PGK", "HRK", "KWD", "AOA", "MMK", "LAK", "GEL", "LBP", "ALL", "HNL", "SLL", "LRD", "LYD", "SZL", "LSL", "MGA", "MWK", "MYR", "MUR", "MXN", "MXV", "MDL", "MAD", "MZN", "BOV", "NGN", "ERN", "NAD", "NPR", "ANG", "ILS", "TWD", "NZD", "BTN", "KPW", "NOK", "MRU", "TOP", "PKR", "MOP", "CUC", "UYU", "PHP", "GBP", "BWP", "QAR", "GTQ", "ZAR", "OMR", "KHR", "RON", "MVR", "IDR", "RUB", "RWF", "SHP", "SAR", "XDR", "RSD", "SCR", "SGD", "PEN", "SBD", "KGS", "SOS", "TJS", "SSP", "LKR", "XSU", "SDG", "SRD", "SEK", "CHF", "SYP", "BDT", "WST", "TZS", "KZT", "TTD", "MNT", "TND", "TRY", "TMT", "AED", "UGX", "CLF", "COU", "UYW", "UYI", "USD", "USN", "UZS", "VUV", "CHE", "CHW", "KRW", "YER", "JPY", "CNY", "ZMW", "ZWL", "PLN")
    Call SetListItems("ForeignCtryCodes", "Foreign Country Code", "AF", "AX", "AL", "AG", "AQ", "AN", "AO", "AV", "AY", "AC", "AR", "AM", "AA", "AT", "AS", "AU", "AJ", "BF", "BA", "FQ", "BG", "BB", "BO", "BE", "BH", "BN", "BD", "BT", "BL", "BK", "BC", "BV", "BR", "IO", "VI", "BX", "BU", "UV", "BM", "BY", "CB", "CM", "CA", "CV", "CJ", "CT", "CD", "CI", "CH", "KT", "IP", "CK", "CO", "CN", "CF", "CG", "CW", "CR", "CS", "IV", "HR", "CU", "UC", "CY", "EZ", "DA", "DX", "DJ", "DO", "DR", "TT", "EC", "EG", "ES", "EK", "ER", "EN", "ET", "FK", "FO", "FM", "FJ", "FI", "FR", "FP", "FS", "GB", "GA", "GG", "GM", "GH", "GI", "GR", "GL", "GJ", "GQ", "GT", "GK", "GV", "PU", "GY", "HA", "HM", "VT", "HO", "HK", "HQ", "HU", "IC", "IN", "ID", "IR", "IZ", "EI", "IS", "IT", "JM", "JN", "JA", "DQ", "JE", "JQ", "JO", "KZ", "KE", "KQ", "KR", "KN", "KS", "KV", "KU", "KG", "LA", "LG", "LE", "LT", "LI", "LY", "LS", "LH", "LU", "MC", "MK", "MA", "MI", "MY", "MV", "ML", "MT", "IM", "RM", "MR", "MP", "MX", "MQ", "MD", "MN", "MG", "MJ", "MH", "MO", "MZ", "WA", "NR", "BQ", "NP", "NL", "NC", "NZ", "NU", "NG", "NI", "NE", "NF", "CQ", "NO", "MU", "OC", "PK", "PS", "LQ", "PM", "PP", "PF", "PA", "PE", "RP", "PC", "PL", "PO", "RQ", "QA", "RO", "RS", "RW", "TB", "RN", "WS", "SM", "TP", "SA", "SG", "RI", "SE", "SL", "SN", "NN", "LO", "SI", "BP", "SO", "SF", "SX", "OD", "SP", "PG", "CE", "SH", "SC", "ST", "SB", "VC", "SU", "NS", "SV", "WZ", "SW", "SZ", "SY", "TW", "TI", "TZ", "TH", "TO", "TL", "TN", "TD", "TS", "TU", "TX", "TK", "TV", "UG", "UP", "US", "AE", "UK", "UY", "UZ", "NH", "VE", "VM", "VQ", "WQ", "WF", "WI", "YM", "ZA", "ZI")
End Sub

'General (udpated for 2021)
Public Const YearConstant As Integer = YearNumber
Public Const PriorYearConstant As Integer = (YearNumber - 1)
Public Const StdDedSingle As Currency = 12550@
Public Const StdDedMFJ As Currency = 25100@
Public Const StdDedMFS As Currency = 12550@
Public Const StdDedHOH As Currency = 18800@
Public Const StdDedAdd As Currency = 1350@
Public Const StdDedAddSingle As Currency = 1700@
Public Const StdDedDOPR As Currency = 1100@
Public Const StdDedDOPRAdd As Currency = 350@
Public Const StdDedDOPRTest As Currency = 750@

'Estimated Payment Due Dates (updated for 2021)
Public Const PYQ1EstDueDate As Date = #4/15/2021#
Public Const PYQ2EstDueDate As Date = #6/15/2021#
Public Const PYQ3EstDueDate As Date = #9/15/2021#
Public Const PYQ4EstDueDate As Date = #1/18/2022#
'For PYLateEstDueDate, check for emancipation day (4/16) falling on a Sat/Sun/Mon (see notice 2011-17 https://www.irs.gov/pub/irs-drop/n-11-17.pdf)
Public Const PYLateEstDueDate As Date = #4/18/2022#

'IRA (updated for 2021)
Public Const IRAContLim As Currency = 6000@
Public Const IRAContLimOver50 As Currency = 7000@
Public Const RothIRALowLimJoint As Currency = 198000@
Public Const IRALowLimJointSPNotCov As Currency = 198000@
Public Const IRAUpLimJointSPNotCov As Currency = 208000@
Public Const RothIRAUpLimJoint As Currency = 208000@
Public Const RothIRAUpLimSingle As Currency = 140000@
Public Const RothIRALowLimSingle As Currency = 125000@
Public Const RothIRAUpLimMFS As Currency = 10000@
Public Const IRAUpLimMFS As Currency = 10000@
Public Const IRAUpLimJoint As Currency = 125000@
Public Const IRAUpLimSingle As Currency = 76000@
Public Const IRALowLimJoint As Currency = 105000@
Public Const IRALowLimSingle As Currency = 66000@

'401K (no change for 2021)
Public Const ContMax401K As Currency = 19500@
Public Const ContMax401K50 As Currency = 26000@
Public Const ContMax401KCU As Currency = 6500@

'Keogh/SEP (updated for 2021)
Public Const SEPContLim As Currency = 58000@
Public Const SEP401KCompLim As Currency = 290000@

'Standard Milage (updated for 2021)
Public Const StdMileLng As Double = 56.0
Public Const StdMileDbl As Double = 0.560

'Standard Milage (updated for 2021)
Public Const StdMileNYLng As Double = 58.5
Public Const StdMileNYDbl As Double = 0.585

'Long-Term Care Premiums (updated for 2021)
Public Const LTCLimUnder40 As Currency = 450@
Public Const LTCLim41to50 As Currency = 850@
Public Const LTCLim51to60 As Currency = 1690@
Public Const LTCLim61to70 As Currency = 4520@
Public Const LTCLimOver70 As Currency = 5640@

'HDHP (updated for 2021)
Public Const FamilyDedLow As Currency = 4800@
Public Const FamilyDedHigh As Currency = 7150@
Public Const SingleDedLow As Currency = 2400@
Public Const SingleDedHigh As Currency = 3600@

'QBID (updated for 2021)
Public Const QBIDLowLimSingle As Currency = 164900@
Public Const QBIDLowLimMFS As Currency = 164925@
Public Const QBIDLowLimMFJ As Currency = 329800@
Public Const QBIDUpLimSingle As Currency = 214900@
Public Const QBIDUpLimMFS As Currency = 214925@
Public Const QBIDUpLimMFJ As Currency = 429800@
Public Const QBIDRangeSingle As Currency = 50000@
Public Const QBIDRangeMFJ As Currency = 100000@

'Form 461 (updated for 2021)
Public Const F461Lim As Currency = 262000@
Public Const F461LimMFJ As Currency = 524000@

'Form 6251 (updated for 2021)
Public Const F6251UpLimJoint As Currency = 199900@
Public Const F6251UpLimMFS As Currency = 99950@
Public Const F6251Adj28Joint As Currency = 3998@
Public Const F6251Adj28MFS As Currency = 1999@
Public Const F6251PhaseoutJoint As Currency = 1047200@
Public Const F6251PhaseoutMFS As Currency = 523600@
Public Const F6251PhaseoutUnmarried As Currency = 523600@
Public Const F6251ExemptionJoint As Currency = 114600@
Public Const F6251ExemptionMFS As Currency = 57300@
Public Const F6251ExemptionUnmarried As Currency = 73600@
Public Const ChildExemption As Currency = 7950@

'Form 8801 (updated for 2021)
Public Const F8801UpLimJoint As Currency = 197900@
Public Const F8801UpLimMFS As Currency = 98950@
Public Const F8801Adj28Joint As Currency = 3958@
Public Const F8801Adj28MFS As Currency = 1979@
Public Const F8801PhaseoutJoint As Currency = 1036800@
Public Const F8801PhaseoutMFS As Currency = 518400@
Public Const F8801PhaseoutUnmarried As Currency = 518400@
Public Const F8801PhaseoutEstate As Currency = 84800@
Public Const F8801ExemptionJoint As Currency = 113400@
Public Const F8801ExemptionMFS As Currency = 56700@
Public Const F8801ExemptionUnmarried As Currency = 72900@
Public Const F8801ExemptionEstate As Currency = 25400@
'following items are values from PY
Public Const F8801PYBase1Joint As Currency = 80000@
Public Const F8801PYBase1SglMFS As Currency = 40000@
Public Const F8801PYBase1HOH As Currency = 53600@
Public Const F8801PYBase1Estate As Currency = 2650@
Public Const F8801PYBase2Sgl As Currency = 441450@
Public Const F8801PYBase2MFS As Currency = 248300@
Public Const F8801PYBase2Joint As Currency = 496600@
Public Const F8801PYBase2HOH As Currency = 469050@
Public Const F8801PYBase2Estate As Currency = 13150@

'Form 8814 (no change for 2021)
Public Const F8814Tax As Currency = 110@
Public Const F8814BaseAmt As Currency = 2200@
Public Const F8814IntDivMin As Currency = 1100@
Public Const F8814IntDivMax As Currency = 11000@

'Form 8880 (updated for 2022)
Public Const F8880LimJoint As Currency = 68000@
Public Const F8880LimJoint2 As Currency = 44000@
Public Const F8880LimJoint3 As Currency = 41000@
Public Const F8880LimHOH As Currency = 51000@
Public Const F8880LimHOH2 As Currency = 33000@
Public Const F8880LimHOH3 As Currency = 30750@
Public Const F8880LimSingle As Currency = 34000@
Public Const F8880LimSingle2 As Currency = 22000@
Public Const F8880LimSingle3 As Currency = 20500@
Public Const F8880LimMFS As Currency = 34000@
Public Const F8880LimWidow As Currency = 34000@

'Form 8889 (updated for 2021)
Public Const F8889AdditionalOld As Currency = 1000@
Public Const F8889LimSelf As Currency = 3600@
Public Const F8889LimFamily As Currency = 7200@
Public Const F8889LimSelfOld As Currency = 4600@
Public Const F8889LimFamilyOld As Currency = 8200@
Public Const F8889LimFamilyOld2 As Currency = 9200@

'Form 8959 (no change for 2021)
Public Const F8959ThresholdSingle As Currency = 200000@
Public Const F8959ThresholdJoint As Currency = 250000@
Public Const F8959ThresholdSep As Currency = 125000@
Public Const F8959MedRegRate As Double = 0.0145
Public Const F8959MedAddlRate As Double = 0.009

'Form 8962 (updated for 2021)
'Public Const F8962Less133 As Double = 0.0000
'Public Const F8962Eq133 As Double = 0.00
Public Const F8962Less150 As Double = 0.0000
Public Const F8962Eq151 As Double = 0.04
Public Const F8962Eq200 As Double = 2.00
Public Const F8962Eq250 As Double = 4.00
Public Const F8962Eq300 As Double = 6.00
Public Const F8962Eq399 As Double = 8.48
Public Const F8962400Plus As Double = 0.0850
Public Const F8962FedPovertyFam1 As Currency = 12760@
Public Const F8962FedPovertyFam2 As Currency = 17240@
Public Const F8962FedPovertyFam3 As Currency = 21720@
Public Const F8962FedPovertyFam4 As Currency = 26200@
Public Const F8962FedPovertyFam5 As Currency = 30680@
Public Const F8962FedPovertyFam6 As Currency = 35160@
Public Const F8962FedPovertyFam7 As Currency = 39640@
Public Const F8962FedPovertyFam8 As Currency = 44120@
Public Const F8962FedPovertyOver As Currency = 4480@
Public Const F8962FedPovertyFam1AK As Currency = 15950@
Public Const F8962FedPovertyFam2AK As Currency = 21550@
Public Const F8962FedPovertyFam3AK As Currency = 27150@
Public Const F8962FedPovertyFam4AK As Currency = 32750@
Public Const F8962FedPovertyFam5AK As Currency = 38350@
Public Const F8962FedPovertyFam6AK As Currency = 43950@
Public Const F8962FedPovertyFam7AK As Currency = 49550@
Public Const F8962FedPovertyFam8AK As Currency = 55150@
Public Const F8962FedPovertyOverAK As Currency = 5600@
Public Const F8962FedPovertyFam1HI As Currency = 14680@
Public Const F8962FedPovertyFam2HI As Currency = 19830@
Public Const F8962FedPovertyFam3HI As Currency = 24980@
Public Const F8962FedPovertyFam4HI As Currency = 30130@
Public Const F8962FedPovertyFam5HI As Currency = 35280@
Public Const F8962FedPovertyFam6HI As Currency = 40430@
Public Const F8962FedPovertyFam7HI As Currency = 45580@
Public Const F8962FedPovertyFam8HI As Currency = 50730@
Public Const F8962FedPovertyOverHI As Currency = 5150@


'Schedule D (updated for 2021)
Public Const CapGainBase1SGLMFS As Currency = 40400@
Public Const CapGainBase1MFJQW As Currency = 80800@
Public Const CapGainBase1HOH As Currency = 54100@
Public Const CapGainBase2SGL As Currency = 445850@
Public Const CapGainBase2MFS As Currency = 250800@
Public Const CapGainBase2MFJQW As Currency = 501600@
Public Const CapGainBase2HOH As Currency = 473750@
Public Const CapGainBase3SGLMFS As Currency = 164925@
Public Const CapGainBase3MFJQW As Currency = 329850@
Public Const CapGainBase3HOH As Currency = 164900@

'Schedule EIC (updated for 2021)
Public Const EICInvInc As Currency = 10000@
Public Const EICTHLowSingle As Currency = 11650@
Public Const EICTHLowMFJ As Currency = 17600@
Public Const EICTHHighSingle As Currency = 19550@
Public Const EICTHHighMFJ As Currency = 25500@
Public Const EICIncThreeMFJ As Currency = 57414@
Public Const EICIncTwoMFJ As Currency = 53865@
Public Const EICIncOneMFJ As Currency = 48108@
Public Const EICIncNoMFJ As Currency = 27380@
Public Const EICIncThreeSingle As Currency = 51464@
Public Const EICIncTwoSingle As Currency = 47915@
Public Const EICIncOneSingle As Currency = 42158@
Public Const EICIncNoSingle As Currency = 21430@

'Schedule H (updated for 2021)
Public Const SchHMinWage As Currency = 2300@

'Schedule SE (updated for 2021)
Public Const SEMaxOptGross As Currency = 8820@
Public Const SEMaxOptNet As Currency = 6367@
Public Const SEMaxOptInc As Currency = 5880@

'Form W-2 (updated for 2021)
Public Const SSWageBase As Currency = 142800@
Public Const SSTaxLimit As Currency = 8853.60@
Public Const SSTaxLimitRounded As Currency = 8854@

'Depreciation (Updated for 2021)
Public Const MaxAmt179 As Currency = 1050000@
Public Const Threshold179 As Currency = 2620000@
Public Const AutoMax As Currency = 18200@
Public Const HeavySUV As Currency = 26200@
Public Const HeavyTruck As Currency = 510000@
'State Depreciation (No change for 2021)
Public Const StMaxAmt179 As Currency = 25000@
Public Const StThreshold179 As Currency = 200000@
Public Const StHeavySUV As Currency = 25000@
Public Const StHeavyTruck As Currency = 510000@
Public Const IAMaxAmt179 As Currency = 100000@

'Tax Calculators (TY+1/2)
'TY+1
Public Const NYSSWageBase As Currency = 147000@
Public Const NYStdDedSingle As Currency = 12950@
Public Const NYStdDedMFJ As Currency = 25900@
Public Const NYStdDedMFS As Currency = 12950@
Public Const NYStdDedHOH As Currency = 19400@
Public Const NYStdDedAdd As Currency = 1400@
Public Const NYStdDedAddSingle As Currency = 1750@
Public Const NYStdDedDOPR As Currency = 1150@
Public Const NYStdDedDOPRAdd As Currency = 400@
Public Const NYQBIDLowLimSingle As Currency = 170050@
Public Const NYQBIDLowLimMFS As Currency = 170050@
Public Const NYQBIDLowLimMFJ As Currency = 340100@
Public Const NYCapGainBase1SGLMFS As Currency = 41675@
Public Const NYCapGainBase1MFJQW As Currency = 83350@
Public Const NYCapGainBase1HOH As Currency = 55800@
Public Const NYCapGainBase2SGL As Currency = 459750@
Public Const NYCapGainBase2MFS As Currency = 258600@
Public Const NYCapGainBase2MFJQW As Currency = 517200@
Public Const NYCapGainBase2HOH As Currency = 488500@
Public Const NYCapGainBase3SGLMFS As Currency = 170050@
Public Const NYCapGainBase3MFJQW As Currency = 340100@
Public Const NYCapGainBase3HOH As Currency = 170050@
Public Const NYF6251UpLimJoint As Currency = 206100@
Public Const NYF6251UpLimMFS As Currency = 103050@
Public Const NYF6251Adj28Joint As Currency = 3998@
Public Const NYF6251Adj28MFS As Currency = 1999@
Public Const NYF6251PhaseoutJoint As Currency = 1079800@
Public Const NYF6251PhaseoutMFS As Currency = 539900@
Public Const NYF6251PhaseoutUnmarried As Currency = 539900@
Public Const NYF6251ExemptionJoint As Currency = 118100@
Public Const NYF6251ExemptionMFS As Currency = 59050@
Public Const NYF6251ExemptionUnmarried As Currency = 75900@
Public Const NYChildExemption As Currency = 8200@
'TY+2 (using 1.02 as multiplier)
Public Const NY2SSWageBase As Currency = 149650@
Public Const NY2StdDedSingle As Currency = 13225@
Public Const NY2StdDedMFJ As Currency = 26425@
Public Const NY2StdDedMFS As Currency = 13225@
Public Const NY2StdDedHOH As Currency = 19800@
Public Const NY2StdDedAdd As Currency = 1450@
Public Const NY2StdDedAddSingle As Currency = 1800@
Public Const NY2StdDedDOPR As Currency = 1200@
Public Const NY2StdDedDOPRAdd As Currency = 425@
Public Const NY2QBIDLowLimSingle As Currency = 173450@
Public Const NY2QBIDLowLimMFS As Currency = 173450@
Public Const NY2QBIDLowLimMFJ As Currency = 346900@
Public Const NY2CapGainBase1SGLMFS As Currency = 42525@
Public Const NY2CapGainBase1MFJQW As Currency = 85025@
Public Const NY2CapGainBase1HOH As Currency = 56925@
Public Const NY2CapGainBase2SGL As Currency = 468950@
Public Const NY2CapGainBase2MFS As Currency = 263775@
Public Const NY2CapGainBase2MFJQW As Currency = 527550@
Public Const NY2CapGainBase2HOH As Currency = 498270@
Public Const NY2CapGainBase3SGLMFS As Currency = 166550@
Public Const NY2CapGainBase3MFJQW As Currency = 333125@
Public Const NY2CapGainBase3HOH As Currency = 166550@
Public Const NY2F6251UpLimJoint As Currency = 210225@
Public Const NY2F6251UpLimMFS As Currency = 105125@
Public Const NY2F6251Adj28Joint As Currency = 4075@
Public Const NY2F6251Adj28MFS As Currency = 2050@
Public Const NY2F6251PhaseoutJoint As Currency = 1101400@
Public Const NY2F6251PhaseoutMFS As Currency = 550700@
Public Const NY2F6251PhaseoutUnmarried As Currency = 550700@
Public Const NY2F6251ExemptionJoint As Currency = 120475@
Public Const NY2F6251ExemptionMFS As Currency = 60250@
Public Const NY2F6251ExemptionUnmarried As Currency = 77425@
Public Const NY2ChildExemption As Currency = 8350@

Private Sub BankProductTPStatesPro_SetList()
' Taxpayer address state - allows US states and military.  No US possessions or foreign countries
' Per Sara email 11/30/2012
' Allow Puerto Rico for TPG. Add EF Alert for Republic if select PR AO 2.9.22

    ListTitle = "BankProductStates"
    ListItem = "AA - Military Address|AA"
    ListItem = "AE - Military Address|AE"
    ListItem = "AP - Military Address|AP"
    ListItem = "AL - Alabama|AL"
    ListItem = "AK - Alaska|AK"
    ListItem = "AZ - Arizona|AZ"
    ListItem = "AR - Arkansas|AR"
    ListItem = "CA - California|CA"
    ListItem = "CO - Colorado|CO"
    ListItem = "CT - Connecticut|CT"
    ListItem = "DE - Delaware|DE"
    ListItem = "DC - District of Columbia|DC"
    ListItem = "FL - Florida|FL"
    ListItem = "GA - Georgia|GA"
    ListItem = "HI - Hawaii|HI"
    ListItem = "ID - Idaho|ID"
    ListItem = "IL - Illinois|IL"
    ListItem = "IN - Indiana|IN"
    ListItem = "IA - Iowa|IA"
    ListItem = "KS - Kansas|KS"
    ListItem = "KY - Kentucky|KY"
    ListItem = "LA - Louisiana|LA"
    ListItem = "ME - Maine|ME"
    ListItem = "MD - Maryland|MD"
    ListItem = "MA - Massachusetts|MA"
    ListItem = "MI - Michigan|MI"
    ListItem = "MN - Minnesota|MN"
    ListItem = "MS - Mississippi|MS"
    ListItem = "MO - Missouri|MO"
    ListItem = "MT - Montana|MT"
    ListItem = "NE - Nebraska|NE"
    ListItem = "NV - Nevada|NV"
    ListItem = "NH - New Hampshire|NH"
    ListItem = "NJ - New Jersey|NJ"
    ListItem = "NM - New Mexico|NM"
    ListItem = "NY - New York|NY"
    ListItem = "NC - North Carolina|NC"
    ListItem = "ND - North Dakota|ND"
    ListItem = "OH - Ohio|OH"
    ListItem = "OK - Oklahoma|OK"
    ListItem = "OR - Oregon|OR"
    ListItem = "PA - Pennsylvania|PA"
    ListItem = "PR - Puerto Rico|PR"
    ListItem = "RI - Rhode Island|RI"
    ListItem = "SC - South Carolina|SC"
    ListItem = "SD - South Dakota|SD"
    ListItem = "TN - Tennessee|TN"
    ListItem = "TX - Texas|TX"
    ListItem = "UT - Utah|UT"
    ListItem = "VT - Vermont|VT"
    ListItem = "VA - Virginia|VA"
    ListItem = "WA - Washington|WA"
    ListItem = "WV - West Virginia|WV"
    ListItem = "WI - Wisconsin|WI"
    ListItem = "WY - Wyoming|WY"
End Sub

Private Sub BankProductTPStates_SetList()
' Taxpayer address state - allows US states and military.  No US possessions or foreign countries
' Per Sara email 11/30/2012

    ListTitle = "BankProductStates"
    ListItem = "AA - Military Address|AA"
    ListItem = "AE - Military Address|AE"
    ListItem = "AP - Military Address|AP"
    ListItem = "AL - Alabama|AL"
    ListItem = "AK - Alaska|AK"
    ListItem = "AZ - Arizona|AZ"
    ListItem = "AR - Arkansas|AR"
    ListItem = "CA - California|CA"
    ListItem = "CO - Colorado|CO"
    ListItem = "CT - Connecticut|CT"
    ListItem = "DE - Delaware|DE"
    ListItem = "DC - District of Columbia|DC"
    ListItem = "FL - Florida|FL"
    ListItem = "GA - Georgia|GA"
    ListItem = "HI - Hawaii|HI"
    ListItem = "ID - Idaho|ID"
    ListItem = "IL - Illinois|IL"
    ListItem = "IN - Indiana|IN"
    ListItem = "IA - Iowa|IA"
    ListItem = "KS - Kansas|KS"
    ListItem = "KY - Kentucky|KY"
    ListItem = "LA - Louisiana|LA"
    ListItem = "ME - Maine|ME"
    ListItem = "MD - Maryland|MD"
    ListItem = "MA - Massachusetts|MA"
    ListItem = "MI - Michigan|MI"
    ListItem = "MN - Minnesota|MN"
    ListItem = "MS - Mississippi|MS"
    ListItem = "MO - Missouri|MO"
    ListItem = "MT - Montana|MT"
    ListItem = "NE - Nebraska|NE"
    ListItem = "NV - Nevada|NV"
    ListItem = "NH - New Hampshire|NH"
    ListItem = "NJ - New Jersey|NJ"
    ListItem = "NM - New Mexico|NM"
    ListItem = "NY - New York|NY"
    ListItem = "NC - North Carolina|NC"
    ListItem = "ND - North Dakota|ND"
    ListItem = "OH - Ohio|OH"
    ListItem = "OK - Oklahoma|OK"
    ListItem = "OR - Oregon|OR"
    ListItem = "PA - Pennsylvania|PA"
    ListItem = "RI - Rhode Island|RI"
    ListItem = "SC - South Carolina|SC"
    ListItem = "SD - South Dakota|SD"
    ListItem = "TN - Tennessee|TN"
    ListItem = "TX - Texas|TX"
    ListItem = "UT - Utah|UT"
    ListItem = "VT - Vermont|VT"
    ListItem = "VA - Virginia|VA"
    ListItem = "WA - Washington|WA"
    ListItem = "WV - West Virginia|WV"
    ListItem = "WI - Wisconsin|WI"
    ListItem = "WY - Wyoming|WY"
End Sub

Private Sub AmexTPStates_SetList()

   ListTitle = "AmexStates"

   ListItem = "AA - Military Address|AA"
   ListItem = "AE - Military Address|AE"
   ListItem = "AP - Military Address|AP"
   ListItem = "AL - Alabama|AL"
   ListItem = "AK - Alaska|AK"
   ListItem = "AZ - Arizona|AZ"
   ListItem = "AR - Arkansas|AR"
   ListItem = "CA - California|CA"
   ListItem = "CO - Colorado|CO"
   ListItem = "CT - Connecticut|CT"
   ListItem = "DE - Delaware|DE"
   ListItem = "DC - District of Columbia|DC"
   ListItem = "FL - Florida|FL"
   ListItem = "GA - Georgia|GA"
   ListItem = "HI - Hawaii|HI"
   ListItem = "ID - Idaho|ID"
   ListItem = "IL - Illinois|IL"
   ListItem = "IN - Indiana|IN"
   ListItem = "IA - Iowa|IA"
   ListItem = "KS - Kansas|KS"
   ListItem = "KY - Kentucky|KY"
   ListItem = "LA - Louisiana|LA"
   ListItem = "ME - Maine|ME"
   ListItem = "MD - Maryland|MD"
   ListItem = "MA - Massachusetts|MA"
   ListItem = "MI - Michigan|MI"
   ListItem = "MN - Minnesota|MN"
   ListItem = "MS - Mississippi|MS"
   ListItem = "MO - Missouri|MO"
   ListItem = "MT - Montana|MT"
   ListItem = "NE - Nebraska|NE"
   ListItem = "NV - Nevada|NV"
   ListItem = "NH - New Hampshire|NH"
   ListItem = "NJ - New Jersey|NJ"
   ListItem = "NM - New Mexico|NM"
   ListItem = "NY - New York|NY"
   ListItem = "NC - North Carolina|NC"
   ListItem = "ND - North Dakota|ND"
   ListItem = "OH - Ohio|OH"
   ListItem = "OK - Oklahoma|OK"
   ListItem = "OR - Oregon|OR"
   ListItem = "PA - Pennsylvania|PA"
   ListItem = "PR - Puerto Rico|PR"
   ListItem = "RI - Rhode Island|RI"
   ListItem = "SC - South Carolina|SC"
   ListItem = "SD - South Dakota|SD"
   ListItem = "TN - Tennessee|TN"
   ListItem = "TX - Texas|TX"
   ListItem = "UT - Utah|UT"
   ListItem = "VT - Vermont|VT"
   ListItem = "VA - Virginia|VA"
   ListItem = "WA - Washington|WA"
   ListItem = "WV - West Virginia|WV"
   ListItem = "WI - Wisconsin|WI"
   ListItem = "WY - Wyoming|WY"

End Sub


Public Function BankProductIssueLocation_SetDynaList()
    Call SetListTitle("BankProductIssueLocation")
    
    Dim TpID As String
    
    TpID = GetString(USWRALApp.TpID)

    If GetBool(USWRALApp.TPG) = True Then
        If TpID = "Driver's License (U.S. State)" Then
            Call SetListItem("AA - Military Address", "AA")
            Call SetListItem("AE - Military Address", "AE")
            Call SetListItem("AP - Military Address", "AP")
            Call SetListItem("AL - Alabama", "AL")
            Call SetListItem("AK - Alaska", "AK")
            Call SetListItem("AS - American Samoa", "AS")
            Call SetListItem("AZ - Arizona", "AZ")
            Call SetListItem("AR - Arkansas", "AR")
            Call SetListItem("CA - California", "CA")
            Call SetListItem("CO - Colorado", "CO")
            Call SetListItem("CT - Connecticut", "CT")
            Call SetListItem("DE - Delaware", "DE")
            Call SetListItem("DC - District of Columbia", "DC")
            Call SetListItem("FM - Federated States of Micronesia", "FM")
            Call SetListItem("FL - Florida", "FL")
            Call SetListItem("GA - Georgia", "GA")
            Call SetListItem("GU - Guam", "GU")
            Call SetListItem("HI - Hawaii", "HI")
            Call SetListItem("ID - Idaho", "ID")
            Call SetListItem("IL - Illinois", "IL")
            Call SetListItem("IN - Indiana", "IN")
            Call SetListItem("IA - Iowa", "IA")
            Call SetListItem("KS - Kansas", "KS")
            Call SetListItem("KY - Kentucky", "KY")
            Call SetListItem("LA - Louisiana", "LA")
            Call SetListItem("ME - Maine", "ME")
            Call SetListItem("MH - Marshall Islands", "MH")
            Call SetListItem("MD - Maryland", "MD")
            Call SetListItem("MA - Massachusetts", "MA")
            Call SetListItem("MI - Michigan", "MI")
            Call SetListItem("MN - Minnesota", "MN")
            Call SetListItem("MS - Mississippi", "MS")
            Call SetListItem("MO - Missouri", "MO")
            Call SetListItem("MT - Montana", "MT")
            Call SetListItem("NE - Nebraska", "NE")
            Call SetListItem("NV - Nevada", "NV")
            Call SetListItem("NH - New Hampshire", "NH")
            Call SetListItem("NJ - New Jersey", "NJ")
            Call SetListItem("NM - New Mexico", "NM")
            Call SetListItem("NY - New York", "NY")
            Call SetListItem("NC - North Carolina", "NC")
            Call SetListItem("ND - North Dakota", "ND")
            Call SetListItem("MP - Northern Mariana Islands", "MP")
            Call SetListItem("OH - Ohio", "OH")
            Call SetListItem("OK - Oklahoma", "OK")
            Call SetListItem("OR - Oregon", "OR")
            Call SetListItem("PW - Palau", "PW")
            Call SetListItem("PA - Pennsylvania", "PA")
            Call SetListItem("PR - Puerto Rico", "PR")
            Call SetListItem("RI - Rhode Island", "RI")
            Call SetListItem("SC - South Carolina", "SC")
            Call SetListItem("SD - South Dakota", "SD")
            Call SetListItem("TN - Tennessee", "TN")
            Call SetListItem("TX - Texas", "TX")
            Call SetListItem("UT - Utah", "UT")
            Call SetListItem("VT - Vermont", "VT")
            Call SetListItem("VA - Virginia", "VA")
            Call SetListItem("VI - Virgin Islands", "VI")
            Call SetListItem("WA - Washington", "WA")
            Call SetListItem("WV - West Virginia", "WV")
            Call SetListItem("WI - Wisconsin", "WI")
            Call SetListItem("WY - Wyoming", "WY")
        ElseIf TpID = "U.S. State-Issued ID Card" Then
            Call SetListItem("AA - Military Address", "AA")
            Call SetListItem("AE - Military Address", "AE")
            Call SetListItem("AP - Military Address", "AP")
            Call SetListItem("AL - Alabama", "AL")
            Call SetListItem("AK - Alaska", "AK")
            Call SetListItem("AS - American Samoa", "AS")
            Call SetListItem("AZ - Arizona", "AZ")
            Call SetListItem("AR - Arkansas", "AR")
            Call SetListItem("CA - California", "CA")
            Call SetListItem("CO - Colorado", "CO")
            Call SetListItem("CT - Connecticut", "CT")
            Call SetListItem("DE - Delaware", "DE")
            Call SetListItem("DC - District of Columbia", "DC")
            Call SetListItem("FM - Federated States of Micronesia", "FM")
            Call SetListItem("FL - Florida", "FL")
            Call SetListItem("GA - Georgia", "GA")
            Call SetListItem("GU - Guam", "GU")
            Call SetListItem("HI - Hawaii", "HI")
            Call SetListItem("ID - Idaho", "ID")
            Call SetListItem("IL - Illinois", "IL")
            Call SetListItem("IN - Indiana", "IN")
            Call SetListItem("IA - Iowa", "IA")
            Call SetListItem("KS - Kansas", "KS")
            Call SetListItem("KY - Kentucky", "KY")
            Call SetListItem("LA - Louisiana", "LA")
            Call SetListItem("ME - Maine", "ME")
            Call SetListItem("MH - Marshall Islands", "MH")
            Call SetListItem("MD - Maryland", "MD")
            Call SetListItem("MA - Massachusetts", "MA")
            Call SetListItem("MI - Michigan", "MI")
            Call SetListItem("MN - Minnesota", "MN")
            Call SetListItem("MS - Mississippi", "MS")
            Call SetListItem("MO - Missouri", "MO")
            Call SetListItem("MT - Montana", "MT")
            Call SetListItem("NE - Nebraska", "NE")
            Call SetListItem("NV - Nevada", "NV")
            Call SetListItem("NH - New Hampshire", "NH")
            Call SetListItem("NJ - New Jersey", "NJ")
            Call SetListItem("NM - New Mexico", "NM")
            Call SetListItem("NY - New York", "NY")
            Call SetListItem("NC - North Carolina", "NC")
            Call SetListItem("ND - North Dakota", "ND")
            Call SetListItem("MP - Northern Mariana Islands", "MP")
            Call SetListItem("OH - Ohio", "OH")
            Call SetListItem("OK - Oklahoma", "OK")
            Call SetListItem("OR - Oregon", "OR")
            Call SetListItem("PW - Palau", "PW")
            Call SetListItem("PA - Pennsylvania", "PA")
            Call SetListItem("PR - Puerto Rico", "PR")
            Call SetListItem("RI - Rhode Island", "RI")
            Call SetListItem("SC - South Carolina", "SC")
            Call SetListItem("SD - South Dakota", "SD")
            Call SetListItem("TN - Tennessee", "TN")
            Call SetListItem("TX - Texas", "TX")
            Call SetListItem("UT - Utah", "UT")
            Call SetListItem("VT - Vermont", "VT")
            Call SetListItem("VA - Virginia", "VA")
            Call SetListItem("VI - Virgin Islands", "VI")
            Call SetListItem("WA - Washington", "WA")
            Call SetListItem("WV - West Virginia", "WV")
            Call SetListItem("WI - Wisconsin", "WI")
            Call SetListItem("WY - Wyoming", "WY")
        ElseIf TpID = "U.S. Military ID Card" Then
            Call SetListItem("AA - Military Address", "AA")
            Call SetListItem("AE - Military Address", "AE")
            Call SetListItem("AP - Military Address", "AP")
            Call SetListItem("AL - Alabama", "AL")
            Call SetListItem("AK - Alaska", "AK")
            Call SetListItem("AS - American Samoa", "AS")
            Call SetListItem("AZ - Arizona", "AZ")
            Call SetListItem("AR - Arkansas", "AR")
            Call SetListItem("CA - California", "CA")
            Call SetListItem("CO - Colorado", "CO")
            Call SetListItem("CT - Connecticut", "CT")
            Call SetListItem("DE - Delaware", "DE")
            Call SetListItem("DC - District of Columbia", "DC")
            Call SetListItem("FM - Federated States of Micronesia", "FM")
            Call SetListItem("FL - Florida", "FL")
            Call SetListItem("GA - Georgia", "GA")
            Call SetListItem("GU - Guam", "GU")
            Call SetListItem("HI - Hawaii", "HI")
            Call SetListItem("ID - Idaho", "ID")
            Call SetListItem("IL - Illinois", "IL")
            Call SetListItem("IN - Indiana", "IN")
            Call SetListItem("IA - Iowa", "IA")
            Call SetListItem("KS - Kansas", "KS")
            Call SetListItem("KY - Kentucky", "KY")
            Call SetListItem("LA - Louisiana", "LA")
            Call SetListItem("ME - Maine", "ME")
            Call SetListItem("MH - Marshall Islands", "MH")
            Call SetListItem("MD - Maryland", "MD")
            Call SetListItem("MA - Massachusetts", "MA")
            Call SetListItem("MI - Michigan", "MI")
            Call SetListItem("MN - Minnesota", "MN")
            Call SetListItem("MS - Mississippi", "MS")
            Call SetListItem("MO - Missouri", "MO")
            Call SetListItem("MT - Montana", "MT")
            Call SetListItem("NE - Nebraska", "NE")
            Call SetListItem("NV - Nevada", "NV")
            Call SetListItem("NH - New Hampshire", "NH")
            Call SetListItem("NJ - New Jersey", "NJ")
            Call SetListItem("NM - New Mexico", "NM")
            Call SetListItem("NY - New York", "NY")
            Call SetListItem("NC - North Carolina", "NC")
            Call SetListItem("ND - North Dakota", "ND")
            Call SetListItem("MP - Northern Mariana Islands", "MP")
            Call SetListItem("OH - Ohio", "OH")
            Call SetListItem("OK - Oklahoma", "OK")
            Call SetListItem("OR - Oregon", "OR")
            Call SetListItem("PW - Palau", "PW")
            Call SetListItem("PA - Pennsylvania", "PA")
            Call SetListItem("PR - Puerto Rico", "PR")
            Call SetListItem("RI - Rhode Island", "RI")
            Call SetListItem("SC - South Carolina", "SC")
            Call SetListItem("SD - South Dakota", "SD")
            Call SetListItem("TN - Tennessee", "TN")
            Call SetListItem("TX - Texas", "TX")
            Call SetListItem("UT - Utah", "UT")
            Call SetListItem("VT - Vermont", "VT")
            Call SetListItem("VA - Virginia", "VA")
            Call SetListItem("VI - Virgin Islands", "VI")
            Call SetListItem("WA - Washington", "WA")
            Call SetListItem("WV - West Virginia", "WV")
            Call SetListItem("WI - Wisconsin", "WI")
            Call SetListItem("WY - Wyoming", "WY")
        ElseIf TpID = "Native American Tribal ID Card" Then
            Call SetListItem("AA - Military Address", "AA")
            Call SetListItem("AE - Military Address", "AE")
            Call SetListItem("AP - Military Address", "AP")
            Call SetListItem("AL - Alabama", "AL")
            Call SetListItem("AK - Alaska", "AK")
            Call SetListItem("AS - American Samoa", "AS")
            Call SetListItem("AZ - Arizona", "AZ")
            Call SetListItem("AR - Arkansas", "AR")
            Call SetListItem("CA - California", "CA")
            Call SetListItem("CO - Colorado", "CO")
            Call SetListItem("CT - Connecticut", "CT")
            Call SetListItem("DE - Delaware", "DE")
            Call SetListItem("DC - District of Columbia", "DC")
            Call SetListItem("FM - Federated States of Micronesia", "FM")
            Call SetListItem("FL - Florida", "FL")
            Call SetListItem("GA - Georgia", "GA")
            Call SetListItem("GU - Guam", "GU")
            Call SetListItem("HI - Hawaii", "HI")
            Call SetListItem("ID - Idaho", "ID")
            Call SetListItem("IL - Illinois", "IL")
            Call SetListItem("IN - Indiana", "IN")
            Call SetListItem("IA - Iowa", "IA")
            Call SetListItem("KS - Kansas", "KS")
            Call SetListItem("KY - Kentucky", "KY")
            Call SetListItem("LA - Louisiana", "LA")
            Call SetListItem("ME - Maine", "ME")
            Call SetListItem("MH - Marshall Islands", "MH")
            Call SetListItem("MD - Maryland", "MD")
            Call SetListItem("MA - Massachusetts", "MA")
            Call SetListItem("MI - Michigan", "MI")
            Call SetListItem("MN - Minnesota", "MN")
            Call SetListItem("MS - Mississippi", "MS")
            Call SetListItem("MO - Missouri", "MO")
            Call SetListItem("MT - Montana", "MT")
            Call SetListItem("NE - Nebraska", "NE")
            Call SetListItem("NV - Nevada", "NV")
            Call SetListItem("NH - New Hampshire", "NH")
            Call SetListItem("NJ - New Jersey", "NJ")
            Call SetListItem("NM - New Mexico", "NM")
            Call SetListItem("NY - New York", "NY")
            Call SetListItem("NC - North Carolina", "NC")
            Call SetListItem("ND - North Dakota", "ND")
            Call SetListItem("MP - Northern Mariana Islands", "MP")
            Call SetListItem("OH - Ohio", "OH")
            Call SetListItem("OK - Oklahoma", "OK")
            Call SetListItem("OR - Oregon", "OR")
            Call SetListItem("PW - Palau", "PW")
            Call SetListItem("PA - Pennsylvania", "PA")
            Call SetListItem("PR - Puerto Rico", "PR")
            Call SetListItem("RI - Rhode Island", "RI")
            Call SetListItem("SC - South Carolina", "SC")
            Call SetListItem("SD - South Dakota", "SD")
            Call SetListItem("TN - Tennessee", "TN")
            Call SetListItem("TX - Texas", "TX")
            Call SetListItem("UT - Utah", "UT")
            Call SetListItem("VT - Vermont", "VT")
            Call SetListItem("VA - Virginia", "VA")
            Call SetListItem("VI - Virgin Islands", "VI")
            Call SetListItem("WA - Washington", "WA")
            Call SetListItem("WV - West Virginia", "WV")
            Call SetListItem("WI - Wisconsin", "WI")
            Call SetListItem("WY - Wyoming", "WY")
        ElseIf TpID = "Driver's License (Foreign)" Then
           Call SetListItem("United States", "US")
    'Foreign countries
            Call SetListItem("Afghanistan")
            Call SetListItem("Akrotiri")
            Call SetListItem("Albania")
            Call SetListItem("Algeria")
            Call SetListItem("Andorra")
            Call SetListItem("Angola")
            Call SetListItem("Anguilla")
            Call SetListItem("Antarctica")
            Call SetListItem("Antigua & Barbuda")
            Call SetListItem("Argentina")
            Call SetListItem("Armenia")
            Call SetListItem("Aruba")
            Call SetListItem("Ashmore & Cartier Islands")
            Call SetListItem("Australia")
            Call SetListItem("Austria")
            Call SetListItem("Azerbaijan")
            Call SetListItem("Bahamas")
            Call SetListItem("Bahrain")
            Call SetListItem("Baker Island")
            Call SetListItem("Bangladesh")
            Call SetListItem("Barbados")
            Call SetListItem("Belarus")
            Call SetListItem("Belgium")
            Call SetListItem("Belize")
            Call SetListItem("Benin")
            Call SetListItem("Bermuda")
            Call SetListItem("Bhutan")
            Call SetListItem("Bolivia")
            Call SetListItem("Bosnia-Herzegovina")
            Call SetListItem("Botswana")
            Call SetListItem("Bouvet Island")
            Call SetListItem("Brazil")
            Call SetListItem("British Indian Ocean Territory")
            Call SetListItem("British Virgin Islands")
            Call SetListItem("Brunei")
            Call SetListItem("Bulgaria")
            Call SetListItem("Burkina Faso")
            Call SetListItem("Burma")
            Call SetListItem("Burundi")
            Call SetListItem("Cambodia")
            Call SetListItem("Cameroon")
            Call SetListItem("Canada")
            Call SetListItem("Cape Verde")
            Call SetListItem("Cayman Islands")
            Call SetListItem("Central African Republic")
            Call SetListItem("Chad")
            Call SetListItem("Chile")
            Call SetListItem("China")
            Call SetListItem("Christmas Island")
            Call SetListItem("Clipperton Island")
            Call SetListItem("Cocos (Keeling) Islands")
            Call SetListItem("Colombia")
            Call SetListItem("Comoros")
            Call SetListItem("Congo (Brazzaville)")
            Call SetListItem("Congo (Kinshasa)")
            Call SetListItem("Cooks Islands")
            Call SetListItem("Coral Sea Islands")
            Call SetListItem("Costa Rica")
            Call SetListItem("Cote d'Ivoire (Ivory Coast)")
            Call SetListItem("Croatia")
            Call SetListItem("Cuba")
            Call SetListItem("Curacao")
            Call SetListItem("Cyprus")
            Call SetListItem("Czech Republic")
            Call SetListItem("Denmark")
            Call SetListItem("Dhekelia")
            Call SetListItem("Djibouti")
            Call SetListItem("Dominica")
            Call SetListItem("Dominican Republic")
            Call SetListItem("East Timor")
            Call SetListItem("Ecuador")
            Call SetListItem("Egypt")
            Call SetListItem("El Salvador")
            Call SetListItem("Equatorial Guinea")
            Call SetListItem("Eritrea")
            Call SetListItem("Estonia")
            Call SetListItem("Ethiopia")
            Call SetListItem("Falkland Islands (Islas Malvinas)")
            Call SetListItem("Faroe Islands")
            Call SetListItem("Federated States of Micronesia")
            Call SetListItem("Fiji")
            Call SetListItem("Finland")
            Call SetListItem("France")
            Call SetListItem("French Polynesia")
            Call SetListItem("French Southern & Antarctic Lands")
            Call SetListItem("Gabon")
            Call SetListItem("The Gambia")
            Call SetListItem("Georgia")
            Call SetListItem("Germany")
            Call SetListItem("Ghana")
            Call SetListItem("Gibraltar")
            Call SetListItem("Greece")
            Call SetListItem("Greenland")
            Call SetListItem("Grenada")
            Call SetListItem("Guatemala")
            Call SetListItem("Guernsey")
            Call SetListItem("Guinea")
            Call SetListItem("Guinea-Bissau")
            Call SetListItem("Guyana")
            Call SetListItem("Haiti")
            Call SetListItem("Heard Island & McDonald Islands")
            Call SetListItem("Holy See")
            Call SetListItem("Honduras")
            Call SetListItem("Hong Kong")
            Call SetListItem("Howland Island")
            Call SetListItem("Hungary")
            Call SetListItem("Iceland")
            Call SetListItem("India")
            Call SetListItem("Indonesia")
            Call SetListItem("Iran")
            Call SetListItem("Iraq")
            Call SetListItem("Ireland")
            Call SetListItem("Israel")
            Call SetListItem("Italy")
            Call SetListItem("Jamaica")
            Call SetListItem("Jan Mayen")
            Call SetListItem("Japan")
            Call SetListItem("Jarvis Island")
            Call SetListItem("Jersey")
            Call SetListItem("Johnston Atoll")
            Call SetListItem("Jordan")
            Call SetListItem("Kazakhstan")
            Call SetListItem("Kenya")
            Call SetListItem("Kingman Reef")
            Call SetListItem("Kiribati")
    ' North and South Korea are different in this list due to space constraints on the IV_USWEFWksht_IDInfo1 and IV_USEF_IDInfo1 questions
            Call SetListItem("North Korea")
            Call SetListItem("South Korea")
            Call SetListItem("Kosovo")
            Call SetListItem("Kuwait")
            Call SetListItem("Kyrgyzstan")
            Call SetListItem("Laos")
            Call SetListItem("Latvia")
            Call SetListItem("Lebanon")
            Call SetListItem("Lesotho")
            Call SetListItem("Liberia")
            Call SetListItem("Libya")
            Call SetListItem("Liechtenstein")
            Call SetListItem("Lithuania")
            Call SetListItem("Luxembourg")
            Call SetListItem("Macau")
            Call SetListItem("Macedonia")
            Call SetListItem("Madagascar")
            Call SetListItem("Malawi")
            Call SetListItem("Malaysia")
            Call SetListItem("Maldives")
            Call SetListItem("Mali")
            Call SetListItem("Malta")
            Call SetListItem("Man, Isle of")
            Call SetListItem("Marshall Islands")
            Call SetListItem("Mauritania")
            Call SetListItem("Mauritius")
            Call SetListItem("Mexico")
            Call SetListItem("Midway Islands")
            Call SetListItem("Moldova")
            Call SetListItem("Monaco")
            Call SetListItem("Mongolia")
            Call SetListItem("Montenegro")
            Call SetListItem("Montserrat")
            Call SetListItem("Morocco")
            Call SetListItem("Mozambique")
            Call SetListItem("Namibia")
            Call SetListItem("Nauru")
            Call SetListItem("Navassa Island")
            Call SetListItem("Nepal")
            Call SetListItem("Netherlands")
            Call SetListItem("New Caledonia")
            Call SetListItem("New Zealand")
            Call SetListItem("Nicaragua")
            Call SetListItem("Niger")
            Call SetListItem("Nigeria")
            Call SetListItem("Niue")
            Call SetListItem("Norfolk Island")
            Call SetListItem("Norway")
            Call SetListItem("Oman")
            Call SetListItem("Other Country")
            Call SetListItem("Pakistan")
            Call SetListItem("Palau")
            Call SetListItem("Palmyra Atoll")
            Call SetListItem("Panama")
            Call SetListItem("Papua-New Guinea")
            Call SetListItem("Paracel Islands")
            Call SetListItem("Paraguay")
            Call SetListItem("Peru")
            Call SetListItem("Philippines")
            Call SetListItem("Pitcairn Islands")
            Call SetListItem("Poland")
            Call SetListItem("Portugal")
            Call SetListItem("Qatar")
            Call SetListItem("Romania")
            Call SetListItem("Russia")
            Call SetListItem("Rwanda")
            Call SetListItem("Saint Barthelemy")
            Call SetListItem("Saint Martin")
            Call SetListItem("Samoa")
            Call SetListItem("San Marino")
            Call SetListItem("Sao Tome & Principe")
            Call SetListItem("Saudi Arabia")
            Call SetListItem("Senegal")
            Call SetListItem("Serbia")
            Call SetListItem("Seychelles")
            Call SetListItem("Sierra Leone")
            Call SetListItem("Singapore")
            Call SetListItem("Sint Maarten")
            Call SetListItem("Slovakia")
            Call SetListItem("Slovenia")
            Call SetListItem("Solomon Islands")
            Call SetListItem("Somalia")
            Call SetListItem("South Africa")
    ' South Georgia & South Sandwich Islands is different in this list due to space constraints on the IV_USWEFWksht_IDInfo1 and IV_USEF_IDInfo1 questions
            Call SetListItem("South Georgia & Sandwich Islands")
            Call SetListItem("South Sudan")
            Call SetListItem("Spain")
            Call SetListItem("Spratly Islands")
            Call SetListItem("Sri Lanka")
            Call SetListItem("Saint Helena")
            Call SetListItem("Saint Kitts & Nevis")
            Call SetListItem("Saint Lucia Island")
            Call SetListItem("Saint Pierre & Miquelon")
            Call SetListItem("Saint Vincent & the Grenadines")
            Call SetListItem("Sudan")
            Call SetListItem("Suriname")
            Call SetListItem("Svalbard")
            Call SetListItem("Swaziland")
            Call SetListItem("Sweden")
            Call SetListItem("Switzerland")
            Call SetListItem("Syria")
            Call SetListItem("Taiwan")
            Call SetListItem("Tajikistan")
            Call SetListItem("Tanzania")
            Call SetListItem("Thailand")
            Call SetListItem("Togo")
            Call SetListItem("Tokelau")
            Call SetListItem("Tonga")
            Call SetListItem("Trinidad & Tobago")
            Call SetListItem("Tunisia")
            Call SetListItem("Turkey")
            Call SetListItem("Turkmenistan")
            Call SetListItem("Turks & Caicos Islands")
            Call SetListItem("Tuvalu")
            Call SetListItem("Uganda")
            Call SetListItem("Ukraine")
            Call SetListItem("United Arab Emirates")
            Call SetListItem("United Kingdom")
            Call SetListItem("Uruguay")
            Call SetListItem("Uzbekistan")
            Call SetListItem("Vanuatu")
            Call SetListItem("Venezuela")
            Call SetListItem("Vietnam")
            Call SetListItem("Wake Island")
            Call SetListItem("Wallis & Futuna")
            Call SetListItem("Western Sahara")
            Call SetListItem("Yemen (Aden)")
            Call SetListItem("Zambia")
            Call SetListItem("Zimbabwe")
        ElseIf TpID = "U.S. Passport" Then
           Call SetListItem("United States", "US")
    'Foreign countries
            Call SetListItem("Afghanistan")
            Call SetListItem("Akrotiri")
            Call SetListItem("Albania")
            Call SetListItem("Algeria")
            Call SetListItem("Andorra")
            Call SetListItem("Angola")
            Call SetListItem("Anguilla")
            Call SetListItem("Antarctica")
            Call SetListItem("Antigua & Barbuda")
            Call SetListItem("Argentina")
            Call SetListItem("Armenia")
            Call SetListItem("Aruba")
            Call SetListItem("Ashmore & Cartier Islands")
            Call SetListItem("Australia")
            Call SetListItem("Austria")
            Call SetListItem("Azerbaijan")
            Call SetListItem("Bahamas")
            Call SetListItem("Bahrain")
            Call SetListItem("Baker Island")
            Call SetListItem("Bangladesh")
            Call SetListItem("Barbados")
            Call SetListItem("Belarus")
            Call SetListItem("Belgium")
            Call SetListItem("Belize")
            Call SetListItem("Benin")
            Call SetListItem("Bermuda")
            Call SetListItem("Bhutan")
            Call SetListItem("Bolivia")
            Call SetListItem("Bosnia-Herzegovina")
            Call SetListItem("Botswana")
            Call SetListItem("Bouvet Island")
            Call SetListItem("Brazil")
            Call SetListItem("British Indian Ocean Territory")
            Call SetListItem("British Virgin Islands")
            Call SetListItem("Brunei")
            Call SetListItem("Bulgaria")
            Call SetListItem("Burkina Faso")
            Call SetListItem("Burma")
            Call SetListItem("Burundi")
            Call SetListItem("Cambodia")
            Call SetListItem("Cameroon")
            Call SetListItem("Canada")
            Call SetListItem("Cape Verde")
            Call SetListItem("Cayman Islands")
            Call SetListItem("Central African Republic")
            Call SetListItem("Chad")
            Call SetListItem("Chile")
            Call SetListItem("China")
            Call SetListItem("Christmas Island")
            Call SetListItem("Clipperton Island")
            Call SetListItem("Cocos (Keeling) Islands")
            Call SetListItem("Colombia")
            Call SetListItem("Comoros")
            Call SetListItem("Congo (Brazzaville)")
            Call SetListItem("Congo (Kinshasa)")
            Call SetListItem("Cooks Islands")
            Call SetListItem("Coral Sea Islands")
            Call SetListItem("Costa Rica")
            Call SetListItem("Cote d'Ivoire (Ivory Coast)")
            Call SetListItem("Croatia")
            Call SetListItem("Cuba")
            Call SetListItem("Curacao")
            Call SetListItem("Cyprus")
            Call SetListItem("Czech Republic")
            Call SetListItem("Denmark")
            Call SetListItem("Dhekelia")
            Call SetListItem("Djibouti")
            Call SetListItem("Dominica")
            Call SetListItem("Dominican Republic")
            Call SetListItem("East Timor")
            Call SetListItem("Ecuador")
            Call SetListItem("Egypt")
            Call SetListItem("El Salvador")
            Call SetListItem("Equatorial Guinea")
            Call SetListItem("Eritrea")
            Call SetListItem("Estonia")
            Call SetListItem("Ethiopia")
            Call SetListItem("Falkland Islands (Islas Malvinas)")
            Call SetListItem("Faroe Islands")
            Call SetListItem("Federated States of Micronesia")
            Call SetListItem("Fiji")
            Call SetListItem("Finland")
            Call SetListItem("France")
            Call SetListItem("French Polynesia")
            Call SetListItem("French Southern & Antarctic Lands")
            Call SetListItem("Gabon")
            Call SetListItem("The Gambia")
            Call SetListItem("Georgia")
            Call SetListItem("Germany")
            Call SetListItem("Ghana")
            Call SetListItem("Gibraltar")
            Call SetListItem("Greece")
            Call SetListItem("Greenland")
            Call SetListItem("Grenada")
            Call SetListItem("Guatemala")
            Call SetListItem("Guernsey")
            Call SetListItem("Guinea")
            Call SetListItem("Guinea-Bissau")
            Call SetListItem("Guyana")
            Call SetListItem("Haiti")
            Call SetListItem("Heard Island & McDonald Islands")
            Call SetListItem("Holy See")
            Call SetListItem("Honduras")
            Call SetListItem("Hong Kong")
            Call SetListItem("Howland Island")
            Call SetListItem("Hungary")
            Call SetListItem("Iceland")
            Call SetListItem("India")
            Call SetListItem("Indonesia")
            Call SetListItem("Iran")
            Call SetListItem("Iraq")
            Call SetListItem("Ireland")
            Call SetListItem("Israel")
            Call SetListItem("Italy")
            Call SetListItem("Jamaica")
            Call SetListItem("Jan Mayen")
            Call SetListItem("Japan")
            Call SetListItem("Jarvis Island")
            Call SetListItem("Jersey")
            Call SetListItem("Johnston Atoll")
            Call SetListItem("Jordan")
            Call SetListItem("Kazakhstan")
            Call SetListItem("Kenya")
            Call SetListItem("Kingman Reef")
            Call SetListItem("Kiribati")
    ' North and South Korea are different in this list due to space constraints on the IV_USWEFWksht_IDInfo1 and IV_USEF_IDInfo1 questions
            Call SetListItem("North Korea")
            Call SetListItem("South Korea")
            Call SetListItem("Kosovo")
            Call SetListItem("Kuwait")
            Call SetListItem("Kyrgyzstan")
            Call SetListItem("Laos")
            Call SetListItem("Latvia")
            Call SetListItem("Lebanon")
            Call SetListItem("Lesotho")
            Call SetListItem("Liberia")
            Call SetListItem("Libya")
            Call SetListItem("Liechtenstein")
            Call SetListItem("Lithuania")
            Call SetListItem("Luxembourg")
            Call SetListItem("Macau")
            Call SetListItem("Macedonia")
            Call SetListItem("Madagascar")
            Call SetListItem("Malawi")
            Call SetListItem("Malaysia")
            Call SetListItem("Maldives")
            Call SetListItem("Mali")
            Call SetListItem("Malta")
            Call SetListItem("Man, Isle of")
            Call SetListItem("Marshall Islands")
            Call SetListItem("Mauritania")
            Call SetListItem("Mauritius")
            Call SetListItem("Mexico")
            Call SetListItem("Midway Islands")
            Call SetListItem("Moldova")
            Call SetListItem("Monaco")
            Call SetListItem("Mongolia")
            Call SetListItem("Montenegro")
            Call SetListItem("Montserrat")
            Call SetListItem("Morocco")
            Call SetListItem("Mozambique")
            Call SetListItem("Namibia")
            Call SetListItem("Nauru")
            Call SetListItem("Navassa Island")
            Call SetListItem("Nepal")
            Call SetListItem("Netherlands")
            Call SetListItem("New Caledonia")
            Call SetListItem("New Zealand")
            Call SetListItem("Nicaragua")
            Call SetListItem("Niger")
            Call SetListItem("Nigeria")
            Call SetListItem("Niue")
            Call SetListItem("Norfolk Island")
            Call SetListItem("Norway")
            Call SetListItem("Oman")
            Call SetListItem("Other Country")
            Call SetListItem("Pakistan")
            Call SetListItem("Palau")
            Call SetListItem("Palmyra Atoll")
            Call SetListItem("Panama")
            Call SetListItem("Papua-New Guinea")
            Call SetListItem("Paracel Islands")
            Call SetListItem("Paraguay")
            Call SetListItem("Peru")
            Call SetListItem("Philippines")
            Call SetListItem("Pitcairn Islands")
            Call SetListItem("Poland")
            Call SetListItem("Portugal")
            Call SetListItem("Qatar")
            Call SetListItem("Romania")
            Call SetListItem("Russia")
            Call SetListItem("Rwanda")
            Call SetListItem("Saint Barthelemy")
            Call SetListItem("Saint Martin")
            Call SetListItem("Samoa")
            Call SetListItem("San Marino")
            Call SetListItem("Sao Tome & Principe")
            Call SetListItem("Saudi Arabia")
            Call SetListItem("Senegal")
            Call SetListItem("Serbia")
            Call SetListItem("Seychelles")
            Call SetListItem("Sierra Leone")
            Call SetListItem("Singapore")
            Call SetListItem("Sint Maarten")
            Call SetListItem("Slovakia")
            Call SetListItem("Slovenia")
            Call SetListItem("Solomon Islands")
            Call SetListItem("Somalia")
            Call SetListItem("South Africa")
    ' South Georgia & South Sandwich Islands is different in this list due to space constraints on the IV_USWEFWksht_IDInfo1 and IV_USEF_IDInfo1 questions
            Call SetListItem("South Georgia & Sandwich Islands")
            Call SetListItem("South Sudan")
            Call SetListItem("Spain")
            Call SetListItem("Spratly Islands")
            Call SetListItem("Sri Lanka")
            Call SetListItem("Saint Helena")
            Call SetListItem("Saint Kitts & Nevis")
            Call SetListItem("Saint Lucia Island")
            Call SetListItem("Saint Pierre & Miquelon")
            Call SetListItem("Saint Vincent & the Grenadines")
            Call SetListItem("Sudan")
            Call SetListItem("Suriname")
            Call SetListItem("Svalbard")
            Call SetListItem("Swaziland")
            Call SetListItem("Sweden")
            Call SetListItem("Switzerland")
            Call SetListItem("Syria")
            Call SetListItem("Taiwan")
            Call SetListItem("Tajikistan")
            Call SetListItem("Tanzania")
            Call SetListItem("Thailand")
            Call SetListItem("Togo")
            Call SetListItem("Tokelau")
            Call SetListItem("Tonga")
            Call SetListItem("Trinidad & Tobago")
            Call SetListItem("Tunisia")
            Call SetListItem("Turkey")
            Call SetListItem("Turkmenistan")
            Call SetListItem("Turks & Caicos Islands")
            Call SetListItem("Tuvalu")
            Call SetListItem("Uganda")
            Call SetListItem("Ukraine")
            Call SetListItem("United Arab Emirates")
            Call SetListItem("United Kingdom")
            Call SetListItem("Uruguay")
            Call SetListItem("Uzbekistan")
            Call SetListItem("Vanuatu")
            Call SetListItem("Venezuela")
            Call SetListItem("Vietnam")
            Call SetListItem("Wake Island")
            Call SetListItem("Wallis & Futuna")
            Call SetListItem("Western Sahara")
            Call SetListItem("Yemen (Aden)")
            Call SetListItem("Zambia")
            Call SetListItem("Zimbabwe")
        ElseIf TpID = "Foreign Passport" Then
           Call SetListItem("United States", "US")
    'Foreign countries
            Call SetListItem("Afghanistan")
            Call SetListItem("Akrotiri")
            Call SetListItem("Albania")
            Call SetListItem("Algeria")
            Call SetListItem("Andorra")
            Call SetListItem("Angola")
            Call SetListItem("Anguilla")
            Call SetListItem("Antarctica")
            Call SetListItem("Antigua & Barbuda")
            Call SetListItem("Argentina")
            Call SetListItem("Armenia")
            Call SetListItem("Aruba")
            Call SetListItem("Ashmore & Cartier Islands")
            Call SetListItem("Australia")
            Call SetListItem("Austria")
            Call SetListItem("Azerbaijan")
            Call SetListItem("Bahamas")
            Call SetListItem("Bahrain")
            Call SetListItem("Baker Island")
            Call SetListItem("Bangladesh")
            Call SetListItem("Barbados")
            Call SetListItem("Belarus")
            Call SetListItem("Belgium")
            Call SetListItem("Belize")
            Call SetListItem("Benin")
            Call SetListItem("Bermuda")
            Call SetListItem("Bhutan")
            Call SetListItem("Bolivia")
            Call SetListItem("Bosnia-Herzegovina")
            Call SetListItem("Botswana")
            Call SetListItem("Bouvet Island")
            Call SetListItem("Brazil")
            Call SetListItem("British Indian Ocean Territory")
            Call SetListItem("British Virgin Islands")
            Call SetListItem("Brunei")
            Call SetListItem("Bulgaria")
            Call SetListItem("Burkina Faso")
            Call SetListItem("Burma")
            Call SetListItem("Burundi")
            Call SetListItem("Cambodia")
            Call SetListItem("Cameroon")
            Call SetListItem("Canada")
            Call SetListItem("Cape Verde")
            Call SetListItem("Cayman Islands")
            Call SetListItem("Central African Republic")
            Call SetListItem("Chad")
            Call SetListItem("Chile")
            Call SetListItem("China")
            Call SetListItem("Christmas Island")
            Call SetListItem("Clipperton Island")
            Call SetListItem("Cocos (Keeling) Islands")
            Call SetListItem("Colombia")
            Call SetListItem("Comoros")
            Call SetListItem("Congo (Brazzaville)")
            Call SetListItem("Congo (Kinshasa)")
            Call SetListItem("Cooks Islands")
            Call SetListItem("Coral Sea Islands")
            Call SetListItem("Costa Rica")
            Call SetListItem("Cote d'Ivoire (Ivory Coast)")
            Call SetListItem("Croatia")
            Call SetListItem("Cuba")
            Call SetListItem("Curacao")
            Call SetListItem("Cyprus")
            Call SetListItem("Czech Republic")
            Call SetListItem("Denmark")
            Call SetListItem("Dhekelia")
            Call SetListItem("Djibouti")
            Call SetListItem("Dominica")
            Call SetListItem("Dominican Republic")
            Call SetListItem("East Timor")
            Call SetListItem("Ecuador")
            Call SetListItem("Egypt")
            Call SetListItem("El Salvador")
            Call SetListItem("Equatorial Guinea")
            Call SetListItem("Eritrea")
            Call SetListItem("Estonia")
            Call SetListItem("Ethiopia")
            Call SetListItem("Falkland Islands (Islas Malvinas)")
            Call SetListItem("Faroe Islands")
            Call SetListItem("Federated States of Micronesia")
            Call SetListItem("Fiji")
            Call SetListItem("Finland")
            Call SetListItem("France")
            Call SetListItem("French Polynesia")
            Call SetListItem("French Southern & Antarctic Lands")
            Call SetListItem("Gabon")
            Call SetListItem("The Gambia")
            Call SetListItem("Georgia")
            Call SetListItem("Germany")
            Call SetListItem("Ghana")
            Call SetListItem("Gibraltar")
            Call SetListItem("Greece")
            Call SetListItem("Greenland")
            Call SetListItem("Grenada")
            Call SetListItem("Guatemala")
            Call SetListItem("Guernsey")
            Call SetListItem("Guinea")
            Call SetListItem("Guinea-Bissau")
            Call SetListItem("Guyana")
            Call SetListItem("Haiti")
            Call SetListItem("Heard Island & McDonald Islands")
            Call SetListItem("Holy See")
            Call SetListItem("Honduras")
            Call SetListItem("Hong Kong")
            Call SetListItem("Howland Island")
            Call SetListItem("Hungary")
            Call SetListItem("Iceland")
            Call SetListItem("India")
            Call SetListItem("Indonesia")
            Call SetListItem("Iran")
            Call SetListItem("Iraq")
            Call SetListItem("Ireland")
            Call SetListItem("Israel")
            Call SetListItem("Italy")
            Call SetListItem("Jamaica")
            Call SetListItem("Jan Mayen")
            Call SetListItem("Japan")
            Call SetListItem("Jarvis Island")
            Call SetListItem("Jersey")
            Call SetListItem("Johnston Atoll")
            Call SetListItem("Jordan")
            Call SetListItem("Kazakhstan")
            Call SetListItem("Kenya")
            Call SetListItem("Kingman Reef")
            Call SetListItem("Kiribati")
    ' North and South Korea are different in this list due to space constraints on the IV_USWEFWksht_IDInfo1 and IV_USEF_IDInfo1 questions
            Call SetListItem("North Korea")
            Call SetListItem("South Korea")
            Call SetListItem("Kosovo")
            Call SetListItem("Kuwait")
            Call SetListItem("Kyrgyzstan")
            Call SetListItem("Laos")
            Call SetListItem("Latvia")
            Call SetListItem("Lebanon")
            Call SetListItem("Lesotho")
            Call SetListItem("Liberia")
            Call SetListItem("Libya")
            Call SetListItem("Liechtenstein")
            Call SetListItem("Lithuania")
            Call SetListItem("Luxembourg")
            Call SetListItem("Macau")
            Call SetListItem("Macedonia")
            Call SetListItem("Madagascar")
            Call SetListItem("Malawi")
            Call SetListItem("Malaysia")
            Call SetListItem("Maldives")
            Call SetListItem("Mali")
            Call SetListItem("Malta")
            Call SetListItem("Man, Isle of")
            Call SetListItem("Marshall Islands")
            Call SetListItem("Mauritania")
            Call SetListItem("Mauritius")
            Call SetListItem("Mexico")
            Call SetListItem("Midway Islands")
            Call SetListItem("Moldova")
            Call SetListItem("Monaco")
            Call SetListItem("Mongolia")
            Call SetListItem("Montenegro")
            Call SetListItem("Montserrat")
            Call SetListItem("Morocco")
            Call SetListItem("Mozambique")
            Call SetListItem("Namibia")
            Call SetListItem("Nauru")
            Call SetListItem("Navassa Island")
            Call SetListItem("Nepal")
            Call SetListItem("Netherlands")
            Call SetListItem("New Caledonia")
            Call SetListItem("New Zealand")
            Call SetListItem("Nicaragua")
            Call SetListItem("Niger")
            Call SetListItem("Nigeria")
            Call SetListItem("Niue")
            Call SetListItem("Norfolk Island")
            Call SetListItem("Norway")
            Call SetListItem("Oman")
            Call SetListItem("Other Country")
            Call SetListItem("Pakistan")
            Call SetListItem("Palau")
            Call SetListItem("Palmyra Atoll")
            Call SetListItem("Panama")
            Call SetListItem("Papua-New Guinea")
            Call SetListItem("Paracel Islands")
            Call SetListItem("Paraguay")
            Call SetListItem("Peru")
            Call SetListItem("Philippines")
            Call SetListItem("Pitcairn Islands")
            Call SetListItem("Poland")
            Call SetListItem("Portugal")
            Call SetListItem("Qatar")
            Call SetListItem("Romania")
            Call SetListItem("Russia")
            Call SetListItem("Rwanda")
            Call SetListItem("Saint Barthelemy")
            Call SetListItem("Saint Martin")
            Call SetListItem("Samoa")
            Call SetListItem("San Marino")
            Call SetListItem("Sao Tome & Principe")
            Call SetListItem("Saudi Arabia")
            Call SetListItem("Senegal")
            Call SetListItem("Serbia")
            Call SetListItem("Seychelles")
            Call SetListItem("Sierra Leone")
            Call SetListItem("Singapore")
            Call SetListItem("Sint Maarten")
            Call SetListItem("Slovakia")
            Call SetListItem("Slovenia")
            Call SetListItem("Solomon Islands")
            Call SetListItem("Somalia")
            Call SetListItem("South Africa")
    ' South Georgia & South Sandwich Islands is different in this list due to space constraints on the IV_USWEFWksht_IDInfo1 and IV_USEF_IDInfo1 questions
            Call SetListItem("South Georgia & Sandwich Islands")
            Call SetListItem("South Sudan")
            Call SetListItem("Spain")
            Call SetListItem("Spratly Islands")
            Call SetListItem("Sri Lanka")
            Call SetListItem("Saint Helena")
            Call SetListItem("Saint Kitts & Nevis")
            Call SetListItem("Saint Lucia Island")
            Call SetListItem("Saint Pierre & Miquelon")
            Call SetListItem("Saint Vincent & the Grenadines")
            Call SetListItem("Sudan")
            Call SetListItem("Suriname")
            Call SetListItem("Svalbard")
            Call SetListItem("Swaziland")
            Call SetListItem("Sweden")
            Call SetListItem("Switzerland")
            Call SetListItem("Syria")
            Call SetListItem("Taiwan")
            Call SetListItem("Tajikistan")
            Call SetListItem("Tanzania")
            Call SetListItem("Thailand")
            Call SetListItem("Togo")
            Call SetListItem("Tokelau")
            Call SetListItem("Tonga")
            Call SetListItem("Trinidad & Tobago")
            Call SetListItem("Tunisia")
            Call SetListItem("Turkey")
            Call SetListItem("Turkmenistan")
            Call SetListItem("Turks & Caicos Islands")
            Call SetListItem("Tuvalu")
            Call SetListItem("Uganda")
            Call SetListItem("Ukraine")
            Call SetListItem("United Arab Emirates")
            Call SetListItem("United Kingdom")
            Call SetListItem("Uruguay")
            Call SetListItem("Uzbekistan")
            Call SetListItem("Vanuatu")
            Call SetListItem("Venezuela")
            Call SetListItem("Vietnam")
            Call SetListItem("Wake Island")
            Call SetListItem("Wallis & Futuna")
            Call SetListItem("Western Sahara")
            Call SetListItem("Yemen (Aden)")
            Call SetListItem("Zambia")
            Call SetListItem("Zimbabwe")
        ElseIf TpID = "Mexican Consular ID Card" Then
           Call SetListItem("United States", "US")
    'Foreign countries
            Call SetListItem("Afghanistan")
            Call SetListItem("Akrotiri")
            Call SetListItem("Albania")
            Call SetListItem("Algeria")
            Call SetListItem("Andorra")
            Call SetListItem("Angola")
            Call SetListItem("Anguilla")
            Call SetListItem("Antarctica")
            Call SetListItem("Antigua & Barbuda")
            Call SetListItem("Argentina")
            Call SetListItem("Armenia")
            Call SetListItem("Aruba")
            Call SetListItem("Ashmore & Cartier Islands")
            Call SetListItem("Australia")
            Call SetListItem("Austria")
            Call SetListItem("Azerbaijan")
            Call SetListItem("Bahamas")
            Call SetListItem("Bahrain")
            Call SetListItem("Baker Island")
            Call SetListItem("Bangladesh")
            Call SetListItem("Barbados")
            Call SetListItem("Belarus")
            Call SetListItem("Belgium")
            Call SetListItem("Belize")
            Call SetListItem("Benin")
            Call SetListItem("Bermuda")
            Call SetListItem("Bhutan")
            Call SetListItem("Bolivia")
            Call SetListItem("Bosnia-Herzegovina")
            Call SetListItem("Botswana")
            Call SetListItem("Bouvet Island")
            Call SetListItem("Brazil")
            Call SetListItem("British Indian Ocean Territory")
            Call SetListItem("British Virgin Islands")
            Call SetListItem("Brunei")
            Call SetListItem("Bulgaria")
            Call SetListItem("Burkina Faso")
            Call SetListItem("Burma")
            Call SetListItem("Burundi")
            Call SetListItem("Cambodia")
            Call SetListItem("Cameroon")
            Call SetListItem("Canada")
            Call SetListItem("Cape Verde")
            Call SetListItem("Cayman Islands")
            Call SetListItem("Central African Republic")
            Call SetListItem("Chad")
            Call SetListItem("Chile")
            Call SetListItem("China")
            Call SetListItem("Christmas Island")
            Call SetListItem("Clipperton Island")
            Call SetListItem("Cocos (Keeling) Islands")
            Call SetListItem("Colombia")
            Call SetListItem("Comoros")
            Call SetListItem("Congo (Brazzaville)")
            Call SetListItem("Congo (Kinshasa)")
            Call SetListItem("Cooks Islands")
            Call SetListItem("Coral Sea Islands")
            Call SetListItem("Costa Rica")
            Call SetListItem("Cote d'Ivoire (Ivory Coast)")
            Call SetListItem("Croatia")
            Call SetListItem("Cuba")
            Call SetListItem("Curacao")
            Call SetListItem("Cyprus")
            Call SetListItem("Czech Republic")
            Call SetListItem("Denmark")
            Call SetListItem("Dhekelia")
            Call SetListItem("Djibouti")
            Call SetListItem("Dominica")
            Call SetListItem("Dominican Republic")
            Call SetListItem("East Timor")
            Call SetListItem("Ecuador")
            Call SetListItem("Egypt")
            Call SetListItem("El Salvador")
            Call SetListItem("Equatorial Guinea")
            Call SetListItem("Eritrea")
            Call SetListItem("Estonia")
            Call SetListItem("Ethiopia")
            Call SetListItem("Falkland Islands (Islas Malvinas)")
            Call SetListItem("Faroe Islands")
            Call SetListItem("Federated States of Micronesia")
            Call SetListItem("Fiji")
            Call SetListItem("Finland")
            Call SetListItem("France")
            Call SetListItem("French Polynesia")
            Call SetListItem("French Southern & Antarctic Lands")
            Call SetListItem("Gabon")
            Call SetListItem("The Gambia")
            Call SetListItem("Georgia")
            Call SetListItem("Germany")
            Call SetListItem("Ghana")
            Call SetListItem("Gibraltar")
            Call SetListItem("Greece")
            Call SetListItem("Greenland")
            Call SetListItem("Grenada")
            Call SetListItem("Guatemala")
            Call SetListItem("Guernsey")
            Call SetListItem("Guinea")
            Call SetListItem("Guinea-Bissau")
            Call SetListItem("Guyana")
            Call SetListItem("Haiti")
            Call SetListItem("Heard Island & McDonald Islands")
            Call SetListItem("Holy See")
            Call SetListItem("Honduras")
            Call SetListItem("Hong Kong")
            Call SetListItem("Howland Island")
            Call SetListItem("Hungary")
            Call SetListItem("Iceland")
            Call SetListItem("India")
            Call SetListItem("Indonesia")
            Call SetListItem("Iran")
            Call SetListItem("Iraq")
            Call SetListItem("Ireland")
            Call SetListItem("Israel")
            Call SetListItem("Italy")
            Call SetListItem("Jamaica")
            Call SetListItem("Jan Mayen")
            Call SetListItem("Japan")
            Call SetListItem("Jarvis Island")
            Call SetListItem("Jersey")
            Call SetListItem("Johnston Atoll")
            Call SetListItem("Jordan")
            Call SetListItem("Kazakhstan")
            Call SetListItem("Kenya")
            Call SetListItem("Kingman Reef")
            Call SetListItem("Kiribati")
    ' North and South Korea are different in this list due to space constraints on the IV_USWEFWksht_IDInfo1 and IV_USEF_IDInfo1 questions
            Call SetListItem("North Korea")
            Call SetListItem("South Korea")
            Call SetListItem("Kosovo")
            Call SetListItem("Kuwait")
            Call SetListItem("Kyrgyzstan")
            Call SetListItem("Laos")
            Call SetListItem("Latvia")
            Call SetListItem("Lebanon")
            Call SetListItem("Lesotho")
            Call SetListItem("Liberia")
            Call SetListItem("Libya")
            Call SetListItem("Liechtenstein")
            Call SetListItem("Lithuania")
            Call SetListItem("Luxembourg")
            Call SetListItem("Macau")
            Call SetListItem("Macedonia")
            Call SetListItem("Madagascar")
            Call SetListItem("Malawi")
            Call SetListItem("Malaysia")
            Call SetListItem("Maldives")
            Call SetListItem("Mali")
            Call SetListItem("Malta")
            Call SetListItem("Man, Isle of")
            Call SetListItem("Marshall Islands")
            Call SetListItem("Mauritania")
            Call SetListItem("Mauritius")
            Call SetListItem("Mexico")
            Call SetListItem("Midway Islands")
            Call SetListItem("Moldova")
            Call SetListItem("Monaco")
            Call SetListItem("Mongolia")
            Call SetListItem("Montenegro")
            Call SetListItem("Montserrat")
            Call SetListItem("Morocco")
            Call SetListItem("Mozambique")
            Call SetListItem("Namibia")
            Call SetListItem("Nauru")
            Call SetListItem("Navassa Island")
            Call SetListItem("Nepal")
            Call SetListItem("Netherlands")
            Call SetListItem("New Caledonia")
            Call SetListItem("New Zealand")
            Call SetListItem("Nicaragua")
            Call SetListItem("Niger")
            Call SetListItem("Nigeria")
            Call SetListItem("Niue")
            Call SetListItem("Norfolk Island")
            Call SetListItem("Norway")
            Call SetListItem("Oman")
            Call SetListItem("Other Country")
            Call SetListItem("Pakistan")
            Call SetListItem("Palau")
            Call SetListItem("Palmyra Atoll")
            Call SetListItem("Panama")
            Call SetListItem("Papua-New Guinea")
            Call SetListItem("Paracel Islands")
            Call SetListItem("Paraguay")
            Call SetListItem("Peru")
            Call SetListItem("Philippines")
            Call SetListItem("Pitcairn Islands")
            Call SetListItem("Poland")
            Call SetListItem("Portugal")
            Call SetListItem("Qatar")
            Call SetListItem("Romania")
            Call SetListItem("Russia")
            Call SetListItem("Rwanda")
            Call SetListItem("Saint Barthelemy")
            Call SetListItem("Saint Martin")
            Call SetListItem("Samoa")
            Call SetListItem("San Marino")
            Call SetListItem("Sao Tome & Principe")
            Call SetListItem("Saudi Arabia")
            Call SetListItem("Senegal")
            Call SetListItem("Serbia")
            Call SetListItem("Seychelles")
            Call SetListItem("Sierra Leone")
            Call SetListItem("Singapore")
            Call SetListItem("Sint Maarten")
            Call SetListItem("Slovakia")
            Call SetListItem("Slovenia")
            Call SetListItem("Solomon Islands")
            Call SetListItem("Somalia")
            Call SetListItem("South Africa")
    ' South Georgia & South Sandwich Islands is different in this list due to space constraints on the IV_USWEFWksht_IDInfo1 and IV_USEF_IDInfo1 questions
            Call SetListItem("South Georgia & Sandwich Islands")
            Call SetListItem("South Sudan")
            Call SetListItem("Spain")
            Call SetListItem("Spratly Islands")
            Call SetListItem("Sri Lanka")
            Call SetListItem("Saint Helena")
            Call SetListItem("Saint Kitts & Nevis")
            Call SetListItem("Saint Lucia Island")
            Call SetListItem("Saint Pierre & Miquelon")
            Call SetListItem("Saint Vincent & the Grenadines")
            Call SetListItem("Sudan")
            Call SetListItem("Suriname")
            Call SetListItem("Svalbard")
            Call SetListItem("Swaziland")
            Call SetListItem("Sweden")
            Call SetListItem("Switzerland")
            Call SetListItem("Syria")
            Call SetListItem("Taiwan")
            Call SetListItem("Tajikistan")
            Call SetListItem("Tanzania")
            Call SetListItem("Thailand")
            Call SetListItem("Togo")
            Call SetListItem("Tokelau")
            Call SetListItem("Tonga")
            Call SetListItem("Trinidad & Tobago")
            Call SetListItem("Tunisia")
            Call SetListItem("Turkey")
            Call SetListItem("Turkmenistan")
            Call SetListItem("Turks & Caicos Islands")
            Call SetListItem("Tuvalu")
            Call SetListItem("Uganda")
            Call SetListItem("Ukraine")
            Call SetListItem("United Arab Emirates")
            Call SetListItem("United Kingdom")
            Call SetListItem("Uruguay")
            Call SetListItem("Uzbekistan")
            Call SetListItem("Vanuatu")
            Call SetListItem("Venezuela")
            Call SetListItem("Vietnam")
            Call SetListItem("Wake Island")
            Call SetListItem("Wallis & Futuna")
            Call SetListItem("Western Sahara")
            Call SetListItem("Yemen (Aden)")
            Call SetListItem("Zambia")
            Call SetListItem("Zimbabwe")
        ElseIf TpID = "Alien ID" Or TpID = "Green Card" Or TpID = "Work Visa" Then
           Call SetListItem("United States", "US")
    'Foreign countries
            Call SetListItem("Afghanistan")
            Call SetListItem("Akrotiri")
            Call SetListItem("Albania")
            Call SetListItem("Algeria")
            Call SetListItem("Andorra")
            Call SetListItem("Angola")
            Call SetListItem("Anguilla")
            Call SetListItem("Antarctica")
            Call SetListItem("Antigua & Barbuda")
            Call SetListItem("Argentina")
            Call SetListItem("Armenia")
            Call SetListItem("Aruba")
            Call SetListItem("Ashmore & Cartier Islands")
            Call SetListItem("Australia")
            Call SetListItem("Austria")
            Call SetListItem("Azerbaijan")
            Call SetListItem("Bahamas")
            Call SetListItem("Bahrain")
            Call SetListItem("Baker Island")
            Call SetListItem("Bangladesh")
            Call SetListItem("Barbados")
            Call SetListItem("Belarus")
            Call SetListItem("Belgium")
            Call SetListItem("Belize")
            Call SetListItem("Benin")
            Call SetListItem("Bermuda")
            Call SetListItem("Bhutan")
            Call SetListItem("Bolivia")
            Call SetListItem("Bosnia-Herzegovina")
            Call SetListItem("Botswana")
            Call SetListItem("Bouvet Island")
            Call SetListItem("Brazil")
            Call SetListItem("British Indian Ocean Territory")
            Call SetListItem("British Virgin Islands")
            Call SetListItem("Brunei")
            Call SetListItem("Bulgaria")
            Call SetListItem("Burkina Faso")
            Call SetListItem("Burma")
            Call SetListItem("Burundi")
            Call SetListItem("Cambodia")
            Call SetListItem("Cameroon")
            Call SetListItem("Canada")
            Call SetListItem("Cape Verde")
            Call SetListItem("Cayman Islands")
            Call SetListItem("Central African Republic")
            Call SetListItem("Chad")
            Call SetListItem("Chile")
            Call SetListItem("China")
            Call SetListItem("Christmas Island")
            Call SetListItem("Clipperton Island")
            Call SetListItem("Cocos (Keeling) Islands")
            Call SetListItem("Colombia")
            Call SetListItem("Comoros")
            Call SetListItem("Congo (Brazzaville)")
            Call SetListItem("Congo (Kinshasa)")
            Call SetListItem("Cooks Islands")
            Call SetListItem("Coral Sea Islands")
            Call SetListItem("Costa Rica")
            Call SetListItem("Cote d'Ivoire (Ivory Coast)")
            Call SetListItem("Croatia")
            Call SetListItem("Cuba")
            Call SetListItem("Curacao")
            Call SetListItem("Cyprus")
            Call SetListItem("Czech Republic")
            Call SetListItem("Denmark")
            Call SetListItem("Dhekelia")
            Call SetListItem("Djibouti")
            Call SetListItem("Dominica")
            Call SetListItem("Dominican Republic")
            Call SetListItem("East Timor")
            Call SetListItem("Ecuador")
            Call SetListItem("Egypt")
            Call SetListItem("El Salvador")
            Call SetListItem("Equatorial Guinea")
            Call SetListItem("Eritrea")
            Call SetListItem("Estonia")
            Call SetListItem("Ethiopia")
            Call SetListItem("Falkland Islands (Islas Malvinas)")
            Call SetListItem("Faroe Islands")
            Call SetListItem("Federated States of Micronesia")
            Call SetListItem("Fiji")
            Call SetListItem("Finland")
            Call SetListItem("France")
            Call SetListItem("French Polynesia")
            Call SetListItem("French Southern & Antarctic Lands")
            Call SetListItem("Gabon")
            Call SetListItem("The Gambia")
            Call SetListItem("Georgia")
            Call SetListItem("Germany")
            Call SetListItem("Ghana")
            Call SetListItem("Gibraltar")
            Call SetListItem("Greece")
            Call SetListItem("Greenland")
            Call SetListItem("Grenada")
            Call SetListItem("Guatemala")
            Call SetListItem("Guernsey")
            Call SetListItem("Guinea")
            Call SetListItem("Guinea-Bissau")
            Call SetListItem("Guyana")
            Call SetListItem("Haiti")
            Call SetListItem("Heard Island & McDonald Islands")
            Call SetListItem("Holy See")
            Call SetListItem("Honduras")
            Call SetListItem("Hong Kong")
            Call SetListItem("Howland Island")
            Call SetListItem("Hungary")
            Call SetListItem("Iceland")
            Call SetListItem("India")
            Call SetListItem("Indonesia")
            Call SetListItem("Iran")
            Call SetListItem("Iraq")
            Call SetListItem("Ireland")
            Call SetListItem("Israel")
            Call SetListItem("Italy")
            Call SetListItem("Jamaica")
            Call SetListItem("Jan Mayen")
            Call SetListItem("Japan")
            Call SetListItem("Jarvis Island")
            Call SetListItem("Jersey")
            Call SetListItem("Johnston Atoll")
            Call SetListItem("Jordan")
            Call SetListItem("Kazakhstan")
            Call SetListItem("Kenya")
            Call SetListItem("Kingman Reef")
            Call SetListItem("Kiribati")
    ' North and South Korea are different in this list due to space constraints on the IV_USWEFWksht_IDInfo1 and IV_USEF_IDInfo1 questions
            Call SetListItem("North Korea")
            Call SetListItem("South Korea")
            Call SetListItem("Kosovo")
            Call SetListItem("Kuwait")
            Call SetListItem("Kyrgyzstan")
            Call SetListItem("Laos")
            Call SetListItem("Latvia")
            Call SetListItem("Lebanon")
            Call SetListItem("Lesotho")
            Call SetListItem("Liberia")
            Call SetListItem("Libya")
            Call SetListItem("Liechtenstein")
            Call SetListItem("Lithuania")
            Call SetListItem("Luxembourg")
            Call SetListItem("Macau")
            Call SetListItem("Macedonia")
            Call SetListItem("Madagascar")
            Call SetListItem("Malawi")
            Call SetListItem("Malaysia")
            Call SetListItem("Maldives")
            Call SetListItem("Mali")
            Call SetListItem("Malta")
            Call SetListItem("Man, Isle of")
            Call SetListItem("Marshall Islands")
            Call SetListItem("Mauritania")
            Call SetListItem("Mauritius")
            Call SetListItem("Mexico")
            Call SetListItem("Midway Islands")
            Call SetListItem("Moldova")
            Call SetListItem("Monaco")
            Call SetListItem("Mongolia")
            Call SetListItem("Montenegro")
            Call SetListItem("Montserrat")
            Call SetListItem("Morocco")
            Call SetListItem("Mozambique")
            Call SetListItem("Namibia")
            Call SetListItem("Nauru")
            Call SetListItem("Navassa Island")
            Call SetListItem("Nepal")
            Call SetListItem("Netherlands")
            Call SetListItem("New Caledonia")
            Call SetListItem("New Zealand")
            Call SetListItem("Nicaragua")
            Call SetListItem("Niger")
            Call SetListItem("Nigeria")
            Call SetListItem("Niue")
            Call SetListItem("Norfolk Island")
            Call SetListItem("Norway")
            Call SetListItem("Oman")
            Call SetListItem("Other Country")
            Call SetListItem("Pakistan")
            Call SetListItem("Palau")
            Call SetListItem("Palmyra Atoll")
            Call SetListItem("Panama")
            Call SetListItem("Papua-New Guinea")
            Call SetListItem("Paracel Islands")
            Call SetListItem("Paraguay")
            Call SetListItem("Peru")
            Call SetListItem("Philippines")
            Call SetListItem("Pitcairn Islands")
            Call SetListItem("Poland")
            Call SetListItem("Portugal")
            Call SetListItem("Qatar")
            Call SetListItem("Romania")
            Call SetListItem("Russia")
            Call SetListItem("Rwanda")
            Call SetListItem("Saint Barthelemy")
            Call SetListItem("Saint Martin")
            Call SetListItem("Samoa")
            Call SetListItem("San Marino")
            Call SetListItem("Sao Tome & Principe")
            Call SetListItem("Saudi Arabia")
            Call SetListItem("Senegal")
            Call SetListItem("Serbia")
            Call SetListItem("Seychelles")
            Call SetListItem("Sierra Leone")
            Call SetListItem("Singapore")
            Call SetListItem("Sint Maarten")
            Call SetListItem("Slovakia")
            Call SetListItem("Slovenia")
            Call SetListItem("Solomon Islands")
            Call SetListItem("Somalia")
            Call SetListItem("South Africa")
    ' South Georgia & South Sandwich Islands is different in this list due to space constraints on the IV_USWEFWksht_IDInfo1 and IV_USEF_IDInfo1 questions
            Call SetListItem("South Georgia & Sandwich Islands")
            Call SetListItem("South Sudan")
            Call SetListItem("Spain")
            Call SetListItem("Spratly Islands")
            Call SetListItem("Sri Lanka")
            Call SetListItem("Saint Helena")
            Call SetListItem("Saint Kitts & Nevis")
            Call SetListItem("Saint Lucia Island")
            Call SetListItem("Saint Pierre & Miquelon")
            Call SetListItem("Saint Vincent & the Grenadines")
            Call SetListItem("Sudan")
            Call SetListItem("Suriname")
            Call SetListItem("Svalbard")
            Call SetListItem("Swaziland")
            Call SetListItem("Sweden")
            Call SetListItem("Switzerland")
            Call SetListItem("Syria")
            Call SetListItem("Taiwan")
            Call SetListItem("Tajikistan")
            Call SetListItem("Tanzania")
            Call SetListItem("Thailand")
            Call SetListItem("Togo")
            Call SetListItem("Tokelau")
            Call SetListItem("Tonga")
            Call SetListItem("Trinidad & Tobago")
            Call SetListItem("Tunisia")
            Call SetListItem("Turkey")
            Call SetListItem("Turkmenistan")
            Call SetListItem("Turks & Caicos Islands")
            Call SetListItem("Tuvalu")
            Call SetListItem("Uganda")
            Call SetListItem("Ukraine")
            Call SetListItem("United Arab Emirates")
            Call SetListItem("United Kingdom")
            Call SetListItem("Uruguay")
            Call SetListItem("Uzbekistan")
            Call SetListItem("Vanuatu")
            Call SetListItem("Venezuela")
            Call SetListItem("Vietnam")
            Call SetListItem("Wake Island")
            Call SetListItem("Wallis & Futuna")
            Call SetListItem("Western Sahara")
            Call SetListItem("Yemen (Aden)")
            Call SetListItem("Zambia")
            Call SetListItem("Zimbabwe")
        End If
    Else
        If TpID = "U.S. Driver's License" Then
            Call SetListItem("AA - Military Address", "AA")
            Call SetListItem("AE - Military Address", "AE")
            Call SetListItem("AP - Military Address", "AP")
            Call SetListItem("AL - Alabama", "AL")
            Call SetListItem("AK - Alaska", "AK")
            Call SetListItem("AS - American Samoa", "AS")
            Call SetListItem("AZ - Arizona", "AZ")
            Call SetListItem("AR - Arkansas", "AR")
            Call SetListItem("CA - California", "CA")
            Call SetListItem("CO - Colorado", "CO")
            Call SetListItem("CT - Connecticut", "CT")
            Call SetListItem("DE - Delaware", "DE")
            Call SetListItem("DC - District of Columbia", "DC")
            Call SetListItem("FM - Federated States of Micronesia", "FM")
            Call SetListItem("FL - Florida", "FL")
            Call SetListItem("GA - Georgia", "GA")
            Call SetListItem("GU - Guam", "GU")
            Call SetListItem("HI - Hawaii", "HI")
            Call SetListItem("ID - Idaho", "ID")
            Call SetListItem("IL - Illinois", "IL")
            Call SetListItem("IN - Indiana", "IN")
            Call SetListItem("IA - Iowa", "IA")
            Call SetListItem("KS - Kansas", "KS")
            Call SetListItem("KY - Kentucky", "KY")
            Call SetListItem("LA - Louisiana", "LA")
            Call SetListItem("ME - Maine", "ME")
            Call SetListItem("MH - Marshall Islands", "MH")
            Call SetListItem("MD - Maryland", "MD")
            Call SetListItem("MA - Massachusetts", "MA")
            Call SetListItem("MI - Michigan", "MI")
            Call SetListItem("MN - Minnesota", "MN")
            Call SetListItem("MS - Mississippi", "MS")
            Call SetListItem("MO - Missouri", "MO")
            Call SetListItem("MT - Montana", "MT")
            Call SetListItem("NE - Nebraska", "NE")
            Call SetListItem("NV - Nevada", "NV")
            Call SetListItem("NH - New Hampshire", "NH")
            Call SetListItem("NJ - New Jersey", "NJ")
            Call SetListItem("NM - New Mexico", "NM")
            Call SetListItem("NY - New York", "NY")
            Call SetListItem("NC - North Carolina", "NC")
            Call SetListItem("ND - North Dakota", "ND")
            Call SetListItem("MP - Northern Mariana Islands", "MP")
            Call SetListItem("OH - Ohio", "OH")
            Call SetListItem("OK - Oklahoma", "OK")
            Call SetListItem("OR - Oregon", "OR")
            Call SetListItem("PW - Palau", "PW")
            Call SetListItem("PA - Pennsylvania", "PA")
            Call SetListItem("PR - Puerto Rico", "PR")
            Call SetListItem("RI - Rhode Island", "RI")
            Call SetListItem("SC - South Carolina", "SC")
            Call SetListItem("SD - South Dakota", "SD")
            Call SetListItem("TN - Tennessee", "TN")
            Call SetListItem("TX - Texas", "TX")
            Call SetListItem("UT - Utah", "UT")
            Call SetListItem("VT - Vermont", "VT")
            Call SetListItem("VA - Virginia", "VA")
            Call SetListItem("VI - Virgin Islands", "VI")
            Call SetListItem("WA - Washington", "WA")
            Call SetListItem("WV - West Virginia", "WV")
            Call SetListItem("WI - Wisconsin", "WI")
            Call SetListItem("WY - Wyoming", "WY")
        ElseIf TpID = "U.S. DMV/BMV State ID" Then
            Call SetListItem("AA - Military Address", "AA")
            Call SetListItem("AE - Military Address", "AE")
            Call SetListItem("AP - Military Address", "AP")
            Call SetListItem("AL - Alabama", "AL")
            Call SetListItem("AK - Alaska", "AK")
            Call SetListItem("AS - American Samoa", "AS")
            Call SetListItem("AZ - Arizona", "AZ")
            Call SetListItem("AR - Arkansas", "AR")
            Call SetListItem("CA - California", "CA")
            Call SetListItem("CO - Colorado", "CO")
            Call SetListItem("CT - Connecticut", "CT")
            Call SetListItem("DE - Delaware", "DE")
            Call SetListItem("DC - District of Columbia", "DC")
            Call SetListItem("FM - Federated States of Micronesia", "FM")
            Call SetListItem("FL - Florida", "FL")
            Call SetListItem("GA - Georgia", "GA")
            Call SetListItem("GU - Guam", "GU")
            Call SetListItem("HI - Hawaii", "HI")
            Call SetListItem("ID - Idaho", "ID")
            Call SetListItem("IL - Illinois", "IL")
            Call SetListItem("IN - Indiana", "IN")
            Call SetListItem("IA - Iowa", "IA")
            Call SetListItem("KS - Kansas", "KS")
            Call SetListItem("KY - Kentucky", "KY")
            Call SetListItem("LA - Louisiana", "LA")
            Call SetListItem("ME - Maine", "ME")
            Call SetListItem("MH - Marshall Islands", "MH")
            Call SetListItem("MD - Maryland", "MD")
            Call SetListItem("MA - Massachusetts", "MA")
            Call SetListItem("MI - Michigan", "MI")
            Call SetListItem("MN - Minnesota", "MN")
            Call SetListItem("MS - Mississippi", "MS")
            Call SetListItem("MO - Missouri", "MO")
            Call SetListItem("MT - Montana", "MT")
            Call SetListItem("NE - Nebraska", "NE")
            Call SetListItem("NV - Nevada", "NV")
            Call SetListItem("NH - New Hampshire", "NH")
            Call SetListItem("NJ - New Jersey", "NJ")
            Call SetListItem("NM - New Mexico", "NM")
            Call SetListItem("NY - New York", "NY")
            Call SetListItem("NC - North Carolina", "NC")
            Call SetListItem("ND - North Dakota", "ND")
            Call SetListItem("MP - Northern Mariana Islands", "MP")
            Call SetListItem("OH - Ohio", "OH")
            Call SetListItem("OK - Oklahoma", "OK")
            Call SetListItem("OR - Oregon", "OR")
            Call SetListItem("PW - Palau", "PW")
            Call SetListItem("PA - Pennsylvania", "PA")
            Call SetListItem("PR - Puerto Rico", "PR")
            Call SetListItem("RI - Rhode Island", "RI")
            Call SetListItem("SC - South Carolina", "SC")
            Call SetListItem("SD - South Dakota", "SD")
            Call SetListItem("TN - Tennessee", "TN")
            Call SetListItem("TX - Texas", "TX")
            Call SetListItem("UT - Utah", "UT")
            Call SetListItem("VT - Vermont", "VT")
            Call SetListItem("VA - Virginia", "VA")
            Call SetListItem("VI - Virgin Islands", "VI")
            Call SetListItem("WA - Washington", "WA")
            Call SetListItem("WV - West Virginia", "WV")
            Call SetListItem("WI - Wisconsin", "WI")
            Call SetListItem("WY - Wyoming", "WY")
        ElseIf TpID = "U.S. Military ID" Then
            Call SetListItem("United States", "US")
        ElseIf TpID = "U.S. Passport" Then
            Call SetListItem("United States", "US")
    'Foreign countries
            Call SetListItem("Afghanistan")
            Call SetListItem("Akrotiri")
            Call SetListItem("Albania")
            Call SetListItem("Algeria")
            Call SetListItem("Andorra")
            Call SetListItem("Angola")
            Call SetListItem("Anguilla")
            Call SetListItem("Antarctica")
            Call SetListItem("Antigua & Barbuda")
            Call SetListItem("Argentina")
            Call SetListItem("Armenia")
            Call SetListItem("Aruba")
            Call SetListItem("Ashmore & Cartier Islands")
            Call SetListItem("Australia")
            Call SetListItem("Austria")
            Call SetListItem("Azerbaijan")
            Call SetListItem("Bahamas")
            Call SetListItem("Bahrain")
            Call SetListItem("Baker Island")
            Call SetListItem("Bangladesh")
            Call SetListItem("Barbados")
            Call SetListItem("Belarus")
            Call SetListItem("Belgium")
            Call SetListItem("Belize")
            Call SetListItem("Benin")
            Call SetListItem("Bermuda")
            Call SetListItem("Bhutan")
            Call SetListItem("Bolivia")
            Call SetListItem("Bosnia-Herzegovina")
            Call SetListItem("Botswana")
            Call SetListItem("Bouvet Island")
            Call SetListItem("Brazil")
            Call SetListItem("British Indian Ocean Territory")
            Call SetListItem("British Virgin Islands")
            Call SetListItem("Brunei")
            Call SetListItem("Bulgaria")
            Call SetListItem("Burkina Faso")
            Call SetListItem("Burma")
            Call SetListItem("Burundi")
            Call SetListItem("Cambodia")
            Call SetListItem("Cameroon")
            Call SetListItem("Canada")
            Call SetListItem("Cape Verde")
            Call SetListItem("Cayman Islands")
            Call SetListItem("Central African Republic")
            Call SetListItem("Chad")
            Call SetListItem("Chile")
            Call SetListItem("China")
            Call SetListItem("Christmas Island")
            Call SetListItem("Clipperton Island")
            Call SetListItem("Cocos (Keeling) Islands")
            Call SetListItem("Colombia")
            Call SetListItem("Comoros")
            Call SetListItem("Congo (Brazzaville)")
            Call SetListItem("Congo (Kinshasa)")
            Call SetListItem("Cooks Islands")
            Call SetListItem("Coral Sea Islands")
            Call SetListItem("Costa Rica")
            Call SetListItem("Cote d'Ivoire (Ivory Coast)")
            Call SetListItem("Croatia")
            Call SetListItem("Cuba")
            Call SetListItem("Curacao")
            Call SetListItem("Cyprus")
            Call SetListItem("Czech Republic")
            Call SetListItem("Denmark")
            Call SetListItem("Dhekelia")
            Call SetListItem("Djibouti")
            Call SetListItem("Dominica")
            Call SetListItem("Dominican Republic")
            Call SetListItem("East Timor")
            Call SetListItem("Ecuador")
            Call SetListItem("Egypt")
            Call SetListItem("El Salvador")
            Call SetListItem("Equatorial Guinea")
            Call SetListItem("Eritrea")
            Call SetListItem("Estonia")
            Call SetListItem("Ethiopia")
            Call SetListItem("Falkland Islands (Islas Malvinas)")
            Call SetListItem("Faroe Islands")
            Call SetListItem("Federated States of Micronesia")
            Call SetListItem("Fiji")
            Call SetListItem("Finland")
            Call SetListItem("France")
            Call SetListItem("French Polynesia")
            Call SetListItem("French Southern & Antarctic Lands")
            Call SetListItem("Gabon")
            Call SetListItem("The Gambia")
            Call SetListItem("Georgia")
            Call SetListItem("Germany")
            Call SetListItem("Ghana")
            Call SetListItem("Gibraltar")
            Call SetListItem("Greece")
            Call SetListItem("Greenland")
            Call SetListItem("Grenada")
            Call SetListItem("Guatemala")
            Call SetListItem("Guernsey")
            Call SetListItem("Guinea")
            Call SetListItem("Guinea-Bissau")
            Call SetListItem("Guyana")
            Call SetListItem("Haiti")
            Call SetListItem("Heard Island & McDonald Islands")
            Call SetListItem("Holy See")
            Call SetListItem("Honduras")
            Call SetListItem("Hong Kong")
            Call SetListItem("Howland Island")
            Call SetListItem("Hungary")
            Call SetListItem("Iceland")
            Call SetListItem("India")
            Call SetListItem("Indonesia")
            Call SetListItem("Iran")
            Call SetListItem("Iraq")
            Call SetListItem("Ireland")
            Call SetListItem("Israel")
            Call SetListItem("Italy")
            Call SetListItem("Jamaica")
            Call SetListItem("Jan Mayen")
            Call SetListItem("Japan")
            Call SetListItem("Jarvis Island")
            Call SetListItem("Jersey")
            Call SetListItem("Johnston Atoll")
            Call SetListItem("Jordan")
            Call SetListItem("Kazakhstan")
            Call SetListItem("Kenya")
            Call SetListItem("Kingman Reef")
            Call SetListItem("Kiribati")
    ' North and South Korea are different in this list due to space constraints on the IV_USWEFWksht_IDInfo1 and IV_USEF_IDInfo1 questions
            Call SetListItem("North Korea")
            Call SetListItem("South Korea")
            Call SetListItem("Kosovo")
            Call SetListItem("Kuwait")
            Call SetListItem("Kyrgyzstan")
            Call SetListItem("Laos")
            Call SetListItem("Latvia")
            Call SetListItem("Lebanon")
            Call SetListItem("Lesotho")
            Call SetListItem("Liberia")
            Call SetListItem("Libya")
            Call SetListItem("Liechtenstein")
            Call SetListItem("Lithuania")
            Call SetListItem("Luxembourg")
            Call SetListItem("Macau")
            Call SetListItem("Macedonia")
            Call SetListItem("Madagascar")
            Call SetListItem("Malawi")
            Call SetListItem("Malaysia")
            Call SetListItem("Maldives")
            Call SetListItem("Mali")
            Call SetListItem("Malta")
            Call SetListItem("Man, Isle of")
            Call SetListItem("Marshall Islands")
            Call SetListItem("Mauritania")
            Call SetListItem("Mauritius")
            Call SetListItem("Mexico")
            Call SetListItem("Midway Islands")
            Call SetListItem("Moldova")
            Call SetListItem("Monaco")
            Call SetListItem("Mongolia")
            Call SetListItem("Montenegro")
            Call SetListItem("Montserrat")
            Call SetListItem("Morocco")
            Call SetListItem("Mozambique")
            Call SetListItem("Namibia")
            Call SetListItem("Nauru")
            Call SetListItem("Navassa Island")
            Call SetListItem("Nepal")
            Call SetListItem("Netherlands")
            Call SetListItem("New Caledonia")
            Call SetListItem("New Zealand")
            Call SetListItem("Nicaragua")
            Call SetListItem("Niger")
            Call SetListItem("Nigeria")
            Call SetListItem("Niue")
            Call SetListItem("Norfolk Island")
            Call SetListItem("Norway")
            Call SetListItem("Oman")
            Call SetListItem("Other Country")
            Call SetListItem("Pakistan")
            Call SetListItem("Palau")
            Call SetListItem("Palmyra Atoll")
            Call SetListItem("Panama")
            Call SetListItem("Papua-New Guinea")
            Call SetListItem("Paracel Islands")
            Call SetListItem("Paraguay")
            Call SetListItem("Peru")
            Call SetListItem("Philippines")
            Call SetListItem("Pitcairn Islands")
            Call SetListItem("Poland")
            Call SetListItem("Portugal")
            Call SetListItem("Qatar")
            Call SetListItem("Romania")
            Call SetListItem("Russia")
            Call SetListItem("Rwanda")
            Call SetListItem("Saint Barthelemy")
            Call SetListItem("Saint Martin")
            Call SetListItem("Samoa")
            Call SetListItem("San Marino")
            Call SetListItem("Sao Tome & Principe")
            Call SetListItem("Saudi Arabia")
            Call SetListItem("Senegal")
            Call SetListItem("Serbia")
            Call SetListItem("Seychelles")
            Call SetListItem("Sierra Leone")
            Call SetListItem("Singapore")
            Call SetListItem("Sint Maarten")
            Call SetListItem("Slovakia")
            Call SetListItem("Slovenia")
            Call SetListItem("Solomon Islands")
            Call SetListItem("Somalia")
            Call SetListItem("South Africa")
    ' South Georgia & South Sandwich Islands is different in this list due to space constraints on the IV_USWEFWksht_IDInfo1 and IV_USEF_IDInfo1 questions
            Call SetListItem("South Georgia & Sandwich Islands")
            Call SetListItem("South Sudan")
            Call SetListItem("Spain")
            Call SetListItem("Spratly Islands")
            Call SetListItem("Sri Lanka")
            Call SetListItem("Saint Helena")
            Call SetListItem("Saint Kitts & Nevis")
            Call SetListItem("Saint Lucia Island")
            Call SetListItem("Saint Pierre & Miquelon")
            Call SetListItem("Saint Vincent & the Grenadines")
            Call SetListItem("Sudan")
            Call SetListItem("Suriname")
            Call SetListItem("Svalbard")
            Call SetListItem("Swaziland")
            Call SetListItem("Sweden")
            Call SetListItem("Switzerland")
            Call SetListItem("Syria")
            Call SetListItem("Taiwan")
            Call SetListItem("Tajikistan")
            Call SetListItem("Tanzania")
            Call SetListItem("Thailand")
            Call SetListItem("Togo")
            Call SetListItem("Tokelau")
            Call SetListItem("Tonga")
            Call SetListItem("Trinidad & Tobago")
            Call SetListItem("Tunisia")
            Call SetListItem("Turkey")
            Call SetListItem("Turkmenistan")
            Call SetListItem("Turks & Caicos Islands")
            Call SetListItem("Tuvalu")
            Call SetListItem("Uganda")
            Call SetListItem("Ukraine")
            Call SetListItem("United Arab Emirates")
            Call SetListItem("United Kingdom")
            Call SetListItem("Uruguay")
            Call SetListItem("Uzbekistan")
            Call SetListItem("Vanuatu")
            Call SetListItem("Venezuela")
            Call SetListItem("Vietnam")
            Call SetListItem("Wake Island")
            Call SetListItem("Wallis & Futuna")
            Call SetListItem("Western Sahara")
            Call SetListItem("Yemen (Aden)")
            Call SetListItem("Zambia")
            Call SetListItem("Zimbabwe")
        ElseIf TpID = "Foreign Passport" Then
            Call SetListItem("United States", "US")
    'Foreign countries
            Call SetListItem("Afghanistan")
            Call SetListItem("Akrotiri")
            Call SetListItem("Albania")
            Call SetListItem("Algeria")
            Call SetListItem("Andorra")
            Call SetListItem("Angola")
            Call SetListItem("Anguilla")
            Call SetListItem("Antarctica")
            Call SetListItem("Antigua & Barbuda")
            Call SetListItem("Argentina")
            Call SetListItem("Armenia")
            Call SetListItem("Aruba")
            Call SetListItem("Ashmore & Cartier Islands")
            Call SetListItem("Australia")
            Call SetListItem("Austria")
            Call SetListItem("Azerbaijan")
            Call SetListItem("Bahamas")
            Call SetListItem("Bahrain")
            Call SetListItem("Baker Island")
            Call SetListItem("Bangladesh")
            Call SetListItem("Barbados")
            Call SetListItem("Belarus")
            Call SetListItem("Belgium")
            Call SetListItem("Belize")
            Call SetListItem("Benin")
            Call SetListItem("Bermuda")
            Call SetListItem("Bhutan")
            Call SetListItem("Bolivia")
            Call SetListItem("Bosnia-Herzegovina")
            Call SetListItem("Botswana")
            Call SetListItem("Bouvet Island")
            Call SetListItem("Brazil")
            Call SetListItem("British Indian Ocean Territory")
            Call SetListItem("British Virgin Islands")
            Call SetListItem("Brunei")
            Call SetListItem("Bulgaria")
            Call SetListItem("Burkina Faso")
            Call SetListItem("Burma")
            Call SetListItem("Burundi")
            Call SetListItem("Cambodia")
            Call SetListItem("Cameroon")
            Call SetListItem("Canada")
            Call SetListItem("Cape Verde")
            Call SetListItem("Cayman Islands")
            Call SetListItem("Central African Republic")
            Call SetListItem("Chad")
            Call SetListItem("Chile")
            Call SetListItem("China")
            Call SetListItem("Christmas Island")
            Call SetListItem("Clipperton Island")
            Call SetListItem("Cocos (Keeling) Islands")
            Call SetListItem("Colombia")
            Call SetListItem("Comoros")
            Call SetListItem("Congo (Brazzaville)")
            Call SetListItem("Congo (Kinshasa)")
            Call SetListItem("Cooks Islands")
            Call SetListItem("Coral Sea Islands")
            Call SetListItem("Costa Rica")
            Call SetListItem("Cote d'Ivoire (Ivory Coast)")
            Call SetListItem("Croatia")
            Call SetListItem("Cuba")
            Call SetListItem("Curacao")
            Call SetListItem("Cyprus")
            Call SetListItem("Czech Republic")
            Call SetListItem("Denmark")
            Call SetListItem("Dhekelia")
            Call SetListItem("Djibouti")
            Call SetListItem("Dominica")
            Call SetListItem("Dominican Republic")
            Call SetListItem("East Timor")
            Call SetListItem("Ecuador")
            Call SetListItem("Egypt")
            Call SetListItem("El Salvador")
            Call SetListItem("Equatorial Guinea")
            Call SetListItem("Eritrea")
            Call SetListItem("Estonia")
            Call SetListItem("Ethiopia")
            Call SetListItem("Falkland Islands (Islas Malvinas)")
            Call SetListItem("Faroe Islands")
            Call SetListItem("Federated States of Micronesia")
            Call SetListItem("Fiji")
            Call SetListItem("Finland")
            Call SetListItem("France")
            Call SetListItem("French Polynesia")
            Call SetListItem("French Southern & Antarctic Lands")
            Call SetListItem("Gabon")
            Call SetListItem("The Gambia")
            Call SetListItem("Georgia")
            Call SetListItem("Germany")
            Call SetListItem("Ghana")
            Call SetListItem("Gibraltar")
            Call SetListItem("Greece")
            Call SetListItem("Greenland")
            Call SetListItem("Grenada")
            Call SetListItem("Guatemala")
            Call SetListItem("Guernsey")
            Call SetListItem("Guinea")
            Call SetListItem("Guinea-Bissau")
            Call SetListItem("Guyana")
            Call SetListItem("Haiti")
            Call SetListItem("Heard Island & McDonald Islands")
            Call SetListItem("Holy See")
            Call SetListItem("Honduras")
            Call SetListItem("Hong Kong")
            Call SetListItem("Howland Island")
            Call SetListItem("Hungary")
            Call SetListItem("Iceland")
            Call SetListItem("India")
            Call SetListItem("Indonesia")
            Call SetListItem("Iran")
            Call SetListItem("Iraq")
            Call SetListItem("Ireland")
            Call SetListItem("Israel")
            Call SetListItem("Italy")
            Call SetListItem("Jamaica")
            Call SetListItem("Jan Mayen")
            Call SetListItem("Japan")
            Call SetListItem("Jarvis Island")
            Call SetListItem("Jersey")
            Call SetListItem("Johnston Atoll")
            Call SetListItem("Jordan")
            Call SetListItem("Kazakhstan")
            Call SetListItem("Kenya")
            Call SetListItem("Kingman Reef")
            Call SetListItem("Kiribati")
    ' North and South Korea are different in this list due to space constraints on the IV_USWEFWksht_IDInfo1 and IV_USEF_IDInfo1 questions
            Call SetListItem("North Korea")
            Call SetListItem("South Korea")
            Call SetListItem("Kosovo")
            Call SetListItem("Kuwait")
            Call SetListItem("Kyrgyzstan")
            Call SetListItem("Laos")
            Call SetListItem("Latvia")
            Call SetListItem("Lebanon")
            Call SetListItem("Lesotho")
            Call SetListItem("Liberia")
            Call SetListItem("Libya")
            Call SetListItem("Liechtenstein")
            Call SetListItem("Lithuania")
            Call SetListItem("Luxembourg")
            Call SetListItem("Macau")
            Call SetListItem("Macedonia")
            Call SetListItem("Madagascar")
            Call SetListItem("Malawi")
            Call SetListItem("Malaysia")
            Call SetListItem("Maldives")
            Call SetListItem("Mali")
            Call SetListItem("Malta")
            Call SetListItem("Man, Isle of")
            Call SetListItem("Marshall Islands")
            Call SetListItem("Mauritania")
            Call SetListItem("Mauritius")
            Call SetListItem("Mexico")
            Call SetListItem("Midway Islands")
            Call SetListItem("Moldova")
            Call SetListItem("Monaco")
            Call SetListItem("Mongolia")
            Call SetListItem("Montenegro")
            Call SetListItem("Montserrat")
            Call SetListItem("Morocco")
            Call SetListItem("Mozambique")
            Call SetListItem("Namibia")
            Call SetListItem("Nauru")
            Call SetListItem("Navassa Island")
            Call SetListItem("Nepal")
            Call SetListItem("Netherlands")
            Call SetListItem("New Caledonia")
            Call SetListItem("New Zealand")
            Call SetListItem("Nicaragua")
            Call SetListItem("Niger")
            Call SetListItem("Nigeria")
            Call SetListItem("Niue")
            Call SetListItem("Norfolk Island")
            Call SetListItem("Norway")
            Call SetListItem("Oman")
            Call SetListItem("Other Country")
            Call SetListItem("Pakistan")
            Call SetListItem("Palau")
            Call SetListItem("Palmyra Atoll")
            Call SetListItem("Panama")
            Call SetListItem("Papua-New Guinea")
            Call SetListItem("Paracel Islands")
            Call SetListItem("Paraguay")
            Call SetListItem("Peru")
            Call SetListItem("Philippines")
            Call SetListItem("Pitcairn Islands")
            Call SetListItem("Poland")
            Call SetListItem("Portugal")
            Call SetListItem("Qatar")
            Call SetListItem("Romania")
            Call SetListItem("Russia")
            Call SetListItem("Rwanda")
            Call SetListItem("Saint Barthelemy")
            Call SetListItem("Saint Martin")
            Call SetListItem("Samoa")
            Call SetListItem("San Marino")
            Call SetListItem("Sao Tome & Principe")
            Call SetListItem("Saudi Arabia")
            Call SetListItem("Senegal")
            Call SetListItem("Serbia")
            Call SetListItem("Seychelles")
            Call SetListItem("Sierra Leone")
            Call SetListItem("Singapore")
            Call SetListItem("Sint Maarten")
            Call SetListItem("Slovakia")
            Call SetListItem("Slovenia")
            Call SetListItem("Solomon Islands")
            Call SetListItem("Somalia")
            Call SetListItem("South Africa")
    ' South Georgia & South Sandwich Islands is different in this list due to space constraints on the IV_USWEFWksht_IDInfo1 and IV_USEF_IDInfo1 questions
            Call SetListItem("South Georgia & Sandwich Islands")
            Call SetListItem("South Sudan")
            Call SetListItem("Spain")
            Call SetListItem("Spratly Islands")
            Call SetListItem("Sri Lanka")
            Call SetListItem("Saint Helena")
            Call SetListItem("Saint Kitts & Nevis")
            Call SetListItem("Saint Lucia Island")
            Call SetListItem("Saint Pierre & Miquelon")
            Call SetListItem("Saint Vincent & the Grenadines")
            Call SetListItem("Sudan")
            Call SetListItem("Suriname")
            Call SetListItem("Svalbard")
            Call SetListItem("Swaziland")
            Call SetListItem("Sweden")
            Call SetListItem("Switzerland")
            Call SetListItem("Syria")
            Call SetListItem("Taiwan")
            Call SetListItem("Tajikistan")
            Call SetListItem("Tanzania")
            Call SetListItem("Thailand")
            Call SetListItem("Togo")
            Call SetListItem("Tokelau")
            Call SetListItem("Tonga")
            Call SetListItem("Trinidad & Tobago")
            Call SetListItem("Tunisia")
            Call SetListItem("Turkey")
            Call SetListItem("Turkmenistan")
            Call SetListItem("Turks & Caicos Islands")
            Call SetListItem("Tuvalu")
            Call SetListItem("Uganda")
            Call SetListItem("Ukraine")
            Call SetListItem("United Arab Emirates")
            Call SetListItem("United Kingdom")
            Call SetListItem("Uruguay")
            Call SetListItem("Uzbekistan")
            Call SetListItem("Vanuatu")
            Call SetListItem("Venezuela")
            Call SetListItem("Vietnam")
            Call SetListItem("Wake Island")
            Call SetListItem("Wallis & Futuna")
            Call SetListItem("Western Sahara")
            Call SetListItem("Yemen (Aden)")
            Call SetListItem("Zambia")
            Call SetListItem("Zimbabwe")
        ElseIf TpID = "Resident Alien ID" Then
            Call SetListItem("United States", "US")
    'Foreign countries
            Call SetListItem("Afghanistan")
            Call SetListItem("Akrotiri")
            Call SetListItem("Albania")
            Call SetListItem("Algeria")
            Call SetListItem("Andorra")
            Call SetListItem("Angola")
            Call SetListItem("Anguilla")
            Call SetListItem("Antarctica")
            Call SetListItem("Antigua & Barbuda")
            Call SetListItem("Argentina")
            Call SetListItem("Armenia")
            Call SetListItem("Aruba")
            Call SetListItem("Ashmore & Cartier Islands")
            Call SetListItem("Australia")
            Call SetListItem("Austria")
            Call SetListItem("Azerbaijan")
            Call SetListItem("Bahamas")
            Call SetListItem("Bahrain")
            Call SetListItem("Baker Island")
            Call SetListItem("Bangladesh")
            Call SetListItem("Barbados")
            Call SetListItem("Belarus")
            Call SetListItem("Belgium")
            Call SetListItem("Belize")
            Call SetListItem("Benin")
            Call SetListItem("Bermuda")
            Call SetListItem("Bhutan")
            Call SetListItem("Bolivia")
            Call SetListItem("Bosnia-Herzegovina")
            Call SetListItem("Botswana")
            Call SetListItem("Bouvet Island")
            Call SetListItem("Brazil")
            Call SetListItem("British Indian Ocean Territory")
            Call SetListItem("British Virgin Islands")
            Call SetListItem("Brunei")
            Call SetListItem("Bulgaria")
            Call SetListItem("Burkina Faso")
            Call SetListItem("Burma")
            Call SetListItem("Burundi")
            Call SetListItem("Cambodia")
            Call SetListItem("Cameroon")
            Call SetListItem("Canada")
            Call SetListItem("Cape Verde")
            Call SetListItem("Cayman Islands")
            Call SetListItem("Central African Republic")
            Call SetListItem("Chad")
            Call SetListItem("Chile")
            Call SetListItem("China")
            Call SetListItem("Christmas Island")
            Call SetListItem("Clipperton Island")
            Call SetListItem("Cocos (Keeling) Islands")
            Call SetListItem("Colombia")
            Call SetListItem("Comoros")
            Call SetListItem("Congo (Brazzaville)")
            Call SetListItem("Congo (Kinshasa)")
            Call SetListItem("Cooks Islands")
            Call SetListItem("Coral Sea Islands")
            Call SetListItem("Costa Rica")
            Call SetListItem("Cote d'Ivoire (Ivory Coast)")
            Call SetListItem("Croatia")
            Call SetListItem("Cuba")
            Call SetListItem("Curacao")
            Call SetListItem("Cyprus")
            Call SetListItem("Czech Republic")
            Call SetListItem("Denmark")
            Call SetListItem("Dhekelia")
            Call SetListItem("Djibouti")
            Call SetListItem("Dominica")
            Call SetListItem("Dominican Republic")
            Call SetListItem("East Timor")
            Call SetListItem("Ecuador")
            Call SetListItem("Egypt")
            Call SetListItem("El Salvador")
            Call SetListItem("Equatorial Guinea")
            Call SetListItem("Eritrea")
            Call SetListItem("Estonia")
            Call SetListItem("Ethiopia")
            Call SetListItem("Falkland Islands (Islas Malvinas)")
            Call SetListItem("Faroe Islands")
            Call SetListItem("Federated States of Micronesia")
            Call SetListItem("Fiji")
            Call SetListItem("Finland")
            Call SetListItem("France")
            Call SetListItem("French Polynesia")
            Call SetListItem("French Southern & Antarctic Lands")
            Call SetListItem("Gabon")
            Call SetListItem("The Gambia")
            Call SetListItem("Georgia")
            Call SetListItem("Germany")
            Call SetListItem("Ghana")
            Call SetListItem("Gibraltar")
            Call SetListItem("Greece")
            Call SetListItem("Greenland")
            Call SetListItem("Grenada")
            Call SetListItem("Guatemala")
            Call SetListItem("Guernsey")
            Call SetListItem("Guinea")
            Call SetListItem("Guinea-Bissau")
            Call SetListItem("Guyana")
            Call SetListItem("Haiti")
            Call SetListItem("Heard Island & McDonald Islands")
            Call SetListItem("Holy See")
            Call SetListItem("Honduras")
            Call SetListItem("Hong Kong")
            Call SetListItem("Howland Island")
            Call SetListItem("Hungary")
            Call SetListItem("Iceland")
            Call SetListItem("India")
            Call SetListItem("Indonesia")
            Call SetListItem("Iran")
            Call SetListItem("Iraq")
            Call SetListItem("Ireland")
            Call SetListItem("Israel")
            Call SetListItem("Italy")
            Call SetListItem("Jamaica")
            Call SetListItem("Jan Mayen")
            Call SetListItem("Japan")
            Call SetListItem("Jarvis Island")
            Call SetListItem("Jersey")
            Call SetListItem("Johnston Atoll")
            Call SetListItem("Jordan")
            Call SetListItem("Kazakhstan")
            Call SetListItem("Kenya")
            Call SetListItem("Kingman Reef")
            Call SetListItem("Kiribati")
    ' North and South Korea are different in this list due to space constraints on the IV_USWEFWksht_IDInfo1 and IV_USEF_IDInfo1 questions
            Call SetListItem("North Korea")
            Call SetListItem("South Korea")
            Call SetListItem("Kosovo")
            Call SetListItem("Kuwait")
            Call SetListItem("Kyrgyzstan")
            Call SetListItem("Laos")
            Call SetListItem("Latvia")
            Call SetListItem("Lebanon")
            Call SetListItem("Lesotho")
            Call SetListItem("Liberia")
            Call SetListItem("Libya")
            Call SetListItem("Liechtenstein")
            Call SetListItem("Lithuania")
            Call SetListItem("Luxembourg")
            Call SetListItem("Macau")
            Call SetListItem("Macedonia")
            Call SetListItem("Madagascar")
            Call SetListItem("Malawi")
            Call SetListItem("Malaysia")
            Call SetListItem("Maldives")
            Call SetListItem("Mali")
            Call SetListItem("Malta")
            Call SetListItem("Man, Isle of")
            Call SetListItem("Marshall Islands")
            Call SetListItem("Mauritania")
            Call SetListItem("Mauritius")
            Call SetListItem("Mexico")
            Call SetListItem("Midway Islands")
            Call SetListItem("Moldova")
            Call SetListItem("Monaco")
            Call SetListItem("Mongolia")
            Call SetListItem("Montenegro")
            Call SetListItem("Montserrat")
            Call SetListItem("Morocco")
            Call SetListItem("Mozambique")
            Call SetListItem("Namibia")
            Call SetListItem("Nauru")
            Call SetListItem("Navassa Island")
            Call SetListItem("Nepal")
            Call SetListItem("Netherlands")
            Call SetListItem("New Caledonia")
            Call SetListItem("New Zealand")
            Call SetListItem("Nicaragua")
            Call SetListItem("Niger")
            Call SetListItem("Nigeria")
            Call SetListItem("Niue")
            Call SetListItem("Norfolk Island")
            Call SetListItem("Norway")
            Call SetListItem("Oman")
            Call SetListItem("Other Country")
            Call SetListItem("Pakistan")
            Call SetListItem("Palau")
            Call SetListItem("Palmyra Atoll")
            Call SetListItem("Panama")
            Call SetListItem("Papua-New Guinea")
            Call SetListItem("Paracel Islands")
            Call SetListItem("Paraguay")
            Call SetListItem("Peru")
            Call SetListItem("Philippines")
            Call SetListItem("Pitcairn Islands")
            Call SetListItem("Poland")
            Call SetListItem("Portugal")
            Call SetListItem("Qatar")
            Call SetListItem("Romania")
            Call SetListItem("Russia")
            Call SetListItem("Rwanda")
            Call SetListItem("Saint Barthelemy")
            Call SetListItem("Saint Martin")
            Call SetListItem("Samoa")
            Call SetListItem("San Marino")
            Call SetListItem("Sao Tome & Principe")
            Call SetListItem("Saudi Arabia")
            Call SetListItem("Senegal")
            Call SetListItem("Serbia")
            Call SetListItem("Seychelles")
            Call SetListItem("Sierra Leone")
            Call SetListItem("Singapore")
            Call SetListItem("Sint Maarten")
            Call SetListItem("Slovakia")
            Call SetListItem("Slovenia")
            Call SetListItem("Solomon Islands")
            Call SetListItem("Somalia")
            Call SetListItem("South Africa")
    ' South Georgia & South Sandwich Islands is different in this list due to space constraints on the IV_USWEFWksht_IDInfo1 and IV_USEF_IDInfo1 questions
            Call SetListItem("South Georgia & Sandwich Islands")
            Call SetListItem("South Sudan")
            Call SetListItem("Spain")
            Call SetListItem("Spratly Islands")
            Call SetListItem("Sri Lanka")
            Call SetListItem("Saint Helena")
            Call SetListItem("Saint Kitts & Nevis")
            Call SetListItem("Saint Lucia Island")
            Call SetListItem("Saint Pierre & Miquelon")
            Call SetListItem("Saint Vincent & the Grenadines")
            Call SetListItem("Sudan")
            Call SetListItem("Suriname")
            Call SetListItem("Svalbard")
            Call SetListItem("Swaziland")
            Call SetListItem("Sweden")
            Call SetListItem("Switzerland")
            Call SetListItem("Syria")
            Call SetListItem("Taiwan")
            Call SetListItem("Tajikistan")
            Call SetListItem("Tanzania")
            Call SetListItem("Thailand")
            Call SetListItem("Togo")
            Call SetListItem("Tokelau")
            Call SetListItem("Tonga")
            Call SetListItem("Trinidad & Tobago")
            Call SetListItem("Tunisia")
            Call SetListItem("Turkey")
            Call SetListItem("Turkmenistan")
            Call SetListItem("Turks & Caicos Islands")
            Call SetListItem("Tuvalu")
            Call SetListItem("Uganda")
            Call SetListItem("Ukraine")
            Call SetListItem("United Arab Emirates")
            Call SetListItem("United Kingdom")
            Call SetListItem("Uruguay")
            Call SetListItem("Uzbekistan")
            Call SetListItem("Vanuatu")
            Call SetListItem("Venezuela")
            Call SetListItem("Vietnam")
            Call SetListItem("Wake Island")
            Call SetListItem("Wallis & Futuna")
            Call SetListItem("Western Sahara")
            Call SetListItem("Yemen (Aden)")
            Call SetListItem("Zambia")
            Call SetListItem("Zimbabwe")
        ElseIf TpID = "Matricula Consular Card" Then
            Call SetListItem("Brazil")
            Call SetListItem("Guatemala")
            Call SetListItem("Honduras")
            Call SetListItem("Mexico")
            Call SetListItem("South Korea")
        ElseIf TpID = "Tribal ID" Then
            Call SetListItem("AA - Military Address", "AA")
            Call SetListItem("AE - Military Address", "AE")
            Call SetListItem("AP - Military Address", "AP")
            Call SetListItem("AL - Alabama", "AL")
            Call SetListItem("AK - Alaska", "AK")
            Call SetListItem("AS - American Samoa", "AS")
            Call SetListItem("AZ - Arizona", "AZ")
            Call SetListItem("AR - Arkansas", "AR")
            Call SetListItem("CA - California", "CA")
            Call SetListItem("CO - Colorado", "CO")
            Call SetListItem("CT - Connecticut", "CT")
            Call SetListItem("DE - Delaware", "DE")
            Call SetListItem("DC - District of Columbia", "DC")
            Call SetListItem("FM - Federated States of Micronesia", "FM")
            Call SetListItem("FL - Florida", "FL")
            Call SetListItem("GA - Georgia", "GA")
            Call SetListItem("GU - Guam", "GU")
            Call SetListItem("HI - Hawaii", "HI")
            Call SetListItem("ID - Idaho", "ID")
            Call SetListItem("IL - Illinois", "IL")
            Call SetListItem("IN - Indiana", "IN")
            Call SetListItem("IA - Iowa", "IA")
            Call SetListItem("KS - Kansas", "KS")
            Call SetListItem("KY - Kentucky", "KY")
            Call SetListItem("LA - Louisiana", "LA")
            Call SetListItem("ME - Maine", "ME")
            Call SetListItem("MH - Marshall Islands", "MH")
            Call SetListItem("MD - Maryland", "MD")
            Call SetListItem("MA - Massachusetts", "MA")
            Call SetListItem("MI - Michigan", "MI")
            Call SetListItem("MN - Minnesota", "MN")
            Call SetListItem("MS - Mississippi", "MS")
            Call SetListItem("MO - Missouri", "MO")
            Call SetListItem("MT - Montana", "MT")
            Call SetListItem("NE - Nebraska", "NE")
            Call SetListItem("NV - Nevada", "NV")
            Call SetListItem("NH - New Hampshire", "NH")
            Call SetListItem("NJ - New Jersey", "NJ")
            Call SetListItem("NM - New Mexico", "NM")
            Call SetListItem("NY - New York", "NY")
            Call SetListItem("NC - North Carolina", "NC")
            Call SetListItem("ND - North Dakota", "ND")
            Call SetListItem("MP - Northern Mariana Islands", "MP")
            Call SetListItem("OH - Ohio", "OH")
            Call SetListItem("OK - Oklahoma", "OK")
            Call SetListItem("OR - Oregon", "OR")
            Call SetListItem("PW - Palau", "PW")
            Call SetListItem("PA - Pennsylvania", "PA")
            Call SetListItem("PR - Puerto Rico", "PR")
            Call SetListItem("RI - Rhode Island", "RI")
            Call SetListItem("SC - South Carolina", "SC")
            Call SetListItem("SD - South Dakota", "SD")
            Call SetListItem("TN - Tennessee", "TN")
            Call SetListItem("TX - Texas", "TX")
            Call SetListItem("UT - Utah", "UT")
            Call SetListItem("VT - Vermont", "VT")
            Call SetListItem("VA - Virginia", "VA")
            Call SetListItem("VI - Virgin Islands", "VI")
            Call SetListItem("WA - Washington", "WA")
            Call SetListItem("WV - West Virginia", "WV")
            Call SetListItem("WI - Wisconsin", "WI")
            Call SetListItem("WY - Wyoming", "WY")
        ElseIf TpID = "Foreign Issued Driver's License/ID" Then
    'Foreign countries
            Call SetListItem("Afghanistan")
            Call SetListItem("Akrotiri")
            Call SetListItem("Albania")
            Call SetListItem("Algeria")
            Call SetListItem("Andorra")
            Call SetListItem("Angola")
            Call SetListItem("Anguilla")
            Call SetListItem("Antarctica")
            Call SetListItem("Antigua & Barbuda")
            Call SetListItem("Argentina")
            Call SetListItem("Armenia")
            Call SetListItem("Aruba")
            Call SetListItem("Ashmore & Cartier Islands")
            Call SetListItem("Australia")
            Call SetListItem("Austria")
            Call SetListItem("Azerbaijan")
            Call SetListItem("Bahamas")
            Call SetListItem("Bahrain")
            Call SetListItem("Baker Island")
            Call SetListItem("Bangladesh")
            Call SetListItem("Barbados")
            Call SetListItem("Belarus")
            Call SetListItem("Belgium")
            Call SetListItem("Belize")
            Call SetListItem("Benin")
            Call SetListItem("Bermuda")
            Call SetListItem("Bhutan")
            Call SetListItem("Bolivia")
            Call SetListItem("Bosnia-Herzegovina")
            Call SetListItem("Botswana")
            Call SetListItem("Bouvet Island")
            Call SetListItem("Brazil")
            Call SetListItem("British Indian Ocean Territory")
            Call SetListItem("British Virgin Islands")
            Call SetListItem("Brunei")
            Call SetListItem("Bulgaria")
            Call SetListItem("Burkina Faso")
            Call SetListItem("Burma")
            Call SetListItem("Burundi")
            Call SetListItem("Cambodia")
            Call SetListItem("Cameroon")
            Call SetListItem("Canada")
            Call SetListItem("Cape Verde")
            Call SetListItem("Cayman Islands")
            Call SetListItem("Central African Republic")
            Call SetListItem("Chad")
            Call SetListItem("Chile")
            Call SetListItem("China")
            Call SetListItem("Christmas Island")
            Call SetListItem("Clipperton Island")
            Call SetListItem("Cocos (Keeling) Islands")
            Call SetListItem("Colombia")
            Call SetListItem("Comoros")
            Call SetListItem("Congo (Brazzaville)")
            Call SetListItem("Congo (Kinshasa)")
            Call SetListItem("Cooks Islands")
            Call SetListItem("Coral Sea Islands")
            Call SetListItem("Costa Rica")
            Call SetListItem("Cote d'Ivoire (Ivory Coast)")
            Call SetListItem("Croatia")
            Call SetListItem("Cuba")
            Call SetListItem("Curacao")
            Call SetListItem("Cyprus")
            Call SetListItem("Czech Republic")
            Call SetListItem("Denmark")
            Call SetListItem("Dhekelia")
            Call SetListItem("Djibouti")
            Call SetListItem("Dominica")
            Call SetListItem("Dominican Republic")
            Call SetListItem("East Timor")
            Call SetListItem("Ecuador")
            Call SetListItem("Egypt")
            Call SetListItem("El Salvador")
            Call SetListItem("Equatorial Guinea")
            Call SetListItem("Eritrea")
            Call SetListItem("Estonia")
            Call SetListItem("Ethiopia")
            Call SetListItem("Falkland Islands (Islas Malvinas)")
            Call SetListItem("Faroe Islands")
            Call SetListItem("Federated States of Micronesia")
            Call SetListItem("Fiji")
            Call SetListItem("Finland")
            Call SetListItem("France")
            Call SetListItem("French Polynesia")
            Call SetListItem("French Southern & Antarctic Lands")
            Call SetListItem("Gabon")
            Call SetListItem("The Gambia")
            Call SetListItem("Georgia")
            Call SetListItem("Germany")
            Call SetListItem("Ghana")
            Call SetListItem("Gibraltar")
            Call SetListItem("Greece")
            Call SetListItem("Greenland")
            Call SetListItem("Grenada")
            Call SetListItem("Guatemala")
            Call SetListItem("Guernsey")
            Call SetListItem("Guinea")
            Call SetListItem("Guinea-Bissau")
            Call SetListItem("Guyana")
            Call SetListItem("Haiti")
            Call SetListItem("Heard Island & McDonald Islands")
            Call SetListItem("Holy See")
            Call SetListItem("Honduras")
            Call SetListItem("Hong Kong")
            Call SetListItem("Howland Island")
            Call SetListItem("Hungary")
            Call SetListItem("Iceland")
            Call SetListItem("India")
            Call SetListItem("Indonesia")
            Call SetListItem("Iran")
            Call SetListItem("Iraq")
            Call SetListItem("Ireland")
            Call SetListItem("Israel")
            Call SetListItem("Italy")
            Call SetListItem("Jamaica")
            Call SetListItem("Jan Mayen")
            Call SetListItem("Japan")
            Call SetListItem("Jarvis Island")
            Call SetListItem("Jersey")
            Call SetListItem("Johnston Atoll")
            Call SetListItem("Jordan")
            Call SetListItem("Kazakhstan")
            Call SetListItem("Kenya")
            Call SetListItem("Kingman Reef")
            Call SetListItem("Kiribati")
    ' North and South Korea are different in this list due to space constraints on the IV_USWEFWksht_IDInfo1 and IV_USEF_IDInfo1 questions
            Call SetListItem("North Korea")
            Call SetListItem("South Korea")
            Call SetListItem("Kosovo")
            Call SetListItem("Kuwait")
            Call SetListItem("Kyrgyzstan")
            Call SetListItem("Laos")
            Call SetListItem("Latvia")
            Call SetListItem("Lebanon")
            Call SetListItem("Lesotho")
            Call SetListItem("Liberia")
            Call SetListItem("Libya")
            Call SetListItem("Liechtenstein")
            Call SetListItem("Lithuania")
            Call SetListItem("Luxembourg")
            Call SetListItem("Macau")
            Call SetListItem("Macedonia")
            Call SetListItem("Madagascar")
            Call SetListItem("Malawi")
            Call SetListItem("Malaysia")
            Call SetListItem("Maldives")
            Call SetListItem("Mali")
            Call SetListItem("Malta")
            Call SetListItem("Man, Isle of")
            Call SetListItem("Marshall Islands")
            Call SetListItem("Mauritania")
            Call SetListItem("Mauritius")
            Call SetListItem("Mexico")
            Call SetListItem("Midway Islands")
            Call SetListItem("Moldova")
            Call SetListItem("Monaco")
            Call SetListItem("Mongolia")
            Call SetListItem("Montenegro")
            Call SetListItem("Montserrat")
            Call SetListItem("Morocco")
            Call SetListItem("Mozambique")
            Call SetListItem("Namibia")
            Call SetListItem("Nauru")
            Call SetListItem("Navassa Island")
            Call SetListItem("Nepal")
            Call SetListItem("Netherlands")
            Call SetListItem("New Caledonia")
            Call SetListItem("New Zealand")
            Call SetListItem("Nicaragua")
            Call SetListItem("Niger")
            Call SetListItem("Nigeria")
            Call SetListItem("Niue")
            Call SetListItem("Norfolk Island")
            Call SetListItem("Norway")
            Call SetListItem("Oman")
            Call SetListItem("Other Country")
            Call SetListItem("Pakistan")
            Call SetListItem("Palau")
            Call SetListItem("Palmyra Atoll")
            Call SetListItem("Panama")
            Call SetListItem("Papua-New Guinea")
            Call SetListItem("Paracel Islands")
            Call SetListItem("Paraguay")
            Call SetListItem("Peru")
            Call SetListItem("Philippines")
            Call SetListItem("Pitcairn Islands")
            Call SetListItem("Poland")
            Call SetListItem("Portugal")
            Call SetListItem("Qatar")
            Call SetListItem("Romania")
            Call SetListItem("Russia")
            Call SetListItem("Rwanda")
            Call SetListItem("Saint Barthelemy")
            Call SetListItem("Saint Martin")
            Call SetListItem("Samoa")
            Call SetListItem("San Marino")
            Call SetListItem("Sao Tome & Principe")
            Call SetListItem("Saudi Arabia")
            Call SetListItem("Senegal")
            Call SetListItem("Serbia")
            Call SetListItem("Seychelles")
            Call SetListItem("Sierra Leone")
            Call SetListItem("Singapore")
            Call SetListItem("Sint Maarten")
            Call SetListItem("Slovakia")
            Call SetListItem("Slovenia")
            Call SetListItem("Solomon Islands")
            Call SetListItem("Somalia")
            Call SetListItem("South Africa")
    ' South Georgia & South Sandwich Islands is different in this list due to space constraints on the IV_USWEFWksht_IDInfo1 and IV_USEF_IDInfo1 questions
            Call SetListItem("South Georgia & Sandwich Islands")
            Call SetListItem("South Sudan")
            Call SetListItem("Spain")
            Call SetListItem("Spratly Islands")
            Call SetListItem("Sri Lanka")
            Call SetListItem("Saint Helena")
            Call SetListItem("Saint Kitts & Nevis")
            Call SetListItem("Saint Lucia Island")
            Call SetListItem("Saint Pierre & Miquelon")
            Call SetListItem("Saint Vincent & the Grenadines")
            Call SetListItem("Sudan")
            Call SetListItem("Suriname")
            Call SetListItem("Svalbard")
            Call SetListItem("Swaziland")
            Call SetListItem("Sweden")
            Call SetListItem("Switzerland")
            Call SetListItem("Syria")
            Call SetListItem("Taiwan")
            Call SetListItem("Tajikistan")
            Call SetListItem("Tanzania")
            Call SetListItem("Thailand")
            Call SetListItem("Togo")
            Call SetListItem("Tokelau")
            Call SetListItem("Tonga")
            Call SetListItem("Trinidad & Tobago")
            Call SetListItem("Tunisia")
            Call SetListItem("Turkey")
            Call SetListItem("Turkmenistan")
            Call SetListItem("Turks & Caicos Islands")
            Call SetListItem("Tuvalu")
            Call SetListItem("Uganda")
            Call SetListItem("Ukraine")
            Call SetListItem("United Arab Emirates")
            Call SetListItem("United Kingdom")
            Call SetListItem("Uruguay")
            Call SetListItem("Uzbekistan")
            Call SetListItem("Vanuatu")
            Call SetListItem("Venezuela")
            Call SetListItem("Vietnam")
            Call SetListItem("Wake Island")
            Call SetListItem("Wallis & Futuna")
            Call SetListItem("Western Sahara")
            Call SetListItem("Yemen (Aden)")
            Call SetListItem("Zambia")
            Call SetListItem("Zimbabwe")
        End If
    End If
End Function

Public Function SPBankProductIssueLocation_SetDynaList()
    Call SetListTitle("BankProductIssueLocation")
    
    Dim TpID As String
    
    TpID = GetString(USWRALApp.SpID)
    
    If GetBool(USWRALApp.TPG) = True Then
        If TpID = "Driver's License (U.S. State)" Then
            Call SetListItem("AA - Military Address", "AA")
            Call SetListItem("AE - Military Address", "AE")
            Call SetListItem("AP - Military Address", "AP")
            Call SetListItem("AL - Alabama", "AL")
            Call SetListItem("AK - Alaska", "AK")
            Call SetListItem("AS - American Samoa", "AS")
            Call SetListItem("AZ - Arizona", "AZ")
            Call SetListItem("AR - Arkansas", "AR")
            Call SetListItem("CA - California", "CA")
            Call SetListItem("CO - Colorado", "CO")
            Call SetListItem("CT - Connecticut", "CT")
            Call SetListItem("DE - Delaware", "DE")
            Call SetListItem("DC - District of Columbia", "DC")
            Call SetListItem("FM - Federated States of Micronesia", "FM")
            Call SetListItem("FL - Florida", "FL")
            Call SetListItem("GA - Georgia", "GA")
            Call SetListItem("GU - Guam", "GU")
            Call SetListItem("HI - Hawaii", "HI")
            Call SetListItem("ID - Idaho", "ID")
            Call SetListItem("IL - Illinois", "IL")
            Call SetListItem("IN - Indiana", "IN")
            Call SetListItem("IA - Iowa", "IA")
            Call SetListItem("KS - Kansas", "KS")
            Call SetListItem("KY - Kentucky", "KY")
            Call SetListItem("LA - Louisiana", "LA")
            Call SetListItem("ME - Maine", "ME")
            Call SetListItem("MH - Marshall Islands", "MH")
            Call SetListItem("MD - Maryland", "MD")
            Call SetListItem("MA - Massachusetts", "MA")
            Call SetListItem("MI - Michigan", "MI")
            Call SetListItem("MN - Minnesota", "MN")
            Call SetListItem("MS - Mississippi", "MS")
            Call SetListItem("MO - Missouri", "MO")
            Call SetListItem("MT - Montana", "MT")
            Call SetListItem("NE - Nebraska", "NE")
            Call SetListItem("NV - Nevada", "NV")
            Call SetListItem("NH - New Hampshire", "NH")
            Call SetListItem("NJ - New Jersey", "NJ")
            Call SetListItem("NM - New Mexico", "NM")
            Call SetListItem("NY - New York", "NY")
            Call SetListItem("NC - North Carolina", "NC")
            Call SetListItem("ND - North Dakota", "ND")
            Call SetListItem("MP - Northern Mariana Islands", "MP")
            Call SetListItem("OH - Ohio", "OH")
            Call SetListItem("OK - Oklahoma", "OK")
            Call SetListItem("OR - Oregon", "OR")
            Call SetListItem("PW - Palau", "PW")
            Call SetListItem("PA - Pennsylvania", "PA")
            Call SetListItem("PR - Puerto Rico", "PR")
            Call SetListItem("RI - Rhode Island", "RI")
            Call SetListItem("SC - South Carolina", "SC")
            Call SetListItem("SD - South Dakota", "SD")
            Call SetListItem("TN - Tennessee", "TN")
            Call SetListItem("TX - Texas", "TX")
            Call SetListItem("UT - Utah", "UT")
            Call SetListItem("VT - Vermont", "VT")
            Call SetListItem("VA - Virginia", "VA")
            Call SetListItem("VI - Virgin Islands", "VI")
            Call SetListItem("WA - Washington", "WA")
            Call SetListItem("WV - West Virginia", "WV")
            Call SetListItem("WI - Wisconsin", "WI")
            Call SetListItem("WY - Wyoming", "WY")
        ElseIf TpID = "U.S. State-Issued ID Card" Then
            Call SetListItem("AA - Military Address", "AA")
            Call SetListItem("AE - Military Address", "AE")
            Call SetListItem("AP - Military Address", "AP")
            Call SetListItem("AL - Alabama", "AL")
            Call SetListItem("AK - Alaska", "AK")
            Call SetListItem("AS - American Samoa", "AS")
            Call SetListItem("AZ - Arizona", "AZ")
            Call SetListItem("AR - Arkansas", "AR")
            Call SetListItem("CA - California", "CA")
            Call SetListItem("CO - Colorado", "CO")
            Call SetListItem("CT - Connecticut", "CT")
            Call SetListItem("DE - Delaware", "DE")
            Call SetListItem("DC - District of Columbia", "DC")
            Call SetListItem("FM - Federated States of Micronesia", "FM")
            Call SetListItem("FL - Florida", "FL")
            Call SetListItem("GA - Georgia", "GA")
            Call SetListItem("GU - Guam", "GU")
            Call SetListItem("HI - Hawaii", "HI")
            Call SetListItem("ID - Idaho", "ID")
            Call SetListItem("IL - Illinois", "IL")
            Call SetListItem("IN - Indiana", "IN")
            Call SetListItem("IA - Iowa", "IA")
            Call SetListItem("KS - Kansas", "KS")
            Call SetListItem("KY - Kentucky", "KY")
            Call SetListItem("LA - Louisiana", "LA")
            Call SetListItem("ME - Maine", "ME")
            Call SetListItem("MH - Marshall Islands", "MH")
            Call SetListItem("MD - Maryland", "MD")
            Call SetListItem("MA - Massachusetts", "MA")
            Call SetListItem("MI - Michigan", "MI")
            Call SetListItem("MN - Minnesota", "MN")
            Call SetListItem("MS - Mississippi", "MS")
            Call SetListItem("MO - Missouri", "MO")
            Call SetListItem("MT - Montana", "MT")
            Call SetListItem("NE - Nebraska", "NE")
            Call SetListItem("NV - Nevada", "NV")
            Call SetListItem("NH - New Hampshire", "NH")
            Call SetListItem("NJ - New Jersey", "NJ")
            Call SetListItem("NM - New Mexico", "NM")
            Call SetListItem("NY - New York", "NY")
            Call SetListItem("NC - North Carolina", "NC")
            Call SetListItem("ND - North Dakota", "ND")
            Call SetListItem("MP - Northern Mariana Islands", "MP")
            Call SetListItem("OH - Ohio", "OH")
            Call SetListItem("OK - Oklahoma", "OK")
            Call SetListItem("OR - Oregon", "OR")
            Call SetListItem("PW - Palau", "PW")
            Call SetListItem("PA - Pennsylvania", "PA")
            Call SetListItem("PR - Puerto Rico", "PR")
            Call SetListItem("RI - Rhode Island", "RI")
            Call SetListItem("SC - South Carolina", "SC")
            Call SetListItem("SD - South Dakota", "SD")
            Call SetListItem("TN - Tennessee", "TN")
            Call SetListItem("TX - Texas", "TX")
            Call SetListItem("UT - Utah", "UT")
            Call SetListItem("VT - Vermont", "VT")
            Call SetListItem("VA - Virginia", "VA")
            Call SetListItem("VI - Virgin Islands", "VI")
            Call SetListItem("WA - Washington", "WA")
            Call SetListItem("WV - West Virginia", "WV")
            Call SetListItem("WI - Wisconsin", "WI")
            Call SetListItem("WY - Wyoming", "WY")
        ElseIf TpID = "U.S. Military ID Card" Then
            Call SetListItem("AA - Military Address", "AA")
            Call SetListItem("AE - Military Address", "AE")
            Call SetListItem("AP - Military Address", "AP")
            Call SetListItem("AL - Alabama", "AL")
            Call SetListItem("AK - Alaska", "AK")
            Call SetListItem("AS - American Samoa", "AS")
            Call SetListItem("AZ - Arizona", "AZ")
            Call SetListItem("AR - Arkansas", "AR")
            Call SetListItem("CA - California", "CA")
            Call SetListItem("CO - Colorado", "CO")
            Call SetListItem("CT - Connecticut", "CT")
            Call SetListItem("DE - Delaware", "DE")
            Call SetListItem("DC - District of Columbia", "DC")
            Call SetListItem("FM - Federated States of Micronesia", "FM")
            Call SetListItem("FL - Florida", "FL")
            Call SetListItem("GA - Georgia", "GA")
            Call SetListItem("GU - Guam", "GU")
            Call SetListItem("HI - Hawaii", "HI")
            Call SetListItem("ID - Idaho", "ID")
            Call SetListItem("IL - Illinois", "IL")
            Call SetListItem("IN - Indiana", "IN")
            Call SetListItem("IA - Iowa", "IA")
            Call SetListItem("KS - Kansas", "KS")
            Call SetListItem("KY - Kentucky", "KY")
            Call SetListItem("LA - Louisiana", "LA")
            Call SetListItem("ME - Maine", "ME")
            Call SetListItem("MH - Marshall Islands", "MH")
            Call SetListItem("MD - Maryland", "MD")
            Call SetListItem("MA - Massachusetts", "MA")
            Call SetListItem("MI - Michigan", "MI")
            Call SetListItem("MN - Minnesota", "MN")
            Call SetListItem("MS - Mississippi", "MS")
            Call SetListItem("MO - Missouri", "MO")
            Call SetListItem("MT - Montana", "MT")
            Call SetListItem("NE - Nebraska", "NE")
            Call SetListItem("NV - Nevada", "NV")
            Call SetListItem("NH - New Hampshire", "NH")
            Call SetListItem("NJ - New Jersey", "NJ")
            Call SetListItem("NM - New Mexico", "NM")
            Call SetListItem("NY - New York", "NY")
            Call SetListItem("NC - North Carolina", "NC")
            Call SetListItem("ND - North Dakota", "ND")
            Call SetListItem("MP - Northern Mariana Islands", "MP")
            Call SetListItem("OH - Ohio", "OH")
            Call SetListItem("OK - Oklahoma", "OK")
            Call SetListItem("OR - Oregon", "OR")
            Call SetListItem("PW - Palau", "PW")
            Call SetListItem("PA - Pennsylvania", "PA")
            Call SetListItem("PR - Puerto Rico", "PR")
            Call SetListItem("RI - Rhode Island", "RI")
            Call SetListItem("SC - South Carolina", "SC")
            Call SetListItem("SD - South Dakota", "SD")
            Call SetListItem("TN - Tennessee", "TN")
            Call SetListItem("TX - Texas", "TX")
            Call SetListItem("UT - Utah", "UT")
            Call SetListItem("VT - Vermont", "VT")
            Call SetListItem("VA - Virginia", "VA")
            Call SetListItem("VI - Virgin Islands", "VI")
            Call SetListItem("WA - Washington", "WA")
            Call SetListItem("WV - West Virginia", "WV")
            Call SetListItem("WI - Wisconsin", "WI")
            Call SetListItem("WY - Wyoming", "WY")
        ElseIf TpID = "Native American Tribal ID Card" Then
            Call SetListItem("AA - Military Address", "AA")
            Call SetListItem("AE - Military Address", "AE")
            Call SetListItem("AP - Military Address", "AP")
            Call SetListItem("AL - Alabama", "AL")
            Call SetListItem("AK - Alaska", "AK")
            Call SetListItem("AS - American Samoa", "AS")
            Call SetListItem("AZ - Arizona", "AZ")
            Call SetListItem("AR - Arkansas", "AR")
            Call SetListItem("CA - California", "CA")
            Call SetListItem("CO - Colorado", "CO")
            Call SetListItem("CT - Connecticut", "CT")
            Call SetListItem("DE - Delaware", "DE")
            Call SetListItem("DC - District of Columbia", "DC")
            Call SetListItem("FM - Federated States of Micronesia", "FM")
            Call SetListItem("FL - Florida", "FL")
            Call SetListItem("GA - Georgia", "GA")
            Call SetListItem("GU - Guam", "GU")
            Call SetListItem("HI - Hawaii", "HI")
            Call SetListItem("ID - Idaho", "ID")
            Call SetListItem("IL - Illinois", "IL")
            Call SetListItem("IN - Indiana", "IN")
            Call SetListItem("IA - Iowa", "IA")
            Call SetListItem("KS - Kansas", "KS")
            Call SetListItem("KY - Kentucky", "KY")
            Call SetListItem("LA - Louisiana", "LA")
            Call SetListItem("ME - Maine", "ME")
            Call SetListItem("MH - Marshall Islands", "MH")
            Call SetListItem("MD - Maryland", "MD")
            Call SetListItem("MA - Massachusetts", "MA")
            Call SetListItem("MI - Michigan", "MI")
            Call SetListItem("MN - Minnesota", "MN")
            Call SetListItem("MS - Mississippi", "MS")
            Call SetListItem("MO - Missouri", "MO")
            Call SetListItem("MT - Montana", "MT")
            Call SetListItem("NE - Nebraska", "NE")
            Call SetListItem("NV - Nevada", "NV")
            Call SetListItem("NH - New Hampshire", "NH")
            Call SetListItem("NJ - New Jersey", "NJ")
            Call SetListItem("NM - New Mexico", "NM")
            Call SetListItem("NY - New York", "NY")
            Call SetListItem("NC - North Carolina", "NC")
            Call SetListItem("ND - North Dakota", "ND")
            Call SetListItem("MP - Northern Mariana Islands", "MP")
            Call SetListItem("OH - Ohio", "OH")
            Call SetListItem("OK - Oklahoma", "OK")
            Call SetListItem("OR - Oregon", "OR")
            Call SetListItem("PW - Palau", "PW")
            Call SetListItem("PA - Pennsylvania", "PA")
            Call SetListItem("PR - Puerto Rico", "PR")
            Call SetListItem("RI - Rhode Island", "RI")
            Call SetListItem("SC - South Carolina", "SC")
            Call SetListItem("SD - South Dakota", "SD")
            Call SetListItem("TN - Tennessee", "TN")
            Call SetListItem("TX - Texas", "TX")
            Call SetListItem("UT - Utah", "UT")
            Call SetListItem("VT - Vermont", "VT")
            Call SetListItem("VA - Virginia", "VA")
            Call SetListItem("VI - Virgin Islands", "VI")
            Call SetListItem("WA - Washington", "WA")
            Call SetListItem("WV - West Virginia", "WV")
            Call SetListItem("WI - Wisconsin", "WI")
            Call SetListItem("WY - Wyoming", "WY")
        ElseIf TpID = "Driver's License (Foreign)" Then
           Call SetListItem("United States", "US")
    'Foreign countries
            Call SetListItem("Afghanistan")
            Call SetListItem("Akrotiri")
            Call SetListItem("Albania")
            Call SetListItem("Algeria")
            Call SetListItem("Andorra")
            Call SetListItem("Angola")
            Call SetListItem("Anguilla")
            Call SetListItem("Antarctica")
            Call SetListItem("Antigua & Barbuda")
            Call SetListItem("Argentina")
            Call SetListItem("Armenia")
            Call SetListItem("Aruba")
            Call SetListItem("Ashmore & Cartier Islands")
            Call SetListItem("Australia")
            Call SetListItem("Austria")
            Call SetListItem("Azerbaijan")
            Call SetListItem("Bahamas")
            Call SetListItem("Bahrain")
            Call SetListItem("Baker Island")
            Call SetListItem("Bangladesh")
            Call SetListItem("Barbados")
            Call SetListItem("Belarus")
            Call SetListItem("Belgium")
            Call SetListItem("Belize")
            Call SetListItem("Benin")
            Call SetListItem("Bermuda")
            Call SetListItem("Bhutan")
            Call SetListItem("Bolivia")
            Call SetListItem("Bosnia-Herzegovina")
            Call SetListItem("Botswana")
            Call SetListItem("Bouvet Island")
            Call SetListItem("Brazil")
            Call SetListItem("British Indian Ocean Territory")
            Call SetListItem("British Virgin Islands")
            Call SetListItem("Brunei")
            Call SetListItem("Bulgaria")
            Call SetListItem("Burkina Faso")
            Call SetListItem("Burma")
            Call SetListItem("Burundi")
            Call SetListItem("Cambodia")
            Call SetListItem("Cameroon")
            Call SetListItem("Canada")
            Call SetListItem("Cape Verde")
            Call SetListItem("Cayman Islands")
            Call SetListItem("Central African Republic")
            Call SetListItem("Chad")
            Call SetListItem("Chile")
            Call SetListItem("China")
            Call SetListItem("Christmas Island")
            Call SetListItem("Clipperton Island")
            Call SetListItem("Cocos (Keeling) Islands")
            Call SetListItem("Colombia")
            Call SetListItem("Comoros")
            Call SetListItem("Congo (Brazzaville)")
            Call SetListItem("Congo (Kinshasa)")
            Call SetListItem("Cooks Islands")
            Call SetListItem("Coral Sea Islands")
            Call SetListItem("Costa Rica")
            Call SetListItem("Cote d'Ivoire (Ivory Coast)")
            Call SetListItem("Croatia")
            Call SetListItem("Cuba")
            Call SetListItem("Curacao")
            Call SetListItem("Cyprus")
            Call SetListItem("Czech Republic")
            Call SetListItem("Denmark")
            Call SetListItem("Dhekelia")
            Call SetListItem("Djibouti")
            Call SetListItem("Dominica")
            Call SetListItem("Dominican Republic")
            Call SetListItem("East Timor")
            Call SetListItem("Ecuador")
            Call SetListItem("Egypt")
            Call SetListItem("El Salvador")
            Call SetListItem("Equatorial Guinea")
            Call SetListItem("Eritrea")
            Call SetListItem("Estonia")
            Call SetListItem("Ethiopia")
            Call SetListItem("Falkland Islands (Islas Malvinas)")
            Call SetListItem("Faroe Islands")
            Call SetListItem("Federated States of Micronesia")
            Call SetListItem("Fiji")
            Call SetListItem("Finland")
            Call SetListItem("France")
            Call SetListItem("French Polynesia")
            Call SetListItem("French Southern & Antarctic Lands")
            Call SetListItem("Gabon")
            Call SetListItem("The Gambia")
            Call SetListItem("Georgia")
            Call SetListItem("Germany")
            Call SetListItem("Ghana")
            Call SetListItem("Gibraltar")
            Call SetListItem("Greece")
            Call SetListItem("Greenland")
            Call SetListItem("Grenada")
            Call SetListItem("Guatemala")
            Call SetListItem("Guernsey")
            Call SetListItem("Guinea")
            Call SetListItem("Guinea-Bissau")
            Call SetListItem("Guyana")
            Call SetListItem("Haiti")
            Call SetListItem("Heard Island & McDonald Islands")
            Call SetListItem("Holy See")
            Call SetListItem("Honduras")
            Call SetListItem("Hong Kong")
            Call SetListItem("Howland Island")
            Call SetListItem("Hungary")
            Call SetListItem("Iceland")
            Call SetListItem("India")
            Call SetListItem("Indonesia")
            Call SetListItem("Iran")
            Call SetListItem("Iraq")
            Call SetListItem("Ireland")
            Call SetListItem("Israel")
            Call SetListItem("Italy")
            Call SetListItem("Jamaica")
            Call SetListItem("Jan Mayen")
            Call SetListItem("Japan")
            Call SetListItem("Jarvis Island")
            Call SetListItem("Jersey")
            Call SetListItem("Johnston Atoll")
            Call SetListItem("Jordan")
            Call SetListItem("Kazakhstan")
            Call SetListItem("Kenya")
            Call SetListItem("Kingman Reef")
            Call SetListItem("Kiribati")
    ' North and South Korea are different in this list due to space constraints on the IV_USWEFWksht_IDInfo1 and IV_USEF_IDInfo1 questions
            Call SetListItem("North Korea")
            Call SetListItem("South Korea")
            Call SetListItem("Kosovo")
            Call SetListItem("Kuwait")
            Call SetListItem("Kyrgyzstan")
            Call SetListItem("Laos")
            Call SetListItem("Latvia")
            Call SetListItem("Lebanon")
            Call SetListItem("Lesotho")
            Call SetListItem("Liberia")
            Call SetListItem("Libya")
            Call SetListItem("Liechtenstein")
            Call SetListItem("Lithuania")
            Call SetListItem("Luxembourg")
            Call SetListItem("Macau")
            Call SetListItem("Macedonia")
            Call SetListItem("Madagascar")
            Call SetListItem("Malawi")
            Call SetListItem("Malaysia")
            Call SetListItem("Maldives")
            Call SetListItem("Mali")
            Call SetListItem("Malta")
            Call SetListItem("Man, Isle of")
            Call SetListItem("Marshall Islands")
            Call SetListItem("Mauritania")
            Call SetListItem("Mauritius")
            Call SetListItem("Mexico")
            Call SetListItem("Midway Islands")
            Call SetListItem("Moldova")
            Call SetListItem("Monaco")
            Call SetListItem("Mongolia")
            Call SetListItem("Montenegro")
            Call SetListItem("Montserrat")
            Call SetListItem("Morocco")
            Call SetListItem("Mozambique")
            Call SetListItem("Namibia")
            Call SetListItem("Nauru")
            Call SetListItem("Navassa Island")
            Call SetListItem("Nepal")
            Call SetListItem("Netherlands")
            Call SetListItem("New Caledonia")
            Call SetListItem("New Zealand")
            Call SetListItem("Nicaragua")
            Call SetListItem("Niger")
            Call SetListItem("Nigeria")
            Call SetListItem("Niue")
            Call SetListItem("Norfolk Island")
            Call SetListItem("Norway")
            Call SetListItem("Oman")
            Call SetListItem("Other Country")
            Call SetListItem("Pakistan")
            Call SetListItem("Palau")
            Call SetListItem("Palmyra Atoll")
            Call SetListItem("Panama")
            Call SetListItem("Papua-New Guinea")
            Call SetListItem("Paracel Islands")
            Call SetListItem("Paraguay")
            Call SetListItem("Peru")
            Call SetListItem("Philippines")
            Call SetListItem("Pitcairn Islands")
            Call SetListItem("Poland")
            Call SetListItem("Portugal")
            Call SetListItem("Qatar")
            Call SetListItem("Romania")
            Call SetListItem("Russia")
            Call SetListItem("Rwanda")
            Call SetListItem("Saint Barthelemy")
            Call SetListItem("Saint Martin")
            Call SetListItem("Samoa")
            Call SetListItem("San Marino")
            Call SetListItem("Sao Tome & Principe")
            Call SetListItem("Saudi Arabia")
            Call SetListItem("Senegal")
            Call SetListItem("Serbia")
            Call SetListItem("Seychelles")
            Call SetListItem("Sierra Leone")
            Call SetListItem("Singapore")
            Call SetListItem("Sint Maarten")
            Call SetListItem("Slovakia")
            Call SetListItem("Slovenia")
            Call SetListItem("Solomon Islands")
            Call SetListItem("Somalia")
            Call SetListItem("South Africa")
    ' South Georgia & South Sandwich Islands is different in this list due to space constraints on the IV_USWEFWksht_IDInfo1 and IV_USEF_IDInfo1 questions
            Call SetListItem("South Georgia & Sandwich Islands")
            Call SetListItem("South Sudan")
            Call SetListItem("Spain")
            Call SetListItem("Spratly Islands")
            Call SetListItem("Sri Lanka")
            Call SetListItem("Saint Helena")
            Call SetListItem("Saint Kitts & Nevis")
            Call SetListItem("Saint Lucia Island")
            Call SetListItem("Saint Pierre & Miquelon")
            Call SetListItem("Saint Vincent & the Grenadines")
            Call SetListItem("Sudan")
            Call SetListItem("Suriname")
            Call SetListItem("Svalbard")
            Call SetListItem("Swaziland")
            Call SetListItem("Sweden")
            Call SetListItem("Switzerland")
            Call SetListItem("Syria")
            Call SetListItem("Taiwan")
            Call SetListItem("Tajikistan")
            Call SetListItem("Tanzania")
            Call SetListItem("Thailand")
            Call SetListItem("Togo")
            Call SetListItem("Tokelau")
            Call SetListItem("Tonga")
            Call SetListItem("Trinidad & Tobago")
            Call SetListItem("Tunisia")
            Call SetListItem("Turkey")
            Call SetListItem("Turkmenistan")
            Call SetListItem("Turks & Caicos Islands")
            Call SetListItem("Tuvalu")
            Call SetListItem("Uganda")
            Call SetListItem("Ukraine")
            Call SetListItem("United Arab Emirates")
            Call SetListItem("United Kingdom")
            Call SetListItem("Uruguay")
            Call SetListItem("Uzbekistan")
            Call SetListItem("Vanuatu")
            Call SetListItem("Venezuela")
            Call SetListItem("Vietnam")
            Call SetListItem("Wake Island")
            Call SetListItem("Wallis & Futuna")
            Call SetListItem("Western Sahara")
            Call SetListItem("Yemen (Aden)")
            Call SetListItem("Zambia")
            Call SetListItem("Zimbabwe")
        ElseIf TpID = "U.S. Passport" Then
           Call SetListItem("United States", "US")
    'Foreign countries
            Call SetListItem("Afghanistan")
            Call SetListItem("Akrotiri")
            Call SetListItem("Albania")
            Call SetListItem("Algeria")
            Call SetListItem("Andorra")
            Call SetListItem("Angola")
            Call SetListItem("Anguilla")
            Call SetListItem("Antarctica")
            Call SetListItem("Antigua & Barbuda")
            Call SetListItem("Argentina")
            Call SetListItem("Armenia")
            Call SetListItem("Aruba")
            Call SetListItem("Ashmore & Cartier Islands")
            Call SetListItem("Australia")
            Call SetListItem("Austria")
            Call SetListItem("Azerbaijan")
            Call SetListItem("Bahamas")
            Call SetListItem("Bahrain")
            Call SetListItem("Baker Island")
            Call SetListItem("Bangladesh")
            Call SetListItem("Barbados")
            Call SetListItem("Belarus")
            Call SetListItem("Belgium")
            Call SetListItem("Belize")
            Call SetListItem("Benin")
            Call SetListItem("Bermuda")
            Call SetListItem("Bhutan")
            Call SetListItem("Bolivia")
            Call SetListItem("Bosnia-Herzegovina")
            Call SetListItem("Botswana")
            Call SetListItem("Bouvet Island")
            Call SetListItem("Brazil")
            Call SetListItem("British Indian Ocean Territory")
            Call SetListItem("British Virgin Islands")
            Call SetListItem("Brunei")
            Call SetListItem("Bulgaria")
            Call SetListItem("Burkina Faso")
            Call SetListItem("Burma")
            Call SetListItem("Burundi")
            Call SetListItem("Cambodia")
            Call SetListItem("Cameroon")
            Call SetListItem("Canada")
            Call SetListItem("Cape Verde")
            Call SetListItem("Cayman Islands")
            Call SetListItem("Central African Republic")
            Call SetListItem("Chad")
            Call SetListItem("Chile")
            Call SetListItem("China")
            Call SetListItem("Christmas Island")
            Call SetListItem("Clipperton Island")
            Call SetListItem("Cocos (Keeling) Islands")
            Call SetListItem("Colombia")
            Call SetListItem("Comoros")
            Call SetListItem("Congo (Brazzaville)")
            Call SetListItem("Congo (Kinshasa)")
            Call SetListItem("Cooks Islands")
            Call SetListItem("Coral Sea Islands")
            Call SetListItem("Costa Rica")
            Call SetListItem("Cote d'Ivoire (Ivory Coast)")
            Call SetListItem("Croatia")
            Call SetListItem("Cuba")
            Call SetListItem("Curacao")
            Call SetListItem("Cyprus")
            Call SetListItem("Czech Republic")
            Call SetListItem("Denmark")
            Call SetListItem("Dhekelia")
            Call SetListItem("Djibouti")
            Call SetListItem("Dominica")
            Call SetListItem("Dominican Republic")
            Call SetListItem("East Timor")
            Call SetListItem("Ecuador")
            Call SetListItem("Egypt")
            Call SetListItem("El Salvador")
            Call SetListItem("Equatorial Guinea")
            Call SetListItem("Eritrea")
            Call SetListItem("Estonia")
            Call SetListItem("Ethiopia")
            Call SetListItem("Falkland Islands (Islas Malvinas)")
            Call SetListItem("Faroe Islands")
            Call SetListItem("Federated States of Micronesia")
            Call SetListItem("Fiji")
            Call SetListItem("Finland")
            Call SetListItem("France")
            Call SetListItem("French Polynesia")
            Call SetListItem("French Southern & Antarctic Lands")
            Call SetListItem("Gabon")
            Call SetListItem("The Gambia")
            Call SetListItem("Georgia")
            Call SetListItem("Germany")
            Call SetListItem("Ghana")
            Call SetListItem("Gibraltar")
            Call SetListItem("Greece")
            Call SetListItem("Greenland")
            Call SetListItem("Grenada")
            Call SetListItem("Guatemala")
            Call SetListItem("Guernsey")
            Call SetListItem("Guinea")
            Call SetListItem("Guinea-Bissau")
            Call SetListItem("Guyana")
            Call SetListItem("Haiti")
            Call SetListItem("Heard Island & McDonald Islands")
            Call SetListItem("Holy See")
            Call SetListItem("Honduras")
            Call SetListItem("Hong Kong")
            Call SetListItem("Howland Island")
            Call SetListItem("Hungary")
            Call SetListItem("Iceland")
            Call SetListItem("India")
            Call SetListItem("Indonesia")
            Call SetListItem("Iran")
            Call SetListItem("Iraq")
            Call SetListItem("Ireland")
            Call SetListItem("Israel")
            Call SetListItem("Italy")
            Call SetListItem("Jamaica")
            Call SetListItem("Jan Mayen")
            Call SetListItem("Japan")
            Call SetListItem("Jarvis Island")
            Call SetListItem("Jersey")
            Call SetListItem("Johnston Atoll")
            Call SetListItem("Jordan")
            Call SetListItem("Kazakhstan")
            Call SetListItem("Kenya")
            Call SetListItem("Kingman Reef")
            Call SetListItem("Kiribati")
    ' North and South Korea are different in this list due to space constraints on the IV_USWEFWksht_IDInfo1 and IV_USEF_IDInfo1 questions
            Call SetListItem("North Korea")
            Call SetListItem("South Korea")
            Call SetListItem("Kosovo")
            Call SetListItem("Kuwait")
            Call SetListItem("Kyrgyzstan")
            Call SetListItem("Laos")
            Call SetListItem("Latvia")
            Call SetListItem("Lebanon")
            Call SetListItem("Lesotho")
            Call SetListItem("Liberia")
            Call SetListItem("Libya")
            Call SetListItem("Liechtenstein")
            Call SetListItem("Lithuania")
            Call SetListItem("Luxembourg")
            Call SetListItem("Macau")
            Call SetListItem("Macedonia")
            Call SetListItem("Madagascar")
            Call SetListItem("Malawi")
            Call SetListItem("Malaysia")
            Call SetListItem("Maldives")
            Call SetListItem("Mali")
            Call SetListItem("Malta")
            Call SetListItem("Man, Isle of")
            Call SetListItem("Marshall Islands")
            Call SetListItem("Mauritania")
            Call SetListItem("Mauritius")
            Call SetListItem("Mexico")
            Call SetListItem("Midway Islands")
            Call SetListItem("Moldova")
            Call SetListItem("Monaco")
            Call SetListItem("Mongolia")
            Call SetListItem("Montenegro")
            Call SetListItem("Montserrat")
            Call SetListItem("Morocco")
            Call SetListItem("Mozambique")
            Call SetListItem("Namibia")
            Call SetListItem("Nauru")
            Call SetListItem("Navassa Island")
            Call SetListItem("Nepal")
            Call SetListItem("Netherlands")
            Call SetListItem("New Caledonia")
            Call SetListItem("New Zealand")
            Call SetListItem("Nicaragua")
            Call SetListItem("Niger")
            Call SetListItem("Nigeria")
            Call SetListItem("Niue")
            Call SetListItem("Norfolk Island")
            Call SetListItem("Norway")
            Call SetListItem("Oman")
            Call SetListItem("Other Country")
            Call SetListItem("Pakistan")
            Call SetListItem("Palau")
            Call SetListItem("Palmyra Atoll")
            Call SetListItem("Panama")
            Call SetListItem("Papua-New Guinea")
            Call SetListItem("Paracel Islands")
            Call SetListItem("Paraguay")
            Call SetListItem("Peru")
            Call SetListItem("Philippines")
            Call SetListItem("Pitcairn Islands")
            Call SetListItem("Poland")
            Call SetListItem("Portugal")
            Call SetListItem("Qatar")
            Call SetListItem("Romania")
            Call SetListItem("Russia")
            Call SetListItem("Rwanda")
            Call SetListItem("Saint Barthelemy")
            Call SetListItem("Saint Martin")
            Call SetListItem("Samoa")
            Call SetListItem("San Marino")
            Call SetListItem("Sao Tome & Principe")
            Call SetListItem("Saudi Arabia")
            Call SetListItem("Senegal")
            Call SetListItem("Serbia")
            Call SetListItem("Seychelles")
            Call SetListItem("Sierra Leone")
            Call SetListItem("Singapore")
            Call SetListItem("Sint Maarten")
            Call SetListItem("Slovakia")
            Call SetListItem("Slovenia")
            Call SetListItem("Solomon Islands")
            Call SetListItem("Somalia")
            Call SetListItem("South Africa")
    ' South Georgia & South Sandwich Islands is different in this list due to space constraints on the IV_USWEFWksht_IDInfo1 and IV_USEF_IDInfo1 questions
            Call SetListItem("South Georgia & Sandwich Islands")
            Call SetListItem("South Sudan")
            Call SetListItem("Spain")
            Call SetListItem("Spratly Islands")
            Call SetListItem("Sri Lanka")
            Call SetListItem("Saint Helena")
            Call SetListItem("Saint Kitts & Nevis")
            Call SetListItem("Saint Lucia Island")
            Call SetListItem("Saint Pierre & Miquelon")
            Call SetListItem("Saint Vincent & the Grenadines")
            Call SetListItem("Sudan")
            Call SetListItem("Suriname")
            Call SetListItem("Svalbard")
            Call SetListItem("Swaziland")
            Call SetListItem("Sweden")
            Call SetListItem("Switzerland")
            Call SetListItem("Syria")
            Call SetListItem("Taiwan")
            Call SetListItem("Tajikistan")
            Call SetListItem("Tanzania")
            Call SetListItem("Thailand")
            Call SetListItem("Togo")
            Call SetListItem("Tokelau")
            Call SetListItem("Tonga")
            Call SetListItem("Trinidad & Tobago")
            Call SetListItem("Tunisia")
            Call SetListItem("Turkey")
            Call SetListItem("Turkmenistan")
            Call SetListItem("Turks & Caicos Islands")
            Call SetListItem("Tuvalu")
            Call SetListItem("Uganda")
            Call SetListItem("Ukraine")
            Call SetListItem("United Arab Emirates")
            Call SetListItem("United Kingdom")
            Call SetListItem("Uruguay")
            Call SetListItem("Uzbekistan")
            Call SetListItem("Vanuatu")
            Call SetListItem("Venezuela")
            Call SetListItem("Vietnam")
            Call SetListItem("Wake Island")
            Call SetListItem("Wallis & Futuna")
            Call SetListItem("Western Sahara")
            Call SetListItem("Yemen (Aden)")
            Call SetListItem("Zambia")
            Call SetListItem("Zimbabwe")
        ElseIf TpID = "Foreign Passport" Then
           Call SetListItem("United States", "US")
    'Foreign countries
            Call SetListItem("Afghanistan")
            Call SetListItem("Akrotiri")
            Call SetListItem("Albania")
            Call SetListItem("Algeria")
            Call SetListItem("Andorra")
            Call SetListItem("Angola")
            Call SetListItem("Anguilla")
            Call SetListItem("Antarctica")
            Call SetListItem("Antigua & Barbuda")
            Call SetListItem("Argentina")
            Call SetListItem("Armenia")
            Call SetListItem("Aruba")
            Call SetListItem("Ashmore & Cartier Islands")
            Call SetListItem("Australia")
            Call SetListItem("Austria")
            Call SetListItem("Azerbaijan")
            Call SetListItem("Bahamas")
            Call SetListItem("Bahrain")
            Call SetListItem("Baker Island")
            Call SetListItem("Bangladesh")
            Call SetListItem("Barbados")
            Call SetListItem("Belarus")
            Call SetListItem("Belgium")
            Call SetListItem("Belize")
            Call SetListItem("Benin")
            Call SetListItem("Bermuda")
            Call SetListItem("Bhutan")
            Call SetListItem("Bolivia")
            Call SetListItem("Bosnia-Herzegovina")
            Call SetListItem("Botswana")
            Call SetListItem("Bouvet Island")
            Call SetListItem("Brazil")
            Call SetListItem("British Indian Ocean Territory")
            Call SetListItem("British Virgin Islands")
            Call SetListItem("Brunei")
            Call SetListItem("Bulgaria")
            Call SetListItem("Burkina Faso")
            Call SetListItem("Burma")
            Call SetListItem("Burundi")
            Call SetListItem("Cambodia")
            Call SetListItem("Cameroon")
            Call SetListItem("Canada")
            Call SetListItem("Cape Verde")
            Call SetListItem("Cayman Islands")
            Call SetListItem("Central African Republic")
            Call SetListItem("Chad")
            Call SetListItem("Chile")
            Call SetListItem("China")
            Call SetListItem("Christmas Island")
            Call SetListItem("Clipperton Island")
            Call SetListItem("Cocos (Keeling) Islands")
            Call SetListItem("Colombia")
            Call SetListItem("Comoros")
            Call SetListItem("Congo (Brazzaville)")
            Call SetListItem("Congo (Kinshasa)")
            Call SetListItem("Cooks Islands")
            Call SetListItem("Coral Sea Islands")
            Call SetListItem("Costa Rica")
            Call SetListItem("Cote d'Ivoire (Ivory Coast)")
            Call SetListItem("Croatia")
            Call SetListItem("Cuba")
            Call SetListItem("Curacao")
            Call SetListItem("Cyprus")
            Call SetListItem("Czech Republic")
            Call SetListItem("Denmark")
            Call SetListItem("Dhekelia")
            Call SetListItem("Djibouti")
            Call SetListItem("Dominica")
            Call SetListItem("Dominican Republic")
            Call SetListItem("East Timor")
            Call SetListItem("Ecuador")
            Call SetListItem("Egypt")
            Call SetListItem("El Salvador")
            Call SetListItem("Equatorial Guinea")
            Call SetListItem("Eritrea")
            Call SetListItem("Estonia")
            Call SetListItem("Ethiopia")
            Call SetListItem("Falkland Islands (Islas Malvinas)")
            Call SetListItem("Faroe Islands")
            Call SetListItem("Federated States of Micronesia")
            Call SetListItem("Fiji")
            Call SetListItem("Finland")
            Call SetListItem("France")
            Call SetListItem("French Polynesia")
            Call SetListItem("French Southern & Antarctic Lands")
            Call SetListItem("Gabon")
            Call SetListItem("The Gambia")
            Call SetListItem("Georgia")
            Call SetListItem("Germany")
            Call SetListItem("Ghana")
            Call SetListItem("Gibraltar")
            Call SetListItem("Greece")
            Call SetListItem("Greenland")
            Call SetListItem("Grenada")
            Call SetListItem("Guatemala")
            Call SetListItem("Guernsey")
            Call SetListItem("Guinea")
            Call SetListItem("Guinea-Bissau")
            Call SetListItem("Guyana")
            Call SetListItem("Haiti")
            Call SetListItem("Heard Island & McDonald Islands")
            Call SetListItem("Holy See")
            Call SetListItem("Honduras")
            Call SetListItem("Hong Kong")
            Call SetListItem("Howland Island")
            Call SetListItem("Hungary")
            Call SetListItem("Iceland")
            Call SetListItem("India")
            Call SetListItem("Indonesia")
            Call SetListItem("Iran")
            Call SetListItem("Iraq")
            Call SetListItem("Ireland")
            Call SetListItem("Israel")
            Call SetListItem("Italy")
            Call SetListItem("Jamaica")
            Call SetListItem("Jan Mayen")
            Call SetListItem("Japan")
            Call SetListItem("Jarvis Island")
            Call SetListItem("Jersey")
            Call SetListItem("Johnston Atoll")
            Call SetListItem("Jordan")
            Call SetListItem("Kazakhstan")
            Call SetListItem("Kenya")
            Call SetListItem("Kingman Reef")
            Call SetListItem("Kiribati")
    ' North and South Korea are different in this list due to space constraints on the IV_USWEFWksht_IDInfo1 and IV_USEF_IDInfo1 questions
            Call SetListItem("North Korea")
            Call SetListItem("South Korea")
            Call SetListItem("Kosovo")
            Call SetListItem("Kuwait")
            Call SetListItem("Kyrgyzstan")
            Call SetListItem("Laos")
            Call SetListItem("Latvia")
            Call SetListItem("Lebanon")
            Call SetListItem("Lesotho")
            Call SetListItem("Liberia")
            Call SetListItem("Libya")
            Call SetListItem("Liechtenstein")
            Call SetListItem("Lithuania")
            Call SetListItem("Luxembourg")
            Call SetListItem("Macau")
            Call SetListItem("Macedonia")
            Call SetListItem("Madagascar")
            Call SetListItem("Malawi")
            Call SetListItem("Malaysia")
            Call SetListItem("Maldives")
            Call SetListItem("Mali")
            Call SetListItem("Malta")
            Call SetListItem("Man, Isle of")
            Call SetListItem("Marshall Islands")
            Call SetListItem("Mauritania")
            Call SetListItem("Mauritius")
            Call SetListItem("Mexico")
            Call SetListItem("Midway Islands")
            Call SetListItem("Moldova")
            Call SetListItem("Monaco")
            Call SetListItem("Mongolia")
            Call SetListItem("Montenegro")
            Call SetListItem("Montserrat")
            Call SetListItem("Morocco")
            Call SetListItem("Mozambique")
            Call SetListItem("Namibia")
            Call SetListItem("Nauru")
            Call SetListItem("Navassa Island")
            Call SetListItem("Nepal")
            Call SetListItem("Netherlands")
            Call SetListItem("New Caledonia")
            Call SetListItem("New Zealand")
            Call SetListItem("Nicaragua")
            Call SetListItem("Niger")
            Call SetListItem("Nigeria")
            Call SetListItem("Niue")
            Call SetListItem("Norfolk Island")
            Call SetListItem("Norway")
            Call SetListItem("Oman")
            Call SetListItem("Other Country")
            Call SetListItem("Pakistan")
            Call SetListItem("Palau")
            Call SetListItem("Palmyra Atoll")
            Call SetListItem("Panama")
            Call SetListItem("Papua-New Guinea")
            Call SetListItem("Paracel Islands")
            Call SetListItem("Paraguay")
            Call SetListItem("Peru")
            Call SetListItem("Philippines")
            Call SetListItem("Pitcairn Islands")
            Call SetListItem("Poland")
            Call SetListItem("Portugal")
            Call SetListItem("Qatar")
            Call SetListItem("Romania")
            Call SetListItem("Russia")
            Call SetListItem("Rwanda")
            Call SetListItem("Saint Barthelemy")
            Call SetListItem("Saint Martin")
            Call SetListItem("Samoa")
            Call SetListItem("San Marino")
            Call SetListItem("Sao Tome & Principe")
            Call SetListItem("Saudi Arabia")
            Call SetListItem("Senegal")
            Call SetListItem("Serbia")
            Call SetListItem("Seychelles")
            Call SetListItem("Sierra Leone")
            Call SetListItem("Singapore")
            Call SetListItem("Sint Maarten")
            Call SetListItem("Slovakia")
            Call SetListItem("Slovenia")
            Call SetListItem("Solomon Islands")
            Call SetListItem("Somalia")
            Call SetListItem("South Africa")
    ' South Georgia & South Sandwich Islands is different in this list due to space constraints on the IV_USWEFWksht_IDInfo1 and IV_USEF_IDInfo1 questions
            Call SetListItem("South Georgia & Sandwich Islands")
            Call SetListItem("South Sudan")
            Call SetListItem("Spain")
            Call SetListItem("Spratly Islands")
            Call SetListItem("Sri Lanka")
            Call SetListItem("Saint Helena")
            Call SetListItem("Saint Kitts & Nevis")
            Call SetListItem("Saint Lucia Island")
            Call SetListItem("Saint Pierre & Miquelon")
            Call SetListItem("Saint Vincent & the Grenadines")
            Call SetListItem("Sudan")
            Call SetListItem("Suriname")
            Call SetListItem("Svalbard")
            Call SetListItem("Swaziland")
            Call SetListItem("Sweden")
            Call SetListItem("Switzerland")
            Call SetListItem("Syria")
            Call SetListItem("Taiwan")
            Call SetListItem("Tajikistan")
            Call SetListItem("Tanzania")
            Call SetListItem("Thailand")
            Call SetListItem("Togo")
            Call SetListItem("Tokelau")
            Call SetListItem("Tonga")
            Call SetListItem("Trinidad & Tobago")
            Call SetListItem("Tunisia")
            Call SetListItem("Turkey")
            Call SetListItem("Turkmenistan")
            Call SetListItem("Turks & Caicos Islands")
            Call SetListItem("Tuvalu")
            Call SetListItem("Uganda")
            Call SetListItem("Ukraine")
            Call SetListItem("United Arab Emirates")
            Call SetListItem("United Kingdom")
            Call SetListItem("Uruguay")
            Call SetListItem("Uzbekistan")
            Call SetListItem("Vanuatu")
            Call SetListItem("Venezuela")
            Call SetListItem("Vietnam")
            Call SetListItem("Wake Island")
            Call SetListItem("Wallis & Futuna")
            Call SetListItem("Western Sahara")
            Call SetListItem("Yemen (Aden)")
            Call SetListItem("Zambia")
            Call SetListItem("Zimbabwe")
        ElseIf TpID = "Mexican Consular ID Card" Then
           Call SetListItem("United States", "US")
    'Foreign countries
            Call SetListItem("Afghanistan")
            Call SetListItem("Akrotiri")
            Call SetListItem("Albania")
            Call SetListItem("Algeria")
            Call SetListItem("Andorra")
            Call SetListItem("Angola")
            Call SetListItem("Anguilla")
            Call SetListItem("Antarctica")
            Call SetListItem("Antigua & Barbuda")
            Call SetListItem("Argentina")
            Call SetListItem("Armenia")
            Call SetListItem("Aruba")
            Call SetListItem("Ashmore & Cartier Islands")
            Call SetListItem("Australia")
            Call SetListItem("Austria")
            Call SetListItem("Azerbaijan")
            Call SetListItem("Bahamas")
            Call SetListItem("Bahrain")
            Call SetListItem("Baker Island")
            Call SetListItem("Bangladesh")
            Call SetListItem("Barbados")
            Call SetListItem("Belarus")
            Call SetListItem("Belgium")
            Call SetListItem("Belize")
            Call SetListItem("Benin")
            Call SetListItem("Bermuda")
            Call SetListItem("Bhutan")
            Call SetListItem("Bolivia")
            Call SetListItem("Bosnia-Herzegovina")
            Call SetListItem("Botswana")
            Call SetListItem("Bouvet Island")
            Call SetListItem("Brazil")
            Call SetListItem("British Indian Ocean Territory")
            Call SetListItem("British Virgin Islands")
            Call SetListItem("Brunei")
            Call SetListItem("Bulgaria")
            Call SetListItem("Burkina Faso")
            Call SetListItem("Burma")
            Call SetListItem("Burundi")
            Call SetListItem("Cambodia")
            Call SetListItem("Cameroon")
            Call SetListItem("Canada")
            Call SetListItem("Cape Verde")
            Call SetListItem("Cayman Islands")
            Call SetListItem("Central African Republic")
            Call SetListItem("Chad")
            Call SetListItem("Chile")
            Call SetListItem("China")
            Call SetListItem("Christmas Island")
            Call SetListItem("Clipperton Island")
            Call SetListItem("Cocos (Keeling) Islands")
            Call SetListItem("Colombia")
            Call SetListItem("Comoros")
            Call SetListItem("Congo (Brazzaville)")
            Call SetListItem("Congo (Kinshasa)")
            Call SetListItem("Cooks Islands")
            Call SetListItem("Coral Sea Islands")
            Call SetListItem("Costa Rica")
            Call SetListItem("Cote d'Ivoire (Ivory Coast)")
            Call SetListItem("Croatia")
            Call SetListItem("Cuba")
            Call SetListItem("Curacao")
            Call SetListItem("Cyprus")
            Call SetListItem("Czech Republic")
            Call SetListItem("Denmark")
            Call SetListItem("Dhekelia")
            Call SetListItem("Djibouti")
            Call SetListItem("Dominica")
            Call SetListItem("Dominican Republic")
            Call SetListItem("East Timor")
            Call SetListItem("Ecuador")
            Call SetListItem("Egypt")
            Call SetListItem("El Salvador")
            Call SetListItem("Equatorial Guinea")
            Call SetListItem("Eritrea")
            Call SetListItem("Estonia")
            Call SetListItem("Ethiopia")
            Call SetListItem("Falkland Islands (Islas Malvinas)")
            Call SetListItem("Faroe Islands")
            Call SetListItem("Federated States of Micronesia")
            Call SetListItem("Fiji")
            Call SetListItem("Finland")
            Call SetListItem("France")
            Call SetListItem("French Polynesia")
            Call SetListItem("French Southern & Antarctic Lands")
            Call SetListItem("Gabon")
            Call SetListItem("The Gambia")
            Call SetListItem("Georgia")
            Call SetListItem("Germany")
            Call SetListItem("Ghana")
            Call SetListItem("Gibraltar")
            Call SetListItem("Greece")
            Call SetListItem("Greenland")
            Call SetListItem("Grenada")
            Call SetListItem("Guatemala")
            Call SetListItem("Guernsey")
            Call SetListItem("Guinea")
            Call SetListItem("Guinea-Bissau")
            Call SetListItem("Guyana")
            Call SetListItem("Haiti")
            Call SetListItem("Heard Island & McDonald Islands")
            Call SetListItem("Holy See")
            Call SetListItem("Honduras")
            Call SetListItem("Hong Kong")
            Call SetListItem("Howland Island")
            Call SetListItem("Hungary")
            Call SetListItem("Iceland")
            Call SetListItem("India")
            Call SetListItem("Indonesia")
            Call SetListItem("Iran")
            Call SetListItem("Iraq")
            Call SetListItem("Ireland")
            Call SetListItem("Israel")
            Call SetListItem("Italy")
            Call SetListItem("Jamaica")
            Call SetListItem("Jan Mayen")
            Call SetListItem("Japan")
            Call SetListItem("Jarvis Island")
            Call SetListItem("Jersey")
            Call SetListItem("Johnston Atoll")
            Call SetListItem("Jordan")
            Call SetListItem("Kazakhstan")
            Call SetListItem("Kenya")
            Call SetListItem("Kingman Reef")
            Call SetListItem("Kiribati")
    ' North and South Korea are different in this list due to space constraints on the IV_USWEFWksht_IDInfo1 and IV_USEF_IDInfo1 questions
            Call SetListItem("North Korea")
            Call SetListItem("South Korea")
            Call SetListItem("Kosovo")
            Call SetListItem("Kuwait")
            Call SetListItem("Kyrgyzstan")
            Call SetListItem("Laos")
            Call SetListItem("Latvia")
            Call SetListItem("Lebanon")
            Call SetListItem("Lesotho")
            Call SetListItem("Liberia")
            Call SetListItem("Libya")
            Call SetListItem("Liechtenstein")
            Call SetListItem("Lithuania")
            Call SetListItem("Luxembourg")
            Call SetListItem("Macau")
            Call SetListItem("Macedonia")
            Call SetListItem("Madagascar")
            Call SetListItem("Malawi")
            Call SetListItem("Malaysia")
            Call SetListItem("Maldives")
            Call SetListItem("Mali")
            Call SetListItem("Malta")
            Call SetListItem("Man, Isle of")
            Call SetListItem("Marshall Islands")
            Call SetListItem("Mauritania")
            Call SetListItem("Mauritius")
            Call SetListItem("Mexico")
            Call SetListItem("Midway Islands")
            Call SetListItem("Moldova")
            Call SetListItem("Monaco")
            Call SetListItem("Mongolia")
            Call SetListItem("Montenegro")
            Call SetListItem("Montserrat")
            Call SetListItem("Morocco")
            Call SetListItem("Mozambique")
            Call SetListItem("Namibia")
            Call SetListItem("Nauru")
            Call SetListItem("Navassa Island")
            Call SetListItem("Nepal")
            Call SetListItem("Netherlands")
            Call SetListItem("New Caledonia")
            Call SetListItem("New Zealand")
            Call SetListItem("Nicaragua")
            Call SetListItem("Niger")
            Call SetListItem("Nigeria")
            Call SetListItem("Niue")
            Call SetListItem("Norfolk Island")
            Call SetListItem("Norway")
            Call SetListItem("Oman")
            Call SetListItem("Other Country")
            Call SetListItem("Pakistan")
            Call SetListItem("Palau")
            Call SetListItem("Palmyra Atoll")
            Call SetListItem("Panama")
            Call SetListItem("Papua-New Guinea")
            Call SetListItem("Paracel Islands")
            Call SetListItem("Paraguay")
            Call SetListItem("Peru")
            Call SetListItem("Philippines")
            Call SetListItem("Pitcairn Islands")
            Call SetListItem("Poland")
            Call SetListItem("Portugal")
            Call SetListItem("Qatar")
            Call SetListItem("Romania")
            Call SetListItem("Russia")
            Call SetListItem("Rwanda")
            Call SetListItem("Saint Barthelemy")
            Call SetListItem("Saint Martin")
            Call SetListItem("Samoa")
            Call SetListItem("San Marino")
            Call SetListItem("Sao Tome & Principe")
            Call SetListItem("Saudi Arabia")
            Call SetListItem("Senegal")
            Call SetListItem("Serbia")
            Call SetListItem("Seychelles")
            Call SetListItem("Sierra Leone")
            Call SetListItem("Singapore")
            Call SetListItem("Sint Maarten")
            Call SetListItem("Slovakia")
            Call SetListItem("Slovenia")
            Call SetListItem("Solomon Islands")
            Call SetListItem("Somalia")
            Call SetListItem("South Africa")
    ' South Georgia & South Sandwich Islands is different in this list due to space constraints on the IV_USWEFWksht_IDInfo1 and IV_USEF_IDInfo1 questions
            Call SetListItem("South Georgia & Sandwich Islands")
            Call SetListItem("South Sudan")
            Call SetListItem("Spain")
            Call SetListItem("Spratly Islands")
            Call SetListItem("Sri Lanka")
            Call SetListItem("Saint Helena")
            Call SetListItem("Saint Kitts & Nevis")
            Call SetListItem("Saint Lucia Island")
            Call SetListItem("Saint Pierre & Miquelon")
            Call SetListItem("Saint Vincent & the Grenadines")
            Call SetListItem("Sudan")
            Call SetListItem("Suriname")
            Call SetListItem("Svalbard")
            Call SetListItem("Swaziland")
            Call SetListItem("Sweden")
            Call SetListItem("Switzerland")
            Call SetListItem("Syria")
            Call SetListItem("Taiwan")
            Call SetListItem("Tajikistan")
            Call SetListItem("Tanzania")
            Call SetListItem("Thailand")
            Call SetListItem("Togo")
            Call SetListItem("Tokelau")
            Call SetListItem("Tonga")
            Call SetListItem("Trinidad & Tobago")
            Call SetListItem("Tunisia")
            Call SetListItem("Turkey")
            Call SetListItem("Turkmenistan")
            Call SetListItem("Turks & Caicos Islands")
            Call SetListItem("Tuvalu")
            Call SetListItem("Uganda")
            Call SetListItem("Ukraine")
            Call SetListItem("United Arab Emirates")
            Call SetListItem("United Kingdom")
            Call SetListItem("Uruguay")
            Call SetListItem("Uzbekistan")
            Call SetListItem("Vanuatu")
            Call SetListItem("Venezuela")
            Call SetListItem("Vietnam")
            Call SetListItem("Wake Island")
            Call SetListItem("Wallis & Futuna")
            Call SetListItem("Western Sahara")
            Call SetListItem("Yemen (Aden)")
            Call SetListItem("Zambia")
            Call SetListItem("Zimbabwe")
        ElseIf TpID = "Alien ID" Or TpID = "Green Card" Or TpID = "Work Visa" Then
           Call SetListItem("United States", "US")
    'Foreign countries
            Call SetListItem("Afghanistan")
            Call SetListItem("Akrotiri")
            Call SetListItem("Albania")
            Call SetListItem("Algeria")
            Call SetListItem("Andorra")
            Call SetListItem("Angola")
            Call SetListItem("Anguilla")
            Call SetListItem("Antarctica")
            Call SetListItem("Antigua & Barbuda")
            Call SetListItem("Argentina")
            Call SetListItem("Armenia")
            Call SetListItem("Aruba")
            Call SetListItem("Ashmore & Cartier Islands")
            Call SetListItem("Australia")
            Call SetListItem("Austria")
            Call SetListItem("Azerbaijan")
            Call SetListItem("Bahamas")
            Call SetListItem("Bahrain")
            Call SetListItem("Baker Island")
            Call SetListItem("Bangladesh")
            Call SetListItem("Barbados")
            Call SetListItem("Belarus")
            Call SetListItem("Belgium")
            Call SetListItem("Belize")
            Call SetListItem("Benin")
            Call SetListItem("Bermuda")
            Call SetListItem("Bhutan")
            Call SetListItem("Bolivia")
            Call SetListItem("Bosnia-Herzegovina")
            Call SetListItem("Botswana")
            Call SetListItem("Bouvet Island")
            Call SetListItem("Brazil")
            Call SetListItem("British Indian Ocean Territory")
            Call SetListItem("British Virgin Islands")
            Call SetListItem("Brunei")
            Call SetListItem("Bulgaria")
            Call SetListItem("Burkina Faso")
            Call SetListItem("Burma")
            Call SetListItem("Burundi")
            Call SetListItem("Cambodia")
            Call SetListItem("Cameroon")
            Call SetListItem("Canada")
            Call SetListItem("Cape Verde")
            Call SetListItem("Cayman Islands")
            Call SetListItem("Central African Republic")
            Call SetListItem("Chad")
            Call SetListItem("Chile")
            Call SetListItem("China")
            Call SetListItem("Christmas Island")
            Call SetListItem("Clipperton Island")
            Call SetListItem("Cocos (Keeling) Islands")
            Call SetListItem("Colombia")
            Call SetListItem("Comoros")
            Call SetListItem("Congo (Brazzaville)")
            Call SetListItem("Congo (Kinshasa)")
            Call SetListItem("Cooks Islands")
            Call SetListItem("Coral Sea Islands")
            Call SetListItem("Costa Rica")
            Call SetListItem("Cote d'Ivoire (Ivory Coast)")
            Call SetListItem("Croatia")
            Call SetListItem("Cuba")
            Call SetListItem("Curacao")
            Call SetListItem("Cyprus")
            Call SetListItem("Czech Republic")
            Call SetListItem("Denmark")
            Call SetListItem("Dhekelia")
            Call SetListItem("Djibouti")
            Call SetListItem("Dominica")
            Call SetListItem("Dominican Republic")
            Call SetListItem("East Timor")
            Call SetListItem("Ecuador")
            Call SetListItem("Egypt")
            Call SetListItem("El Salvador")
            Call SetListItem("Equatorial Guinea")
            Call SetListItem("Eritrea")
            Call SetListItem("Estonia")
            Call SetListItem("Ethiopia")
            Call SetListItem("Falkland Islands (Islas Malvinas)")
            Call SetListItem("Faroe Islands")
            Call SetListItem("Federated States of Micronesia")
            Call SetListItem("Fiji")
            Call SetListItem("Finland")
            Call SetListItem("France")
            Call SetListItem("French Polynesia")
            Call SetListItem("French Southern & Antarctic Lands")
            Call SetListItem("Gabon")
            Call SetListItem("The Gambia")
            Call SetListItem("Georgia")
            Call SetListItem("Germany")
            Call SetListItem("Ghana")
            Call SetListItem("Gibraltar")
            Call SetListItem("Greece")
            Call SetListItem("Greenland")
            Call SetListItem("Grenada")
            Call SetListItem("Guatemala")
            Call SetListItem("Guernsey")
            Call SetListItem("Guinea")
            Call SetListItem("Guinea-Bissau")
            Call SetListItem("Guyana")
            Call SetListItem("Haiti")
            Call SetListItem("Heard Island & McDonald Islands")
            Call SetListItem("Holy See")
            Call SetListItem("Honduras")
            Call SetListItem("Hong Kong")
            Call SetListItem("Howland Island")
            Call SetListItem("Hungary")
            Call SetListItem("Iceland")
            Call SetListItem("India")
            Call SetListItem("Indonesia")
            Call SetListItem("Iran")
            Call SetListItem("Iraq")
            Call SetListItem("Ireland")
            Call SetListItem("Israel")
            Call SetListItem("Italy")
            Call SetListItem("Jamaica")
            Call SetListItem("Jan Mayen")
            Call SetListItem("Japan")
            Call SetListItem("Jarvis Island")
            Call SetListItem("Jersey")
            Call SetListItem("Johnston Atoll")
            Call SetListItem("Jordan")
            Call SetListItem("Kazakhstan")
            Call SetListItem("Kenya")
            Call SetListItem("Kingman Reef")
            Call SetListItem("Kiribati")
    ' North and South Korea are different in this list due to space constraints on the IV_USWEFWksht_IDInfo1 and IV_USEF_IDInfo1 questions
            Call SetListItem("North Korea")
            Call SetListItem("South Korea")
            Call SetListItem("Kosovo")
            Call SetListItem("Kuwait")
            Call SetListItem("Kyrgyzstan")
            Call SetListItem("Laos")
            Call SetListItem("Latvia")
            Call SetListItem("Lebanon")
            Call SetListItem("Lesotho")
            Call SetListItem("Liberia")
            Call SetListItem("Libya")
            Call SetListItem("Liechtenstein")
            Call SetListItem("Lithuania")
            Call SetListItem("Luxembourg")
            Call SetListItem("Macau")
            Call SetListItem("Macedonia")
            Call SetListItem("Madagascar")
            Call SetListItem("Malawi")
            Call SetListItem("Malaysia")
            Call SetListItem("Maldives")
            Call SetListItem("Mali")
            Call SetListItem("Malta")
            Call SetListItem("Man, Isle of")
            Call SetListItem("Marshall Islands")
            Call SetListItem("Mauritania")
            Call SetListItem("Mauritius")
            Call SetListItem("Mexico")
            Call SetListItem("Midway Islands")
            Call SetListItem("Moldova")
            Call SetListItem("Monaco")
            Call SetListItem("Mongolia")
            Call SetListItem("Montenegro")
            Call SetListItem("Montserrat")
            Call SetListItem("Morocco")
            Call SetListItem("Mozambique")
            Call SetListItem("Namibia")
            Call SetListItem("Nauru")
            Call SetListItem("Navassa Island")
            Call SetListItem("Nepal")
            Call SetListItem("Netherlands")
            Call SetListItem("New Caledonia")
            Call SetListItem("New Zealand")
            Call SetListItem("Nicaragua")
            Call SetListItem("Niger")
            Call SetListItem("Nigeria")
            Call SetListItem("Niue")
            Call SetListItem("Norfolk Island")
            Call SetListItem("Norway")
            Call SetListItem("Oman")
            Call SetListItem("Other Country")
            Call SetListItem("Pakistan")
            Call SetListItem("Palau")
            Call SetListItem("Palmyra Atoll")
            Call SetListItem("Panama")
            Call SetListItem("Papua-New Guinea")
            Call SetListItem("Paracel Islands")
            Call SetListItem("Paraguay")
            Call SetListItem("Peru")
            Call SetListItem("Philippines")
            Call SetListItem("Pitcairn Islands")
            Call SetListItem("Poland")
            Call SetListItem("Portugal")
            Call SetListItem("Qatar")
            Call SetListItem("Romania")
            Call SetListItem("Russia")
            Call SetListItem("Rwanda")
            Call SetListItem("Saint Barthelemy")
            Call SetListItem("Saint Martin")
            Call SetListItem("Samoa")
            Call SetListItem("San Marino")
            Call SetListItem("Sao Tome & Principe")
            Call SetListItem("Saudi Arabia")
            Call SetListItem("Senegal")
            Call SetListItem("Serbia")
            Call SetListItem("Seychelles")
            Call SetListItem("Sierra Leone")
            Call SetListItem("Singapore")
            Call SetListItem("Sint Maarten")
            Call SetListItem("Slovakia")
            Call SetListItem("Slovenia")
            Call SetListItem("Solomon Islands")
            Call SetListItem("Somalia")
            Call SetListItem("South Africa")
    ' South Georgia & South Sandwich Islands is different in this list due to space constraints on the IV_USWEFWksht_IDInfo1 and IV_USEF_IDInfo1 questions
            Call SetListItem("South Georgia & Sandwich Islands")
            Call SetListItem("South Sudan")
            Call SetListItem("Spain")
            Call SetListItem("Spratly Islands")
            Call SetListItem("Sri Lanka")
            Call SetListItem("Saint Helena")
            Call SetListItem("Saint Kitts & Nevis")
            Call SetListItem("Saint Lucia Island")
            Call SetListItem("Saint Pierre & Miquelon")
            Call SetListItem("Saint Vincent & the Grenadines")
            Call SetListItem("Sudan")
            Call SetListItem("Suriname")
            Call SetListItem("Svalbard")
            Call SetListItem("Swaziland")
            Call SetListItem("Sweden")
            Call SetListItem("Switzerland")
            Call SetListItem("Syria")
            Call SetListItem("Taiwan")
            Call SetListItem("Tajikistan")
            Call SetListItem("Tanzania")
            Call SetListItem("Thailand")
            Call SetListItem("Togo")
            Call SetListItem("Tokelau")
            Call SetListItem("Tonga")
            Call SetListItem("Trinidad & Tobago")
            Call SetListItem("Tunisia")
            Call SetListItem("Turkey")
            Call SetListItem("Turkmenistan")
            Call SetListItem("Turks & Caicos Islands")
            Call SetListItem("Tuvalu")
            Call SetListItem("Uganda")
            Call SetListItem("Ukraine")
            Call SetListItem("United Arab Emirates")
            Call SetListItem("United Kingdom")
            Call SetListItem("Uruguay")
            Call SetListItem("Uzbekistan")
            Call SetListItem("Vanuatu")
            Call SetListItem("Venezuela")
            Call SetListItem("Vietnam")
            Call SetListItem("Wake Island")
            Call SetListItem("Wallis & Futuna")
            Call SetListItem("Western Sahara")
            Call SetListItem("Yemen (Aden)")
            Call SetListItem("Zambia")
            Call SetListItem("Zimbabwe")
        End If
    Else
        If TpID = "U.S. Driver's License" Then
            Call SetListItem("AA - Military Address", "AA")
            Call SetListItem("AE - Military Address", "AE")
            Call SetListItem("AP - Military Address", "AP")
            Call SetListItem("AL - Alabama", "AL")
            Call SetListItem("AK - Alaska", "AK")
            Call SetListItem("AS - American Samoa", "AS")
            Call SetListItem("AZ - Arizona", "AZ")
            Call SetListItem("AR - Arkansas", "AR")
            Call SetListItem("CA - California", "CA")
            Call SetListItem("CO - Colorado", "CO")
            Call SetListItem("CT - Connecticut", "CT")
            Call SetListItem("DE - Delaware", "DE")
            Call SetListItem("DC - District of Columbia", "DC")
            Call SetListItem("FM - Federated States of Micronesia", "FM")
            Call SetListItem("FL - Florida", "FL")
            Call SetListItem("GA - Georgia", "GA")
            Call SetListItem("GU - Guam", "GU")
            Call SetListItem("HI - Hawaii", "HI")
            Call SetListItem("ID - Idaho", "ID")
            Call SetListItem("IL - Illinois", "IL")
            Call SetListItem("IN - Indiana", "IN")
            Call SetListItem("IA - Iowa", "IA")
            Call SetListItem("KS - Kansas", "KS")
            Call SetListItem("KY - Kentucky", "KY")
            Call SetListItem("LA - Louisiana", "LA")
            Call SetListItem("ME - Maine", "ME")
            Call SetListItem("MH - Marshall Islands", "MH")
            Call SetListItem("MD - Maryland", "MD")
            Call SetListItem("MA - Massachusetts", "MA")
            Call SetListItem("MI - Michigan", "MI")
            Call SetListItem("MN - Minnesota", "MN")
            Call SetListItem("MS - Mississippi", "MS")
            Call SetListItem("MO - Missouri", "MO")
            Call SetListItem("MT - Montana", "MT")
            Call SetListItem("NE - Nebraska", "NE")
            Call SetListItem("NV - Nevada", "NV")
            Call SetListItem("NH - New Hampshire", "NH")
            Call SetListItem("NJ - New Jersey", "NJ")
            Call SetListItem("NM - New Mexico", "NM")
            Call SetListItem("NY - New York", "NY")
            Call SetListItem("NC - North Carolina", "NC")
            Call SetListItem("ND - North Dakota", "ND")
            Call SetListItem("MP - Northern Mariana Islands", "MP")
            Call SetListItem("OH - Ohio", "OH")
            Call SetListItem("OK - Oklahoma", "OK")
            Call SetListItem("OR - Oregon", "OR")
            Call SetListItem("PW - Palau", "PW")
            Call SetListItem("PA - Pennsylvania", "PA")
            Call SetListItem("PR - Puerto Rico", "PR")
            Call SetListItem("RI - Rhode Island", "RI")
            Call SetListItem("SC - South Carolina", "SC")
            Call SetListItem("SD - South Dakota", "SD")
            Call SetListItem("TN - Tennessee", "TN")
            Call SetListItem("TX - Texas", "TX")
            Call SetListItem("UT - Utah", "UT")
            Call SetListItem("VT - Vermont", "VT")
            Call SetListItem("VA - Virginia", "VA")
            Call SetListItem("VI - Virgin Islands", "VI")
            Call SetListItem("WA - Washington", "WA")
            Call SetListItem("WV - West Virginia", "WV")
            Call SetListItem("WI - Wisconsin", "WI")
            Call SetListItem("WY - Wyoming", "WY")
        ElseIf TpID = "U.S. DMV/BMV State ID" Then
            Call SetListItem("AA - Military Address", "AA")
            Call SetListItem("AE - Military Address", "AE")
            Call SetListItem("AP - Military Address", "AP")
            Call SetListItem("AL - Alabama", "AL")
            Call SetListItem("AK - Alaska", "AK")
            Call SetListItem("AS - American Samoa", "AS")
            Call SetListItem("AZ - Arizona", "AZ")
            Call SetListItem("AR - Arkansas", "AR")
            Call SetListItem("CA - California", "CA")
            Call SetListItem("CO - Colorado", "CO")
            Call SetListItem("CT - Connecticut", "CT")
            Call SetListItem("DE - Delaware", "DE")
            Call SetListItem("DC - District of Columbia", "DC")
            Call SetListItem("FM - Federated States of Micronesia", "FM")
            Call SetListItem("FL - Florida", "FL")
            Call SetListItem("GA - Georgia", "GA")
            Call SetListItem("GU - Guam", "GU")
            Call SetListItem("HI - Hawaii", "HI")
            Call SetListItem("ID - Idaho", "ID")
            Call SetListItem("IL - Illinois", "IL")
            Call SetListItem("IN - Indiana", "IN")
            Call SetListItem("IA - Iowa", "IA")
            Call SetListItem("KS - Kansas", "KS")
            Call SetListItem("KY - Kentucky", "KY")
            Call SetListItem("LA - Louisiana", "LA")
            Call SetListItem("ME - Maine", "ME")
            Call SetListItem("MH - Marshall Islands", "MH")
            Call SetListItem("MD - Maryland", "MD")
            Call SetListItem("MA - Massachusetts", "MA")
            Call SetListItem("MI - Michigan", "MI")
            Call SetListItem("MN - Minnesota", "MN")
            Call SetListItem("MS - Mississippi", "MS")
            Call SetListItem("MO - Missouri", "MO")
            Call SetListItem("MT - Montana", "MT")
            Call SetListItem("NE - Nebraska", "NE")
            Call SetListItem("NV - Nevada", "NV")
            Call SetListItem("NH - New Hampshire", "NH")
            Call SetListItem("NJ - New Jersey", "NJ")
            Call SetListItem("NM - New Mexico", "NM")
            Call SetListItem("NY - New York", "NY")
            Call SetListItem("NC - North Carolina", "NC")
            Call SetListItem("ND - North Dakota", "ND")
            Call SetListItem("MP - Northern Mariana Islands", "MP")
            Call SetListItem("OH - Ohio", "OH")
            Call SetListItem("OK - Oklahoma", "OK")
            Call SetListItem("OR - Oregon", "OR")
            Call SetListItem("PW - Palau", "PW")
            Call SetListItem("PA - Pennsylvania", "PA")
            Call SetListItem("PR - Puerto Rico", "PR")
            Call SetListItem("RI - Rhode Island", "RI")
            Call SetListItem("SC - South Carolina", "SC")
            Call SetListItem("SD - South Dakota", "SD")
            Call SetListItem("TN - Tennessee", "TN")
            Call SetListItem("TX - Texas", "TX")
            Call SetListItem("UT - Utah", "UT")
            Call SetListItem("VT - Vermont", "VT")
            Call SetListItem("VA - Virginia", "VA")
            Call SetListItem("VI - Virgin Islands", "VI")
            Call SetListItem("WA - Washington", "WA")
            Call SetListItem("WV - West Virginia", "WV")
            Call SetListItem("WI - Wisconsin", "WI")
            Call SetListItem("WY - Wyoming", "WY")
        ElseIf TpID = "U.S. Military ID" Then
            Call SetListItem("United States", "US")
        ElseIf TpID = "U.S. Passport" Then
            Call SetListItem("United States", "US")
    'Foreign countries
            Call SetListItem("Afghanistan")
            Call SetListItem("Akrotiri")
            Call SetListItem("Albania")
            Call SetListItem("Algeria")
            Call SetListItem("Andorra")
            Call SetListItem("Angola")
            Call SetListItem("Anguilla")
            Call SetListItem("Antarctica")
            Call SetListItem("Antigua & Barbuda")
            Call SetListItem("Argentina")
            Call SetListItem("Armenia")
            Call SetListItem("Aruba")
            Call SetListItem("Ashmore & Cartier Islands")
            Call SetListItem("Australia")
            Call SetListItem("Austria")
            Call SetListItem("Azerbaijan")
            Call SetListItem("Bahamas")
            Call SetListItem("Bahrain")
            Call SetListItem("Baker Island")
            Call SetListItem("Bangladesh")
            Call SetListItem("Barbados")
            Call SetListItem("Belarus")
            Call SetListItem("Belgium")
            Call SetListItem("Belize")
            Call SetListItem("Benin")
            Call SetListItem("Bermuda")
            Call SetListItem("Bhutan")
            Call SetListItem("Bolivia")
            Call SetListItem("Bosnia-Herzegovina")
            Call SetListItem("Botswana")
            Call SetListItem("Bouvet Island")
            Call SetListItem("Brazil")
            Call SetListItem("British Indian Ocean Territory")
            Call SetListItem("British Virgin Islands")
            Call SetListItem("Brunei")
            Call SetListItem("Bulgaria")
            Call SetListItem("Burkina Faso")
            Call SetListItem("Burma")
            Call SetListItem("Burundi")
            Call SetListItem("Cambodia")
            Call SetListItem("Cameroon")
            Call SetListItem("Canada")
            Call SetListItem("Cape Verde")
            Call SetListItem("Cayman Islands")
            Call SetListItem("Central African Republic")
            Call SetListItem("Chad")
            Call SetListItem("Chile")
            Call SetListItem("China")
            Call SetListItem("Christmas Island")
            Call SetListItem("Clipperton Island")
            Call SetListItem("Cocos (Keeling) Islands")
            Call SetListItem("Colombia")
            Call SetListItem("Comoros")
            Call SetListItem("Congo (Brazzaville)")
            Call SetListItem("Congo (Kinshasa)")
            Call SetListItem("Cooks Islands")
            Call SetListItem("Coral Sea Islands")
            Call SetListItem("Costa Rica")
            Call SetListItem("Cote d'Ivoire (Ivory Coast)")
            Call SetListItem("Croatia")
            Call SetListItem("Cuba")
            Call SetListItem("Curacao")
            Call SetListItem("Cyprus")
            Call SetListItem("Czech Republic")
            Call SetListItem("Denmark")
            Call SetListItem("Dhekelia")
            Call SetListItem("Djibouti")
            Call SetListItem("Dominica")
            Call SetListItem("Dominican Republic")
            Call SetListItem("East Timor")
            Call SetListItem("Ecuador")
            Call SetListItem("Egypt")
            Call SetListItem("El Salvador")
            Call SetListItem("Equatorial Guinea")
            Call SetListItem("Eritrea")
            Call SetListItem("Estonia")
            Call SetListItem("Ethiopia")
            Call SetListItem("Falkland Islands (Islas Malvinas)")
            Call SetListItem("Faroe Islands")
            Call SetListItem("Federated States of Micronesia")
            Call SetListItem("Fiji")
            Call SetListItem("Finland")
            Call SetListItem("France")
            Call SetListItem("French Polynesia")
            Call SetListItem("French Southern & Antarctic Lands")
            Call SetListItem("Gabon")
            Call SetListItem("The Gambia")
            Call SetListItem("Georgia")
            Call SetListItem("Germany")
            Call SetListItem("Ghana")
            Call SetListItem("Gibraltar")
            Call SetListItem("Greece")
            Call SetListItem("Greenland")
            Call SetListItem("Grenada")
            Call SetListItem("Guatemala")
            Call SetListItem("Guernsey")
            Call SetListItem("Guinea")
            Call SetListItem("Guinea-Bissau")
            Call SetListItem("Guyana")
            Call SetListItem("Haiti")
            Call SetListItem("Heard Island & McDonald Islands")
            Call SetListItem("Holy See")
            Call SetListItem("Honduras")
            Call SetListItem("Hong Kong")
            Call SetListItem("Howland Island")
            Call SetListItem("Hungary")
            Call SetListItem("Iceland")
            Call SetListItem("India")
            Call SetListItem("Indonesia")
            Call SetListItem("Iran")
            Call SetListItem("Iraq")
            Call SetListItem("Ireland")
            Call SetListItem("Israel")
            Call SetListItem("Italy")
            Call SetListItem("Jamaica")
            Call SetListItem("Jan Mayen")
            Call SetListItem("Japan")
            Call SetListItem("Jarvis Island")
            Call SetListItem("Jersey")
            Call SetListItem("Johnston Atoll")
            Call SetListItem("Jordan")
            Call SetListItem("Kazakhstan")
            Call SetListItem("Kenya")
            Call SetListItem("Kingman Reef")
            Call SetListItem("Kiribati")
    ' North and South Korea are different in this list due to space constraints on the IV_USWEFWksht_IDInfo1 and IV_USEF_IDInfo1 questions
            Call SetListItem("North Korea")
            Call SetListItem("South Korea")
            Call SetListItem("Kosovo")
            Call SetListItem("Kuwait")
            Call SetListItem("Kyrgyzstan")
            Call SetListItem("Laos")
            Call SetListItem("Latvia")
            Call SetListItem("Lebanon")
            Call SetListItem("Lesotho")
            Call SetListItem("Liberia")
            Call SetListItem("Libya")
            Call SetListItem("Liechtenstein")
            Call SetListItem("Lithuania")
            Call SetListItem("Luxembourg")
            Call SetListItem("Macau")
            Call SetListItem("Macedonia")
            Call SetListItem("Madagascar")
            Call SetListItem("Malawi")
            Call SetListItem("Malaysia")
            Call SetListItem("Maldives")
            Call SetListItem("Mali")
            Call SetListItem("Malta")
            Call SetListItem("Man, Isle of")
            Call SetListItem("Marshall Islands")
            Call SetListItem("Mauritania")
            Call SetListItem("Mauritius")
            Call SetListItem("Mexico")
            Call SetListItem("Midway Islands")
            Call SetListItem("Moldova")
            Call SetListItem("Monaco")
            Call SetListItem("Mongolia")
            Call SetListItem("Montenegro")
            Call SetListItem("Montserrat")
            Call SetListItem("Morocco")
            Call SetListItem("Mozambique")
            Call SetListItem("Namibia")
            Call SetListItem("Nauru")
            Call SetListItem("Navassa Island")
            Call SetListItem("Nepal")
            Call SetListItem("Netherlands")
            Call SetListItem("New Caledonia")
            Call SetListItem("New Zealand")
            Call SetListItem("Nicaragua")
            Call SetListItem("Niger")
            Call SetListItem("Nigeria")
            Call SetListItem("Niue")
            Call SetListItem("Norfolk Island")
            Call SetListItem("Norway")
            Call SetListItem("Oman")
            Call SetListItem("Other Country")
            Call SetListItem("Pakistan")
            Call SetListItem("Palau")
            Call SetListItem("Palmyra Atoll")
            Call SetListItem("Panama")
            Call SetListItem("Papua-New Guinea")
            Call SetListItem("Paracel Islands")
            Call SetListItem("Paraguay")
            Call SetListItem("Peru")
            Call SetListItem("Philippines")
            Call SetListItem("Pitcairn Islands")
            Call SetListItem("Poland")
            Call SetListItem("Portugal")
            Call SetListItem("Qatar")
            Call SetListItem("Romania")
            Call SetListItem("Russia")
            Call SetListItem("Rwanda")
            Call SetListItem("Saint Barthelemy")
            Call SetListItem("Saint Martin")
            Call SetListItem("Samoa")
            Call SetListItem("San Marino")
            Call SetListItem("Sao Tome & Principe")
            Call SetListItem("Saudi Arabia")
            Call SetListItem("Senegal")
            Call SetListItem("Serbia")
            Call SetListItem("Seychelles")
            Call SetListItem("Sierra Leone")
            Call SetListItem("Singapore")
            Call SetListItem("Sint Maarten")
            Call SetListItem("Slovakia")
            Call SetListItem("Slovenia")
            Call SetListItem("Solomon Islands")
            Call SetListItem("Somalia")
            Call SetListItem("South Africa")
    ' South Georgia & South Sandwich Islands is different in this list due to space constraints on the IV_USWEFWksht_IDInfo1 and IV_USEF_IDInfo1 questions
            Call SetListItem("South Georgia & Sandwich Islands")
            Call SetListItem("South Sudan")
            Call SetListItem("Spain")
            Call SetListItem("Spratly Islands")
            Call SetListItem("Sri Lanka")
            Call SetListItem("Saint Helena")
            Call SetListItem("Saint Kitts & Nevis")
            Call SetListItem("Saint Lucia Island")
            Call SetListItem("Saint Pierre & Miquelon")
            Call SetListItem("Saint Vincent & the Grenadines")
            Call SetListItem("Sudan")
            Call SetListItem("Suriname")
            Call SetListItem("Svalbard")
            Call SetListItem("Swaziland")
            Call SetListItem("Sweden")
            Call SetListItem("Switzerland")
            Call SetListItem("Syria")
            Call SetListItem("Taiwan")
            Call SetListItem("Tajikistan")
            Call SetListItem("Tanzania")
            Call SetListItem("Thailand")
            Call SetListItem("Togo")
            Call SetListItem("Tokelau")
            Call SetListItem("Tonga")
            Call SetListItem("Trinidad & Tobago")
            Call SetListItem("Tunisia")
            Call SetListItem("Turkey")
            Call SetListItem("Turkmenistan")
            Call SetListItem("Turks & Caicos Islands")
            Call SetListItem("Tuvalu")
            Call SetListItem("Uganda")
            Call SetListItem("Ukraine")
            Call SetListItem("United Arab Emirates")
            Call SetListItem("United Kingdom")
            Call SetListItem("Uruguay")
            Call SetListItem("Uzbekistan")
            Call SetListItem("Vanuatu")
            Call SetListItem("Venezuela")
            Call SetListItem("Vietnam")
            Call SetListItem("Wake Island")
            Call SetListItem("Wallis & Futuna")
            Call SetListItem("Western Sahara")
            Call SetListItem("Yemen (Aden)")
            Call SetListItem("Zambia")
            Call SetListItem("Zimbabwe")
        ElseIf TpID = "Foreign Passport" Then
            Call SetListItem("United States", "US")
    'Foreign countries
            Call SetListItem("Afghanistan")
            Call SetListItem("Akrotiri")
            Call SetListItem("Albania")
            Call SetListItem("Algeria")
            Call SetListItem("Andorra")
            Call SetListItem("Angola")
            Call SetListItem("Anguilla")
            Call SetListItem("Antarctica")
            Call SetListItem("Antigua & Barbuda")
            Call SetListItem("Argentina")
            Call SetListItem("Armenia")
            Call SetListItem("Aruba")
            Call SetListItem("Ashmore & Cartier Islands")
            Call SetListItem("Australia")
            Call SetListItem("Austria")
            Call SetListItem("Azerbaijan")
            Call SetListItem("Bahamas")
            Call SetListItem("Bahrain")
            Call SetListItem("Baker Island")
            Call SetListItem("Bangladesh")
            Call SetListItem("Barbados")
            Call SetListItem("Belarus")
            Call SetListItem("Belgium")
            Call SetListItem("Belize")
            Call SetListItem("Benin")
            Call SetListItem("Bermuda")
            Call SetListItem("Bhutan")
            Call SetListItem("Bolivia")
            Call SetListItem("Bosnia-Herzegovina")
            Call SetListItem("Botswana")
            Call SetListItem("Bouvet Island")
            Call SetListItem("Brazil")
            Call SetListItem("British Indian Ocean Territory")
            Call SetListItem("British Virgin Islands")
            Call SetListItem("Brunei")
            Call SetListItem("Bulgaria")
            Call SetListItem("Burkina Faso")
            Call SetListItem("Burma")
            Call SetListItem("Burundi")
            Call SetListItem("Cambodia")
            Call SetListItem("Cameroon")
            Call SetListItem("Canada")
            Call SetListItem("Cape Verde")
            Call SetListItem("Cayman Islands")
            Call SetListItem("Central African Republic")
            Call SetListItem("Chad")
            Call SetListItem("Chile")
            Call SetListItem("China")
            Call SetListItem("Christmas Island")
            Call SetListItem("Clipperton Island")
            Call SetListItem("Cocos (Keeling) Islands")
            Call SetListItem("Colombia")
            Call SetListItem("Comoros")
            Call SetListItem("Congo (Brazzaville)")
            Call SetListItem("Congo (Kinshasa)")
            Call SetListItem("Cooks Islands")
            Call SetListItem("Coral Sea Islands")
            Call SetListItem("Costa Rica")
            Call SetListItem("Cote d'Ivoire (Ivory Coast)")
            Call SetListItem("Croatia")
            Call SetListItem("Cuba")
            Call SetListItem("Curacao")
            Call SetListItem("Cyprus")
            Call SetListItem("Czech Republic")
            Call SetListItem("Denmark")
            Call SetListItem("Dhekelia")
            Call SetListItem("Djibouti")
            Call SetListItem("Dominica")
            Call SetListItem("Dominican Republic")
            Call SetListItem("East Timor")
            Call SetListItem("Ecuador")
            Call SetListItem("Egypt")
            Call SetListItem("El Salvador")
            Call SetListItem("Equatorial Guinea")
            Call SetListItem("Eritrea")
            Call SetListItem("Estonia")
            Call SetListItem("Ethiopia")
            Call SetListItem("Falkland Islands (Islas Malvinas)")
            Call SetListItem("Faroe Islands")
            Call SetListItem("Federated States of Micronesia")
            Call SetListItem("Fiji")
            Call SetListItem("Finland")
            Call SetListItem("France")
            Call SetListItem("French Polynesia")
            Call SetListItem("French Southern & Antarctic Lands")
            Call SetListItem("Gabon")
            Call SetListItem("The Gambia")
            Call SetListItem("Georgia")
            Call SetListItem("Germany")
            Call SetListItem("Ghana")
            Call SetListItem("Gibraltar")
            Call SetListItem("Greece")
            Call SetListItem("Greenland")
            Call SetListItem("Grenada")
            Call SetListItem("Guatemala")
            Call SetListItem("Guernsey")
            Call SetListItem("Guinea")
            Call SetListItem("Guinea-Bissau")
            Call SetListItem("Guyana")
            Call SetListItem("Haiti")
            Call SetListItem("Heard Island & McDonald Islands")
            Call SetListItem("Holy See")
            Call SetListItem("Honduras")
            Call SetListItem("Hong Kong")
            Call SetListItem("Howland Island")
            Call SetListItem("Hungary")
            Call SetListItem("Iceland")
            Call SetListItem("India")
            Call SetListItem("Indonesia")
            Call SetListItem("Iran")
            Call SetListItem("Iraq")
            Call SetListItem("Ireland")
            Call SetListItem("Israel")
            Call SetListItem("Italy")
            Call SetListItem("Jamaica")
            Call SetListItem("Jan Mayen")
            Call SetListItem("Japan")
            Call SetListItem("Jarvis Island")
            Call SetListItem("Jersey")
            Call SetListItem("Johnston Atoll")
            Call SetListItem("Jordan")
            Call SetListItem("Kazakhstan")
            Call SetListItem("Kenya")
            Call SetListItem("Kingman Reef")
            Call SetListItem("Kiribati")
    ' North and South Korea are different in this list due to space constraints on the IV_USWEFWksht_IDInfo1 and IV_USEF_IDInfo1 questions
            Call SetListItem("North Korea")
            Call SetListItem("South Korea")
            Call SetListItem("Kosovo")
            Call SetListItem("Kuwait")
            Call SetListItem("Kyrgyzstan")
            Call SetListItem("Laos")
            Call SetListItem("Latvia")
            Call SetListItem("Lebanon")
            Call SetListItem("Lesotho")
            Call SetListItem("Liberia")
            Call SetListItem("Libya")
            Call SetListItem("Liechtenstein")
            Call SetListItem("Lithuania")
            Call SetListItem("Luxembourg")
            Call SetListItem("Macau")
            Call SetListItem("Macedonia")
            Call SetListItem("Madagascar")
            Call SetListItem("Malawi")
            Call SetListItem("Malaysia")
            Call SetListItem("Maldives")
            Call SetListItem("Mali")
            Call SetListItem("Malta")
            Call SetListItem("Man, Isle of")
            Call SetListItem("Marshall Islands")
            Call SetListItem("Mauritania")
            Call SetListItem("Mauritius")
            Call SetListItem("Mexico")
            Call SetListItem("Midway Islands")
            Call SetListItem("Moldova")
            Call SetListItem("Monaco")
            Call SetListItem("Mongolia")
            Call SetListItem("Montenegro")
            Call SetListItem("Montserrat")
            Call SetListItem("Morocco")
            Call SetListItem("Mozambique")
            Call SetListItem("Namibia")
            Call SetListItem("Nauru")
            Call SetListItem("Navassa Island")
            Call SetListItem("Nepal")
            Call SetListItem("Netherlands")
            Call SetListItem("New Caledonia")
            Call SetListItem("New Zealand")
            Call SetListItem("Nicaragua")
            Call SetListItem("Niger")
            Call SetListItem("Nigeria")
            Call SetListItem("Niue")
            Call SetListItem("Norfolk Island")
            Call SetListItem("Norway")
            Call SetListItem("Oman")
            Call SetListItem("Other Country")
            Call SetListItem("Pakistan")
            Call SetListItem("Palau")
            Call SetListItem("Palmyra Atoll")
            Call SetListItem("Panama")
            Call SetListItem("Papua-New Guinea")
            Call SetListItem("Paracel Islands")
            Call SetListItem("Paraguay")
            Call SetListItem("Peru")
            Call SetListItem("Philippines")
            Call SetListItem("Pitcairn Islands")
            Call SetListItem("Poland")
            Call SetListItem("Portugal")
            Call SetListItem("Qatar")
            Call SetListItem("Romania")
            Call SetListItem("Russia")
            Call SetListItem("Rwanda")
            Call SetListItem("Saint Barthelemy")
            Call SetListItem("Saint Martin")
            Call SetListItem("Samoa")
            Call SetListItem("San Marino")
            Call SetListItem("Sao Tome & Principe")
            Call SetListItem("Saudi Arabia")
            Call SetListItem("Senegal")
            Call SetListItem("Serbia")
            Call SetListItem("Seychelles")
            Call SetListItem("Sierra Leone")
            Call SetListItem("Singapore")
            Call SetListItem("Sint Maarten")
            Call SetListItem("Slovakia")
            Call SetListItem("Slovenia")
            Call SetListItem("Solomon Islands")
            Call SetListItem("Somalia")
            Call SetListItem("South Africa")
    ' South Georgia & South Sandwich Islands is different in this list due to space constraints on the IV_USWEFWksht_IDInfo1 and IV_USEF_IDInfo1 questions
            Call SetListItem("South Georgia & Sandwich Islands")
            Call SetListItem("South Sudan")
            Call SetListItem("Spain")
            Call SetListItem("Spratly Islands")
            Call SetListItem("Sri Lanka")
            Call SetListItem("Saint Helena")
            Call SetListItem("Saint Kitts & Nevis")
            Call SetListItem("Saint Lucia Island")
            Call SetListItem("Saint Pierre & Miquelon")
            Call SetListItem("Saint Vincent & the Grenadines")
            Call SetListItem("Sudan")
            Call SetListItem("Suriname")
            Call SetListItem("Svalbard")
            Call SetListItem("Swaziland")
            Call SetListItem("Sweden")
            Call SetListItem("Switzerland")
            Call SetListItem("Syria")
            Call SetListItem("Taiwan")
            Call SetListItem("Tajikistan")
            Call SetListItem("Tanzania")
            Call SetListItem("Thailand")
            Call SetListItem("Togo")
            Call SetListItem("Tokelau")
            Call SetListItem("Tonga")
            Call SetListItem("Trinidad & Tobago")
            Call SetListItem("Tunisia")
            Call SetListItem("Turkey")
            Call SetListItem("Turkmenistan")
            Call SetListItem("Turks & Caicos Islands")
            Call SetListItem("Tuvalu")
            Call SetListItem("Uganda")
            Call SetListItem("Ukraine")
            Call SetListItem("United Arab Emirates")
            Call SetListItem("United Kingdom")
            Call SetListItem("Uruguay")
            Call SetListItem("Uzbekistan")
            Call SetListItem("Vanuatu")
            Call SetListItem("Venezuela")
            Call SetListItem("Vietnam")
            Call SetListItem("Wake Island")
            Call SetListItem("Wallis & Futuna")
            Call SetListItem("Western Sahara")
            Call SetListItem("Yemen (Aden)")
            Call SetListItem("Zambia")
            Call SetListItem("Zimbabwe")
        ElseIf TpID = "Resident Alien ID" Then
            Call SetListItem("United States", "US")
    'Foreign countries
            Call SetListItem("Afghanistan")
            Call SetListItem("Akrotiri")
            Call SetListItem("Albania")
            Call SetListItem("Algeria")
            Call SetListItem("Andorra")
            Call SetListItem("Angola")
            Call SetListItem("Anguilla")
            Call SetListItem("Antarctica")
            Call SetListItem("Antigua & Barbuda")
            Call SetListItem("Argentina")
            Call SetListItem("Armenia")
            Call SetListItem("Aruba")
            Call SetListItem("Ashmore & Cartier Islands")
            Call SetListItem("Australia")
            Call SetListItem("Austria")
            Call SetListItem("Azerbaijan")
            Call SetListItem("Bahamas")
            Call SetListItem("Bahrain")
            Call SetListItem("Baker Island")
            Call SetListItem("Bangladesh")
            Call SetListItem("Barbados")
            Call SetListItem("Belarus")
            Call SetListItem("Belgium")
            Call SetListItem("Belize")
            Call SetListItem("Benin")
            Call SetListItem("Bermuda")
            Call SetListItem("Bhutan")
            Call SetListItem("Bolivia")
            Call SetListItem("Bosnia-Herzegovina")
            Call SetListItem("Botswana")
            Call SetListItem("Bouvet Island")
            Call SetListItem("Brazil")
            Call SetListItem("British Indian Ocean Territory")
            Call SetListItem("British Virgin Islands")
            Call SetListItem("Brunei")
            Call SetListItem("Bulgaria")
            Call SetListItem("Burkina Faso")
            Call SetListItem("Burma")
            Call SetListItem("Burundi")
            Call SetListItem("Cambodia")
            Call SetListItem("Cameroon")
            Call SetListItem("Canada")
            Call SetListItem("Cape Verde")
            Call SetListItem("Cayman Islands")
            Call SetListItem("Central African Republic")
            Call SetListItem("Chad")
            Call SetListItem("Chile")
            Call SetListItem("China")
            Call SetListItem("Christmas Island")
            Call SetListItem("Clipperton Island")
            Call SetListItem("Cocos (Keeling) Islands")
            Call SetListItem("Colombia")
            Call SetListItem("Comoros")
            Call SetListItem("Congo (Brazzaville)")
            Call SetListItem("Congo (Kinshasa)")
            Call SetListItem("Cooks Islands")
            Call SetListItem("Coral Sea Islands")
            Call SetListItem("Costa Rica")
            Call SetListItem("Cote d'Ivoire (Ivory Coast)")
            Call SetListItem("Croatia")
            Call SetListItem("Cuba")
            Call SetListItem("Curacao")
            Call SetListItem("Cyprus")
            Call SetListItem("Czech Republic")
            Call SetListItem("Denmark")
            Call SetListItem("Dhekelia")
            Call SetListItem("Djibouti")
            Call SetListItem("Dominica")
            Call SetListItem("Dominican Republic")
            Call SetListItem("East Timor")
            Call SetListItem("Ecuador")
            Call SetListItem("Egypt")
            Call SetListItem("El Salvador")
            Call SetListItem("Equatorial Guinea")
            Call SetListItem("Eritrea")
            Call SetListItem("Estonia")
            Call SetListItem("Ethiopia")
            Call SetListItem("Falkland Islands (Islas Malvinas)")
            Call SetListItem("Faroe Islands")
            Call SetListItem("Federated States of Micronesia")
            Call SetListItem("Fiji")
            Call SetListItem("Finland")
            Call SetListItem("France")
            Call SetListItem("French Polynesia")
            Call SetListItem("French Southern & Antarctic Lands")
            Call SetListItem("Gabon")
            Call SetListItem("The Gambia")
            Call SetListItem("Georgia")
            Call SetListItem("Germany")
            Call SetListItem("Ghana")
            Call SetListItem("Gibraltar")
            Call SetListItem("Greece")
            Call SetListItem("Greenland")
            Call SetListItem("Grenada")
            Call SetListItem("Guatemala")
            Call SetListItem("Guernsey")
            Call SetListItem("Guinea")
            Call SetListItem("Guinea-Bissau")
            Call SetListItem("Guyana")
            Call SetListItem("Haiti")
            Call SetListItem("Heard Island & McDonald Islands")
            Call SetListItem("Holy See")
            Call SetListItem("Honduras")
            Call SetListItem("Hong Kong")
            Call SetListItem("Howland Island")
            Call SetListItem("Hungary")
            Call SetListItem("Iceland")
            Call SetListItem("India")
            Call SetListItem("Indonesia")
            Call SetListItem("Iran")
            Call SetListItem("Iraq")
            Call SetListItem("Ireland")
            Call SetListItem("Israel")
            Call SetListItem("Italy")
            Call SetListItem("Jamaica")
            Call SetListItem("Jan Mayen")
            Call SetListItem("Japan")
            Call SetListItem("Jarvis Island")
            Call SetListItem("Jersey")
            Call SetListItem("Johnston Atoll")
            Call SetListItem("Jordan")
            Call SetListItem("Kazakhstan")
            Call SetListItem("Kenya")
            Call SetListItem("Kingman Reef")
            Call SetListItem("Kiribati")
    ' North and South Korea are different in this list due to space constraints on the IV_USWEFWksht_IDInfo1 and IV_USEF_IDInfo1 questions
            Call SetListItem("North Korea")
            Call SetListItem("South Korea")
            Call SetListItem("Kosovo")
            Call SetListItem("Kuwait")
            Call SetListItem("Kyrgyzstan")
            Call SetListItem("Laos")
            Call SetListItem("Latvia")
            Call SetListItem("Lebanon")
            Call SetListItem("Lesotho")
            Call SetListItem("Liberia")
            Call SetListItem("Libya")
            Call SetListItem("Liechtenstein")
            Call SetListItem("Lithuania")
            Call SetListItem("Luxembourg")
            Call SetListItem("Macau")
            Call SetListItem("Macedonia")
            Call SetListItem("Madagascar")
            Call SetListItem("Malawi")
            Call SetListItem("Malaysia")
            Call SetListItem("Maldives")
            Call SetListItem("Mali")
            Call SetListItem("Malta")
            Call SetListItem("Man, Isle of")
            Call SetListItem("Marshall Islands")
            Call SetListItem("Mauritania")
            Call SetListItem("Mauritius")
            Call SetListItem("Mexico")
            Call SetListItem("Midway Islands")
            Call SetListItem("Moldova")
            Call SetListItem("Monaco")
            Call SetListItem("Mongolia")
            Call SetListItem("Montenegro")
            Call SetListItem("Montserrat")
            Call SetListItem("Morocco")
            Call SetListItem("Mozambique")
            Call SetListItem("Namibia")
            Call SetListItem("Nauru")
            Call SetListItem("Navassa Island")
            Call SetListItem("Nepal")
            Call SetListItem("Netherlands")
            Call SetListItem("New Caledonia")
            Call SetListItem("New Zealand")
            Call SetListItem("Nicaragua")
            Call SetListItem("Niger")
            Call SetListItem("Nigeria")
            Call SetListItem("Niue")
            Call SetListItem("Norfolk Island")
            Call SetListItem("Norway")
            Call SetListItem("Oman")
            Call SetListItem("Other Country")
            Call SetListItem("Pakistan")
            Call SetListItem("Palau")
            Call SetListItem("Palmyra Atoll")
            Call SetListItem("Panama")
            Call SetListItem("Papua-New Guinea")
            Call SetListItem("Paracel Islands")
            Call SetListItem("Paraguay")
            Call SetListItem("Peru")
            Call SetListItem("Philippines")
            Call SetListItem("Pitcairn Islands")
            Call SetListItem("Poland")
            Call SetListItem("Portugal")
            Call SetListItem("Qatar")
            Call SetListItem("Romania")
            Call SetListItem("Russia")
            Call SetListItem("Rwanda")
            Call SetListItem("Saint Barthelemy")
            Call SetListItem("Saint Martin")
            Call SetListItem("Samoa")
            Call SetListItem("San Marino")
            Call SetListItem("Sao Tome & Principe")
            Call SetListItem("Saudi Arabia")
            Call SetListItem("Senegal")
            Call SetListItem("Serbia")
            Call SetListItem("Seychelles")
            Call SetListItem("Sierra Leone")
            Call SetListItem("Singapore")
            Call SetListItem("Sint Maarten")
            Call SetListItem("Slovakia")
            Call SetListItem("Slovenia")
            Call SetListItem("Solomon Islands")
            Call SetListItem("Somalia")
            Call SetListItem("South Africa")
    ' South Georgia & South Sandwich Islands is different in this list due to space constraints on the IV_USWEFWksht_IDInfo1 and IV_USEF_IDInfo1 questions
            Call SetListItem("South Georgia & Sandwich Islands")
            Call SetListItem("South Sudan")
            Call SetListItem("Spain")
            Call SetListItem("Spratly Islands")
            Call SetListItem("Sri Lanka")
            Call SetListItem("Saint Helena")
            Call SetListItem("Saint Kitts & Nevis")
            Call SetListItem("Saint Lucia Island")
            Call SetListItem("Saint Pierre & Miquelon")
            Call SetListItem("Saint Vincent & the Grenadines")
            Call SetListItem("Sudan")
            Call SetListItem("Suriname")
            Call SetListItem("Svalbard")
            Call SetListItem("Swaziland")
            Call SetListItem("Sweden")
            Call SetListItem("Switzerland")
            Call SetListItem("Syria")
            Call SetListItem("Taiwan")
            Call SetListItem("Tajikistan")
            Call SetListItem("Tanzania")
            Call SetListItem("Thailand")
            Call SetListItem("Togo")
            Call SetListItem("Tokelau")
            Call SetListItem("Tonga")
            Call SetListItem("Trinidad & Tobago")
            Call SetListItem("Tunisia")
            Call SetListItem("Turkey")
            Call SetListItem("Turkmenistan")
            Call SetListItem("Turks & Caicos Islands")
            Call SetListItem("Tuvalu")
            Call SetListItem("Uganda")
            Call SetListItem("Ukraine")
            Call SetListItem("United Arab Emirates")
            Call SetListItem("United Kingdom")
            Call SetListItem("Uruguay")
            Call SetListItem("Uzbekistan")
            Call SetListItem("Vanuatu")
            Call SetListItem("Venezuela")
            Call SetListItem("Vietnam")
            Call SetListItem("Wake Island")
            Call SetListItem("Wallis & Futuna")
            Call SetListItem("Western Sahara")
            Call SetListItem("Yemen (Aden)")
            Call SetListItem("Zambia")
            Call SetListItem("Zimbabwe")
        ElseIf TpID = "Matricula Consular Card" Then
            Call SetListItem("Brazil")
            Call SetListItem("Guatemala")
            Call SetListItem("Honduras")
            Call SetListItem("Mexico")
            Call SetListItem("South Korea")
        ElseIf TpID = "Tribal ID" Then
            Call SetListItem("AA - Military Address", "AA")
            Call SetListItem("AE - Military Address", "AE")
            Call SetListItem("AP - Military Address", "AP")
            Call SetListItem("AL - Alabama", "AL")
            Call SetListItem("AK - Alaska", "AK")
            Call SetListItem("AS - American Samoa", "AS")
            Call SetListItem("AZ - Arizona", "AZ")
            Call SetListItem("AR - Arkansas", "AR")
            Call SetListItem("CA - California", "CA")
            Call SetListItem("CO - Colorado", "CO")
            Call SetListItem("CT - Connecticut", "CT")
            Call SetListItem("DE - Delaware", "DE")
            Call SetListItem("DC - District of Columbia", "DC")
            Call SetListItem("FM - Federated States of Micronesia", "FM")
            Call SetListItem("FL - Florida", "FL")
            Call SetListItem("GA - Georgia", "GA")
            Call SetListItem("GU - Guam", "GU")
            Call SetListItem("HI - Hawaii", "HI")
            Call SetListItem("ID - Idaho", "ID")
            Call SetListItem("IL - Illinois", "IL")
            Call SetListItem("IN - Indiana", "IN")
            Call SetListItem("IA - Iowa", "IA")
            Call SetListItem("KS - Kansas", "KS")
            Call SetListItem("KY - Kentucky", "KY")
            Call SetListItem("LA - Louisiana", "LA")
            Call SetListItem("ME - Maine", "ME")
            Call SetListItem("MH - Marshall Islands", "MH")
            Call SetListItem("MD - Maryland", "MD")
            Call SetListItem("MA - Massachusetts", "MA")
            Call SetListItem("MI - Michigan", "MI")
            Call SetListItem("MN - Minnesota", "MN")
            Call SetListItem("MS - Mississippi", "MS")
            Call SetListItem("MO - Missouri", "MO")
            Call SetListItem("MT - Montana", "MT")
            Call SetListItem("NE - Nebraska", "NE")
            Call SetListItem("NV - Nevada", "NV")
            Call SetListItem("NH - New Hampshire", "NH")
            Call SetListItem("NJ - New Jersey", "NJ")
            Call SetListItem("NM - New Mexico", "NM")
            Call SetListItem("NY - New York", "NY")
            Call SetListItem("NC - North Carolina", "NC")
            Call SetListItem("ND - North Dakota", "ND")
            Call SetListItem("MP - Northern Mariana Islands", "MP")
            Call SetListItem("OH - Ohio", "OH")
            Call SetListItem("OK - Oklahoma", "OK")
            Call SetListItem("OR - Oregon", "OR")
            Call SetListItem("PW - Palau", "PW")
            Call SetListItem("PA - Pennsylvania", "PA")
            Call SetListItem("PR - Puerto Rico", "PR")
            Call SetListItem("RI - Rhode Island", "RI")
            Call SetListItem("SC - South Carolina", "SC")
            Call SetListItem("SD - South Dakota", "SD")
            Call SetListItem("TN - Tennessee", "TN")
            Call SetListItem("TX - Texas", "TX")
            Call SetListItem("UT - Utah", "UT")
            Call SetListItem("VT - Vermont", "VT")
            Call SetListItem("VA - Virginia", "VA")
            Call SetListItem("VI - Virgin Islands", "VI")
            Call SetListItem("WA - Washington", "WA")
            Call SetListItem("WV - West Virginia", "WV")
            Call SetListItem("WI - Wisconsin", "WI")
            Call SetListItem("WY - Wyoming", "WY")
        ElseIf TpID = "Foreign Issued Driver's License/ID" Then
    'Foreign countries
            Call SetListItem("Afghanistan")
            Call SetListItem("Akrotiri")
            Call SetListItem("Albania")
            Call SetListItem("Algeria")
            Call SetListItem("Andorra")
            Call SetListItem("Angola")
            Call SetListItem("Anguilla")
            Call SetListItem("Antarctica")
            Call SetListItem("Antigua & Barbuda")
            Call SetListItem("Argentina")
            Call SetListItem("Armenia")
            Call SetListItem("Aruba")
            Call SetListItem("Ashmore & Cartier Islands")
            Call SetListItem("Australia")
            Call SetListItem("Austria")
            Call SetListItem("Azerbaijan")
            Call SetListItem("Bahamas")
            Call SetListItem("Bahrain")
            Call SetListItem("Baker Island")
            Call SetListItem("Bangladesh")
            Call SetListItem("Barbados")
            Call SetListItem("Belarus")
            Call SetListItem("Belgium")
            Call SetListItem("Belize")
            Call SetListItem("Benin")
            Call SetListItem("Bermuda")
            Call SetListItem("Bhutan")
            Call SetListItem("Bolivia")
            Call SetListItem("Bosnia-Herzegovina")
            Call SetListItem("Botswana")
            Call SetListItem("Bouvet Island")
            Call SetListItem("Brazil")
            Call SetListItem("British Indian Ocean Territory")
            Call SetListItem("British Virgin Islands")
            Call SetListItem("Brunei")
            Call SetListItem("Bulgaria")
            Call SetListItem("Burkina Faso")
            Call SetListItem("Burma")
            Call SetListItem("Burundi")
            Call SetListItem("Cambodia")
            Call SetListItem("Cameroon")
            Call SetListItem("Canada")
            Call SetListItem("Cape Verde")
            Call SetListItem("Cayman Islands")
            Call SetListItem("Central African Republic")
            Call SetListItem("Chad")
            Call SetListItem("Chile")
            Call SetListItem("China")
            Call SetListItem("Christmas Island")
            Call SetListItem("Clipperton Island")
            Call SetListItem("Cocos (Keeling) Islands")
            Call SetListItem("Colombia")
            Call SetListItem("Comoros")
            Call SetListItem("Congo (Brazzaville)")
            Call SetListItem("Congo (Kinshasa)")
            Call SetListItem("Cooks Islands")
            Call SetListItem("Coral Sea Islands")
            Call SetListItem("Costa Rica")
            Call SetListItem("Cote d'Ivoire (Ivory Coast)")
            Call SetListItem("Croatia")
            Call SetListItem("Cuba")
            Call SetListItem("Curacao")
            Call SetListItem("Cyprus")
            Call SetListItem("Czech Republic")
            Call SetListItem("Denmark")
            Call SetListItem("Dhekelia")
            Call SetListItem("Djibouti")
            Call SetListItem("Dominica")
            Call SetListItem("Dominican Republic")
            Call SetListItem("East Timor")
            Call SetListItem("Ecuador")
            Call SetListItem("Egypt")
            Call SetListItem("El Salvador")
            Call SetListItem("Equatorial Guinea")
            Call SetListItem("Eritrea")
            Call SetListItem("Estonia")
            Call SetListItem("Ethiopia")
            Call SetListItem("Falkland Islands (Islas Malvinas)")
            Call SetListItem("Faroe Islands")
            Call SetListItem("Federated States of Micronesia")
            Call SetListItem("Fiji")
            Call SetListItem("Finland")
            Call SetListItem("France")
            Call SetListItem("French Polynesia")
            Call SetListItem("French Southern & Antarctic Lands")
            Call SetListItem("Gabon")
            Call SetListItem("The Gambia")
            Call SetListItem("Georgia")
            Call SetListItem("Germany")
            Call SetListItem("Ghana")
            Call SetListItem("Gibraltar")
            Call SetListItem("Greece")
            Call SetListItem("Greenland")
            Call SetListItem("Grenada")
            Call SetListItem("Guatemala")
            Call SetListItem("Guernsey")
            Call SetListItem("Guinea")
            Call SetListItem("Guinea-Bissau")
            Call SetListItem("Guyana")
            Call SetListItem("Haiti")
            Call SetListItem("Heard Island & McDonald Islands")
            Call SetListItem("Holy See")
            Call SetListItem("Honduras")
            Call SetListItem("Hong Kong")
            Call SetListItem("Howland Island")
            Call SetListItem("Hungary")
            Call SetListItem("Iceland")
            Call SetListItem("India")
            Call SetListItem("Indonesia")
            Call SetListItem("Iran")
            Call SetListItem("Iraq")
            Call SetListItem("Ireland")
            Call SetListItem("Israel")
            Call SetListItem("Italy")
            Call SetListItem("Jamaica")
            Call SetListItem("Jan Mayen")
            Call SetListItem("Japan")
            Call SetListItem("Jarvis Island")
            Call SetListItem("Jersey")
            Call SetListItem("Johnston Atoll")
            Call SetListItem("Jordan")
            Call SetListItem("Kazakhstan")
            Call SetListItem("Kenya")
            Call SetListItem("Kingman Reef")
            Call SetListItem("Kiribati")
    ' North and South Korea are different in this list due to space constraints on the IV_USWEFWksht_IDInfo1 and IV_USEF_IDInfo1 questions
            Call SetListItem("North Korea")
            Call SetListItem("South Korea")
            Call SetListItem("Kosovo")
            Call SetListItem("Kuwait")
            Call SetListItem("Kyrgyzstan")
            Call SetListItem("Laos")
            Call SetListItem("Latvia")
            Call SetListItem("Lebanon")
            Call SetListItem("Lesotho")
            Call SetListItem("Liberia")
            Call SetListItem("Libya")
            Call SetListItem("Liechtenstein")
            Call SetListItem("Lithuania")
            Call SetListItem("Luxembourg")
            Call SetListItem("Macau")
            Call SetListItem("Macedonia")
            Call SetListItem("Madagascar")
            Call SetListItem("Malawi")
            Call SetListItem("Malaysia")
            Call SetListItem("Maldives")
            Call SetListItem("Mali")
            Call SetListItem("Malta")
            Call SetListItem("Man, Isle of")
            Call SetListItem("Marshall Islands")
            Call SetListItem("Mauritania")
            Call SetListItem("Mauritius")
            Call SetListItem("Mexico")
            Call SetListItem("Midway Islands")
            Call SetListItem("Moldova")
            Call SetListItem("Monaco")
            Call SetListItem("Mongolia")
            Call SetListItem("Montenegro")
            Call SetListItem("Montserrat")
            Call SetListItem("Morocco")
            Call SetListItem("Mozambique")
            Call SetListItem("Namibia")
            Call SetListItem("Nauru")
            Call SetListItem("Navassa Island")
            Call SetListItem("Nepal")
            Call SetListItem("Netherlands")
            Call SetListItem("New Caledonia")
            Call SetListItem("New Zealand")
            Call SetListItem("Nicaragua")
            Call SetListItem("Niger")
            Call SetListItem("Nigeria")
            Call SetListItem("Niue")
            Call SetListItem("Norfolk Island")
            Call SetListItem("Norway")
            Call SetListItem("Oman")
            Call SetListItem("Other Country")
            Call SetListItem("Pakistan")
            Call SetListItem("Palau")
            Call SetListItem("Palmyra Atoll")
            Call SetListItem("Panama")
            Call SetListItem("Papua-New Guinea")
            Call SetListItem("Paracel Islands")
            Call SetListItem("Paraguay")
            Call SetListItem("Peru")
            Call SetListItem("Philippines")
            Call SetListItem("Pitcairn Islands")
            Call SetListItem("Poland")
            Call SetListItem("Portugal")
            Call SetListItem("Qatar")
            Call SetListItem("Romania")
            Call SetListItem("Russia")
            Call SetListItem("Rwanda")
            Call SetListItem("Saint Barthelemy")
            Call SetListItem("Saint Martin")
            Call SetListItem("Samoa")
            Call SetListItem("San Marino")
            Call SetListItem("Sao Tome & Principe")
            Call SetListItem("Saudi Arabia")
            Call SetListItem("Senegal")
            Call SetListItem("Serbia")
            Call SetListItem("Seychelles")
            Call SetListItem("Sierra Leone")
            Call SetListItem("Singapore")
            Call SetListItem("Sint Maarten")
            Call SetListItem("Slovakia")
            Call SetListItem("Slovenia")
            Call SetListItem("Solomon Islands")
            Call SetListItem("Somalia")
            Call SetListItem("South Africa")
    ' South Georgia & South Sandwich Islands is different in this list due to space constraints on the IV_USWEFWksht_IDInfo1 and IV_USEF_IDInfo1 questions
            Call SetListItem("South Georgia & Sandwich Islands")
            Call SetListItem("South Sudan")
            Call SetListItem("Spain")
            Call SetListItem("Spratly Islands")
            Call SetListItem("Sri Lanka")
            Call SetListItem("Saint Helena")
            Call SetListItem("Saint Kitts & Nevis")
            Call SetListItem("Saint Lucia Island")
            Call SetListItem("Saint Pierre & Miquelon")
            Call SetListItem("Saint Vincent & the Grenadines")
            Call SetListItem("Sudan")
            Call SetListItem("Suriname")
            Call SetListItem("Svalbard")
            Call SetListItem("Swaziland")
            Call SetListItem("Sweden")
            Call SetListItem("Switzerland")
            Call SetListItem("Syria")
            Call SetListItem("Taiwan")
            Call SetListItem("Tajikistan")
            Call SetListItem("Tanzania")
            Call SetListItem("Thailand")
            Call SetListItem("Togo")
            Call SetListItem("Tokelau")
            Call SetListItem("Tonga")
            Call SetListItem("Trinidad & Tobago")
            Call SetListItem("Tunisia")
            Call SetListItem("Turkey")
            Call SetListItem("Turkmenistan")
            Call SetListItem("Turks & Caicos Islands")
            Call SetListItem("Tuvalu")
            Call SetListItem("Uganda")
            Call SetListItem("Ukraine")
            Call SetListItem("United Arab Emirates")
            Call SetListItem("United Kingdom")
            Call SetListItem("Uruguay")
            Call SetListItem("Uzbekistan")
            Call SetListItem("Vanuatu")
            Call SetListItem("Venezuela")
            Call SetListItem("Vietnam")
            Call SetListItem("Wake Island")
            Call SetListItem("Wallis & Futuna")
            Call SetListItem("Western Sahara")
            Call SetListItem("Yemen (Aden)")
            Call SetListItem("Zambia")
            Call SetListItem("Zimbabwe")
        End If
    End If
End Function

Public Function BankProductIssueLocationC_SetDynaList()
    Call SetListTitle("BankProductIssueLocationC")
    
    Dim TpID As String
    
    TpID = GetString(USWBankProd.TpID)
    
    If TpID = "U.S. Driver's License" Then
        Call SetListItem("AA - Military Address", "AA")
        Call SetListItem("AE - Military Address", "AE")
        Call SetListItem("AP - Military Address", "AP")
        Call SetListItem("AL - Alabama", "AL")
        Call SetListItem("AK - Alaska", "AK")
        Call SetListItem("AS - American Samoa", "AS")
        Call SetListItem("AZ - Arizona", "AZ")
        Call SetListItem("AR - Arkansas", "AR")
        Call SetListItem("CA - California", "CA")
        Call SetListItem("CO - Colorado", "CO")
        Call SetListItem("CT - Connecticut", "CT")
        Call SetListItem("DE - Delaware", "DE")
        Call SetListItem("DC - District of Columbia", "DC")
        Call SetListItem("FM - Federated States of Micronesia", "FM")
        Call SetListItem("FL - Florida", "FL")
        Call SetListItem("GA - Georgia", "GA")
        Call SetListItem("GU - Guam", "GU")
        Call SetListItem("HI - Hawaii", "HI")
        Call SetListItem("ID - Idaho", "ID")
        Call SetListItem("IL - Illinois", "IL")
        Call SetListItem("IN - Indiana", "IN")
        Call SetListItem("IA - Iowa", "IA")
        Call SetListItem("KS - Kansas", "KS")
        Call SetListItem("KY - Kentucky", "KY")
        Call SetListItem("LA - Louisiana", "LA")
        Call SetListItem("ME - Maine", "ME")
        Call SetListItem("MH - Marshall Islands", "MH")
        Call SetListItem("MD - Maryland", "MD")
        Call SetListItem("MA - Massachusetts", "MA")
        Call SetListItem("MI - Michigan", "MI")
        Call SetListItem("MN - Minnesota", "MN")
        Call SetListItem("MS - Mississippi", "MS")
        Call SetListItem("MO - Missouri", "MO")
        Call SetListItem("MT - Montana", "MT")
        Call SetListItem("NE - Nebraska", "NE")
        Call SetListItem("NV - Nevada", "NV")
        Call SetListItem("NH - New Hampshire", "NH")
        Call SetListItem("NJ - New Jersey", "NJ")
        Call SetListItem("NM - New Mexico", "NM")
        Call SetListItem("NY - New York", "NY")
        Call SetListItem("NC - North Carolina", "NC")
        Call SetListItem("ND - North Dakota", "ND")
        Call SetListItem("MP - Northern Mariana Islands", "MP")
        Call SetListItem("OH - Ohio", "OH")
        Call SetListItem("OK - Oklahoma", "OK")
        Call SetListItem("OR - Oregon", "OR")
        Call SetListItem("PW - Palau", "PW")
        Call SetListItem("PA - Pennsylvania", "PA")
        Call SetListItem("PR - Puerto Rico", "PR")
        Call SetListItem("RI - Rhode Island", "RI")
        Call SetListItem("SC - South Carolina", "SC")
        Call SetListItem("SD - South Dakota", "SD")
        Call SetListItem("TN - Tennessee", "TN")
        Call SetListItem("TX - Texas", "TX")
        Call SetListItem("UT - Utah", "UT")
        Call SetListItem("VT - Vermont", "VT")
        Call SetListItem("VA - Virginia", "VA")
        Call SetListItem("VI - Virgin Islands", "VI")
        Call SetListItem("WA - Washington", "WA")
        Call SetListItem("WV - West Virginia", "WV")
        Call SetListItem("WI - Wisconsin", "WI")
        Call SetListItem("WY - Wyoming", "WY")
    ElseIf TpID = "U.S. DMV/BMV State ID" Then
        Call SetListItem("AA - Military Address", "AA")
        Call SetListItem("AE - Military Address", "AE")
        Call SetListItem("AP - Military Address", "AP")
        Call SetListItem("AL - Alabama", "AL")
        Call SetListItem("AK - Alaska", "AK")
        Call SetListItem("AS - American Samoa", "AS")
        Call SetListItem("AZ - Arizona", "AZ")
        Call SetListItem("AR - Arkansas", "AR")
        Call SetListItem("CA - California", "CA")
        Call SetListItem("CO - Colorado", "CO")
        Call SetListItem("CT - Connecticut", "CT")
        Call SetListItem("DE - Delaware", "DE")
        Call SetListItem("DC - District of Columbia", "DC")
        Call SetListItem("FM - Federated States of Micronesia", "FM")
        Call SetListItem("FL - Florida", "FL")
        Call SetListItem("GA - Georgia", "GA")
        Call SetListItem("GU - Guam", "GU")
        Call SetListItem("HI - Hawaii", "HI")
        Call SetListItem("ID - Idaho", "ID")
        Call SetListItem("IL - Illinois", "IL")
        Call SetListItem("IN - Indiana", "IN")
        Call SetListItem("IA - Iowa", "IA")
        Call SetListItem("KS - Kansas", "KS")
        Call SetListItem("KY - Kentucky", "KY")
        Call SetListItem("LA - Louisiana", "LA")
        Call SetListItem("ME - Maine", "ME")
        Call SetListItem("MH - Marshall Islands", "MH")
        Call SetListItem("MD - Maryland", "MD")
        Call SetListItem("MA - Massachusetts", "MA")
        Call SetListItem("MI - Michigan", "MI")
        Call SetListItem("MN - Minnesota", "MN")
        Call SetListItem("MS - Mississippi", "MS")
        Call SetListItem("MO - Missouri", "MO")
        Call SetListItem("MT - Montana", "MT")
        Call SetListItem("NE - Nebraska", "NE")
        Call SetListItem("NV - Nevada", "NV")
        Call SetListItem("NH - New Hampshire", "NH")
        Call SetListItem("NJ - New Jersey", "NJ")
        Call SetListItem("NM - New Mexico", "NM")
        Call SetListItem("NY - New York", "NY")
        Call SetListItem("NC - North Carolina", "NC")
        Call SetListItem("ND - North Dakota", "ND")
        Call SetListItem("MP - Northern Mariana Islands", "MP")
        Call SetListItem("OH - Ohio", "OH")
        Call SetListItem("OK - Oklahoma", "OK")
        Call SetListItem("OR - Oregon", "OR")
        Call SetListItem("PW - Palau", "PW")
        Call SetListItem("PA - Pennsylvania", "PA")
        Call SetListItem("PR - Puerto Rico", "PR")
        Call SetListItem("RI - Rhode Island", "RI")
        Call SetListItem("SC - South Carolina", "SC")
        Call SetListItem("SD - South Dakota", "SD")
        Call SetListItem("TN - Tennessee", "TN")
        Call SetListItem("TX - Texas", "TX")
        Call SetListItem("UT - Utah", "UT")
        Call SetListItem("VT - Vermont", "VT")
        Call SetListItem("VA - Virginia", "VA")
        Call SetListItem("VI - Virgin Islands", "VI")
        Call SetListItem("WA - Washington", "WA")
        Call SetListItem("WV - West Virginia", "WV")
        Call SetListItem("WI - Wisconsin", "WI")
        Call SetListItem("WY - Wyoming", "WY")
    ElseIf TpID = "U.S. Military ID" Then
        Call SetListItem("United States", "US")
    ElseIf TpID = "U.S. Passport" Then
        Call SetListItem("United States", "US")
'Foreign countries
        Call SetListItem("Afghanistan")
        Call SetListItem("Akrotiri")
        Call SetListItem("Albania")
        Call SetListItem("Algeria")
        Call SetListItem("Andorra")
        Call SetListItem("Angola")
        Call SetListItem("Anguilla")
        Call SetListItem("Antarctica")
        Call SetListItem("Antigua & Barbuda")
        Call SetListItem("Argentina")
        Call SetListItem("Armenia")
        Call SetListItem("Aruba")
        Call SetListItem("Ashmore & Cartier Islands")
        Call SetListItem("Australia")
        Call SetListItem("Austria")
        Call SetListItem("Azerbaijan")
        Call SetListItem("Bahamas")
        Call SetListItem("Bahrain")
        Call SetListItem("Baker Island")
        Call SetListItem("Bangladesh")
        Call SetListItem("Barbados")
        Call SetListItem("Belarus")
        Call SetListItem("Belgium")
        Call SetListItem("Belize")
        Call SetListItem("Benin")
        Call SetListItem("Bermuda")
        Call SetListItem("Bhutan")
        Call SetListItem("Bolivia")
        Call SetListItem("Bosnia-Herzegovina")
        Call SetListItem("Botswana")
        Call SetListItem("Bouvet Island")
        Call SetListItem("Brazil")
        Call SetListItem("British Indian Ocean Territory")
        Call SetListItem("British Virgin Islands")
        Call SetListItem("Brunei")
        Call SetListItem("Bulgaria")
        Call SetListItem("Burkina Faso")
        Call SetListItem("Burma")
        Call SetListItem("Burundi")
        Call SetListItem("Cambodia")
        Call SetListItem("Cameroon")
        Call SetListItem("Canada")
        Call SetListItem("Cape Verde")
        Call SetListItem("Cayman Islands")
        Call SetListItem("Central African Republic")
        Call SetListItem("Chad")
        Call SetListItem("Chile")
        Call SetListItem("China")
        Call SetListItem("Christmas Island")
        Call SetListItem("Clipperton Island")
        Call SetListItem("Cocos (Keeling) Islands")
        Call SetListItem("Colombia")
        Call SetListItem("Comoros")
        Call SetListItem("Congo (Brazzaville)")
        Call SetListItem("Congo (Kinshasa)")
        Call SetListItem("Cooks Islands")
        Call SetListItem("Coral Sea Islands")
        Call SetListItem("Costa Rica")
        Call SetListItem("Cote d'Ivoire (Ivory Coast)")
        Call SetListItem("Croatia")
        Call SetListItem("Cuba")
        Call SetListItem("Curacao")
        Call SetListItem("Cyprus")
        Call SetListItem("Czech Republic")
        Call SetListItem("Denmark")
        Call SetListItem("Dhekelia")
        Call SetListItem("Djibouti")
        Call SetListItem("Dominica")
        Call SetListItem("Dominican Republic")
        Call SetListItem("East Timor")
        Call SetListItem("Ecuador")
        Call SetListItem("Egypt")
        Call SetListItem("El Salvador")
        Call SetListItem("Equatorial Guinea")
        Call SetListItem("Eritrea")
        Call SetListItem("Estonia")
        Call SetListItem("Ethiopia")
        Call SetListItem("Falkland Islands (Islas Malvinas)")
        Call SetListItem("Faroe Islands")
        Call SetListItem("Federated States of Micronesia")
        Call SetListItem("Fiji")
        Call SetListItem("Finland")
        Call SetListItem("France")
        Call SetListItem("French Polynesia")
        Call SetListItem("French Southern & Antarctic Lands")
        Call SetListItem("Gabon")
        Call SetListItem("The Gambia")
        Call SetListItem("Georgia")
        Call SetListItem("Germany")
        Call SetListItem("Ghana")
        Call SetListItem("Gibraltar")
        Call SetListItem("Greece")
        Call SetListItem("Greenland")
        Call SetListItem("Grenada")
        Call SetListItem("Guatemala")
        Call SetListItem("Guernsey")
        Call SetListItem("Guinea")
        Call SetListItem("Guinea-Bissau")
        Call SetListItem("Guyana")
        Call SetListItem("Haiti")
        Call SetListItem("Heard Island & McDonald Islands")
        Call SetListItem("Holy See")
        Call SetListItem("Honduras")
        Call SetListItem("Hong Kong")
        Call SetListItem("Howland Island")
        Call SetListItem("Hungary")
        Call SetListItem("Iceland")
        Call SetListItem("India")
        Call SetListItem("Indonesia")
        Call SetListItem("Iran")
        Call SetListItem("Iraq")
        Call SetListItem("Ireland")
        Call SetListItem("Israel")
        Call SetListItem("Italy")
        Call SetListItem("Jamaica")
        Call SetListItem("Jan Mayen")
        Call SetListItem("Japan")
        Call SetListItem("Jarvis Island")
        Call SetListItem("Jersey")
        Call SetListItem("Johnston Atoll")
        Call SetListItem("Jordan")
        Call SetListItem("Kazakhstan")
        Call SetListItem("Kenya")
        Call SetListItem("Kingman Reef")
        Call SetListItem("Kiribati")
' North and South Korea are different in this list due to space constraints on the IV_USWEFWksht_IDInfo1 and IV_USEF_IDInfo1 questions
        Call SetListItem("North Korea")
        Call SetListItem("South Korea")
        Call SetListItem("Kosovo")
        Call SetListItem("Kuwait")
        Call SetListItem("Kyrgyzstan")
        Call SetListItem("Laos")
        Call SetListItem("Latvia")
        Call SetListItem("Lebanon")
        Call SetListItem("Lesotho")
        Call SetListItem("Liberia")
        Call SetListItem("Libya")
        Call SetListItem("Liechtenstein")
        Call SetListItem("Lithuania")
        Call SetListItem("Luxembourg")
        Call SetListItem("Macau")
        Call SetListItem("Macedonia")
        Call SetListItem("Madagascar")
        Call SetListItem("Malawi")
        Call SetListItem("Malaysia")
        Call SetListItem("Maldives")
        Call SetListItem("Mali")
        Call SetListItem("Malta")
        Call SetListItem("Man, Isle of")
        Call SetListItem("Marshall Islands")
        Call SetListItem("Mauritania")
        Call SetListItem("Mauritius")
        Call SetListItem("Mexico")
        Call SetListItem("Midway Islands")
        Call SetListItem("Moldova")
        Call SetListItem("Monaco")
        Call SetListItem("Mongolia")
        Call SetListItem("Montenegro")
        Call SetListItem("Montserrat")
        Call SetListItem("Morocco")
        Call SetListItem("Mozambique")
        Call SetListItem("Namibia")
        Call SetListItem("Nauru")
        Call SetListItem("Navassa Island")
        Call SetListItem("Nepal")
        Call SetListItem("Netherlands")
        Call SetListItem("New Caledonia")
        Call SetListItem("New Zealand")
        Call SetListItem("Nicaragua")
        Call SetListItem("Niger")
        Call SetListItem("Nigeria")
        Call SetListItem("Niue")
        Call SetListItem("Norfolk Island")
        Call SetListItem("Norway")
        Call SetListItem("Oman")
        Call SetListItem("Other Country")
        Call SetListItem("Pakistan")
        Call SetListItem("Palau")
        Call SetListItem("Palmyra Atoll")
        Call SetListItem("Panama")
        Call SetListItem("Papua-New Guinea")
        Call SetListItem("Paracel Islands")
        Call SetListItem("Paraguay")
        Call SetListItem("Peru")
        Call SetListItem("Philippines")
        Call SetListItem("Pitcairn Islands")
        Call SetListItem("Poland")
        Call SetListItem("Portugal")
        Call SetListItem("Qatar")
        Call SetListItem("Romania")
        Call SetListItem("Russia")
        Call SetListItem("Rwanda")
        Call SetListItem("Saint Barthelemy")
        Call SetListItem("Saint Martin")
        Call SetListItem("Samoa")
        Call SetListItem("San Marino")
        Call SetListItem("Sao Tome & Principe")
        Call SetListItem("Saudi Arabia")
        Call SetListItem("Senegal")
        Call SetListItem("Serbia")
        Call SetListItem("Seychelles")
        Call SetListItem("Sierra Leone")
        Call SetListItem("Singapore")
        Call SetListItem("Sint Maarten")
        Call SetListItem("Slovakia")
        Call SetListItem("Slovenia")
        Call SetListItem("Solomon Islands")
        Call SetListItem("Somalia")
        Call SetListItem("South Africa")
' South Georgia & South Sandwich Islands is different in this list due to space constraints on the IV_USWEFWksht_IDInfo1 and IV_USEF_IDInfo1 questions
        Call SetListItem("South Georgia & Sandwich Islands")
        Call SetListItem("South Sudan")
        Call SetListItem("Spain")
        Call SetListItem("Spratly Islands")
        Call SetListItem("Sri Lanka")
        Call SetListItem("Saint Helena")
        Call SetListItem("Saint Kitts & Nevis")
        Call SetListItem("Saint Lucia Island")
        Call SetListItem("Saint Pierre & Miquelon")
        Call SetListItem("Saint Vincent & the Grenadines")
        Call SetListItem("Sudan")
        Call SetListItem("Suriname")
        Call SetListItem("Svalbard")
        Call SetListItem("Swaziland")
        Call SetListItem("Sweden")
        Call SetListItem("Switzerland")
        Call SetListItem("Syria")
        Call SetListItem("Taiwan")
        Call SetListItem("Tajikistan")
        Call SetListItem("Tanzania")
        Call SetListItem("Thailand")
        Call SetListItem("Togo")
        Call SetListItem("Tokelau")
        Call SetListItem("Tonga")
        Call SetListItem("Trinidad & Tobago")
        Call SetListItem("Tunisia")
        Call SetListItem("Turkey")
        Call SetListItem("Turkmenistan")
        Call SetListItem("Turks & Caicos Islands")
        Call SetListItem("Tuvalu")
        Call SetListItem("Uganda")
        Call SetListItem("Ukraine")
        Call SetListItem("United Arab Emirates")
        Call SetListItem("United Kingdom")
        Call SetListItem("Uruguay")
        Call SetListItem("Uzbekistan")
        Call SetListItem("Vanuatu")
        Call SetListItem("Venezuela")
        Call SetListItem("Vietnam")
        Call SetListItem("Wake Island")
        Call SetListItem("Wallis & Futuna")
        Call SetListItem("Western Sahara")
        Call SetListItem("Yemen (Aden)")
        Call SetListItem("Zambia")
        Call SetListItem("Zimbabwe")
    ElseIf TpID = "Foreign Passport" Then
        Call SetListItem("United States", "US")
'Foreign countries
        Call SetListItem("Afghanistan")
        Call SetListItem("Akrotiri")
        Call SetListItem("Albania")
        Call SetListItem("Algeria")
        Call SetListItem("Andorra")
        Call SetListItem("Angola")
        Call SetListItem("Anguilla")
        Call SetListItem("Antarctica")
        Call SetListItem("Antigua & Barbuda")
        Call SetListItem("Argentina")
        Call SetListItem("Armenia")
        Call SetListItem("Aruba")
        Call SetListItem("Ashmore & Cartier Islands")
        Call SetListItem("Australia")
        Call SetListItem("Austria")
        Call SetListItem("Azerbaijan")
        Call SetListItem("Bahamas")
        Call SetListItem("Bahrain")
        Call SetListItem("Baker Island")
        Call SetListItem("Bangladesh")
        Call SetListItem("Barbados")
        Call SetListItem("Belarus")
        Call SetListItem("Belgium")
        Call SetListItem("Belize")
        Call SetListItem("Benin")
        Call SetListItem("Bermuda")
        Call SetListItem("Bhutan")
        Call SetListItem("Bolivia")
        Call SetListItem("Bosnia-Herzegovina")
        Call SetListItem("Botswana")
        Call SetListItem("Bouvet Island")
        Call SetListItem("Brazil")
        Call SetListItem("British Indian Ocean Territory")
        Call SetListItem("British Virgin Islands")
        Call SetListItem("Brunei")
        Call SetListItem("Bulgaria")
        Call SetListItem("Burkina Faso")
        Call SetListItem("Burma")
        Call SetListItem("Burundi")
        Call SetListItem("Cambodia")
        Call SetListItem("Cameroon")
        Call SetListItem("Canada")
        Call SetListItem("Cape Verde")
        Call SetListItem("Cayman Islands")
        Call SetListItem("Central African Republic")
        Call SetListItem("Chad")
        Call SetListItem("Chile")
        Call SetListItem("China")
        Call SetListItem("Christmas Island")
        Call SetListItem("Clipperton Island")
        Call SetListItem("Cocos (Keeling) Islands")
        Call SetListItem("Colombia")
        Call SetListItem("Comoros")
        Call SetListItem("Congo (Brazzaville)")
        Call SetListItem("Congo (Kinshasa)")
        Call SetListItem("Cooks Islands")
        Call SetListItem("Coral Sea Islands")
        Call SetListItem("Costa Rica")
        Call SetListItem("Cote d'Ivoire (Ivory Coast)")
        Call SetListItem("Croatia")
        Call SetListItem("Cuba")
        Call SetListItem("Curacao")
        Call SetListItem("Cyprus")
        Call SetListItem("Czech Republic")
        Call SetListItem("Denmark")
        Call SetListItem("Dhekelia")
        Call SetListItem("Djibouti")
        Call SetListItem("Dominica")
        Call SetListItem("Dominican Republic")
        Call SetListItem("East Timor")
        Call SetListItem("Ecuador")
        Call SetListItem("Egypt")
        Call SetListItem("El Salvador")
        Call SetListItem("Equatorial Guinea")
        Call SetListItem("Eritrea")
        Call SetListItem("Estonia")
        Call SetListItem("Ethiopia")
        Call SetListItem("Falkland Islands (Islas Malvinas)")
        Call SetListItem("Faroe Islands")
        Call SetListItem("Federated States of Micronesia")
        Call SetListItem("Fiji")
        Call SetListItem("Finland")
        Call SetListItem("France")
        Call SetListItem("French Polynesia")
        Call SetListItem("French Southern & Antarctic Lands")
        Call SetListItem("Gabon")
        Call SetListItem("The Gambia")
        Call SetListItem("Georgia")
        Call SetListItem("Germany")
        Call SetListItem("Ghana")
        Call SetListItem("Gibraltar")
        Call SetListItem("Greece")
        Call SetListItem("Greenland")
        Call SetListItem("Grenada")
        Call SetListItem("Guatemala")
        Call SetListItem("Guernsey")
        Call SetListItem("Guinea")
        Call SetListItem("Guinea-Bissau")
        Call SetListItem("Guyana")
        Call SetListItem("Haiti")
        Call SetListItem("Heard Island & McDonald Islands")
        Call SetListItem("Holy See")
        Call SetListItem("Honduras")
        Call SetListItem("Hong Kong")
        Call SetListItem("Howland Island")
        Call SetListItem("Hungary")
        Call SetListItem("Iceland")
        Call SetListItem("India")
        Call SetListItem("Indonesia")
        Call SetListItem("Iran")
        Call SetListItem("Iraq")
        Call SetListItem("Ireland")
        Call SetListItem("Israel")
        Call SetListItem("Italy")
        Call SetListItem("Jamaica")
        Call SetListItem("Jan Mayen")
        Call SetListItem("Japan")
        Call SetListItem("Jarvis Island")
        Call SetListItem("Jersey")
        Call SetListItem("Johnston Atoll")
        Call SetListItem("Jordan")
        Call SetListItem("Kazakhstan")
        Call SetListItem("Kenya")
        Call SetListItem("Kingman Reef")
        Call SetListItem("Kiribati")
' North and South Korea are different in this list due to space constraints on the IV_USWEFWksht_IDInfo1 and IV_USEF_IDInfo1 questions
        Call SetListItem("North Korea")
        Call SetListItem("South Korea")
        Call SetListItem("Kosovo")
        Call SetListItem("Kuwait")
        Call SetListItem("Kyrgyzstan")
        Call SetListItem("Laos")
        Call SetListItem("Latvia")
        Call SetListItem("Lebanon")
        Call SetListItem("Lesotho")
        Call SetListItem("Liberia")
        Call SetListItem("Libya")
        Call SetListItem("Liechtenstein")
        Call SetListItem("Lithuania")
        Call SetListItem("Luxembourg")
        Call SetListItem("Macau")
        Call SetListItem("Macedonia")
        Call SetListItem("Madagascar")
        Call SetListItem("Malawi")
        Call SetListItem("Malaysia")
        Call SetListItem("Maldives")
        Call SetListItem("Mali")
        Call SetListItem("Malta")
        Call SetListItem("Man, Isle of")
        Call SetListItem("Marshall Islands")
        Call SetListItem("Mauritania")
        Call SetListItem("Mauritius")
        Call SetListItem("Mexico")
        Call SetListItem("Midway Islands")
        Call SetListItem("Moldova")
        Call SetListItem("Monaco")
        Call SetListItem("Mongolia")
        Call SetListItem("Montenegro")
        Call SetListItem("Montserrat")
        Call SetListItem("Morocco")
        Call SetListItem("Mozambique")
        Call SetListItem("Namibia")
        Call SetListItem("Nauru")
        Call SetListItem("Navassa Island")
        Call SetListItem("Nepal")
        Call SetListItem("Netherlands")
        Call SetListItem("New Caledonia")
        Call SetListItem("New Zealand")
        Call SetListItem("Nicaragua")
        Call SetListItem("Niger")
        Call SetListItem("Nigeria")
        Call SetListItem("Niue")
        Call SetListItem("Norfolk Island")
        Call SetListItem("Norway")
        Call SetListItem("Oman")
        Call SetListItem("Other Country")
        Call SetListItem("Pakistan")
        Call SetListItem("Palau")
        Call SetListItem("Palmyra Atoll")
        Call SetListItem("Panama")
        Call SetListItem("Papua-New Guinea")
        Call SetListItem("Paracel Islands")
        Call SetListItem("Paraguay")
        Call SetListItem("Peru")
        Call SetListItem("Philippines")
        Call SetListItem("Pitcairn Islands")
        Call SetListItem("Poland")
        Call SetListItem("Portugal")
        Call SetListItem("Qatar")
        Call SetListItem("Romania")
        Call SetListItem("Russia")
        Call SetListItem("Rwanda")
        Call SetListItem("Saint Barthelemy")
        Call SetListItem("Saint Martin")
        Call SetListItem("Samoa")
        Call SetListItem("San Marino")
        Call SetListItem("Sao Tome & Principe")
        Call SetListItem("Saudi Arabia")
        Call SetListItem("Senegal")
        Call SetListItem("Serbia")
        Call SetListItem("Seychelles")
        Call SetListItem("Sierra Leone")
        Call SetListItem("Singapore")
        Call SetListItem("Sint Maarten")
        Call SetListItem("Slovakia")
        Call SetListItem("Slovenia")
        Call SetListItem("Solomon Islands")
        Call SetListItem("Somalia")
        Call SetListItem("South Africa")
' South Georgia & South Sandwich Islands is different in this list due to space constraints on the IV_USWEFWksht_IDInfo1 and IV_USEF_IDInfo1 questions
        Call SetListItem("South Georgia & Sandwich Islands")
        Call SetListItem("South Sudan")
        Call SetListItem("Spain")
        Call SetListItem("Spratly Islands")
        Call SetListItem("Sri Lanka")
        Call SetListItem("Saint Helena")
        Call SetListItem("Saint Kitts & Nevis")
        Call SetListItem("Saint Lucia Island")
        Call SetListItem("Saint Pierre & Miquelon")
        Call SetListItem("Saint Vincent & the Grenadines")
        Call SetListItem("Sudan")
        Call SetListItem("Suriname")
        Call SetListItem("Svalbard")
        Call SetListItem("Swaziland")
        Call SetListItem("Sweden")
        Call SetListItem("Switzerland")
        Call SetListItem("Syria")
        Call SetListItem("Taiwan")
        Call SetListItem("Tajikistan")
        Call SetListItem("Tanzania")
        Call SetListItem("Thailand")
        Call SetListItem("Togo")
        Call SetListItem("Tokelau")
        Call SetListItem("Tonga")
        Call SetListItem("Trinidad & Tobago")
        Call SetListItem("Tunisia")
        Call SetListItem("Turkey")
        Call SetListItem("Turkmenistan")
        Call SetListItem("Turks & Caicos Islands")
        Call SetListItem("Tuvalu")
        Call SetListItem("Uganda")
        Call SetListItem("Ukraine")
        Call SetListItem("United Arab Emirates")
        Call SetListItem("United Kingdom")
        Call SetListItem("Uruguay")
        Call SetListItem("Uzbekistan")
        Call SetListItem("Vanuatu")
        Call SetListItem("Venezuela")
        Call SetListItem("Vietnam")
        Call SetListItem("Wake Island")
        Call SetListItem("Wallis & Futuna")
        Call SetListItem("Western Sahara")
        Call SetListItem("Yemen (Aden)")
        Call SetListItem("Zambia")
        Call SetListItem("Zimbabwe")
    ElseIf TpID = "Resident Alien ID" Then
        Call SetListItem("United States", "US")
'Foreign countries
        Call SetListItem("Afghanistan")
        Call SetListItem("Akrotiri")
        Call SetListItem("Albania")
        Call SetListItem("Algeria")
        Call SetListItem("Andorra")
        Call SetListItem("Angola")
        Call SetListItem("Anguilla")
        Call SetListItem("Antarctica")
        Call SetListItem("Antigua & Barbuda")
        Call SetListItem("Argentina")
        Call SetListItem("Armenia")
        Call SetListItem("Aruba")
        Call SetListItem("Ashmore & Cartier Islands")
        Call SetListItem("Australia")
        Call SetListItem("Austria")
        Call SetListItem("Azerbaijan")
        Call SetListItem("Bahamas")
        Call SetListItem("Bahrain")
        Call SetListItem("Baker Island")
        Call SetListItem("Bangladesh")
        Call SetListItem("Barbados")
        Call SetListItem("Belarus")
        Call SetListItem("Belgium")
        Call SetListItem("Belize")
        Call SetListItem("Benin")
        Call SetListItem("Bermuda")
        Call SetListItem("Bhutan")
        Call SetListItem("Bolivia")
        Call SetListItem("Bosnia-Herzegovina")
        Call SetListItem("Botswana")
        Call SetListItem("Bouvet Island")
        Call SetListItem("Brazil")
        Call SetListItem("British Indian Ocean Territory")
        Call SetListItem("British Virgin Islands")
        Call SetListItem("Brunei")
        Call SetListItem("Bulgaria")
        Call SetListItem("Burkina Faso")
        Call SetListItem("Burma")
        Call SetListItem("Burundi")
        Call SetListItem("Cambodia")
        Call SetListItem("Cameroon")
        Call SetListItem("Canada")
        Call SetListItem("Cape Verde")
        Call SetListItem("Cayman Islands")
        Call SetListItem("Central African Republic")
        Call SetListItem("Chad")
        Call SetListItem("Chile")
        Call SetListItem("China")
        Call SetListItem("Christmas Island")
        Call SetListItem("Clipperton Island")
        Call SetListItem("Cocos (Keeling) Islands")
        Call SetListItem("Colombia")
        Call SetListItem("Comoros")
        Call SetListItem("Congo (Brazzaville)")
        Call SetListItem("Congo (Kinshasa)")
        Call SetListItem("Cooks Islands")
        Call SetListItem("Coral Sea Islands")
        Call SetListItem("Costa Rica")
        Call SetListItem("Cote d'Ivoire (Ivory Coast)")
        Call SetListItem("Croatia")
        Call SetListItem("Cuba")
        Call SetListItem("Curacao")
        Call SetListItem("Cyprus")
        Call SetListItem("Czech Republic")
        Call SetListItem("Denmark")
        Call SetListItem("Dhekelia")
        Call SetListItem("Djibouti")
        Call SetListItem("Dominica")
        Call SetListItem("Dominican Republic")
        Call SetListItem("East Timor")
        Call SetListItem("Ecuador")
        Call SetListItem("Egypt")
        Call SetListItem("El Salvador")
        Call SetListItem("Equatorial Guinea")
        Call SetListItem("Eritrea")
        Call SetListItem("Estonia")
        Call SetListItem("Ethiopia")
        Call SetListItem("Falkland Islands (Islas Malvinas)")
        Call SetListItem("Faroe Islands")
        Call SetListItem("Federated States of Micronesia")
        Call SetListItem("Fiji")
        Call SetListItem("Finland")
        Call SetListItem("France")
        Call SetListItem("French Polynesia")
        Call SetListItem("French Southern & Antarctic Lands")
        Call SetListItem("Gabon")
        Call SetListItem("The Gambia")
        Call SetListItem("Georgia")
        Call SetListItem("Germany")
        Call SetListItem("Ghana")
        Call SetListItem("Gibraltar")
        Call SetListItem("Greece")
        Call SetListItem("Greenland")
        Call SetListItem("Grenada")
        Call SetListItem("Guatemala")
        Call SetListItem("Guernsey")
        Call SetListItem("Guinea")
        Call SetListItem("Guinea-Bissau")
        Call SetListItem("Guyana")
        Call SetListItem("Haiti")
        Call SetListItem("Heard Island & McDonald Islands")
        Call SetListItem("Holy See")
        Call SetListItem("Honduras")
        Call SetListItem("Hong Kong")
        Call SetListItem("Howland Island")
        Call SetListItem("Hungary")
        Call SetListItem("Iceland")
        Call SetListItem("India")
        Call SetListItem("Indonesia")
        Call SetListItem("Iran")
        Call SetListItem("Iraq")
        Call SetListItem("Ireland")
        Call SetListItem("Israel")
        Call SetListItem("Italy")
        Call SetListItem("Jamaica")
        Call SetListItem("Jan Mayen")
        Call SetListItem("Japan")
        Call SetListItem("Jarvis Island")
        Call SetListItem("Jersey")
        Call SetListItem("Johnston Atoll")
        Call SetListItem("Jordan")
        Call SetListItem("Kazakhstan")
        Call SetListItem("Kenya")
        Call SetListItem("Kingman Reef")
        Call SetListItem("Kiribati")
' North and South Korea are different in this list due to space constraints on the IV_USWEFWksht_IDInfo1 and IV_USEF_IDInfo1 questions
        Call SetListItem("North Korea")
        Call SetListItem("South Korea")
        Call SetListItem("Kosovo")
        Call SetListItem("Kuwait")
        Call SetListItem("Kyrgyzstan")
        Call SetListItem("Laos")
        Call SetListItem("Latvia")
        Call SetListItem("Lebanon")
        Call SetListItem("Lesotho")
        Call SetListItem("Liberia")
        Call SetListItem("Libya")
        Call SetListItem("Liechtenstein")
        Call SetListItem("Lithuania")
        Call SetListItem("Luxembourg")
        Call SetListItem("Macau")
        Call SetListItem("Macedonia")
        Call SetListItem("Madagascar")
        Call SetListItem("Malawi")
        Call SetListItem("Malaysia")
        Call SetListItem("Maldives")
        Call SetListItem("Mali")
        Call SetListItem("Malta")
        Call SetListItem("Man, Isle of")
        Call SetListItem("Marshall Islands")
        Call SetListItem("Mauritania")
        Call SetListItem("Mauritius")
        Call SetListItem("Mexico")
        Call SetListItem("Midway Islands")
        Call SetListItem("Moldova")
        Call SetListItem("Monaco")
        Call SetListItem("Mongolia")
        Call SetListItem("Montenegro")
        Call SetListItem("Montserrat")
        Call SetListItem("Morocco")
        Call SetListItem("Mozambique")
        Call SetListItem("Namibia")
        Call SetListItem("Nauru")
        Call SetListItem("Navassa Island")
        Call SetListItem("Nepal")
        Call SetListItem("Netherlands")
        Call SetListItem("New Caledonia")
        Call SetListItem("New Zealand")
        Call SetListItem("Nicaragua")
        Call SetListItem("Niger")
        Call SetListItem("Nigeria")
        Call SetListItem("Niue")
        Call SetListItem("Norfolk Island")
        Call SetListItem("Norway")
        Call SetListItem("Oman")
        Call SetListItem("Other Country")
        Call SetListItem("Pakistan")
        Call SetListItem("Palau")
        Call SetListItem("Palmyra Atoll")
        Call SetListItem("Panama")
        Call SetListItem("Papua-New Guinea")
        Call SetListItem("Paracel Islands")
        Call SetListItem("Paraguay")
        Call SetListItem("Peru")
        Call SetListItem("Philippines")
        Call SetListItem("Pitcairn Islands")
        Call SetListItem("Poland")
        Call SetListItem("Portugal")
        Call SetListItem("Qatar")
        Call SetListItem("Romania")
        Call SetListItem("Russia")
        Call SetListItem("Rwanda")
        Call SetListItem("Saint Barthelemy")
        Call SetListItem("Saint Martin")
        Call SetListItem("Samoa")
        Call SetListItem("San Marino")
        Call SetListItem("Sao Tome & Principe")
        Call SetListItem("Saudi Arabia")
        Call SetListItem("Senegal")
        Call SetListItem("Serbia")
        Call SetListItem("Seychelles")
        Call SetListItem("Sierra Leone")
        Call SetListItem("Singapore")
        Call SetListItem("Sint Maarten")
        Call SetListItem("Slovakia")
        Call SetListItem("Slovenia")
        Call SetListItem("Solomon Islands")
        Call SetListItem("Somalia")
        Call SetListItem("South Africa")
' South Georgia & South Sandwich Islands is different in this list due to space constraints on the IV_USWEFWksht_IDInfo1 and IV_USEF_IDInfo1 questions
        Call SetListItem("South Georgia & Sandwich Islands")
        Call SetListItem("South Sudan")
        Call SetListItem("Spain")
        Call SetListItem("Spratly Islands")
        Call SetListItem("Sri Lanka")
        Call SetListItem("Saint Helena")
        Call SetListItem("Saint Kitts & Nevis")
        Call SetListItem("Saint Lucia Island")
        Call SetListItem("Saint Pierre & Miquelon")
        Call SetListItem("Saint Vincent & the Grenadines")
        Call SetListItem("Sudan")
        Call SetListItem("Suriname")
        Call SetListItem("Svalbard")
        Call SetListItem("Swaziland")
        Call SetListItem("Sweden")
        Call SetListItem("Switzerland")
        Call SetListItem("Syria")
        Call SetListItem("Taiwan")
        Call SetListItem("Tajikistan")
        Call SetListItem("Tanzania")
        Call SetListItem("Thailand")
        Call SetListItem("Togo")
        Call SetListItem("Tokelau")
        Call SetListItem("Tonga")
        Call SetListItem("Trinidad & Tobago")
        Call SetListItem("Tunisia")
        Call SetListItem("Turkey")
        Call SetListItem("Turkmenistan")
        Call SetListItem("Turks & Caicos Islands")
        Call SetListItem("Tuvalu")
        Call SetListItem("Uganda")
        Call SetListItem("Ukraine")
        Call SetListItem("United Arab Emirates")
        Call SetListItem("United Kingdom")
        Call SetListItem("Uruguay")
        Call SetListItem("Uzbekistan")
        Call SetListItem("Vanuatu")
        Call SetListItem("Venezuela")
        Call SetListItem("Vietnam")
        Call SetListItem("Wake Island")
        Call SetListItem("Wallis & Futuna")
        Call SetListItem("Western Sahara")
        Call SetListItem("Yemen (Aden)")
        Call SetListItem("Zambia")
        Call SetListItem("Zimbabwe")
    ElseIf TpID = "Matricula Consular Card" Then
        Call SetListItem("Brazil")
        Call SetListItem("Guatemala")
        Call SetListItem("Honduras")
        Call SetListItem("Mexico")
        Call SetListItem("South Korea")
    ElseIf TpID = "Tribal ID" Then
        Call SetListItem("AA - Military Address", "AA")
        Call SetListItem("AE - Military Address", "AE")
        Call SetListItem("AP - Military Address", "AP")
        Call SetListItem("AL - Alabama", "AL")
        Call SetListItem("AK - Alaska", "AK")
        Call SetListItem("AS - American Samoa", "AS")
        Call SetListItem("AZ - Arizona", "AZ")
        Call SetListItem("AR - Arkansas", "AR")
        Call SetListItem("CA - California", "CA")
        Call SetListItem("CO - Colorado", "CO")
        Call SetListItem("CT - Connecticut", "CT")
        Call SetListItem("DE - Delaware", "DE")
        Call SetListItem("DC - District of Columbia", "DC")
        Call SetListItem("FM - Federated States of Micronesia", "FM")
        Call SetListItem("FL - Florida", "FL")
        Call SetListItem("GA - Georgia", "GA")
        Call SetListItem("GU - Guam", "GU")
        Call SetListItem("HI - Hawaii", "HI")
        Call SetListItem("ID - Idaho", "ID")
        Call SetListItem("IL - Illinois", "IL")
        Call SetListItem("IN - Indiana", "IN")
        Call SetListItem("IA - Iowa", "IA")
        Call SetListItem("KS - Kansas", "KS")
        Call SetListItem("KY - Kentucky", "KY")
        Call SetListItem("LA - Louisiana", "LA")
        Call SetListItem("ME - Maine", "ME")
        Call SetListItem("MH - Marshall Islands", "MH")
        Call SetListItem("MD - Maryland", "MD")
        Call SetListItem("MA - Massachusetts", "MA")
        Call SetListItem("MI - Michigan", "MI")
        Call SetListItem("MN - Minnesota", "MN")
        Call SetListItem("MS - Mississippi", "MS")
        Call SetListItem("MO - Missouri", "MO")
        Call SetListItem("MT - Montana", "MT")
        Call SetListItem("NE - Nebraska", "NE")
        Call SetListItem("NV - Nevada", "NV")
        Call SetListItem("NH - New Hampshire", "NH")
        Call SetListItem("NJ - New Jersey", "NJ")
        Call SetListItem("NM - New Mexico", "NM")
        Call SetListItem("NY - New York", "NY")
        Call SetListItem("NC - North Carolina", "NC")
        Call SetListItem("ND - North Dakota", "ND")
        Call SetListItem("MP - Northern Mariana Islands", "MP")
        Call SetListItem("OH - Ohio", "OH")
        Call SetListItem("OK - Oklahoma", "OK")
        Call SetListItem("OR - Oregon", "OR")
        Call SetListItem("PW - Palau", "PW")
        Call SetListItem("PA - Pennsylvania", "PA")
        Call SetListItem("PR - Puerto Rico", "PR")
        Call SetListItem("RI - Rhode Island", "RI")
        Call SetListItem("SC - South Carolina", "SC")
        Call SetListItem("SD - South Dakota", "SD")
        Call SetListItem("TN - Tennessee", "TN")
        Call SetListItem("TX - Texas", "TX")
        Call SetListItem("UT - Utah", "UT")
        Call SetListItem("VT - Vermont", "VT")
        Call SetListItem("VA - Virginia", "VA")
        Call SetListItem("VI - Virgin Islands", "VI")
        Call SetListItem("WA - Washington", "WA")
        Call SetListItem("WV - West Virginia", "WV")
        Call SetListItem("WI - Wisconsin", "WI")
        Call SetListItem("WY - Wyoming", "WY")
    ElseIf TpID = "Foreign Issued Driver's License/ID" Then
'Foreign countries
        Call SetListItem("Afghanistan")
        Call SetListItem("Akrotiri")
        Call SetListItem("Albania")
        Call SetListItem("Algeria")
        Call SetListItem("Andorra")
        Call SetListItem("Angola")
        Call SetListItem("Anguilla")
        Call SetListItem("Antarctica")
        Call SetListItem("Antigua & Barbuda")
        Call SetListItem("Argentina")
        Call SetListItem("Armenia")
        Call SetListItem("Aruba")
        Call SetListItem("Ashmore & Cartier Islands")
        Call SetListItem("Australia")
        Call SetListItem("Austria")
        Call SetListItem("Azerbaijan")
        Call SetListItem("Bahamas")
        Call SetListItem("Bahrain")
        Call SetListItem("Baker Island")
        Call SetListItem("Bangladesh")
        Call SetListItem("Barbados")
        Call SetListItem("Belarus")
        Call SetListItem("Belgium")
        Call SetListItem("Belize")
        Call SetListItem("Benin")
        Call SetListItem("Bermuda")
        Call SetListItem("Bhutan")
        Call SetListItem("Bolivia")
        Call SetListItem("Bosnia-Herzegovina")
        Call SetListItem("Botswana")
        Call SetListItem("Bouvet Island")
        Call SetListItem("Brazil")
        Call SetListItem("British Indian Ocean Territory")
        Call SetListItem("British Virgin Islands")
        Call SetListItem("Brunei")
        Call SetListItem("Bulgaria")
        Call SetListItem("Burkina Faso")
        Call SetListItem("Burma")
        Call SetListItem("Burundi")
        Call SetListItem("Cambodia")
        Call SetListItem("Cameroon")
        Call SetListItem("Canada")
        Call SetListItem("Cape Verde")
        Call SetListItem("Cayman Islands")
        Call SetListItem("Central African Republic")
        Call SetListItem("Chad")
        Call SetListItem("Chile")
        Call SetListItem("China")
        Call SetListItem("Christmas Island")
        Call SetListItem("Clipperton Island")
        Call SetListItem("Cocos (Keeling) Islands")
        Call SetListItem("Colombia")
        Call SetListItem("Comoros")
        Call SetListItem("Congo (Brazzaville)")
        Call SetListItem("Congo (Kinshasa)")
        Call SetListItem("Cooks Islands")
        Call SetListItem("Coral Sea Islands")
        Call SetListItem("Costa Rica")
        Call SetListItem("Cote d'Ivoire (Ivory Coast)")
        Call SetListItem("Croatia")
        Call SetListItem("Cuba")
        Call SetListItem("Curacao")
        Call SetListItem("Cyprus")
        Call SetListItem("Czech Republic")
        Call SetListItem("Denmark")
        Call SetListItem("Dhekelia")
        Call SetListItem("Djibouti")
        Call SetListItem("Dominica")
        Call SetListItem("Dominican Republic")
        Call SetListItem("East Timor")
        Call SetListItem("Ecuador")
        Call SetListItem("Egypt")
        Call SetListItem("El Salvador")
        Call SetListItem("Equatorial Guinea")
        Call SetListItem("Eritrea")
        Call SetListItem("Estonia")
        Call SetListItem("Ethiopia")
        Call SetListItem("Falkland Islands (Islas Malvinas)")
        Call SetListItem("Faroe Islands")
        Call SetListItem("Federated States of Micronesia")
        Call SetListItem("Fiji")
        Call SetListItem("Finland")
        Call SetListItem("France")
        Call SetListItem("French Polynesia")
        Call SetListItem("French Southern & Antarctic Lands")
        Call SetListItem("Gabon")
        Call SetListItem("The Gambia")
        Call SetListItem("Georgia")
        Call SetListItem("Germany")
        Call SetListItem("Ghana")
        Call SetListItem("Gibraltar")
        Call SetListItem("Greece")
        Call SetListItem("Greenland")
        Call SetListItem("Grenada")
        Call SetListItem("Guatemala")
        Call SetListItem("Guernsey")
        Call SetListItem("Guinea")
        Call SetListItem("Guinea-Bissau")
        Call SetListItem("Guyana")
        Call SetListItem("Haiti")
        Call SetListItem("Heard Island & McDonald Islands")
        Call SetListItem("Holy See")
        Call SetListItem("Honduras")
        Call SetListItem("Hong Kong")
        Call SetListItem("Howland Island")
        Call SetListItem("Hungary")
        Call SetListItem("Iceland")
        Call SetListItem("India")
        Call SetListItem("Indonesia")
        Call SetListItem("Iran")
        Call SetListItem("Iraq")
        Call SetListItem("Ireland")
        Call SetListItem("Israel")
        Call SetListItem("Italy")
        Call SetListItem("Jamaica")
        Call SetListItem("Jan Mayen")
        Call SetListItem("Japan")
        Call SetListItem("Jarvis Island")
        Call SetListItem("Jersey")
        Call SetListItem("Johnston Atoll")
        Call SetListItem("Jordan")
        Call SetListItem("Kazakhstan")
        Call SetListItem("Kenya")
        Call SetListItem("Kingman Reef")
        Call SetListItem("Kiribati")
' North and South Korea are different in this list due to space constraints on the IV_USWEFWksht_IDInfo1 and IV_USEF_IDInfo1 questions
        Call SetListItem("North Korea")
        Call SetListItem("South Korea")
        Call SetListItem("Kosovo")
        Call SetListItem("Kuwait")
        Call SetListItem("Kyrgyzstan")
        Call SetListItem("Laos")
        Call SetListItem("Latvia")
        Call SetListItem("Lebanon")
        Call SetListItem("Lesotho")
        Call SetListItem("Liberia")
        Call SetListItem("Libya")
        Call SetListItem("Liechtenstein")
        Call SetListItem("Lithuania")
        Call SetListItem("Luxembourg")
        Call SetListItem("Macau")
        Call SetListItem("Macedonia")
        Call SetListItem("Madagascar")
        Call SetListItem("Malawi")
        Call SetListItem("Malaysia")
        Call SetListItem("Maldives")
        Call SetListItem("Mali")
        Call SetListItem("Malta")
        Call SetListItem("Man, Isle of")
        Call SetListItem("Marshall Islands")
        Call SetListItem("Mauritania")
        Call SetListItem("Mauritius")
        Call SetListItem("Mexico")
        Call SetListItem("Midway Islands")
        Call SetListItem("Moldova")
        Call SetListItem("Monaco")
        Call SetListItem("Mongolia")
        Call SetListItem("Montenegro")
        Call SetListItem("Montserrat")
        Call SetListItem("Morocco")
        Call SetListItem("Mozambique")
        Call SetListItem("Namibia")
        Call SetListItem("Nauru")
        Call SetListItem("Navassa Island")
        Call SetListItem("Nepal")
        Call SetListItem("Netherlands")
        Call SetListItem("New Caledonia")
        Call SetListItem("New Zealand")
        Call SetListItem("Nicaragua")
        Call SetListItem("Niger")
        Call SetListItem("Nigeria")
        Call SetListItem("Niue")
        Call SetListItem("Norfolk Island")
        Call SetListItem("Norway")
        Call SetListItem("Oman")
        Call SetListItem("Other Country")
        Call SetListItem("Pakistan")
        Call SetListItem("Palau")
        Call SetListItem("Palmyra Atoll")
        Call SetListItem("Panama")
        Call SetListItem("Papua-New Guinea")
        Call SetListItem("Paracel Islands")
        Call SetListItem("Paraguay")
        Call SetListItem("Peru")
        Call SetListItem("Philippines")
        Call SetListItem("Pitcairn Islands")
        Call SetListItem("Poland")
        Call SetListItem("Portugal")
        Call SetListItem("Qatar")
        Call SetListItem("Romania")
        Call SetListItem("Russia")
        Call SetListItem("Rwanda")
        Call SetListItem("Saint Barthelemy")
        Call SetListItem("Saint Martin")
        Call SetListItem("Samoa")
        Call SetListItem("San Marino")
        Call SetListItem("Sao Tome & Principe")
        Call SetListItem("Saudi Arabia")
        Call SetListItem("Senegal")
        Call SetListItem("Serbia")
        Call SetListItem("Seychelles")
        Call SetListItem("Sierra Leone")
        Call SetListItem("Singapore")
        Call SetListItem("Sint Maarten")
        Call SetListItem("Slovakia")
        Call SetListItem("Slovenia")
        Call SetListItem("Solomon Islands")
        Call SetListItem("Somalia")
        Call SetListItem("South Africa")
' South Georgia & South Sandwich Islands is different in this list due to space constraints on the IV_USWEFWksht_IDInfo1 and IV_USEF_IDInfo1 questions
        Call SetListItem("South Georgia & Sandwich Islands")
        Call SetListItem("South Sudan")
        Call SetListItem("Spain")
        Call SetListItem("Spratly Islands")
        Call SetListItem("Sri Lanka")
        Call SetListItem("Saint Helena")
        Call SetListItem("Saint Kitts & Nevis")
        Call SetListItem("Saint Lucia Island")
        Call SetListItem("Saint Pierre & Miquelon")
        Call SetListItem("Saint Vincent & the Grenadines")
        Call SetListItem("Sudan")
        Call SetListItem("Suriname")
        Call SetListItem("Svalbard")
        Call SetListItem("Swaziland")
        Call SetListItem("Sweden")
        Call SetListItem("Switzerland")
        Call SetListItem("Syria")
        Call SetListItem("Taiwan")
        Call SetListItem("Tajikistan")
        Call SetListItem("Tanzania")
        Call SetListItem("Thailand")
        Call SetListItem("Togo")
        Call SetListItem("Tokelau")
        Call SetListItem("Tonga")
        Call SetListItem("Trinidad & Tobago")
        Call SetListItem("Tunisia")
        Call SetListItem("Turkey")
        Call SetListItem("Turkmenistan")
        Call SetListItem("Turks & Caicos Islands")
        Call SetListItem("Tuvalu")
        Call SetListItem("Uganda")
        Call SetListItem("Ukraine")
        Call SetListItem("United Arab Emirates")
        Call SetListItem("United Kingdom")
        Call SetListItem("Uruguay")
        Call SetListItem("Uzbekistan")
        Call SetListItem("Vanuatu")
        Call SetListItem("Venezuela")
        Call SetListItem("Vietnam")
        Call SetListItem("Wake Island")
        Call SetListItem("Wallis & Futuna")
        Call SetListItem("Western Sahara")
        Call SetListItem("Yemen (Aden)")
        Call SetListItem("Zambia")
        Call SetListItem("Zimbabwe")
    End If
End Function

Public Function SPBankProductIssueLocationC_SetDynaList()
    Call SetListTitle("BankProductIssueLocationC")
    
    Dim TpID As String
    
    TpID = GetString(USWBankProd.SpID)
    
    If TpID = "U.S. Driver's License" Then
        Call SetListItem("AA - Military Address", "AA")
        Call SetListItem("AE - Military Address", "AE")
        Call SetListItem("AP - Military Address", "AP")
        Call SetListItem("AL - Alabama", "AL")
        Call SetListItem("AK - Alaska", "AK")
        Call SetListItem("AS - American Samoa", "AS")
        Call SetListItem("AZ - Arizona", "AZ")
        Call SetListItem("AR - Arkansas", "AR")
        Call SetListItem("CA - California", "CA")
        Call SetListItem("CO - Colorado", "CO")
        Call SetListItem("CT - Connecticut", "CT")
        Call SetListItem("DE - Delaware", "DE")
        Call SetListItem("DC - District of Columbia", "DC")
        Call SetListItem("FM - Federated States of Micronesia", "FM")
        Call SetListItem("FL - Florida", "FL")
        Call SetListItem("GA - Georgia", "GA")
        Call SetListItem("GU - Guam", "GU")
        Call SetListItem("HI - Hawaii", "HI")
        Call SetListItem("ID - Idaho", "ID")
        Call SetListItem("IL - Illinois", "IL")
        Call SetListItem("IN - Indiana", "IN")
        Call SetListItem("IA - Iowa", "IA")
        Call SetListItem("KS - Kansas", "KS")
        Call SetListItem("KY - Kentucky", "KY")
        Call SetListItem("LA - Louisiana", "LA")
        Call SetListItem("ME - Maine", "ME")
        Call SetListItem("MH - Marshall Islands", "MH")
        Call SetListItem("MD - Maryland", "MD")
        Call SetListItem("MA - Massachusetts", "MA")
        Call SetListItem("MI - Michigan", "MI")
        Call SetListItem("MN - Minnesota", "MN")
        Call SetListItem("MS - Mississippi", "MS")
        Call SetListItem("MO - Missouri", "MO")
        Call SetListItem("MT - Montana", "MT")
        Call SetListItem("NE - Nebraska", "NE")
        Call SetListItem("NV - Nevada", "NV")
        Call SetListItem("NH - New Hampshire", "NH")
        Call SetListItem("NJ - New Jersey", "NJ")
        Call SetListItem("NM - New Mexico", "NM")
        Call SetListItem("NY - New York", "NY")
        Call SetListItem("NC - North Carolina", "NC")
        Call SetListItem("ND - North Dakota", "ND")
        Call SetListItem("MP - Northern Mariana Islands", "MP")
        Call SetListItem("OH - Ohio", "OH")
        Call SetListItem("OK - Oklahoma", "OK")
        Call SetListItem("OR - Oregon", "OR")
        Call SetListItem("PW - Palau", "PW")
        Call SetListItem("PA - Pennsylvania", "PA")
        Call SetListItem("PR - Puerto Rico", "PR")
        Call SetListItem("RI - Rhode Island", "RI")
        Call SetListItem("SC - South Carolina", "SC")
        Call SetListItem("SD - South Dakota", "SD")
        Call SetListItem("TN - Tennessee", "TN")
        Call SetListItem("TX - Texas", "TX")
        Call SetListItem("UT - Utah", "UT")
        Call SetListItem("VT - Vermont", "VT")
        Call SetListItem("VA - Virginia", "VA")
        Call SetListItem("VI - Virgin Islands", "VI")
        Call SetListItem("WA - Washington", "WA")
        Call SetListItem("WV - West Virginia", "WV")
        Call SetListItem("WI - Wisconsin", "WI")
        Call SetListItem("WY - Wyoming", "WY")
    ElseIf TpID = "U.S. DMV/BMV State ID" Then
        Call SetListItem("AA - Military Address", "AA")
        Call SetListItem("AE - Military Address", "AE")
        Call SetListItem("AP - Military Address", "AP")
        Call SetListItem("AL - Alabama", "AL")
        Call SetListItem("AK - Alaska", "AK")
        Call SetListItem("AS - American Samoa", "AS")
        Call SetListItem("AZ - Arizona", "AZ")
        Call SetListItem("AR - Arkansas", "AR")
        Call SetListItem("CA - California", "CA")
        Call SetListItem("CO - Colorado", "CO")
        Call SetListItem("CT - Connecticut", "CT")
        Call SetListItem("DE - Delaware", "DE")
        Call SetListItem("DC - District of Columbia", "DC")
        Call SetListItem("FM - Federated States of Micronesia", "FM")
        Call SetListItem("FL - Florida", "FL")
        Call SetListItem("GA - Georgia", "GA")
        Call SetListItem("GU - Guam", "GU")
        Call SetListItem("HI - Hawaii", "HI")
        Call SetListItem("ID - Idaho", "ID")
        Call SetListItem("IL - Illinois", "IL")
        Call SetListItem("IN - Indiana", "IN")
        Call SetListItem("IA - Iowa", "IA")
        Call SetListItem("KS - Kansas", "KS")
        Call SetListItem("KY - Kentucky", "KY")
        Call SetListItem("LA - Louisiana", "LA")
        Call SetListItem("ME - Maine", "ME")
        Call SetListItem("MH - Marshall Islands", "MH")
        Call SetListItem("MD - Maryland", "MD")
        Call SetListItem("MA - Massachusetts", "MA")
        Call SetListItem("MI - Michigan", "MI")
        Call SetListItem("MN - Minnesota", "MN")
        Call SetListItem("MS - Mississippi", "MS")
        Call SetListItem("MO - Missouri", "MO")
        Call SetListItem("MT - Montana", "MT")
        Call SetListItem("NE - Nebraska", "NE")
        Call SetListItem("NV - Nevada", "NV")
        Call SetListItem("NH - New Hampshire", "NH")
        Call SetListItem("NJ - New Jersey", "NJ")
        Call SetListItem("NM - New Mexico", "NM")
        Call SetListItem("NY - New York", "NY")
        Call SetListItem("NC - North Carolina", "NC")
        Call SetListItem("ND - North Dakota", "ND")
        Call SetListItem("MP - Northern Mariana Islands", "MP")
        Call SetListItem("OH - Ohio", "OH")
        Call SetListItem("OK - Oklahoma", "OK")
        Call SetListItem("OR - Oregon", "OR")
        Call SetListItem("PW - Palau", "PW")
        Call SetListItem("PA - Pennsylvania", "PA")
        Call SetListItem("PR - Puerto Rico", "PR")
        Call SetListItem("RI - Rhode Island", "RI")
        Call SetListItem("SC - South Carolina", "SC")
        Call SetListItem("SD - South Dakota", "SD")
        Call SetListItem("TN - Tennessee", "TN")
        Call SetListItem("TX - Texas", "TX")
        Call SetListItem("UT - Utah", "UT")
        Call SetListItem("VT - Vermont", "VT")
        Call SetListItem("VA - Virginia", "VA")
        Call SetListItem("VI - Virgin Islands", "VI")
        Call SetListItem("WA - Washington", "WA")
        Call SetListItem("WV - West Virginia", "WV")
        Call SetListItem("WI - Wisconsin", "WI")
        Call SetListItem("WY - Wyoming", "WY")
    ElseIf TpID = "U.S. Military ID" Then
        Call SetListItem("United States", "US")
    ElseIf TpID = "U.S. Passport" Then
        Call SetListItem("United States", "US")
'Foreign countries
        Call SetListItem("Afghanistan")
        Call SetListItem("Akrotiri")
        Call SetListItem("Albania")
        Call SetListItem("Algeria")
        Call SetListItem("Andorra")
        Call SetListItem("Angola")
        Call SetListItem("Anguilla")
        Call SetListItem("Antarctica")
        Call SetListItem("Antigua & Barbuda")
        Call SetListItem("Argentina")
        Call SetListItem("Armenia")
        Call SetListItem("Aruba")
        Call SetListItem("Ashmore & Cartier Islands")
        Call SetListItem("Australia")
        Call SetListItem("Austria")
        Call SetListItem("Azerbaijan")
        Call SetListItem("Bahamas")
        Call SetListItem("Bahrain")
        Call SetListItem("Baker Island")
        Call SetListItem("Bangladesh")
        Call SetListItem("Barbados")
        Call SetListItem("Belarus")
        Call SetListItem("Belgium")
        Call SetListItem("Belize")
        Call SetListItem("Benin")
        Call SetListItem("Bermuda")
        Call SetListItem("Bhutan")
        Call SetListItem("Bolivia")
        Call SetListItem("Bosnia-Herzegovina")
        Call SetListItem("Botswana")
        Call SetListItem("Bouvet Island")
        Call SetListItem("Brazil")
        Call SetListItem("British Indian Ocean Territory")
        Call SetListItem("British Virgin Islands")
        Call SetListItem("Brunei")
        Call SetListItem("Bulgaria")
        Call SetListItem("Burkina Faso")
        Call SetListItem("Burma")
        Call SetListItem("Burundi")
        Call SetListItem("Cambodia")
        Call SetListItem("Cameroon")
        Call SetListItem("Canada")
        Call SetListItem("Cape Verde")
        Call SetListItem("Cayman Islands")
        Call SetListItem("Central African Republic")
        Call SetListItem("Chad")
        Call SetListItem("Chile")
        Call SetListItem("China")
        Call SetListItem("Christmas Island")
        Call SetListItem("Clipperton Island")
        Call SetListItem("Cocos (Keeling) Islands")
        Call SetListItem("Colombia")
        Call SetListItem("Comoros")
        Call SetListItem("Congo (Brazzaville)")
        Call SetListItem("Congo (Kinshasa)")
        Call SetListItem("Cooks Islands")
        Call SetListItem("Coral Sea Islands")
        Call SetListItem("Costa Rica")
        Call SetListItem("Cote d'Ivoire (Ivory Coast)")
        Call SetListItem("Croatia")
        Call SetListItem("Cuba")
        Call SetListItem("Curacao")
        Call SetListItem("Cyprus")
        Call SetListItem("Czech Republic")
        Call SetListItem("Denmark")
        Call SetListItem("Dhekelia")
        Call SetListItem("Djibouti")
        Call SetListItem("Dominica")
        Call SetListItem("Dominican Republic")
        Call SetListItem("East Timor")
        Call SetListItem("Ecuador")
        Call SetListItem("Egypt")
        Call SetListItem("El Salvador")
        Call SetListItem("Equatorial Guinea")
        Call SetListItem("Eritrea")
        Call SetListItem("Estonia")
        Call SetListItem("Ethiopia")
        Call SetListItem("Falkland Islands (Islas Malvinas)")
        Call SetListItem("Faroe Islands")
        Call SetListItem("Federated States of Micronesia")
        Call SetListItem("Fiji")
        Call SetListItem("Finland")
        Call SetListItem("France")
        Call SetListItem("French Polynesia")
        Call SetListItem("French Southern & Antarctic Lands")
        Call SetListItem("Gabon")
        Call SetListItem("The Gambia")
        Call SetListItem("Georgia")
        Call SetListItem("Germany")
        Call SetListItem("Ghana")
        Call SetListItem("Gibraltar")
        Call SetListItem("Greece")
        Call SetListItem("Greenland")
        Call SetListItem("Grenada")
        Call SetListItem("Guatemala")
        Call SetListItem("Guernsey")
        Call SetListItem("Guinea")
        Call SetListItem("Guinea-Bissau")
        Call SetListItem("Guyana")
        Call SetListItem("Haiti")
        Call SetListItem("Heard Island & McDonald Islands")
        Call SetListItem("Holy See")
        Call SetListItem("Honduras")
        Call SetListItem("Hong Kong")
        Call SetListItem("Howland Island")
        Call SetListItem("Hungary")
        Call SetListItem("Iceland")
        Call SetListItem("India")
        Call SetListItem("Indonesia")
        Call SetListItem("Iran")
        Call SetListItem("Iraq")
        Call SetListItem("Ireland")
        Call SetListItem("Israel")
        Call SetListItem("Italy")
        Call SetListItem("Jamaica")
        Call SetListItem("Jan Mayen")
        Call SetListItem("Japan")
        Call SetListItem("Jarvis Island")
        Call SetListItem("Jersey")
        Call SetListItem("Johnston Atoll")
        Call SetListItem("Jordan")
        Call SetListItem("Kazakhstan")
        Call SetListItem("Kenya")
        Call SetListItem("Kingman Reef")
        Call SetListItem("Kiribati")
' North and South Korea are different in this list due to space constraints on the IV_USWEFWksht_IDInfo1 and IV_USEF_IDInfo1 questions
        Call SetListItem("North Korea")
        Call SetListItem("South Korea")
        Call SetListItem("Kosovo")
        Call SetListItem("Kuwait")
        Call SetListItem("Kyrgyzstan")
        Call SetListItem("Laos")
        Call SetListItem("Latvia")
        Call SetListItem("Lebanon")
        Call SetListItem("Lesotho")
        Call SetListItem("Liberia")
        Call SetListItem("Libya")
        Call SetListItem("Liechtenstein")
        Call SetListItem("Lithuania")
        Call SetListItem("Luxembourg")
        Call SetListItem("Macau")
        Call SetListItem("Macedonia")
        Call SetListItem("Madagascar")
        Call SetListItem("Malawi")
        Call SetListItem("Malaysia")
        Call SetListItem("Maldives")
        Call SetListItem("Mali")
        Call SetListItem("Malta")
        Call SetListItem("Man, Isle of")
        Call SetListItem("Marshall Islands")
        Call SetListItem("Mauritania")
        Call SetListItem("Mauritius")
        Call SetListItem("Mexico")
        Call SetListItem("Midway Islands")
        Call SetListItem("Moldova")
        Call SetListItem("Monaco")
        Call SetListItem("Mongolia")
        Call SetListItem("Montenegro")
        Call SetListItem("Montserrat")
        Call SetListItem("Morocco")
        Call SetListItem("Mozambique")
        Call SetListItem("Namibia")
        Call SetListItem("Nauru")
        Call SetListItem("Navassa Island")
        Call SetListItem("Nepal")
        Call SetListItem("Netherlands")
        Call SetListItem("New Caledonia")
        Call SetListItem("New Zealand")
        Call SetListItem("Nicaragua")
        Call SetListItem("Niger")
        Call SetListItem("Nigeria")
        Call SetListItem("Niue")
        Call SetListItem("Norfolk Island")
        Call SetListItem("Norway")
        Call SetListItem("Oman")
        Call SetListItem("Other Country")
        Call SetListItem("Pakistan")
        Call SetListItem("Palau")
        Call SetListItem("Palmyra Atoll")
        Call SetListItem("Panama")
        Call SetListItem("Papua-New Guinea")
        Call SetListItem("Paracel Islands")
        Call SetListItem("Paraguay")
        Call SetListItem("Peru")
        Call SetListItem("Philippines")
        Call SetListItem("Pitcairn Islands")
        Call SetListItem("Poland")
        Call SetListItem("Portugal")
        Call SetListItem("Qatar")
        Call SetListItem("Romania")
        Call SetListItem("Russia")
        Call SetListItem("Rwanda")
        Call SetListItem("Saint Barthelemy")
        Call SetListItem("Saint Martin")
        Call SetListItem("Samoa")
        Call SetListItem("San Marino")
        Call SetListItem("Sao Tome & Principe")
        Call SetListItem("Saudi Arabia")
        Call SetListItem("Senegal")
        Call SetListItem("Serbia")
        Call SetListItem("Seychelles")
        Call SetListItem("Sierra Leone")
        Call SetListItem("Singapore")
        Call SetListItem("Sint Maarten")
        Call SetListItem("Slovakia")
        Call SetListItem("Slovenia")
        Call SetListItem("Solomon Islands")
        Call SetListItem("Somalia")
        Call SetListItem("South Africa")
' South Georgia & South Sandwich Islands is different in this list due to space constraints on the IV_USWEFWksht_IDInfo1 and IV_USEF_IDInfo1 questions
        Call SetListItem("South Georgia & Sandwich Islands")
        Call SetListItem("South Sudan")
        Call SetListItem("Spain")
        Call SetListItem("Spratly Islands")
        Call SetListItem("Sri Lanka")
        Call SetListItem("Saint Helena")
        Call SetListItem("Saint Kitts & Nevis")
        Call SetListItem("Saint Lucia Island")
        Call SetListItem("Saint Pierre & Miquelon")
        Call SetListItem("Saint Vincent & the Grenadines")
        Call SetListItem("Sudan")
        Call SetListItem("Suriname")
        Call SetListItem("Svalbard")
        Call SetListItem("Swaziland")
        Call SetListItem("Sweden")
        Call SetListItem("Switzerland")
        Call SetListItem("Syria")
        Call SetListItem("Taiwan")
        Call SetListItem("Tajikistan")
        Call SetListItem("Tanzania")
        Call SetListItem("Thailand")
        Call SetListItem("Togo")
        Call SetListItem("Tokelau")
        Call SetListItem("Tonga")
        Call SetListItem("Trinidad & Tobago")
        Call SetListItem("Tunisia")
        Call SetListItem("Turkey")
        Call SetListItem("Turkmenistan")
        Call SetListItem("Turks & Caicos Islands")
        Call SetListItem("Tuvalu")
        Call SetListItem("Uganda")
        Call SetListItem("Ukraine")
        Call SetListItem("United Arab Emirates")
        Call SetListItem("United Kingdom")
        Call SetListItem("Uruguay")
        Call SetListItem("Uzbekistan")
        Call SetListItem("Vanuatu")
        Call SetListItem("Venezuela")
        Call SetListItem("Vietnam")
        Call SetListItem("Wake Island")
        Call SetListItem("Wallis & Futuna")
        Call SetListItem("Western Sahara")
        Call SetListItem("Yemen (Aden)")
        Call SetListItem("Zambia")
        Call SetListItem("Zimbabwe")
    ElseIf TpID = "Foreign Passport" Then
        Call SetListItem("United States", "US")
'Foreign countries
        Call SetListItem("Afghanistan")
        Call SetListItem("Akrotiri")
        Call SetListItem("Albania")
        Call SetListItem("Algeria")
        Call SetListItem("Andorra")
        Call SetListItem("Angola")
        Call SetListItem("Anguilla")
        Call SetListItem("Antarctica")
        Call SetListItem("Antigua & Barbuda")
        Call SetListItem("Argentina")
        Call SetListItem("Armenia")
        Call SetListItem("Aruba")
        Call SetListItem("Ashmore & Cartier Islands")
        Call SetListItem("Australia")
        Call SetListItem("Austria")
        Call SetListItem("Azerbaijan")
        Call SetListItem("Bahamas")
        Call SetListItem("Bahrain")
        Call SetListItem("Baker Island")
        Call SetListItem("Bangladesh")
        Call SetListItem("Barbados")
        Call SetListItem("Belarus")
        Call SetListItem("Belgium")
        Call SetListItem("Belize")
        Call SetListItem("Benin")
        Call SetListItem("Bermuda")
        Call SetListItem("Bhutan")
        Call SetListItem("Bolivia")
        Call SetListItem("Bosnia-Herzegovina")
        Call SetListItem("Botswana")
        Call SetListItem("Bouvet Island")
        Call SetListItem("Brazil")
        Call SetListItem("British Indian Ocean Territory")
        Call SetListItem("British Virgin Islands")
        Call SetListItem("Brunei")
        Call SetListItem("Bulgaria")
        Call SetListItem("Burkina Faso")
        Call SetListItem("Burma")
        Call SetListItem("Burundi")
        Call SetListItem("Cambodia")
        Call SetListItem("Cameroon")
        Call SetListItem("Canada")
        Call SetListItem("Cape Verde")
        Call SetListItem("Cayman Islands")
        Call SetListItem("Central African Republic")
        Call SetListItem("Chad")
        Call SetListItem("Chile")
        Call SetListItem("China")
        Call SetListItem("Christmas Island")
        Call SetListItem("Clipperton Island")
        Call SetListItem("Cocos (Keeling) Islands")
        Call SetListItem("Colombia")
        Call SetListItem("Comoros")
        Call SetListItem("Congo (Brazzaville)")
        Call SetListItem("Congo (Kinshasa)")
        Call SetListItem("Cooks Islands")
        Call SetListItem("Coral Sea Islands")
        Call SetListItem("Costa Rica")
        Call SetListItem("Cote d'Ivoire (Ivory Coast)")
        Call SetListItem("Croatia")
        Call SetListItem("Cuba")
        Call SetListItem("Curacao")
        Call SetListItem("Cyprus")
        Call SetListItem("Czech Republic")
        Call SetListItem("Denmark")
        Call SetListItem("Dhekelia")
        Call SetListItem("Djibouti")
        Call SetListItem("Dominica")
        Call SetListItem("Dominican Republic")
        Call SetListItem("East Timor")
        Call SetListItem("Ecuador")
        Call SetListItem("Egypt")
        Call SetListItem("El Salvador")
        Call SetListItem("Equatorial Guinea")
        Call SetListItem("Eritrea")
        Call SetListItem("Estonia")
        Call SetListItem("Ethiopia")
        Call SetListItem("Falkland Islands (Islas Malvinas)")
        Call SetListItem("Faroe Islands")
        Call SetListItem("Federated States of Micronesia")
        Call SetListItem("Fiji")
        Call SetListItem("Finland")
        Call SetListItem("France")
        Call SetListItem("French Polynesia")
        Call SetListItem("French Southern & Antarctic Lands")
        Call SetListItem("Gabon")
        Call SetListItem("The Gambia")
        Call SetListItem("Georgia")
        Call SetListItem("Germany")
        Call SetListItem("Ghana")
        Call SetListItem("Gibraltar")
        Call SetListItem("Greece")
        Call SetListItem("Greenland")
        Call SetListItem("Grenada")
        Call SetListItem("Guatemala")
        Call SetListItem("Guernsey")
        Call SetListItem("Guinea")
        Call SetListItem("Guinea-Bissau")
        Call SetListItem("Guyana")
        Call SetListItem("Haiti")
        Call SetListItem("Heard Island & McDonald Islands")
        Call SetListItem("Holy See")
        Call SetListItem("Honduras")
        Call SetListItem("Hong Kong")
        Call SetListItem("Howland Island")
        Call SetListItem("Hungary")
        Call SetListItem("Iceland")
        Call SetListItem("India")
        Call SetListItem("Indonesia")
        Call SetListItem("Iran")
        Call SetListItem("Iraq")
        Call SetListItem("Ireland")
        Call SetListItem("Israel")
        Call SetListItem("Italy")
        Call SetListItem("Jamaica")
        Call SetListItem("Jan Mayen")
        Call SetListItem("Japan")
        Call SetListItem("Jarvis Island")
        Call SetListItem("Jersey")
        Call SetListItem("Johnston Atoll")
        Call SetListItem("Jordan")
        Call SetListItem("Kazakhstan")
        Call SetListItem("Kenya")
        Call SetListItem("Kingman Reef")
        Call SetListItem("Kiribati")
' North and South Korea are different in this list due to space constraints on the IV_USWEFWksht_IDInfo1 and IV_USEF_IDInfo1 questions
        Call SetListItem("North Korea")
        Call SetListItem("South Korea")
        Call SetListItem("Kosovo")
        Call SetListItem("Kuwait")
        Call SetListItem("Kyrgyzstan")
        Call SetListItem("Laos")
        Call SetListItem("Latvia")
        Call SetListItem("Lebanon")
        Call SetListItem("Lesotho")
        Call SetListItem("Liberia")
        Call SetListItem("Libya")
        Call SetListItem("Liechtenstein")
        Call SetListItem("Lithuania")
        Call SetListItem("Luxembourg")
        Call SetListItem("Macau")
        Call SetListItem("Macedonia")
        Call SetListItem("Madagascar")
        Call SetListItem("Malawi")
        Call SetListItem("Malaysia")
        Call SetListItem("Maldives")
        Call SetListItem("Mali")
        Call SetListItem("Malta")
        Call SetListItem("Man, Isle of")
        Call SetListItem("Marshall Islands")
        Call SetListItem("Mauritania")
        Call SetListItem("Mauritius")
        Call SetListItem("Mexico")
        Call SetListItem("Midway Islands")
        Call SetListItem("Moldova")
        Call SetListItem("Monaco")
        Call SetListItem("Mongolia")
        Call SetListItem("Montenegro")
        Call SetListItem("Montserrat")
        Call SetListItem("Morocco")
        Call SetListItem("Mozambique")
        Call SetListItem("Namibia")
        Call SetListItem("Nauru")
        Call SetListItem("Navassa Island")
        Call SetListItem("Nepal")
        Call SetListItem("Netherlands")
        Call SetListItem("New Caledonia")
        Call SetListItem("New Zealand")
        Call SetListItem("Nicaragua")
        Call SetListItem("Niger")
        Call SetListItem("Nigeria")
        Call SetListItem("Niue")
        Call SetListItem("Norfolk Island")
        Call SetListItem("Norway")
        Call SetListItem("Oman")
        Call SetListItem("Other Country")
        Call SetListItem("Pakistan")
        Call SetListItem("Palau")
        Call SetListItem("Palmyra Atoll")
        Call SetListItem("Panama")
        Call SetListItem("Papua-New Guinea")
        Call SetListItem("Paracel Islands")
        Call SetListItem("Paraguay")
        Call SetListItem("Peru")
        Call SetListItem("Philippines")
        Call SetListItem("Pitcairn Islands")
        Call SetListItem("Poland")
        Call SetListItem("Portugal")
        Call SetListItem("Qatar")
        Call SetListItem("Romania")
        Call SetListItem("Russia")
        Call SetListItem("Rwanda")
        Call SetListItem("Saint Barthelemy")
        Call SetListItem("Saint Martin")
        Call SetListItem("Samoa")
        Call SetListItem("San Marino")
        Call SetListItem("Sao Tome & Principe")
        Call SetListItem("Saudi Arabia")
        Call SetListItem("Senegal")
        Call SetListItem("Serbia")
        Call SetListItem("Seychelles")
        Call SetListItem("Sierra Leone")
        Call SetListItem("Singapore")
        Call SetListItem("Sint Maarten")
        Call SetListItem("Slovakia")
        Call SetListItem("Slovenia")
        Call SetListItem("Solomon Islands")
        Call SetListItem("Somalia")
        Call SetListItem("South Africa")
' South Georgia & South Sandwich Islands is different in this list due to space constraints on the IV_USWEFWksht_IDInfo1 and IV_USEF_IDInfo1 questions
        Call SetListItem("South Georgia & Sandwich Islands")
        Call SetListItem("South Sudan")
        Call SetListItem("Spain")
        Call SetListItem("Spratly Islands")
        Call SetListItem("Sri Lanka")
        Call SetListItem("Saint Helena")
        Call SetListItem("Saint Kitts & Nevis")
        Call SetListItem("Saint Lucia Island")
        Call SetListItem("Saint Pierre & Miquelon")
        Call SetListItem("Saint Vincent & the Grenadines")
        Call SetListItem("Sudan")
        Call SetListItem("Suriname")
        Call SetListItem("Svalbard")
        Call SetListItem("Swaziland")
        Call SetListItem("Sweden")
        Call SetListItem("Switzerland")
        Call SetListItem("Syria")
        Call SetListItem("Taiwan")
        Call SetListItem("Tajikistan")
        Call SetListItem("Tanzania")
        Call SetListItem("Thailand")
        Call SetListItem("Togo")
        Call SetListItem("Tokelau")
        Call SetListItem("Tonga")
        Call SetListItem("Trinidad & Tobago")
        Call SetListItem("Tunisia")
        Call SetListItem("Turkey")
        Call SetListItem("Turkmenistan")
        Call SetListItem("Turks & Caicos Islands")
        Call SetListItem("Tuvalu")
        Call SetListItem("Uganda")
        Call SetListItem("Ukraine")
        Call SetListItem("United Arab Emirates")
        Call SetListItem("United Kingdom")
        Call SetListItem("Uruguay")
        Call SetListItem("Uzbekistan")
        Call SetListItem("Vanuatu")
        Call SetListItem("Venezuela")
        Call SetListItem("Vietnam")
        Call SetListItem("Wake Island")
        Call SetListItem("Wallis & Futuna")
        Call SetListItem("Western Sahara")
        Call SetListItem("Yemen (Aden)")
        Call SetListItem("Zambia")
        Call SetListItem("Zimbabwe")
    ElseIf TpID = "Resident Alien ID" Then
        Call SetListItem("United States", "US")
'Foreign countries
        Call SetListItem("Afghanistan")
        Call SetListItem("Akrotiri")
        Call SetListItem("Albania")
        Call SetListItem("Algeria")
        Call SetListItem("Andorra")
        Call SetListItem("Angola")
        Call SetListItem("Anguilla")
        Call SetListItem("Antarctica")
        Call SetListItem("Antigua & Barbuda")
        Call SetListItem("Argentina")
        Call SetListItem("Armenia")
        Call SetListItem("Aruba")
        Call SetListItem("Ashmore & Cartier Islands")
        Call SetListItem("Australia")
        Call SetListItem("Austria")
        Call SetListItem("Azerbaijan")
        Call SetListItem("Bahamas")
        Call SetListItem("Bahrain")
        Call SetListItem("Baker Island")
        Call SetListItem("Bangladesh")
        Call SetListItem("Barbados")
        Call SetListItem("Belarus")
        Call SetListItem("Belgium")
        Call SetListItem("Belize")
        Call SetListItem("Benin")
        Call SetListItem("Bermuda")
        Call SetListItem("Bhutan")
        Call SetListItem("Bolivia")
        Call SetListItem("Bosnia-Herzegovina")
        Call SetListItem("Botswana")
        Call SetListItem("Bouvet Island")
        Call SetListItem("Brazil")
        Call SetListItem("British Indian Ocean Territory")
        Call SetListItem("British Virgin Islands")
        Call SetListItem("Brunei")
        Call SetListItem("Bulgaria")
        Call SetListItem("Burkina Faso")
        Call SetListItem("Burma")
        Call SetListItem("Burundi")
        Call SetListItem("Cambodia")
        Call SetListItem("Cameroon")
        Call SetListItem("Canada")
        Call SetListItem("Cape Verde")
        Call SetListItem("Cayman Islands")
        Call SetListItem("Central African Republic")
        Call SetListItem("Chad")
        Call SetListItem("Chile")
        Call SetListItem("China")
        Call SetListItem("Christmas Island")
        Call SetListItem("Clipperton Island")
        Call SetListItem("Cocos (Keeling) Islands")
        Call SetListItem("Colombia")
        Call SetListItem("Comoros")
        Call SetListItem("Congo (Brazzaville)")
        Call SetListItem("Congo (Kinshasa)")
        Call SetListItem("Cooks Islands")
        Call SetListItem("Coral Sea Islands")
        Call SetListItem("Costa Rica")
        Call SetListItem("Cote d'Ivoire (Ivory Coast)")
        Call SetListItem("Croatia")
        Call SetListItem("Cuba")
        Call SetListItem("Curacao")
        Call SetListItem("Cyprus")
        Call SetListItem("Czech Republic")
        Call SetListItem("Denmark")
        Call SetListItem("Dhekelia")
        Call SetListItem("Djibouti")
        Call SetListItem("Dominica")
        Call SetListItem("Dominican Republic")
        Call SetListItem("East Timor")
        Call SetListItem("Ecuador")
        Call SetListItem("Egypt")
        Call SetListItem("El Salvador")
        Call SetListItem("Equatorial Guinea")
        Call SetListItem("Eritrea")
        Call SetListItem("Estonia")
        Call SetListItem("Ethiopia")
        Call SetListItem("Falkland Islands (Islas Malvinas)")
        Call SetListItem("Faroe Islands")
        Call SetListItem("Federated States of Micronesia")
        Call SetListItem("Fiji")
        Call SetListItem("Finland")
        Call SetListItem("France")
        Call SetListItem("French Polynesia")
        Call SetListItem("French Southern & Antarctic Lands")
        Call SetListItem("Gabon")
        Call SetListItem("The Gambia")
        Call SetListItem("Georgia")
        Call SetListItem("Germany")
        Call SetListItem("Ghana")
        Call SetListItem("Gibraltar")
        Call SetListItem("Greece")
        Call SetListItem("Greenland")
        Call SetListItem("Grenada")
        Call SetListItem("Guatemala")
        Call SetListItem("Guernsey")
        Call SetListItem("Guinea")
        Call SetListItem("Guinea-Bissau")
        Call SetListItem("Guyana")
        Call SetListItem("Haiti")
        Call SetListItem("Heard Island & McDonald Islands")
        Call SetListItem("Holy See")
        Call SetListItem("Honduras")
        Call SetListItem("Hong Kong")
        Call SetListItem("Howland Island")
        Call SetListItem("Hungary")
        Call SetListItem("Iceland")
        Call SetListItem("India")
        Call SetListItem("Indonesia")
        Call SetListItem("Iran")
        Call SetListItem("Iraq")
        Call SetListItem("Ireland")
        Call SetListItem("Israel")
        Call SetListItem("Italy")
        Call SetListItem("Jamaica")
        Call SetListItem("Jan Mayen")
        Call SetListItem("Japan")
        Call SetListItem("Jarvis Island")
        Call SetListItem("Jersey")
        Call SetListItem("Johnston Atoll")
        Call SetListItem("Jordan")
        Call SetListItem("Kazakhstan")
        Call SetListItem("Kenya")
        Call SetListItem("Kingman Reef")
        Call SetListItem("Kiribati")
' North and South Korea are different in this list due to space constraints on the IV_USWEFWksht_IDInfo1 and IV_USEF_IDInfo1 questions
        Call SetListItem("North Korea")
        Call SetListItem("South Korea")
        Call SetListItem("Kosovo")
        Call SetListItem("Kuwait")
        Call SetListItem("Kyrgyzstan")
        Call SetListItem("Laos")
        Call SetListItem("Latvia")
        Call SetListItem("Lebanon")
        Call SetListItem("Lesotho")
        Call SetListItem("Liberia")
        Call SetListItem("Libya")
        Call SetListItem("Liechtenstein")
        Call SetListItem("Lithuania")
        Call SetListItem("Luxembourg")
        Call SetListItem("Macau")
        Call SetListItem("Macedonia")
        Call SetListItem("Madagascar")
        Call SetListItem("Malawi")
        Call SetListItem("Malaysia")
        Call SetListItem("Maldives")
        Call SetListItem("Mali")
        Call SetListItem("Malta")
        Call SetListItem("Man, Isle of")
        Call SetListItem("Marshall Islands")
        Call SetListItem("Mauritania")
        Call SetListItem("Mauritius")
        Call SetListItem("Mexico")
        Call SetListItem("Midway Islands")
        Call SetListItem("Moldova")
        Call SetListItem("Monaco")
        Call SetListItem("Mongolia")
        Call SetListItem("Montenegro")
        Call SetListItem("Montserrat")
        Call SetListItem("Morocco")
        Call SetListItem("Mozambique")
        Call SetListItem("Namibia")
        Call SetListItem("Nauru")
        Call SetListItem("Navassa Island")
        Call SetListItem("Nepal")
        Call SetListItem("Netherlands")
        Call SetListItem("New Caledonia")
        Call SetListItem("New Zealand")
        Call SetListItem("Nicaragua")
        Call SetListItem("Niger")
        Call SetListItem("Nigeria")
        Call SetListItem("Niue")
        Call SetListItem("Norfolk Island")
        Call SetListItem("Norway")
        Call SetListItem("Oman")
        Call SetListItem("Other Country")
        Call SetListItem("Pakistan")
        Call SetListItem("Palau")
        Call SetListItem("Palmyra Atoll")
        Call SetListItem("Panama")
        Call SetListItem("Papua-New Guinea")
        Call SetListItem("Paracel Islands")
        Call SetListItem("Paraguay")
        Call SetListItem("Peru")
        Call SetListItem("Philippines")
        Call SetListItem("Pitcairn Islands")
        Call SetListItem("Poland")
        Call SetListItem("Portugal")
        Call SetListItem("Qatar")
        Call SetListItem("Romania")
        Call SetListItem("Russia")
        Call SetListItem("Rwanda")
        Call SetListItem("Saint Barthelemy")
        Call SetListItem("Saint Martin")
        Call SetListItem("Samoa")
        Call SetListItem("San Marino")
        Call SetListItem("Sao Tome & Principe")
        Call SetListItem("Saudi Arabia")
        Call SetListItem("Senegal")
        Call SetListItem("Serbia")
        Call SetListItem("Seychelles")
        Call SetListItem("Sierra Leone")
        Call SetListItem("Singapore")
        Call SetListItem("Sint Maarten")
        Call SetListItem("Slovakia")
        Call SetListItem("Slovenia")
        Call SetListItem("Solomon Islands")
        Call SetListItem("Somalia")
        Call SetListItem("South Africa")
' South Georgia & South Sandwich Islands is different in this list due to space constraints on the IV_USWEFWksht_IDInfo1 and IV_USEF_IDInfo1 questions
        Call SetListItem("South Georgia & Sandwich Islands")
        Call SetListItem("South Sudan")
        Call SetListItem("Spain")
        Call SetListItem("Spratly Islands")
        Call SetListItem("Sri Lanka")
        Call SetListItem("Saint Helena")
        Call SetListItem("Saint Kitts & Nevis")
        Call SetListItem("Saint Lucia Island")
        Call SetListItem("Saint Pierre & Miquelon")
        Call SetListItem("Saint Vincent & the Grenadines")
        Call SetListItem("Sudan")
        Call SetListItem("Suriname")
        Call SetListItem("Svalbard")
        Call SetListItem("Swaziland")
        Call SetListItem("Sweden")
        Call SetListItem("Switzerland")
        Call SetListItem("Syria")
        Call SetListItem("Taiwan")
        Call SetListItem("Tajikistan")
        Call SetListItem("Tanzania")
        Call SetListItem("Thailand")
        Call SetListItem("Togo")
        Call SetListItem("Tokelau")
        Call SetListItem("Tonga")
        Call SetListItem("Trinidad & Tobago")
        Call SetListItem("Tunisia")
        Call SetListItem("Turkey")
        Call SetListItem("Turkmenistan")
        Call SetListItem("Turks & Caicos Islands")
        Call SetListItem("Tuvalu")
        Call SetListItem("Uganda")
        Call SetListItem("Ukraine")
        Call SetListItem("United Arab Emirates")
        Call SetListItem("United Kingdom")
        Call SetListItem("Uruguay")
        Call SetListItem("Uzbekistan")
        Call SetListItem("Vanuatu")
        Call SetListItem("Venezuela")
        Call SetListItem("Vietnam")
        Call SetListItem("Wake Island")
        Call SetListItem("Wallis & Futuna")
        Call SetListItem("Western Sahara")
        Call SetListItem("Yemen (Aden)")
        Call SetListItem("Zambia")
        Call SetListItem("Zimbabwe")
    ElseIf TpID = "Matricula Consular Card" Then
        Call SetListItem("Brazil")
        Call SetListItem("Guatemala")
        Call SetListItem("Honduras")
        Call SetListItem("Mexico")
        Call SetListItem("South Korea")
    ElseIf TpID = "Tribal ID" Then
        Call SetListItem("AA - Military Address", "AA")
        Call SetListItem("AE - Military Address", "AE")
        Call SetListItem("AP - Military Address", "AP")
        Call SetListItem("AL - Alabama", "AL")
        Call SetListItem("AK - Alaska", "AK")
        Call SetListItem("AS - American Samoa", "AS")
        Call SetListItem("AZ - Arizona", "AZ")
        Call SetListItem("AR - Arkansas", "AR")
        Call SetListItem("CA - California", "CA")
        Call SetListItem("CO - Colorado", "CO")
        Call SetListItem("CT - Connecticut", "CT")
        Call SetListItem("DE - Delaware", "DE")
        Call SetListItem("DC - District of Columbia", "DC")
        Call SetListItem("FM - Federated States of Micronesia", "FM")
        Call SetListItem("FL - Florida", "FL")
        Call SetListItem("GA - Georgia", "GA")
        Call SetListItem("GU - Guam", "GU")
        Call SetListItem("HI - Hawaii", "HI")
        Call SetListItem("ID - Idaho", "ID")
        Call SetListItem("IL - Illinois", "IL")
        Call SetListItem("IN - Indiana", "IN")
        Call SetListItem("IA - Iowa", "IA")
        Call SetListItem("KS - Kansas", "KS")
        Call SetListItem("KY - Kentucky", "KY")
        Call SetListItem("LA - Louisiana", "LA")
        Call SetListItem("ME - Maine", "ME")
        Call SetListItem("MH - Marshall Islands", "MH")
        Call SetListItem("MD - Maryland", "MD")
        Call SetListItem("MA - Massachusetts", "MA")
        Call SetListItem("MI - Michigan", "MI")
        Call SetListItem("MN - Minnesota", "MN")
        Call SetListItem("MS - Mississippi", "MS")
        Call SetListItem("MO - Missouri", "MO")
        Call SetListItem("MT - Montana", "MT")
        Call SetListItem("NE - Nebraska", "NE")
        Call SetListItem("NV - Nevada", "NV")
        Call SetListItem("NH - New Hampshire", "NH")
        Call SetListItem("NJ - New Jersey", "NJ")
        Call SetListItem("NM - New Mexico", "NM")
        Call SetListItem("NY - New York", "NY")
        Call SetListItem("NC - North Carolina", "NC")
        Call SetListItem("ND - North Dakota", "ND")
        Call SetListItem("MP - Northern Mariana Islands", "MP")
        Call SetListItem("OH - Ohio", "OH")
        Call SetListItem("OK - Oklahoma", "OK")
        Call SetListItem("OR - Oregon", "OR")
        Call SetListItem("PW - Palau", "PW")
        Call SetListItem("PA - Pennsylvania", "PA")
        Call SetListItem("PR - Puerto Rico", "PR")
        Call SetListItem("RI - Rhode Island", "RI")
        Call SetListItem("SC - South Carolina", "SC")
        Call SetListItem("SD - South Dakota", "SD")
        Call SetListItem("TN - Tennessee", "TN")
        Call SetListItem("TX - Texas", "TX")
        Call SetListItem("UT - Utah", "UT")
        Call SetListItem("VT - Vermont", "VT")
        Call SetListItem("VA - Virginia", "VA")
        Call SetListItem("VI - Virgin Islands", "VI")
        Call SetListItem("WA - Washington", "WA")
        Call SetListItem("WV - West Virginia", "WV")
        Call SetListItem("WI - Wisconsin", "WI")
        Call SetListItem("WY - Wyoming", "WY")
    ElseIf TpID = "Foreign Issued Driver's License/ID" Then
'Foreign countries
        Call SetListItem("Afghanistan")
        Call SetListItem("Akrotiri")
        Call SetListItem("Albania")
        Call SetListItem("Algeria")
        Call SetListItem("Andorra")
        Call SetListItem("Angola")
        Call SetListItem("Anguilla")
        Call SetListItem("Antarctica")
        Call SetListItem("Antigua & Barbuda")
        Call SetListItem("Argentina")
        Call SetListItem("Armenia")
        Call SetListItem("Aruba")
        Call SetListItem("Ashmore & Cartier Islands")
        Call SetListItem("Australia")
        Call SetListItem("Austria")
        Call SetListItem("Azerbaijan")
        Call SetListItem("Bahamas")
        Call SetListItem("Bahrain")
        Call SetListItem("Baker Island")
        Call SetListItem("Bangladesh")
        Call SetListItem("Barbados")
        Call SetListItem("Belarus")
        Call SetListItem("Belgium")
        Call SetListItem("Belize")
        Call SetListItem("Benin")
        Call SetListItem("Bermuda")
        Call SetListItem("Bhutan")
        Call SetListItem("Bolivia")
        Call SetListItem("Bosnia-Herzegovina")
        Call SetListItem("Botswana")
        Call SetListItem("Bouvet Island")
        Call SetListItem("Brazil")
        Call SetListItem("British Indian Ocean Territory")
        Call SetListItem("British Virgin Islands")
        Call SetListItem("Brunei")
        Call SetListItem("Bulgaria")
        Call SetListItem("Burkina Faso")
        Call SetListItem("Burma")
        Call SetListItem("Burundi")
        Call SetListItem("Cambodia")
        Call SetListItem("Cameroon")
        Call SetListItem("Canada")
        Call SetListItem("Cape Verde")
        Call SetListItem("Cayman Islands")
        Call SetListItem("Central African Republic")
        Call SetListItem("Chad")
        Call SetListItem("Chile")
        Call SetListItem("China")
        Call SetListItem("Christmas Island")
        Call SetListItem("Clipperton Island")
        Call SetListItem("Cocos (Keeling) Islands")
        Call SetListItem("Colombia")
        Call SetListItem("Comoros")
        Call SetListItem("Congo (Brazzaville)")
        Call SetListItem("Congo (Kinshasa)")
        Call SetListItem("Cooks Islands")
        Call SetListItem("Coral Sea Islands")
        Call SetListItem("Costa Rica")
        Call SetListItem("Cote d'Ivoire (Ivory Coast)")
        Call SetListItem("Croatia")
        Call SetListItem("Cuba")
        Call SetListItem("Curacao")
        Call SetListItem("Cyprus")
        Call SetListItem("Czech Republic")
        Call SetListItem("Denmark")
        Call SetListItem("Dhekelia")
        Call SetListItem("Djibouti")
        Call SetListItem("Dominica")
        Call SetListItem("Dominican Republic")
        Call SetListItem("East Timor")
        Call SetListItem("Ecuador")
        Call SetListItem("Egypt")
        Call SetListItem("El Salvador")
        Call SetListItem("Equatorial Guinea")
        Call SetListItem("Eritrea")
        Call SetListItem("Estonia")
        Call SetListItem("Ethiopia")
        Call SetListItem("Falkland Islands (Islas Malvinas)")
        Call SetListItem("Faroe Islands")
        Call SetListItem("Federated States of Micronesia")
        Call SetListItem("Fiji")
        Call SetListItem("Finland")
        Call SetListItem("France")
        Call SetListItem("French Polynesia")
        Call SetListItem("French Southern & Antarctic Lands")
        Call SetListItem("Gabon")
        Call SetListItem("The Gambia")
        Call SetListItem("Georgia")
        Call SetListItem("Germany")
        Call SetListItem("Ghana")
        Call SetListItem("Gibraltar")
        Call SetListItem("Greece")
        Call SetListItem("Greenland")
        Call SetListItem("Grenada")
        Call SetListItem("Guatemala")
        Call SetListItem("Guernsey")
        Call SetListItem("Guinea")
        Call SetListItem("Guinea-Bissau")
        Call SetListItem("Guyana")
        Call SetListItem("Haiti")
        Call SetListItem("Heard Island & McDonald Islands")
        Call SetListItem("Holy See")
        Call SetListItem("Honduras")
        Call SetListItem("Hong Kong")
        Call SetListItem("Howland Island")
        Call SetListItem("Hungary")
        Call SetListItem("Iceland")
        Call SetListItem("India")
        Call SetListItem("Indonesia")
        Call SetListItem("Iran")
        Call SetListItem("Iraq")
        Call SetListItem("Ireland")
        Call SetListItem("Israel")
        Call SetListItem("Italy")
        Call SetListItem("Jamaica")
        Call SetListItem("Jan Mayen")
        Call SetListItem("Japan")
        Call SetListItem("Jarvis Island")
        Call SetListItem("Jersey")
        Call SetListItem("Johnston Atoll")
        Call SetListItem("Jordan")
        Call SetListItem("Kazakhstan")
        Call SetListItem("Kenya")
        Call SetListItem("Kingman Reef")
        Call SetListItem("Kiribati")
' North and South Korea are different in this list due to space constraints on the IV_USWEFWksht_IDInfo1 and IV_USEF_IDInfo1 questions
        Call SetListItem("North Korea")
        Call SetListItem("South Korea")
        Call SetListItem("Kosovo")
        Call SetListItem("Kuwait")
        Call SetListItem("Kyrgyzstan")
        Call SetListItem("Laos")
        Call SetListItem("Latvia")
        Call SetListItem("Lebanon")
        Call SetListItem("Lesotho")
        Call SetListItem("Liberia")
        Call SetListItem("Libya")
        Call SetListItem("Liechtenstein")
        Call SetListItem("Lithuania")
        Call SetListItem("Luxembourg")
        Call SetListItem("Macau")
        Call SetListItem("Macedonia")
        Call SetListItem("Madagascar")
        Call SetListItem("Malawi")
        Call SetListItem("Malaysia")
        Call SetListItem("Maldives")
        Call SetListItem("Mali")
        Call SetListItem("Malta")
        Call SetListItem("Man, Isle of")
        Call SetListItem("Marshall Islands")
        Call SetListItem("Mauritania")
        Call SetListItem("Mauritius")
        Call SetListItem("Mexico")
        Call SetListItem("Midway Islands")
        Call SetListItem("Moldova")
        Call SetListItem("Monaco")
        Call SetListItem("Mongolia")
        Call SetListItem("Montenegro")
        Call SetListItem("Montserrat")
        Call SetListItem("Morocco")
        Call SetListItem("Mozambique")
        Call SetListItem("Namibia")
        Call SetListItem("Nauru")
        Call SetListItem("Navassa Island")
        Call SetListItem("Nepal")
        Call SetListItem("Netherlands")
        Call SetListItem("New Caledonia")
        Call SetListItem("New Zealand")
        Call SetListItem("Nicaragua")
        Call SetListItem("Niger")
        Call SetListItem("Nigeria")
        Call SetListItem("Niue")
        Call SetListItem("Norfolk Island")
        Call SetListItem("Norway")
        Call SetListItem("Oman")
        Call SetListItem("Other Country")
        Call SetListItem("Pakistan")
        Call SetListItem("Palau")
        Call SetListItem("Palmyra Atoll")
        Call SetListItem("Panama")
        Call SetListItem("Papua-New Guinea")
        Call SetListItem("Paracel Islands")
        Call SetListItem("Paraguay")
        Call SetListItem("Peru")
        Call SetListItem("Philippines")
        Call SetListItem("Pitcairn Islands")
        Call SetListItem("Poland")
        Call SetListItem("Portugal")
        Call SetListItem("Qatar")
        Call SetListItem("Romania")
        Call SetListItem("Russia")
        Call SetListItem("Rwanda")
        Call SetListItem("Saint Barthelemy")
        Call SetListItem("Saint Martin")
        Call SetListItem("Samoa")
        Call SetListItem("San Marino")
        Call SetListItem("Sao Tome & Principe")
        Call SetListItem("Saudi Arabia")
        Call SetListItem("Senegal")
        Call SetListItem("Serbia")
        Call SetListItem("Seychelles")
        Call SetListItem("Sierra Leone")
        Call SetListItem("Singapore")
        Call SetListItem("Sint Maarten")
        Call SetListItem("Slovakia")
        Call SetListItem("Slovenia")
        Call SetListItem("Solomon Islands")
        Call SetListItem("Somalia")
        Call SetListItem("South Africa")
' South Georgia & South Sandwich Islands is different in this list due to space constraints on the IV_USWEFWksht_IDInfo1 and IV_USEF_IDInfo1 questions
        Call SetListItem("South Georgia & Sandwich Islands")
        Call SetListItem("South Sudan")
        Call SetListItem("Spain")
        Call SetListItem("Spratly Islands")
        Call SetListItem("Sri Lanka")
        Call SetListItem("Saint Helena")
        Call SetListItem("Saint Kitts & Nevis")
        Call SetListItem("Saint Lucia Island")
        Call SetListItem("Saint Pierre & Miquelon")
        Call SetListItem("Saint Vincent & the Grenadines")
        Call SetListItem("Sudan")
        Call SetListItem("Suriname")
        Call SetListItem("Svalbard")
        Call SetListItem("Swaziland")
        Call SetListItem("Sweden")
        Call SetListItem("Switzerland")
        Call SetListItem("Syria")
        Call SetListItem("Taiwan")
        Call SetListItem("Tajikistan")
        Call SetListItem("Tanzania")
        Call SetListItem("Thailand")
        Call SetListItem("Togo")
        Call SetListItem("Tokelau")
        Call SetListItem("Tonga")
        Call SetListItem("Trinidad & Tobago")
        Call SetListItem("Tunisia")
        Call SetListItem("Turkey")
        Call SetListItem("Turkmenistan")
        Call SetListItem("Turks & Caicos Islands")
        Call SetListItem("Tuvalu")
        Call SetListItem("Uganda")
        Call SetListItem("Ukraine")
        Call SetListItem("United Arab Emirates")
        Call SetListItem("United Kingdom")
        Call SetListItem("Uruguay")
        Call SetListItem("Uzbekistan")
        Call SetListItem("Vanuatu")
        Call SetListItem("Venezuela")
        Call SetListItem("Vietnam")
        Call SetListItem("Wake Island")
        Call SetListItem("Wallis & Futuna")
        Call SetListItem("Western Sahara")
        Call SetListItem("Yemen (Aden)")
        Call SetListItem("Zambia")
        Call SetListItem("Zimbabwe")
    End If
End Function

Private Sub TPGCtryCitizenList_SetList()
    ListTitle = "TPG Country of Citizenship"
    ListItem = "United States"
    ListItem = "Afghanistan"
    ListItem = "Akrotiri"
    ListItem = "Albania"
    ListItem = "Algeria"
    ListItem = "American Samoa"
    ListItem = "Andorra"
    ListItem = "Angola"
    ListItem = "Anguilla"
    ListItem = "Antarctica"
    ListItem = "Antigua & Barbuda"
    ListItem = "Argentina"
    ListItem = "Armenia"
    ListItem = "Aruba"
    ListItem = "Ashmore & Cartier Islands"
    ListItem = "Australia"
    ListItem = "Austria"
    ListItem = "Azerbaijan"
    ListItem = "Bahamas"
    ListItem = "Bahrain"
    ListItem = "Baker Island"
    ListItem = "Bangladesh"
    ListItem = "Barbados"
    ListItem = "Belarus"
    ListItem = "Belgium"
    ListItem = "Belize"
    ListItem = "Benin"
    ListItem = "Bermuda"
    ListItem = "Bhutan"
    ListItem = "Bolivia"
    ListItem = "Bosnia-Herzegovina"
    ListItem = "Botswana"
    ListItem = "Bouvet Island"
    ListItem = "Brazil"
    ListItem = "British Indian Ocean Territory"
    ListItem = "British Virgin Islands"
    ListItem = "Brunei"
    ListItem = "Bulgaria"
    ListItem = "Burkina Faso"
    ListItem = "Burma"
    ListItem = "Burundi"
    ListItem = "Cambodia"
    ListItem = "Cameroon"
    ListItem = "Canada"
    ListItem = "Cape Verde"
    ListItem = "Cayman Islands"
    ListItem = "Central African Republic"
    ListItem = "Chad"
    ListItem = "Chile"
    ListItem = "China"
    ListItem = "Christmas Island"
    ListItem = "Clipperton Island"
    ListItem = "Cocos (Keeling) Islands"
    ListItem = "Colombia"
    ListItem = "Comoros"
    ListItem = "Congo (Brazzaville)"
    ListItem = "Congo (Kinshasa)"
    ListItem = "Cooks Islands"
    ListItem = "Coral Sea Islands"
    ListItem = "Costa Rica"
    ListItem = "Cote d'Ivoire (Ivory Coast)"
    ListItem = "Croatia"
    ListItem = "Cuba"
    ListItem = "Curacao"
    ListItem = "Cyprus"
    ListItem = "Czech Republic"
    ListItem = "Denmark"
    ListItem = "Dhekelia"
    ListItem = "Djibouti"
    ListItem = "Dominica"
    ListItem = "Dominican Republic"
    ListItem = "East Timor"
    ListItem = "Ecuador"
    ListItem = "Egypt"
    ListItem = "El Salvador"
    ListItem = "Equatorial Guinea"
    ListItem = "Eritrea"
    ListItem = "Estonia"
    ListItem = "Ethiopia"
    ListItem = "Falkland Islands (Islas Malvinas)"
    ListItem = "Faroe Islands"
    ListItem = "Federated States of Micronesia"
    ListItem = "Fiji"
    ListItem = "Finland"
    ListItem = "France"
    ListItem = "French Polynesia"
    ListItem = "French Southern & Antarctic Lands"
    ListItem = "Gabon"
    ListItem = "The Gambia"
    ListItem = "Georgia"
    ListItem = "Germany"
    ListItem = "Ghana"
    ListItem = "Gibraltar"
    ListItem = "Greece"
    ListItem = "Greenland"
    ListItem = "Grenada"
    ListItem = "Guam"
    ListItem = "Guatemala"
    ListItem = "Guernsey"
    ListItem = "Guinea"
    ListItem = "Guinea-Bissau"
    ListItem = "Guyana"
    ListItem = "Haiti"
    ListItem = "Heard Island & McDonald Islands"
    ListItem = "Holy See"
    ListItem = "Honduras"
    ListItem = "Hong Kong"
    ListItem = "Howland Island"
    ListItem = "Hungary"
    ListItem = "Iceland"
    ListItem = "India"
    ListItem = "Indonesia"
    ListItem = "Iran"
    ListItem = "Iraq"
    ListItem = "Ireland"
    ListItem = "Israel"
    ListItem = "Italy"
    ListItem = "Jamaica"
    ListItem = "JanMayen"
    ListItem = "Japan"
    ListItem = "Jarvis Island"
    ListItem = "Jersey"
    ListItem = "Johnston Atoll"
    ListItem = "Jordan"
    ListItem = "Kazakhstan"
    ListItem = "Kenya"
    ListItem = "Kingman Reef"
    ListItem = "Kiribati"
    ListItem = "Korea, Democratic People's Republic of (North)"
    ListItem = "Korea, Republic of (South)"
    ListItem = "Kosovo"
    ListItem = "Kuwait"
    ListItem = "Kyrgyzstan"
    ListItem = "Laos"
    ListItem = "Latvia"
    ListItem = "Lebanon"
    ListItem = "Lesotho"
    ListItem = "Liberia"
    ListItem = "Libya"
    ListItem = "Liechtenstein"
    ListItem = "Lithuania"
    ListItem = "Luxembourg"
    ListItem = "Macau"
    ListItem = "Macedonia"
    ListItem = "Madagascar"
    ListItem = "Malawi"
    ListItem = "Malaysia"
    ListItem = "Maldives"
    ListItem = "Mali"
    ListItem = "Malta"
    ListItem = "Man, Isle of"
    ListItem = "Marshall Islands"
    ListItem = "Mauritania"
    ListItem = "Mauritius"
    ListItem = "Mexico"
    ListItem = "Midway Islands"
    ListItem = "Moldova"
    ListItem = "Monaco"
    ListItem = "Mongolia"
    ListItem = "Montenegro"
    ListItem = "Montserrat"
    ListItem = "Morocco"
    ListItem = "Mozambique"
    ListItem = "Namibia"
    ListItem = "Nauru"
    ListItem = "Navassa Island"
    ListItem = "Nepal"
    ListItem = "Netherlands"
    ListItem = "New Caledonia"
    ListItem = "New Zealand"
    ListItem = "Nicaragua"
    ListItem = "Niger"
    ListItem = "Nigeria"
    ListItem = "Niue"
    ListItem = "Norfolk Island"
    ListItem = "Northern Marianas Islands"
    ListItem = "Norway"
    ListItem = "Oman"
    ListItem = "Other Country"
    ListItem = "Pakistan"
    ListItem = "Palau"
    ListItem = "Palmyra Atoll"
    ListItem = "Panama"
    ListItem = "Papua-New Guinea"
    ListItem = "Paracel Islands"
    ListItem = "Paraguay"
    ListItem = "Peru"
    ListItem = "Philippines"
    ListItem = "Pitcairn Islands"
    ListItem = "Poland"
    ListItem = "Portugal"
    ListItem = "Puerto Rico"
    ListItem = "Qatar"
    ListItem = "Romania"
    ListItem = "Russia"
    ListItem = "Rwanda"
    ListItem = "Saint Barthelemy"
    ListItem = "Saint Martin"
    ListItem = "Samoa"
    ListItem = "San Marino"
    ListItem = "Sao Tome & Principe"
    ListItem = "Saudi Arabia"
    ListItem = "Senegal"
    ListItem = "Serbia"
    ListItem = "Seychelles"
    ListItem = "Sierra Leone"
    ListItem = "Singapore"
    ListItem = "Sint Maarten"
    ListItem = "Slovakia"
    ListItem = "Slovenia"
    ListItem = "Solomon Islands"
    ListItem = "Somalia"
    ListItem = "South Africa"
    ListItem = "South Georgia & The South Sandwich Islands"
    ListItem = "South Sudan"
    ListItem = "Spain"
    ListItem = "Spratly Islands"
    ListItem = "Sri Lanka"
    ListItem = "Saint Helena"
    ListItem = "Saint Kitts & Nevis"
    ListItem = "Saint Lucia Island"
    ListItem = "Saint Pierre & Miquelon"
    ListItem = "Saint Vincent & the Grenadines"
    ListItem = "Sudan"
    ListItem = "Suriname"
    ListItem = "Svalbard"
    ListItem = "Swaziland"
    ListItem = "Sweden"
    ListItem = "Switzerland"
    ListItem = "Syria"
    ListItem = "Taiwan"
    ListItem = "Tajikistan"
    ListItem = "Tanzania"
    ListItem = "Thailand"
    ListItem = "Togo"
    ListItem = "Tokelau"
    ListItem = "Tonga"
    ListItem = "Trinidad & Tobago"
    ListItem = "Tunisia"
    ListItem = "Turkey"
    ListItem = "Turkmenistan"
    ListItem = "Turks & Caicos Islands"
    ListItem = "Tuvalu"
    ListItem = "Uganda"
    ListItem = "Ukraine"
    ListItem = "United Arab Emirates"
    ListItem = "United Kingdom"
    ListItem = "Uruguay"
    ListItem = "Uzbekistan"
    ListItem = "Vanuatu"
    ListItem = "Venezuela"
    ListItem = "Vietnam"
    ListItem = "Virgin Islands"
    ListItem = "Wake Island"
    ListItem = "Wallis & Futuna"
    ListItem = "Western Sahara"
    ListItem = "Yemen (Aden)"
    ListItem = "Zambia"
    ListItem = "Zimbabwe"
End Sub

Public Function BankAccountList_SetDynaList()
    Call SetListTitle("BankAccountList")
    
    Dim count As Integer
    
    count = 1
    
    Do While count <= GetAllCopies(USWBankAcct)
        If GetBool(USWBankAcct.Send, count) = True Then
            Call SetListItem(GetString(USWBankAcct.BankAcct2, count), GetString(USWBankAcct.BankAcct, count))
        End If
        count = count + 1
    Loop
    
    Call SetListItem("None", " ")
    
End Function

Private Sub StatesList_SetList()
   ListTitle = "States"
   ListItem = "AA - Military Address|AA"
   ListItem = "AE - Military Address|AE"
   ListItem = "AP - Military Address|AP"
   ListItem = "AL - Alabama|AL"
   ListItem = "AK - Alaska|AK"
   ListItem = "AS - American Samoa|AS"
   ListItem = "AZ - Arizona|AZ"
   ListItem = "AR - Arkansas|AR"
   ListItem = "CA - California|CA"
   ListItem = "CO - Colorado|CO"
   ListItem = "CT - Connecticut|CT"
   ListItem = "DE - Delaware|DE"
   ListItem = "DC - District of Columbia|DC"
   ListItem = "FM - Federated States of Micronesia|FM"
   ListItem = "FL - Florida|FL"
   ListItem = "GA - Georgia|GA"
   ListItem = "GU - Guam|GU"
   ListItem = "HI - Hawaii|HI"
   ListItem = "ID - Idaho|ID"
   ListItem = "IL - Illinois|IL"
   ListItem = "IN - Indiana|IN"
   ListItem = "IA - Iowa|IA"
   ListItem = "KS - Kansas|KS"
   ListItem = "KY - Kentucky|KY"
   ListItem = "LA - Louisiana|LA"
   ListItem = "ME - Maine|ME"
   ListItem = "MH - Marshall Islands|MH"
   ListItem = "MD - Maryland|MD"
   ListItem = "MA - Massachusetts|MA"
   ListItem = "MI - Michigan|MI"
   ListItem = "MN - Minnesota|MN"
   ListItem = "MS - Mississippi|MS"
   ListItem = "MO - Missouri|MO"
   ListItem = "MT - Montana|MT"
   ListItem = "NE - Nebraska|NE"
   ListItem = "NV - Nevada|NV"
   ListItem = "NH - New Hampshire|NH"
   ListItem = "NJ - New Jersey|NJ"
   ListItem = "NM - New Mexico|NM"
   ListItem = "NY - New York|NY"
   ListItem = "NC - North Carolina|NC"
   ListItem = "ND - North Dakota|ND"
   ListItem = "MP - Northern Mariana Islands|MP"
   ListItem = "OH - Ohio|OH"
   ListItem = "OK - Oklahoma|OK"
   ListItem = "OR - Oregon|OR"
   ListItem = "PW - Palau|PW"
   ListItem = "PA - Pennsylvania|PA"
   ListItem = "PR - Puerto Rico|PR"
   ListItem = "RI - Rhode Island|RI"
   ListItem = "SC - South Carolina|SC"
   ListItem = "SD - South Dakota|SD"
   ListItem = "TN - Tennessee|TN"
   ListItem = "TX - Texas|TX"
   ListItem = "UT - Utah|UT"
   ListItem = "VT - Vermont|VT"
   ListItem = "VA - Virginia|VA"
   ListItem = "VI - Virgin Islands|VI"
   ListItem = "WA - Washington|WA"
   ListItem = "WV - West Virginia|WV"
   ListItem = "WI - Wisconsin|WI"
   ListItem = "WY - Wyoming|WY"
   ListItem = "Foreign| "
End Sub

Private Sub NoForeignStatesList_SetList()
   ListTitle = "States"
   ListItem = "AA - Military Address|AA"
   ListItem = "AE - Military Address|AE"
   ListItem = "AP - Military Address|AP"
   ListItem = "AL - Alabama|AL"
   ListItem = "AK - Alaska|AK"
   ListItem = "AS - American Samoa|AS"
   ListItem = "AZ - Arizona|AZ"
   ListItem = "AR - Arkansas|AR"
   ListItem = "CA - California|CA"
   ListItem = "CO - Colorado|CO"
   ListItem = "CT - Connecticut|CT"
   ListItem = "DE - Delaware|DE"
   ListItem = "DC - District of Columbia|DC"
   ListItem = "FM - Federated States of Micronesia|FM"
   ListItem = "FL - Florida|FL"
   ListItem = "GA - Georgia|GA"
   ListItem = "GU - Guam|GU"
   ListItem = "HI - Hawaii|HI"
   ListItem = "ID - Idaho|ID"
   ListItem = "IL - Illinois|IL"
   ListItem = "IN - Indiana|IN"
   ListItem = "IA - Iowa|IA"
   ListItem = "KS - Kansas|KS"
   ListItem = "KY - Kentucky|KY"
   ListItem = "LA - Louisiana|LA"
   ListItem = "ME - Maine|ME"
   ListItem = "MH - Marshall Islands|MH"
   ListItem = "MD - Maryland|MD"
   ListItem = "MA - Massachusetts|MA"
   ListItem = "MI - Michigan|MI"
   ListItem = "MN - Minnesota|MN"
   ListItem = "MS - Mississippi|MS"
   ListItem = "MO - Missouri|MO"
   ListItem = "MT - Montana|MT"
   ListItem = "NE - Nebraska|NE"
   ListItem = "NV - Nevada|NV"
   ListItem = "NH - New Hampshire|NH"
   ListItem = "NJ - New Jersey|NJ"
   ListItem = "NM - New Mexico|NM"
   ListItem = "NY - New York|NY"
   ListItem = "NC - North Carolina|NC"
   ListItem = "ND - North Dakota|ND"
   ListItem = "MP - Northern Mariana Islands|MP"
   ListItem = "OH - Ohio|OH"
   ListItem = "OK - Oklahoma|OK"
   ListItem = "OR - Oregon|OR"
   ListItem = "PW - Palau|PW"
   ListItem = "PA - Pennsylvania|PA"
   ListItem = "PR - Puerto Rico|PR"
   ListItem = "RI - Rhode Island|RI"
   ListItem = "SC - South Carolina|SC"
   ListItem = "SD - South Dakota|SD"
   ListItem = "TN - Tennessee|TN"
   ListItem = "TX - Texas|TX"
   ListItem = "UT - Utah|UT"
   ListItem = "VT - Vermont|VT"
   ListItem = "VA - Virginia|VA"
   ListItem = "VI - Virgin Islands|VI"
   ListItem = "WA - Washington|WA"
   ListItem = "WV - West Virginia|WV"
   ListItem = "WI - Wisconsin|WI"
   ListItem = "WY - Wyoming|WY"
End Sub

Public Function StateEstDyna_SetDynaList()
    Dim allOptions As String
    Dim usedOptions As String
    Dim myOption As String
    Dim tempOption As String
    Dim count As Integer
    
    Call SetListTitle("StateEstDyna")
    
    'If GetBool(USW8949AttachSummary.AttStmt, ParentCopy()) = True Then
        allOptions = "Alabama|Alaska|Arizona|Arkansas|California|Colorado|Connecticut|Delaware|District of Columbia|DC (D-30)|Florida|Georgia|Hawaii|Idaho|Illinois|Indiana|Iowa|Kansas|Kentucky|Louisiana|Maine|Maryland|Massachusetts|Michigan|Minnesota|Mississippi|Missouri|Montana|Nebraska|Nevada|New Hampshire|New Jersey|New Mexico|New York|North Carolina|North Dakota|Ohio|Oklahoma|Oregon|Pennsylvania|Rhode Island|South Carolina|South Dakota|Tennessee|Texas|Utah|Vermont|Virginia|Washington|West Virginia|Wisconsin|Wyoming|Not Listed"
        usedOptions = GetString(USWEstPay.UsedOptions)
        myOption = GetString(USWStateEst.PState, GetCopy())
        
        If FindInStr(usedOptions, "Alabama") = 0 Or "Alabama" = myOption Then
            Call SetListItem("Alabama")
        End If
        If FindInStr(usedOptions, "Alaska") = 0 Or "Alaska" = myOption Then
            Call SetListItem("Alaska")
        End If
        If FindInStr(usedOptions, "Arizona") = 0 Or "Arizona" = myOption Then
            Call SetListItem("Arizona")
        End If
        If FindInStr(usedOptions, "Arkansas") = 0 Or "Arkansas" = myOption Then
            Call SetListItem("Arkansas")
        End If
        If FindInStr(usedOptions, "California") = 0 Or "California" = myOption Then
            Call SetListItem("California")
        End If
        If FindInStr(usedOptions, "Colorado") = 0 Or "Colorado" = myOption Then
            Call SetListItem("Colorado")
        End If
        If FindInStr(usedOptions, "Connecticut") = 0 Or "Connecticut" = myOption Then
            Call SetListItem("Connecticut")
        End If
        If FindInStr(usedOptions, "Delaware") = 0 Or "Delaware" = myOption Then
            Call SetListItem("Delaware")
        End If
        If FindInStr(usedOptions, "District of Columbia") = 0 Or "District of Columbia" = myOption Then
            Call SetListItem("District of Columbia")
        End If
        If FindInStr(usedOptions, "DC (D-30)") = 0 Or "DC (D-30)" = myOption Then
            Call SetListItem("DC (D-30)")
        End If
        If FindInStr(usedOptions, "Florida") = 0 Or "Florida" = myOption Then
            Call SetListItem("Florida")
        End If
        If FindInStr(usedOptions, "Georgia") = 0 Or "Georgia" = myOption Then
            Call SetListItem("Georgia")
        End If
        If FindInStr(usedOptions, "Hawaii") = 0 Or "Hawaii" = myOption Then
            Call SetListItem("Hawaii")
        End If
        If FindInStr(usedOptions, "Idaho") = 0 Or "Idaho" = myOption Then
            Call SetListItem("Idaho")
        End If
        If FindInStr(usedOptions, "Illinois") = 0 Or "Illinois" = myOption Then
            Call SetListItem("Illinois")
        End If
        If FindInStr(usedOptions, "Indiana") = 0 Or "Indiana" = myOption Then
            Call SetListItem("Indiana")
        End If
        If FindInStr(usedOptions, "Iowa") = 0 Or "Iowa" = myOption Then
            Call SetListItem("Iowa")
        End If
        If FindInStr(usedOptions, "Kansas") = 0 Or "Kansas" = myOption Then
            Call SetListItem("Kansas")
        End If
        If FindInStr(usedOptions, "Kentucky") = 0 Or "Kentucky" = myOption Then
            Call SetListItem("Kentucky")
        End If
        If FindInStr(usedOptions, "Louisiana") = 0 Or "Louisiana" = myOption Then
            Call SetListItem("Louisiana")
        End If
        If FindInStr(usedOptions, "Maine") = 0 Or "Maine" = myOption Then
            Call SetListItem("Maine")
        End If
        If FindInStr(usedOptions, "Maryland") = 0 Or "Maryland" = myOption Then
            Call SetListItem("Maryland")
        End If
        If FindInStr(usedOptions, "Massachusetts") = 0 Or "Massachusetts" = myOption Then
            Call SetListItem("Massachusetts")
        End If
        If FindInStr(usedOptions, "Michigan") = 0 Or "Michigan" = myOption Then
            Call SetListItem("Michigan")
        End If
        If FindInStr(usedOptions, "Minnesota") = 0 Or "Minnesota" = myOption Then
            Call SetListItem("Minnesota")
        End If
        If FindInStr(usedOptions, "Mississippi") = 0 Or "Mississippi" = myOption Then
            Call SetListItem("Mississippi")
        End If
        If FindInStr(usedOptions, "Missouri") = 0 Or "Missouri" = myOption Then
            Call SetListItem("Missouri")
        End If
        If FindInStr(usedOptions, "Montana") = 0 Or "Montana" = myOption Then
            Call SetListItem("Montana")
        End If
        If FindInStr(usedOptions, "Nebraska") = 0 Or "Nebraska" = myOption Then
            Call SetListItem("Nebraska")
        End If
        If FindInStr(usedOptions, "Nevada") = 0 Or "Nevada" = myOption Then
            Call SetListItem("Nevada")
        End If
        If FindInStr(usedOptions, "New Hampshire") = 0 Or "New Hampshire" = myOption Then
            Call SetListItem("New Hampshire")
        End If
        If FindInStr(usedOptions, "New Jersey") = 0 Or "New Jersey" = myOption Then
            Call SetListItem("New Jersey")
        End If
        If FindInStr(usedOptions, "New Mexico") = 0 Or "New Mexico" = myOption Then
            Call SetListItem("New Mexico")
        End If
        If FindInStr(usedOptions, "New York") = 0 Or "New York" = myOption Then
            Call SetListItem("New York")
        End If
        If FindInStr(usedOptions, "North Carolina") = 0 Or "North Carolina" = myOption Then
            Call SetListItem("North Carolina")
        End If
        If FindInStr(usedOptions, "North Dakota") = 0 Or "North Dakota" = myOption Then
            Call SetListItem("North Dakota")
        End If
        If FindInStr(usedOptions, "Ohio") = 0 Or "Ohio" = myOption Then
            Call SetListItem("Ohio")
        End If
        If FindInStr(usedOptions, "Oklahoma") = 0 Or "Oklahoma" = myOption Then
            Call SetListItem("Oklahoma")
        End If
        If FindInStr(usedOptions, "Oregon") = 0 Or "Oregon" = myOption Then
            Call SetListItem("Oregon")
        End If
        If FindInStr(usedOptions, "Pennsylvania") = 0 Or "Pennsylvania" = myOption Then
            Call SetListItem("Pennsylvania")
        End If
        If FindInStr(usedOptions, "Rhode Island") = 0 Or "Rhode Island" = myOption Then
            Call SetListItem("Rhode Island")
        End If
        If FindInStr(usedOptions, "South Carolina") = 0 Or "South Carolina" = myOption Then
            Call SetListItem("South Carolina")
        End If
        If FindInStr(usedOptions, "South Dakota") = 0 Or "South Dakota" = myOption Then
            Call SetListItem("South Dakota")
        End If
        If FindInStr(usedOptions, "Tennessee") = 0 Or "Tennessee" = myOption Then
            Call SetListItem("Tennessee")
        End If
        If FindInStr(usedOptions, "Texas") = 0 Or "Texas" = myOption Then
            Call SetListItem("Texas")
        End If
        If FindInStr(usedOptions, "Utah") = 0 Or "Utah" = myOption Then
            Call SetListItem("Utah")
        End If
        If FindInStr(usedOptions, "Vermont") = 0 Or "Vermont" = myOption Then
            Call SetListItem("Vermont")
        End If
        If FindInStr(usedOptions, ",Virginia") = 0 Or "Virginia" = myOption Then
            Call SetListItem("Virginia")
        End If
        If FindInStr(usedOptions, "Washington") = 0 Or "Washington" = myOption Then
            Call SetListItem("Washington")
        End If
        If FindInStr(usedOptions, "West Virginia") = 0 Or "West Virginia" = myOption Then
            Call SetListItem("West Virginia")
        End If
        If FindInStr(usedOptions, "Wisconsin") = 0 Or "Wisconsin" = myOption Then
            Call SetListItem("Wisconsin")
        End If
        If FindInStr(usedOptions, "Wyoming") = 0 Or "Wyoming" = myOption Then
            Call SetListItem("Wyoming")
        End If
        Call SetListItem("Not Listed")
    'Else
   '     Call SetListItem("None", " ")
   ' End If
End Function

Public Function ForeignCode(strForCtry As String) As String
' Function to calculate the country code based on the country name
' Vefified with 2014 Schema Version 3.0 - No Changes - LS 11/18/2014

    If strForCtry = "Afghanistan" Then
        ForeignCode = "AF"
    ElseIf strForCtry = "Akrotiri" Then
        ForeignCode = "AX"
    ElseIf strForCtry = "Albania" Then
        ForeignCode = "AL"
    ElseIf strForCtry = "Algeria" Then
        ForeignCode = "AG"
    ElseIf strForCtry = "Andorra" Then
        ForeignCode = "AN"
    ElseIf strForCtry = "Angola" Then
        ForeignCode = "AO"
    ElseIf strForCtry = "Anguilla" Then
        ForeignCode = "AV"
    ElseIf strForCtry = "Antarctica" Then
        ForeignCode = "AY"
    ElseIf strForCtry = "Antigua & Barbuda" Then
        ForeignCode = "AC"
    ElseIf strForCtry = "Argentina" Then
        ForeignCode = "AR"
    ElseIf strForCtry = "Armenia" Then
        ForeignCode = "AM"
    ElseIf strForCtry = "Aruba" Then
        ForeignCode = "AA"
    ElseIf strForCtry = "Ashmore & Cartier Islands" Then
        ForeignCode = "AT"
    ElseIf strForCtry = "Australia" Then
        ForeignCode = "AS"
    ElseIf strForCtry = "Austria" Then
        ForeignCode = "AU"
    ElseIf strForCtry = "Azerbaijan" Then
        ForeignCode = "AJ"
    ElseIf strForCtry = "Bahamas" Then
        ForeignCode = "BF"
    ElseIf strForCtry = "Bahrain" Then
        ForeignCode = "BA"
    ElseIf strForCtry = "Baker Island" Then
        ForeignCode = "FQ"
    ElseIf strForCtry = "Bangladesh" Then
        ForeignCode = "BG"
    ElseIf strForCtry = "Barbados" Then
        ForeignCode = "BB"
    ElseIf strForCtry = "Belarus" Then
        ForeignCode = "BO"
    ElseIf strForCtry = "Belgium" Then
        ForeignCode = "BE"
    ElseIf strForCtry = "Belize" Then
        ForeignCode = "BH"
    ElseIf strForCtry = "Benin" Then
        ForeignCode = "BN"
    ElseIf strForCtry = "Bermuda" Then
        ForeignCode = "BD"
    ElseIf strForCtry = "Bhutan" Then
        ForeignCode = "BT"
    ElseIf strForCtry = "Bolivia" Then
        ForeignCode = "BL"
    ElseIf strForCtry = "Bosnia-Herzegovina" Then
        ForeignCode = "BK"
    ElseIf strForCtry = "Botswana" Then
        ForeignCode = "BC"
    ElseIf strForCtry = "Bouvet Island" Then
        ForeignCode = "BV"
    ElseIf strForCtry = "Brazil" Then
        ForeignCode = "BR"
    ElseIf strForCtry = "British Indian Ocean Territory" Then
        ForeignCode = "IO"
    ElseIf strForCtry = "British Virgin Islands" Then
        ForeignCode = "VI"
    ElseIf strForCtry = "Brunei" Then
        ForeignCode = "BX"
    ElseIf strForCtry = "Bulgaria" Then
        ForeignCode = "BU"
    ElseIf strForCtry = "Burkina Faso" Then
        ForeignCode = "UV"
    ElseIf strForCtry = "Burma" Then
        ForeignCode = "BM"
    ElseIf strForCtry = "Burundi" Then
        ForeignCode = "BY"
    ElseIf strForCtry = "Cambodia" Then
        ForeignCode = "CB"
    ElseIf strForCtry = "Cameroon" Then
        ForeignCode = "CM"
    ElseIf strForCtry = "Canada" Then
        ForeignCode = "CA"
    ElseIf strForCtry = "Cape Verde" Then
        ForeignCode = "CV"
    ElseIf strForCtry = "Cayman Islands" Then
        ForeignCode = "CJ"
    ElseIf strForCtry = "Central African Republic" Then
        ForeignCode = "CT"
    ElseIf strForCtry = "Chad" Then
        ForeignCode = "CD"
    ElseIf strForCtry = "Chile" Then
        ForeignCode = "CI"
    ElseIf strForCtry = "China" Then
        ForeignCode = "CH"
    ElseIf strForCtry = "Christmas Island" Then
        ForeignCode = "KT"
    ElseIf strForCtry = "Clipperton Island" Then
        ForeignCode = "IP"
    ElseIf strForCtry = "Cocos (Keeling) Islands" Then
        ForeignCode = "CK"
    ElseIf strForCtry = "Colombia" Then
        ForeignCode = "CO"
    ElseIf strForCtry = "Comoros" Then
        ForeignCode = "CN"
    ElseIf strForCtry = "Congo (Brazzaville)" Then
        ForeignCode = "CF"
    ElseIf strForCtry = "Congo (Kinshasa)" Then
        ForeignCode = "CG"
    ElseIf strForCtry = "Cooks Islands" Then
        ForeignCode = "CW"
    ElseIf strForCtry = "Coral Sea Islands" Then
        ForeignCode = "CR"
    ElseIf strForCtry = "Costa Rica" Then
        ForeignCode = "CS"
    ElseIf strForCtry = "Cote d'Ivoire (Ivory Coast)" Then
        ForeignCode = "IV"
    ElseIf strForCtry = "Croatia" Then
        ForeignCode = "HR"
    ElseIf strForCtry = "Cuba" Then
        ForeignCode = "CU"
    ElseIf strForCtry = "Curacao" Then
        ForeignCode = "UC"
    ElseIf strForCtry = "Cyprus" Then
        ForeignCode = "CY"
    ElseIf strForCtry = "Czech Republic" Then
        ForeignCode = "EZ"
    ElseIf strForCtry = "Denmark" Then
        ForeignCode = "DA"
    ElseIf strForCtry = "Dhekelia" Then
        ForeignCode = "DX"
    ElseIf strForCtry = "Djibouti" Then
        ForeignCode = "DJ"
    ElseIf strForCtry = "Dominica" Then
        ForeignCode = "DO"
    ElseIf strForCtry = "Dominican Republic" Then
        ForeignCode = "DR"
    ElseIf strForCtry = "East Timor" Then
        ForeignCode = "TT"
    ElseIf strForCtry = "Ecuador" Then
        ForeignCode = "EC"
    ElseIf strForCtry = "Egypt" Then
        ForeignCode = "EG"
    ElseIf strForCtry = "El Salvador" Then
        ForeignCode = "ES"
    ElseIf strForCtry = "Equatorial Guinea" Then
        ForeignCode = "EK"
    ElseIf strForCtry = "Eritrea" Then
        ForeignCode = "ER"
    ElseIf strForCtry = "Estonia" Then
        ForeignCode = "EN"
    ElseIf strForCtry = "Ethiopia" Then
        ForeignCode = "ET"
    ElseIf strForCtry = "Falkland Islands (Islas Malvinas)" Then
        ForeignCode = "FK"
    ElseIf strForCtry = "Faroe Islands" Then
        ForeignCode = "FO"
    ElseIf strForCtry = "Federated States of Micronesia" Then
        ForeignCode = "FM"
    ElseIf strForCtry = "Fiji" Then
        ForeignCode = "FJ"
    ElseIf strForCtry = "Finland" Then
        ForeignCode = "FI"
    ElseIf strForCtry = "France" Then
        ForeignCode = "FR"
    ElseIf strForCtry = "French Polynesia" Then
        ForeignCode = "FP"
    ElseIf strForCtry = "French Southern & Antarctic Lands" Then
        ForeignCode = "FS"
    ElseIf strForCtry = "Gabon" Then
        ForeignCode = "GB"
    End If
    
    If strForCtry = "The Gambia" Then
        ForeignCode = "GA"
    ElseIf strForCtry = "Georgia" Then
        ForeignCode = "GG"
    ElseIf strForCtry = "Germany" Then
        ForeignCode = "GM"
    ElseIf strForCtry = "Ghana" Then
        ForeignCode = "GH"
    ElseIf strForCtry = "Gibraltar" Then
        ForeignCode = "GI"
    ElseIf strForCtry = "Greece" Then
        ForeignCode = "GR"
    ElseIf strForCtry = "Greenland" Then
        ForeignCode = "GL"
    ElseIf strForCtry = "Grenada" Then
        ForeignCode = "GJ"
    ElseIf strForCtry = "Guatemala" Then
        ForeignCode = "GT"
    ElseIf strForCtry = "Guernsey" Then
        ForeignCode = "GK"
    ElseIf strForCtry = "Guinea" Then
        ForeignCode = "GV"
    ElseIf strForCtry = "Guinea-Bissau" Then
        ForeignCode = "PU"
    ElseIf strForCtry = "Guyana" Then
        ForeignCode = "GY"
    ElseIf strForCtry = "Haiti" Then
        ForeignCode = "HA"
    ElseIf strForCtry = "Heard Island & McDonald Islands" Then
        ForeignCode = "HM"
    ElseIf strForCtry = "Holy See" Then
        ForeignCode = "VT"
    ElseIf strForCtry = "Honduras" Then
        ForeignCode = "HO"
    ElseIf strForCtry = "Hong Kong" Then
        ForeignCode = "HK"
    ElseIf strForCtry = "Howland Island" Then
        ForeignCode = "HQ"
    ElseIf strForCtry = "Hungary" Then
        ForeignCode = "HU"
    ElseIf strForCtry = "Iceland" Then
        ForeignCode = "IC"
    ElseIf strForCtry = "India" Then
        ForeignCode = "IN"
    ElseIf strForCtry = "Indonesia" Then
        ForeignCode = "ID"
    ElseIf strForCtry = "Iran" Then
        ForeignCode = "IR"
    ElseIf strForCtry = "Iraq" Then
        ForeignCode = "IZ"
    ElseIf strForCtry = "Ireland" Then
        ForeignCode = "EI"
    ElseIf strForCtry = "Israel" Then
        ForeignCode = "IS"
    ElseIf strForCtry = "Italy" Then
        ForeignCode = "IT"
    ElseIf strForCtry = "Jamaica" Then
        ForeignCode = "JM"
    ElseIf strForCtry = "Jan Mayen" Then
        ForeignCode = "JN"
    ElseIf strForCtry = "Japan" Then
        ForeignCode = "JA"
    ElseIf strForCtry = "Jarvis Island" Then
        ForeignCode = "DQ"
    ElseIf strForCtry = "Jersey" Then
        ForeignCode = "JE"
    ElseIf strForCtry = "Johnston Atoll" Then
        ForeignCode = "JQ"
    ElseIf strForCtry = "Jordan" Then
        ForeignCode = "JO"
    ElseIf strForCtry = "Kazakhstan" Then
        ForeignCode = "KZ"
    ElseIf strForCtry = "Kenya" Then
        ForeignCode = "KE"
    ElseIf strForCtry = "Kingman Reef" Then
        ForeignCode = "KQ"
    ElseIf strForCtry = "Kiribati" Then
        ForeignCode = "KR"
    ElseIf strForCtry = "Korea, Democratic People's Republic of (North)" Then
        ForeignCode = "KN"
    ElseIf strForCtry = "Korea, Republic of (South)" Then
        ForeignCode = "KS"
    ElseIf strForCtry = "Kosovo" Then
        ForeignCode = "KV"
    End If
    
    If strForCtry = "Kuwait" Then
        ForeignCode = "KU"
    ElseIf strForCtry = "Kyrgyzstan" Then
        ForeignCode = "KG"
    ElseIf strForCtry = "Laos" Then
        ForeignCode = "LA"
    ElseIf strForCtry = "Latvia" Then
        ForeignCode = "LG"
    ElseIf strForCtry = "Lebanon" Then
        ForeignCode = "LE"
    ElseIf strForCtry = "Lesotho" Then
        ForeignCode = "LT"
    ElseIf strForCtry = "Liberia" Then
        ForeignCode = "LI"
    ElseIf strForCtry = "Libya" Then
        ForeignCode = "LY"
    ElseIf strForCtry = "Liechtenstein" Then
        ForeignCode = "LS"
    ElseIf strForCtry = "Lithuania" Then
        ForeignCode = "LH"
    ElseIf strForCtry = "Luxembourg" Then
        ForeignCode = "LU"
    ElseIf strForCtry = "Macau" Then
        ForeignCode = "MC"
    ElseIf strForCtry = "Macedonia" Then
        ForeignCode = "MK"
    ElseIf strForCtry = "Madagascar" Then
        ForeignCode = "MA"
    ElseIf strForCtry = "Malawi" Then
        ForeignCode = "MI"
    ElseIf strForCtry = "Malaysia" Then
        ForeignCode = "MY"
    ElseIf strForCtry = "Maldives" Then
        ForeignCode = "MV"
    ElseIf strForCtry = "Mali" Then
        ForeignCode = "ML"
    ElseIf strForCtry = "Malta" Then
        ForeignCode = "MT"
    ElseIf strForCtry = "Man, Isle of" Then
        ForeignCode = "IM"
    ElseIf strForCtry = "Marshall Islands" Then
        ForeignCode = "RM"
    ElseIf strForCtry = "Mauritania" Then
        ForeignCode = "MR"
    ElseIf strForCtry = "Mauritius" Then
        ForeignCode = "MP"
    ElseIf strForCtry = "Mexico" Then
        ForeignCode = "MX"
    ElseIf strForCtry = "Midway Islands" Then
        ForeignCode = "MQ"
    ElseIf strForCtry = "Moldova" Then
        ForeignCode = "MD"
    ElseIf strForCtry = "Monaco" Then
        ForeignCode = "MN"
    ElseIf strForCtry = "Mongolia" Then
        ForeignCode = "MG"
    ElseIf strForCtry = "Montenegro" Then
        ForeignCode = "MJ"
    ElseIf strForCtry = "Montserrat" Then
        ForeignCode = "MH"
    ElseIf strForCtry = "Morocco" Then
        ForeignCode = "MO"
    ElseIf strForCtry = "Mozambique" Then
        ForeignCode = "MZ"
    ElseIf strForCtry = "Namibia" Then
        ForeignCode = "WA"
    ElseIf strForCtry = "Nauru" Then
        ForeignCode = "NR"
    ElseIf strForCtry = "Navassa Island" Then
        ForeignCode = "BQ"
    ElseIf strForCtry = "Nepal" Then
        ForeignCode = "NP"
    ElseIf strForCtry = "Netherlands" Then
        ForeignCode = "NL"
    ElseIf strForCtry = "New Caledonia" Then
        ForeignCode = "NC"
    ElseIf strForCtry = "New Zealand" Then
        ForeignCode = "NZ"
    ElseIf strForCtry = "Nicaragua" Then
        ForeignCode = "NU"
    ElseIf strForCtry = "Niger" Then
        ForeignCode = "NG"
    End If
    
    If strForCtry = "Nigeria" Then
        ForeignCode = "NI"
    ElseIf strForCtry = "Niue" Then
        ForeignCode = "NE"
    ElseIf strForCtry = "Norfolk Island" Then
        ForeignCode = "NF"
    ElseIf strForCtry = "Norway" Then
        ForeignCode = "NO"
    ElseIf strForCtry = "Oman" Then
        ForeignCode = "MU"
    ElseIf strForCtry = "Other Country" Then
        ForeignCode = "OC"
    ElseIf strForCtry = "Pakistan" Then
        ForeignCode = "PK"
    ElseIf strForCtry = "Palau" Then
        ForeignCode = "PS"
    ElseIf strForCtry = "Palmyra Atoll" Then
        ForeignCode = "LQ"
    ElseIf strForCtry = "Panama" Then
        ForeignCode = "PM"
    ElseIf strForCtry = "Papua-New Guinea" Then
        ForeignCode = "PP"
    ElseIf strForCtry = "Paracel Islands" Then
        ForeignCode = "PF"
    ElseIf strForCtry = "Paraguay" Then
        ForeignCode = "PA"
    ElseIf strForCtry = "Peru" Then
        ForeignCode = "PE"
    ElseIf strForCtry = "Philippines" Then
        ForeignCode = "RP"
    ElseIf strForCtry = "Pitcairn Islands" Then
        ForeignCode = "PC"
    ElseIf strForCtry = "Poland" Then
        ForeignCode = "PL"
    ElseIf strForCtry = "Portugal" Then
        ForeignCode = "PO"
    ElseIf strForCtry = "Qatar" Then
        ForeignCode = "QA"
    ElseIf strForCtry = "Romania" Then
        ForeignCode = "RO"
    ElseIf strForCtry = "Russia" Then
        ForeignCode = "RS"
    ElseIf strForCtry = "Rwanda" Then
        ForeignCode = "RW"
    ElseIf strForCtry = "Saint Barthelemy" Then
        ForeignCode = "TB"
    ElseIf strForCtry = "Saint Martin" Then
        ForeignCode = "RN"
    ElseIf strForCtry = "Samoa" Then
        ForeignCode = "WS"
    ElseIf strForCtry = "San Marino" Then
        ForeignCode = "SM"
    ElseIf strForCtry = "Sao Tome & Principe" Then
        ForeignCode = "TP"
    ElseIf strForCtry = "Saudi Arabia" Then
        ForeignCode = "SA"
    ElseIf strForCtry = "Senegal" Then
        ForeignCode = "SG"
    ElseIf strForCtry = "Serbia" Then
        ForeignCode = "RI"
    ElseIf strForCtry = "Seychelles" Then
        ForeignCode = "SE"
    ElseIf strForCtry = "Sierra Leone" Then
        ForeignCode = "SL"
    ElseIf strForCtry = "Singapore" Then
        ForeignCode = "SN"
    ElseIf strForCtry = "Sint Maarten" Then
        ForeignCode = "NN"
    ElseIf strForCtry = "Slovakia" Then
        ForeignCode = "LO"
    ElseIf strForCtry = "Slovenia" Then
        ForeignCode = "SI"
    ElseIf strForCtry = "Solomon Islands" Then
        ForeignCode = "BP"
    ElseIf strForCtry = "Somalia" Then
        ForeignCode = "SO"
    ElseIf strForCtry = "South Africa" Then
        ForeignCode = "SF"
    ElseIf strForCtry = "South Georgia & The South Sandwich Islands" Then
        ForeignCode = "SX"
    ElseIf strForCtry = "South Sudan" Then
        ForeignCode = "OD"
    ElseIf strForCtry = "Spain" Then
        ForeignCode = "SP"
    ElseIf strForCtry = "Spratly Islands" Then
        ForeignCode = "PG"
    ElseIf strForCtry = "Sri Lanka" Then
        ForeignCode = "CE"
    ElseIf strForCtry = "Saint Helena" Then
        ForeignCode = "SH"
    ElseIf strForCtry = "Saint Kitts & Nevis" Then
        ForeignCode = "SC"
    ElseIf strForCtry = "Saint Lucia Island" Then
        ForeignCode = "ST"
    ElseIf strForCtry = "Saint Pierre & Miquelon" Then
        ForeignCode = "SB"
    ElseIf strForCtry = "Saint Vincent & the Grenadines" Then
        ForeignCode = "VC"
    ElseIf strForCtry = "Sudan" Then
        ForeignCode = "SU"
    ElseIf strForCtry = "Suriname" Then
        ForeignCode = "NS"
    ElseIf strForCtry = "Svalbard" Then
        ForeignCode = "SV"
    ElseIf strForCtry = "Swaziland" Then
        ForeignCode = "WZ"
    ElseIf strForCtry = "Sweden" Then
        ForeignCode = "SW"
    ElseIf strForCtry = "Switzerland" Then
        ForeignCode = "SZ"
    ElseIf strForCtry = "Syria" Then
        ForeignCode = "SY"
    ElseIf strForCtry = "Taiwan" Then
        ForeignCode = "TW"
    ElseIf strForCtry = "Tajikistan" Then
        ForeignCode = "TI"
    ElseIf strForCtry = "Tanzania" Then
        ForeignCode = "TZ"
    ElseIf strForCtry = "Thailand" Then
        ForeignCode = "TH"
    ElseIf strForCtry = "Togo" Then
        ForeignCode = "TO"
    ElseIf strForCtry = "Tokelau" Then
        ForeignCode = "TL"
    ElseIf strForCtry = "Tonga" Then
        ForeignCode = "TN"
    ElseIf strForCtry = "Trinidad & Tobago" Then
        ForeignCode = "TD"
    ElseIf strForCtry = "Tunisia" Then
        ForeignCode = "TS"
    ElseIf strForCtry = "Turkey" Then
        ForeignCode = "TU"
    ElseIf strForCtry = "Turkmenistan" Then
        ForeignCode = "TX"
    ElseIf strForCtry = "Turks & Caicos Islands" Then
        ForeignCode = "TK"
    ElseIf strForCtry = "Tuvalu" Then
        ForeignCode = "TV"
    ElseIf strForCtry = "Uganda" Then
        ForeignCode = "UG"
    ElseIf strForCtry = "Ukraine" Then
        ForeignCode = "UP"
    ElseIf strForCtry = "United Arab Emirates" Then
        ForeignCode = "AE"
    ElseIf strForCtry = "United Kingdom" Then
        ForeignCode = "UK"
    ElseIf strForCtry = "Uruguay" Then
        ForeignCode = "UY"
    ElseIf strForCtry = "Uzbekistan" Then
        ForeignCode = "UZ"
    ElseIf strForCtry = "Vanuatu" Then
        ForeignCode = "NH"
    ElseIf strForCtry = "Venezuela" Then
        ForeignCode = "VE"
    ElseIf strForCtry = "Vietnam" Then
        ForeignCode = "VM"
    ElseIf strForCtry = "Wake Island" Then
        ForeignCode = "WQ"
    ElseIf strForCtry = "Wallis & Futuna" Then
        ForeignCode = "WF"
    ElseIf strForCtry = "Western Sahara" Then
        ForeignCode = "WI"
    ElseIf strForCtry = "Yemen (Aden)" Then
        ForeignCode = "YM"
    ElseIf strForCtry = "Zambia" Then
        ForeignCode = "ZA"
    ElseIf strForCtry = "Zimbabwe" Then
        ForeignCode = "ZI"
' Codes below necessary for FTCCountry List
    ElseIf strForCtry = "American Samoa" Then
        ForeignCode = "AQ"
    ElseIf strForCtry = "Guam" Then
        ForeignCode = "GQ"
    ElseIf strForCtry = "Northern Marianas Islands" Then
        ForeignCode = "CQ"
    ElseIf strForCtry = "Puerto Rico" Then
        ForeignCode = "RQ"
    ElseIf strForCtry = "Virgin Islands" Then
        ForeignCode = "VQ"
    ElseIf strForCtry = "Unknown Country" Then
        ForeignCode = "OC"
    ElseIf strForCtry = "Various" Then
        ForeignCode = "OC"
    ElseIf strForCtry = "All other countries" Then
        ForeignCode = "OC"
    ElseIf strForCtry = "United States" Then
        ForeignCode = "US"
    ElseIf strForCtry <> "" Then
        ForeignCode = "OC"
    End If

        ForeignCode = ""

End Function
    
Private Sub ForeignCountryList_SetList()
' Primary foreign country list
' Vefified with 2014 Schema Version 3.0 - No Changes - LS 11/18/2014

    ListTitle = "Foreign Countries"
    ListItem = "Afghanistan"
    ListItem = "Akrotiri"
    ListItem = "Albania"
    ListItem = "Algeria"
    ListItem = "Andorra"
    ListItem = "Angola"
    ListItem = "Anguilla"
    ListItem = "Antarctica"
    ListItem = "Antigua & Barbuda"
    ListItem = "Argentina"
    ListItem = "Armenia"
    ListItem = "Aruba"
    ListItem = "Ashmore & Cartier Islands"
    ListItem = "Australia"
    ListItem = "Austria"
    ListItem = "Azerbaijan"
    ListItem = "Bahamas"
    ListItem = "Bahrain"
    ListItem = "Baker Island"
    ListItem = "Bangladesh"
    ListItem = "Barbados"
    ListItem = "Belarus"
    ListItem = "Belgium"
    ListItem = "Belize"
    ListItem = "Benin"
    ListItem = "Bermuda"
    ListItem = "Bhutan"
    ListItem = "Bolivia"
    ListItem = "Bosnia-Herzegovina"
    ListItem = "Botswana"
    ListItem = "Bouvet Island"
    ListItem = "Brazil"
    ListItem = "British Indian Ocean Territory"
    ListItem = "British Virgin Islands"
    ListItem = "Brunei"
    ListItem = "Bulgaria"
    ListItem = "Burkina Faso"
    ListItem = "Burma"
    ListItem = "Burundi"
    ListItem = "Cambodia"
    ListItem = "Cameroon"
    ListItem = "Canada"
    ListItem = "Cape Verde"
    ListItem = "Cayman Islands"
    ListItem = "Central African Republic"
    ListItem = "Chad"
    ListItem = "Chile"
    ListItem = "China"
    ListItem = "Christmas Island"
    ListItem = "Clipperton Island"
    ListItem = "Cocos (Keeling) Islands"
    ListItem = "Colombia"
    ListItem = "Comoros"
    ListItem = "Congo (Brazzaville)"
    ListItem = "Congo (Kinshasa)"
    ListItem = "Cooks Islands"
    ListItem = "Coral Sea Islands"
    ListItem = "Costa Rica"
    ListItem = "Cote d'Ivoire (Ivory Coast)"
    ListItem = "Croatia"
    ListItem = "Cuba"
    ListItem = "Curacao"
    ListItem = "Cyprus"
    ListItem = "Czech Republic"
    ListItem = "Denmark"
    ListItem = "Dhekelia"
    ListItem = "Djibouti"
    ListItem = "Dominica"
    ListItem = "Dominican Republic"
    ListItem = "East Timor"
    ListItem = "Ecuador"
    ListItem = "Egypt"
    ListItem = "El Salvador"
    ListItem = "Equatorial Guinea"
    ListItem = "Eritrea"
    ListItem = "Estonia"
    ListItem = "Ethiopia"
    ListItem = "Falkland Islands (Islas Malvinas)"
    ListItem = "Faroe Islands"
    ListItem = "Federated States of Micronesia"
    ListItem = "Fiji"
    ListItem = "Finland"
    ListItem = "France"
    ListItem = "French Polynesia"
    ListItem = "French Southern & Antarctic Lands"
    ListItem = "Gabon"
    ListItem = "The Gambia"
    ListItem = "Georgia"
    ListItem = "Germany"
    ListItem = "Ghana"
    ListItem = "Gibraltar"
    ListItem = "Greece"
    ListItem = "Greenland"
    ListItem = "Grenada"
    ListItem = "Guatemala"
    ListItem = "Guernsey"
    ListItem = "Guinea"
    ListItem = "Guinea-Bissau"
    ListItem = "Guyana"
    ListItem = "Haiti"
    ListItem = "Heard Island & McDonald Islands"
    ListItem = "Holy See"
    ListItem = "Honduras"
    ListItem = "Hong Kong"
    ListItem = "Howland Island"
    ListItem = "Hungary"
    ListItem = "Iceland"
    ListItem = "India"
    ListItem = "Indonesia"
    ListItem = "Iran"
    ListItem = "Iraq"
    ListItem = "Ireland"
    ListItem = "Israel"
    ListItem = "Italy"
    ListItem = "Jamaica"
    ListItem = "Jan Mayen"
    ListItem = "Japan"
    ListItem = "Jarvis Island"
    ListItem = "Jersey"
    ListItem = "Johnston Atoll"
    ListItem = "Jordan"
    ListItem = "Kazakhstan"
    ListItem = "Kenya"
    ListItem = "Kingman Reef"
    ListItem = "Kiribati"
    ListItem = "Korea, Democratic People's Republic of (North)"
    ListItem = "Korea, Republic of (South)"
    ListItem = "Kosovo"
    ListItem = "Kuwait"
    ListItem = "Kyrgyzstan"
    ListItem = "Laos"
    ListItem = "Latvia"
    ListItem = "Lebanon"
    ListItem = "Lesotho"
    ListItem = "Liberia"
    ListItem = "Libya"
    ListItem = "Liechtenstein"
    ListItem = "Lithuania"
    ListItem = "Luxembourg"
    ListItem = "Macau"
    ListItem = "Macedonia"
    ListItem = "Madagascar"
    ListItem = "Malawi"
    ListItem = "Malaysia"
    ListItem = "Maldives"
    ListItem = "Mali"
    ListItem = "Malta"
    ListItem = "Man, Isle of"
    ListItem = "Marshall Islands"
    ListItem = "Mauritania"
    ListItem = "Mauritius"
    ListItem = "Mexico"
    ListItem = "Midway Islands"
    ListItem = "Moldova"
    ListItem = "Monaco"
    ListItem = "Mongolia"
    ListItem = "Montenegro"
    ListItem = "Montserrat"
    ListItem = "Morocco"
    ListItem = "Mozambique"
    ListItem = "Namibia"
    ListItem = "Nauru"
    ListItem = "Navassa Island"
    ListItem = "Nepal"
    ListItem = "Netherlands"
    ListItem = "New Caledonia"
    ListItem = "New Zealand"
    ListItem = "Nicaragua"
    ListItem = "Niger"
    ListItem = "Nigeria"
    ListItem = "Niue"
    ListItem = "Norfolk Island"
    ListItem = "Northern Marianas Islands"
    ListItem = "Norway"
    ListItem = "Oman"
    ListItem = "Other Country"
    ListItem = "Pakistan"
    ListItem = "Palau"
    ListItem = "Palmyra Atoll"
    ListItem = "Panama"
    ListItem = "Papua-New Guinea"
    ListItem = "Paracel Islands"
    ListItem = "Paraguay"
    ListItem = "Peru"
    ListItem = "Philippines"
    ListItem = "Pitcairn Islands"
    ListItem = "Poland"
    ListItem = "Portugal"
    ListItem = "Qatar"
    ListItem = "Romania"
    ListItem = "Russia"
    ListItem = "Rwanda"
    ListItem = "Saint Barthelemy"
    ListItem = "Saint Martin"
    ListItem = "Samoa"
    ListItem = "San Marino"
    ListItem = "Sao Tome & Principe"
    ListItem = "Saudi Arabia"
    ListItem = "Senegal"
    ListItem = "Serbia"
    ListItem = "Seychelles"
    ListItem = "Sierra Leone"
    ListItem = "Singapore"
    ListItem = "Sint Maarten"
    ListItem = "Slovakia"
    ListItem = "Slovenia"
    ListItem = "Solomon Islands"
    ListItem = "Somalia"
    ListItem = "South Africa"
    ListItem = "South Georgia & The South Sandwich Islands"
    ListItem = "South Sudan"
    ListItem = "Spain"
    ListItem = "Spratly Islands"
    ListItem = "Sri Lanka"
    ListItem = "Saint Helena"
    ListItem = "Saint Kitts & Nevis"
    ListItem = "Saint Lucia Island"
    ListItem = "Saint Pierre & Miquelon"
    ListItem = "Saint Vincent & the Grenadines"
    ListItem = "Sudan"
    ListItem = "Suriname"
    ListItem = "Svalbard"
    ListItem = "Swaziland"
    ListItem = "Sweden"
    ListItem = "Switzerland"
    ListItem = "Syria"
    ListItem = "Taiwan"
    ListItem = "Tajikistan"
    ListItem = "Tanzania"
    ListItem = "Thailand"
    ListItem = "Togo"
    ListItem = "Tokelau"
    ListItem = "Tonga"
    ListItem = "Trinidad & Tobago"
    ListItem = "Tunisia"
    ListItem = "Turkey"
    ListItem = "Turkmenistan"
    ListItem = "Turks & Caicos Islands"
    ListItem = "Tuvalu"
    ListItem = "Uganda"
    ListItem = "Ukraine"
    ListItem = "United Arab Emirates"
    ListItem = "United Kingdom"
    ListItem = "Uruguay"
    ListItem = "Uzbekistan"
    ListItem = "Vanuatu"
    ListItem = "Venezuela"
    ListItem = "Vietnam"
    ListItem = "Wake Island"
    ListItem = "Wallis & Futuna"
    ListItem = "Western Sahara"
    ListItem = "Yemen (Aden)"
    ListItem = "Zambia"
    ListItem = "Zimbabwe"
    ListItem = "None| "
End Sub

Private Sub AllCountriesList_SetList()
' Used by Forms 5471, 8858 and FBAR.  Need separate list to allow selection of United States

    ListTitle = "All Countries"
    ListItem = "Afghanistan"
    ListItem = "Akrotiri"
    ListItem = "Albania"
    ListItem = "Algeria"
    ListItem = "American Samoa"
    ListItem = "Andorra"
    ListItem = "Angola"
    ListItem = "Anguilla"
    ListItem = "Antarctica"
    ListItem = "Antigua & Barbuda"
    ListItem = "Argentina"
    ListItem = "Armenia"
    ListItem = "Aruba"
    ListItem = "Ashmore & Cartier Islands"
    ListItem = "Australia"
    ListItem = "Austria"
    ListItem = "Azerbaijan"
    ListItem = "Bahamas"
    ListItem = "Bahrain"
    ListItem = "Baker Island"
    ListItem = "Bangladesh"
    ListItem = "Barbados"
    ListItem = "Belarus"
    ListItem = "Belgium"
    ListItem = "Belize"
    ListItem = "Benin"
    ListItem = "Bermuda"
    ListItem = "Bhutan"
    ListItem = "Bolivia"
    ListItem = "Bosnia-Herzegovina"
    ListItem = "Botswana"
    ListItem = "Bouvet Island"
    ListItem = "Brazil"
    ListItem = "British Indian Ocean Territory"
    ListItem = "British Virgin Islands"
    ListItem = "Brunei"
    ListItem = "Bulgaria"
    ListItem = "Burkina Faso"
    ListItem = "Burma"
    ListItem = "Burundi"
    ListItem = "Cambodia"
    ListItem = "Cameroon"
    ListItem = "Canada"
    ListItem = "Cape Verde"
    ListItem = "Cayman Islands"
    ListItem = "Central African Republic"
    ListItem = "Chad"
    ListItem = "Chile"
    ListItem = "China"
    ListItem = "Christmas Island"
    ListItem = "Clipperton Island"
    ListItem = "Cocos (Keeling) Islands"
    ListItem = "Colombia"
    ListItem = "Comoros"
    ListItem = "Congo (Brazzaville)"
    ListItem = "Congo (Kinshasa)"
    ListItem = "Cooks Islands"
    ListItem = "Coral Sea Islands"
    ListItem = "Costa Rica"
    ListItem = "Cote d'Ivoire (Ivory Coast)"
    ListItem = "Croatia"
    ListItem = "Cuba"
    ListItem = "Curacao"
    ListItem = "Cyprus"
    ListItem = "Czech Republic"
    ListItem = "Denmark"
    ListItem = "Dhekelia"
    ListItem = "Djibouti"
    ListItem = "Dominica"
    ListItem = "Dominican Republic"
    ListItem = "East Timor"
    ListItem = "Ecuador"
    ListItem = "Egypt"
    ListItem = "El Salvador"
    ListItem = "Equatorial Guinea"
    ListItem = "Eritrea"
    ListItem = "Estonia"
    ListItem = "Ethiopia"
    ListItem = "Falkland Islands (Islas Malvinas)"
    ListItem = "Faroe Islands"
    ListItem = "Federated States of Micronesia"
    ListItem = "Fiji"
    ListItem = "Finland"
    ListItem = "France"
    ListItem = "French Polynesia"
    ListItem = "French Southern & Antarctic Lands"
    ListItem = "Gabon"
    ListItem = "The Gambia"
    ListItem = "Georgia"
    ListItem = "Germany"
    ListItem = "Ghana"
    ListItem = "Gibraltar"
    ListItem = "Greece"
    ListItem = "Greenland"
    ListItem = "Grenada"
    ListItem = "Guam"
    ListItem = "Guatemala"
    ListItem = "Guernsey"
    ListItem = "Guinea"
    ListItem = "Guinea-Bissau"
    ListItem = "Guyana"
    ListItem = "Haiti"
    ListItem = "Heard Island & McDonald Islands"
    ListItem = "Holy See"
    ListItem = "Honduras"
    ListItem = "Hong Kong"
    ListItem = "Howland Island"
    ListItem = "Hungary"
    ListItem = "Iceland"
    ListItem = "India"
    ListItem = "Indonesia"
    ListItem = "Iran"
    ListItem = "Iraq"
    ListItem = "Ireland"
    ListItem = "Israel"
    ListItem = "Italy"
    ListItem = "Jamaica"
    ListItem = "JanMayen"
    ListItem = "Japan"
    ListItem = "Jarvis Island"
    ListItem = "Jersey"
    ListItem = "Johnston Atoll"
    ListItem = "Jordan"
    ListItem = "Kazakhstan"
    ListItem = "Kenya"
    ListItem = "Kingman Reef"
    ListItem = "Kiribati"
    ListItem = "Korea, Democratic People's Republic of (North)"
    ListItem = "Korea, Republic of (South)"
    ListItem = "Kosovo"
    ListItem = "Kuwait"
    ListItem = "Kyrgyzstan"
    ListItem = "Laos"
    ListItem = "Latvia"
    ListItem = "Lebanon"
    ListItem = "Lesotho"
    ListItem = "Liberia"
    ListItem = "Libya"
    ListItem = "Liechtenstein"
    ListItem = "Lithuania"
    ListItem = "Luxembourg"
    ListItem = "Macau"
    ListItem = "Macedonia"
    ListItem = "Madagascar"
    ListItem = "Malawi"
    ListItem = "Malaysia"
    ListItem = "Maldives"
    ListItem = "Mali"
    ListItem = "Malta"
    ListItem = "Man, Isle of"
    ListItem = "Marshall Islands"
    ListItem = "Mauritania"
    ListItem = "Mauritius"
    ListItem = "Mexico"
    ListItem = "Midway Islands"
    ListItem = "Moldova"
    ListItem = "Monaco"
    ListItem = "Mongolia"
    ListItem = "Montenegro"
    ListItem = "Montserrat"
    ListItem = "Morocco"
    ListItem = "Mozambique"
    ListItem = "Namibia"
    ListItem = "Nauru"
    ListItem = "Navassa Island"
    ListItem = "Nepal"
    ListItem = "Netherlands"
    ListItem = "New Caledonia"
    ListItem = "New Zealand"
    ListItem = "Nicaragua"
    ListItem = "Niger"
    ListItem = "Nigeria"
    ListItem = "Niue"
    ListItem = "Norfolk Island"
    ListItem = "Northern Marianas Islands"
    ListItem = "Norway"
    ListItem = "Oman"
    ListItem = "Other Country"
    ListItem = "Pakistan"
    ListItem = "Palau"
    ListItem = "Palmyra Atoll"
    ListItem = "Panama"
    ListItem = "Papua-New Guinea"
    ListItem = "Paracel Islands"
    ListItem = "Paraguay"
    ListItem = "Peru"
    ListItem = "Philippines"
    ListItem = "Pitcairn Islands"
    ListItem = "Poland"
    ListItem = "Portugal"
    ListItem = "Puerto Rico"
    ListItem = "Qatar"
    ListItem = "Romania"
    ListItem = "Russia"
    ListItem = "Rwanda"
    ListItem = "Saint Barthelemy"
    ListItem = "Saint Martin"
    ListItem = "Samoa"
    ListItem = "San Marino"
    ListItem = "Sao Tome & Principe"
    ListItem = "Saudi Arabia"
    ListItem = "Senegal"
    ListItem = "Serbia"
    ListItem = "Seychelles"
    ListItem = "Sierra Leone"
    ListItem = "Singapore"
    ListItem = "Sint Maarten"
    ListItem = "Slovakia"
    ListItem = "Slovenia"
    ListItem = "Solomon Islands"
    ListItem = "Somalia"
    ListItem = "South Africa"
    ListItem = "South Georgia & The South Sandwich Islands"
    ListItem = "South Sudan"
    ListItem = "Spain"
    ListItem = "Spratly Islands"
    ListItem = "Sri Lanka"
    ListItem = "Saint Helena"
    ListItem = "Saint Kitts & Nevis"
    ListItem = "Saint Lucia Island"
    ListItem = "Saint Pierre & Miquelon"
    ListItem = "Saint Vincent & the Grenadines"
    ListItem = "Sudan"
    ListItem = "Suriname"
    ListItem = "Svalbard"
    ListItem = "Swaziland"
    ListItem = "Sweden"
    ListItem = "Switzerland"
    ListItem = "Syria"
    ListItem = "Taiwan"
    ListItem = "Tajikistan"
    ListItem = "Tanzania"
    ListItem = "Thailand"
    ListItem = "Togo"
    ListItem = "Tokelau"
    ListItem = "Tonga"
    ListItem = "Trinidad & Tobago"
    ListItem = "Tunisia"
    ListItem = "Turkey"
    ListItem = "Turkmenistan"
    ListItem = "Turks & Caicos Islands"
    ListItem = "Tuvalu"
    ListItem = "Uganda"
    ListItem = "Ukraine"
    ListItem = "United Arab Emirates"
    ListItem = "United Kingdom"
    ListItem = "United States"
    ListItem = "Uruguay"
    ListItem = "Uzbekistan"
    ListItem = "Vanuatu"
    ListItem = "Venezuela"
    ListItem = "Vietnam"
    ListItem = "Virgin Islands"
    ListItem = "Wake Island"
    ListItem = "Wallis & Futuna"
    ListItem = "Western Sahara"
    ListItem = "Yemen (Aden)"
    ListItem = "Zambia"
    ListItem = "Zimbabwe"
    ListItem = "None| "
End Sub

Private Sub ForeignCountry1042SList_SetList()
' Country codes in alphabetical order

    ListTitle = "Foreign Countries"
    ListItem = "AA"
    ListItem = "AC"
    ListItem = "AE"
    ListItem = "AF"
    ListItem = "AG"
    ListItem = "AJ"
    ListItem = "AL"
    ListItem = "AM"
    ListItem = "AN"
    ListItem = "AO"
    ListItem = "AQ"
    ListItem = "AR"
    ListItem = "AS"
    ListItem = "AT"
    ListItem = "AU"
    ListItem = "AV"
    ListItem = "AX"
    ListItem = "AY"
    ListItem = "BA"
    ListItem = "BB"
    ListItem = "BC"
    ListItem = "BD"
    ListItem = "BE"
    ListItem = "BF"
    ListItem = "BG"
    ListItem = "BH"
    ListItem = "BK"
    ListItem = "BL"
    ListItem = "BM"
    ListItem = "BN"
    ListItem = "BO"
    ListItem = "BP"
    ListItem = "BQ"
    ListItem = "BR"
    ListItem = "BT"
    ListItem = "BU"
    ListItem = "BV"
    ListItem = "BX"
    ListItem = "BY"
    ListItem = "CA"
    ListItem = "CB"
    ListItem = "CD"
    ListItem = "CE"
    ListItem = "CF"
    ListItem = "CG"
    ListItem = "CH"
    ListItem = "CI"
    ListItem = "CJ"
    ListItem = "CK"
    ListItem = "CM"
    ListItem = "CN"
    ListItem = "CO"
    ListItem = "CQ"
    ListItem = "CR"
    ListItem = "CS"
    ListItem = "CT"
    ListItem = "CU"
    ListItem = "CV"
    ListItem = "CW"
    ListItem = "CY"
    ListItem = "DA"
    ListItem = "DJ"
    ListItem = "DO"
    ListItem = "DQ"
    ListItem = "DR"
    ListItem = "DX"
    ListItem = "EC"
    ListItem = "EG"
    ListItem = "EI"
    ListItem = "EK"
    ListItem = "EN"
    ListItem = "ER"
    ListItem = "ES"
    ListItem = "ET"
    ListItem = "EZ"
    ListItem = "FI"
    ListItem = "FJ"
    ListItem = "FK"
    ListItem = "FM"
    ListItem = "FO"
    ListItem = "FP"
    ListItem = "FQ"
    ListItem = "FR"
    ListItem = "FS"
    ListItem = "GA"
    ListItem = "GB"
    ListItem = "GG"
    ListItem = "GH"
    ListItem = "GI"
    ListItem = "GJ"
    ListItem = "GK"
    ListItem = "GL"
    ListItem = "GM"
    ListItem = "GQ"
    ListItem = "GR"
    ListItem = "GT"
    ListItem = "GV"
    ListItem = "GY"
    ListItem = "HA"
    ListItem = "HK"
    ListItem = "HM"
    ListItem = "HO"
    ListItem = "HQ"
    ListItem = "HR"
    ListItem = "HU"
    ListItem = "IC"
    ListItem = "ID"
    ListItem = "IM"
    ListItem = "IN"
    ListItem = "IO"
    ListItem = "IP"
    ListItem = "IR"
    ListItem = "IS"
    ListItem = "IT"
    ListItem = "IV"
    ListItem = "IZ"
    ListItem = "JA"
    ListItem = "JE"
    ListItem = "JM"
    ListItem = "JN"
    ListItem = "JO"
    ListItem = "JQ"
    ListItem = "KE"
    ListItem = "KG"
    ListItem = "KN"
    ListItem = "KQ"
    ListItem = "KR"
    ListItem = "KS"
    ListItem = "KT"
    ListItem = "KU"
    ListItem = "KV"
    ListItem = "KZ"
    ListItem = "LA"
    ListItem = "LE"
    ListItem = "LG"
    ListItem = "LH"
    ListItem = "LI"
    ListItem = "LO"
    ListItem = "LQ"
    ListItem = "LS"
    ListItem = "LT"
    ListItem = "LU"
    ListItem = "LY"
    ListItem = "MA"
    ListItem = "MC"
    ListItem = "MD"
    ListItem = "MG"
    ListItem = "MH"
    ListItem = "MI"
    ListItem = "MJ"
    ListItem = "MK"
    ListItem = "ML"
    ListItem = "MN"
    ListItem = "MO"
    ListItem = "MP"
    ListItem = "MQ"
    ListItem = "MR"
    ListItem = "MT"
    ListItem = "MU"
    ListItem = "MV"
    ListItem = "MX"
    ListItem = "MY"
    ListItem = "MZ"
    ListItem = "NC"
    ListItem = "NE"
    ListItem = "NF"
    ListItem = "NG"
    ListItem = "NH"
    ListItem = "NI"
    ListItem = "NL"
    ListItem = "NN"
    ListItem = "NO"
    ListItem = "NP"
    ListItem = "NR"
    ListItem = "NS"
    ListItem = "NU"
    ListItem = "NZ"
    ListItem = "OC"
    ListItem = "OD"
    ListItem = "PA"
    ListItem = "PC"
    ListItem = "PE"
    ListItem = "PF"
    ListItem = "PG"
    ListItem = "PK"
    ListItem = "PL"
    ListItem = "PM"
    ListItem = "PO"
    ListItem = "PP"
    ListItem = "PS"
    ListItem = "PU"
    ListItem = "QA"
    ListItem = "RI"
    ListItem = "RM"
    ListItem = "RN"
    ListItem = "RO"
    ListItem = "RP"
    ListItem = "RQ"
    ListItem = "RS"
    ListItem = "RW"
    ListItem = "SA"
    ListItem = "SB"
    ListItem = "SC"
    ListItem = "SE"
    ListItem = "SF"
    ListItem = "SG"
    ListItem = "SH"
    ListItem = "SI"
    ListItem = "SL"
    ListItem = "SM"
    ListItem = "SN"
    ListItem = "SO"
    ListItem = "SP"
    ListItem = "ST"
    ListItem = "SU"
    ListItem = "SV"
    ListItem = "SW"
    ListItem = "SX"
    ListItem = "SY"
    ListItem = "SZ"
    ListItem = "TB"
    ListItem = "TD"
    ListItem = "TH"
    ListItem = "TI"
    ListItem = "TK"
    ListItem = "TL"
    ListItem = "TN"
    ListItem = "TO"
    ListItem = "TP"
    ListItem = "TS"
    ListItem = "TT"
    ListItem = "TU"
    ListItem = "TV"
    ListItem = "TW"
    ListItem = "TX"
    ListItem = "TZ"
    ListItem = "UC"
    ListItem = "UG"
    ListItem = "UK"
    ListItem = "UP"
    ListItem = "UV"
    ListItem = "UY"
    ListItem = "UZ"
    ListItem = "VC"
    ListItem = "VE"
    ListItem = "VI"
    ListItem = "VM"
    ListItem = "VQ"
    ListItem = "VT"
    ListItem = "WA"
    ListItem = "WF"
    ListItem = "WI"
    ListItem = "WQ"
    ListItem = "WS"
    ListItem = "WZ"
    ListItem = "YM"
    ListItem = "ZA"
    ListItem = "ZI"
End Sub

Private Sub AllDonorCountriesList_SetList()
    ListTitle = "All Donor Countries"
    ListItem = "CA Canada|CA"
    ListItem = "IS Israel|IS"
    ListItem = "MX Mexico|MX"
End Sub

Public Function ScheduleIDList_SetDynaList()
Call SetListTitle("ScheduleIDList")

    Dim Copy As Integer
    
    Copy = GetNumber(USW5471SchI.CopyNum, GetCopy())
    
    If GetBool(USF5471.Four, Copy) = True Or GetBool(USF5471.FiveA, Copy) = True Or GetBool(USF5471.FiveB, Copy) = True And GetString(USF5471.Name, Copy) <> "" And GetString(USF5471.SSN, Copy) <> "" Then
        Call SetListItem(GetString(USF5471.SSN, Copy) + " - " + GetString(USF5471.Name, Copy), GetString(USF5471.SSN, Copy))
    End If
    
    If GetBool(USF5471.Four, Copy) = True Or GetBool(USF5471.FiveA, Copy) = True Or GetBool(USF5471.FiveB, Copy) = True Then
        If GetBool(USF5471.CatFiler(0), Copy) = True And GetString(USF5471.SecDName(0), Copy) <> "" And GetString(USF5471.SecDIDNum(0), Copy) <> "" Then
            Call SetListItem(GetString(USF5471.SecDIDNum(0), Copy) + " - " + GetString(USF5471.SecDName(0), Copy), GetString(USF5471.SecDIDNum(0), Copy))
        End If
        If GetBool(USF5471.CatFiler(1), Copy) = True And GetString(USF5471.SecDName(1), Copy) <> "" And GetString(USF5471.SecDIDNum(1), Copy) <> "" Then
            Call SetListItem(GetString(USF5471.SecDIDNum(1), Copy) + " - " + GetString(USF5471.SecDName(1), Copy), GetString(USF5471.SecDIDNum(1), Copy))
        End If
        If GetBool(USF5471.CatFiler(2), Copy) = True And GetString(USF5471.SecDName(2), Copy) <> "" And GetString(USF5471.SecDIDNum(2), Copy) <> "" Then
            Call SetListItem(GetString(USF5471.SecDIDNum(2), Copy) + " - " + GetString(USF5471.SecDName(2), Copy), GetString(USF5471.SecDIDNum(2), Copy))
        End If
        If GetBool(USF5471.CatFiler(3), Copy) = True And GetString(USF5471.SecDName(3), Copy) <> "" And GetString(USF5471.SecDIDNum(3), Copy) <> "" Then
            Call SetListItem(GetString(USF5471.SecDIDNum(3), Copy) + " - " + GetString(USF5471.SecDName(3), Copy), GetString(USF5471.SecDIDNum(3), Copy))
        End If
    End If

End Function

Public Function SchedulePIDList_SetDynaList()
Call SetListTitle("SchedulePIDList")

    Dim Copy As Integer
    
    Copy = GetNumber(USW5471SchP.CopyNum, GetCopy())
    
    If GetBool(USF5471.OneA, 1) = True Or GetBool(USF5471.OneB, 1) = True Or GetBool(USF5471.Four, 1) = True Or GetBool(USF5471.FiveA, 1) = True Or GetBool(USF5471.FiveB, 1) = True And GetString(USF5471.Name, 1) <> "" And GetString(USF5471.SSN, 1) <> "" Then
        Call SetListItem(GetString(USF5471.SSN, 1) + " - " + GetString(USF5471.Name, 1), GetString(USF5471.SSN, 1))
    End If
    
    If GetBool(USF5471.OneA, Copy) = True Or GetBool(USF5471.OneB, Copy) = True Or GetBool(USF5471.Four, Copy) = True Or GetBool(USF5471.FiveA, Copy) = True Or GetBool(USF5471.FiveB, Copy) = True Then
        If GetString(USF5471.SecDIDNum(0), Copy) <> "" And GetString(USF5471.SecDName(0), Copy) <> "" Then
            Call SetListItem(GetString(USF5471.SecDIDNum(0), Copy) + " - " + GetString(USF5471.SecDName(0), Copy), GetString(USF5471.SecDIDNum(0), Copy))
        End If
        If GetString(USF5471.SecDIDNum(1), Copy) <> "" And GetString(USF5471.SecDName(1), Copy) <> "" Then
            Call SetListItem(GetString(USF5471.SecDIDNum(1), Copy) + " - " + GetString(USF5471.SecDName(1), Copy), GetString(USF5471.SecDIDNum(1), Copy))
        End If
        If GetString(USF5471.SecDIDNum(2), Copy) <> "" And GetString(USF5471.SecDName(2), Copy) <> "" Then
            Call SetListItem(GetString(USF5471.SecDIDNum(2), Copy) + " - " + GetString(USF5471.SecDName(2), Copy), GetString(USF5471.SecDIDNum(2), Copy))
        End If
        If GetString(USF5471.SecDIDNum(3), Copy) <> "" And GetString(USF5471.SecDName(3), Copy) <> "" Then
            Call SetListItem(GetString(USF5471.SecDIDNum(3), Copy) + " - " + GetString(USF5471.SecDName(3), Copy), GetString(USF5471.SecDIDNum(3), Copy))
        End If
    End If

End Function

Public Function EndMonthAlloc_SetDynaList()
Call SetListTitle("EndMonthAlloc")

    Dim Month As String
    
    Month = GetString(USD1095A.StartMonth, GetCopy())
    
    If Month = "01" Then
        Call SetListItem("January", "01")
        Call SetListItem("February", "02")
        Call SetListItem("March", "03")
        Call SetListItem("April", "04")
        Call SetListItem("May", "05")
        Call SetListItem("June", "06")
        Call SetListItem("July", "07")
        Call SetListItem("August", "08")
        Call SetListItem("September", "09")
        Call SetListItem("October", "10")
        Call SetListItem("November", "11")
        Call SetListItem("December", "12")
    ElseIf Month = "02" Then
        Call SetListItem("February", "02")
        Call SetListItem("March", "03")
        Call SetListItem("April", "04")
        Call SetListItem("May", "05")
        Call SetListItem("June", "06")
        Call SetListItem("July", "07")
        Call SetListItem("August", "08")
        Call SetListItem("September", "09")
        Call SetListItem("October", "10")
        Call SetListItem("November", "11")
        Call SetListItem("December", "12")
    ElseIf Month = "03" Then
        Call SetListItem("March", "03")
        Call SetListItem("April", "04")
        Call SetListItem("May", "05")
        Call SetListItem("June", "06")
        Call SetListItem("July", "07")
        Call SetListItem("August", "08")
        Call SetListItem("September", "09")
        Call SetListItem("October", "10")
        Call SetListItem("November", "11")
        Call SetListItem("December", "12")
    ElseIf Month = "04" Then
        Call SetListItem("April", "04")
        Call SetListItem("May", "05")
        Call SetListItem("June", "06")
        Call SetListItem("July", "07")
        Call SetListItem("August", "08")
        Call SetListItem("September", "09")
        Call SetListItem("October", "10")
        Call SetListItem("November", "11")
        Call SetListItem("December", "12")
    ElseIf Month = "05" Then
        Call SetListItem("May", "05")
        Call SetListItem("June", "06")
        Call SetListItem("July", "07")
        Call SetListItem("August", "08")
        Call SetListItem("September", "09")
        Call SetListItem("October", "10")
        Call SetListItem("November", "11")
        Call SetListItem("December", "12")
    ElseIf Month = "06" Then
        Call SetListItem("June", "06")
        Call SetListItem("July", "07")
        Call SetListItem("August", "08")
        Call SetListItem("September", "09")
        Call SetListItem("October", "10")
        Call SetListItem("November", "11")
        Call SetListItem("December", "12")
    ElseIf Month = "07" Then
        Call SetListItem("July", "07")
        Call SetListItem("August", "08")
        Call SetListItem("September", "09")
        Call SetListItem("October", "10")
        Call SetListItem("November", "11")
        Call SetListItem("December", "12")
    ElseIf Month = "08" Then
        Call SetListItem("August", "08")
        Call SetListItem("September", "09")
        Call SetListItem("October", "10")
        Call SetListItem("November", "11")
        Call SetListItem("December", "12")
    ElseIf Month = "09" Then
        Call SetListItem("September", "09")
        Call SetListItem("October", "10")
        Call SetListItem("November", "11")
        Call SetListItem("December", "12")
    ElseIf Month = "10" Then
        Call SetListItem("October", "10")
        Call SetListItem("November", "11")
        Call SetListItem("December", "12")
    ElseIf Month = "11" Then
        Call SetListItem("November", "11")
        Call SetListItem("December", "12")
    ElseIf Month = "12" Then
        Call SetListItem("December", "12")
    Else
        Call SetListItem("January", "01")
        Call SetListItem("February", "02")
        Call SetListItem("March", "03")
        Call SetListItem("April", "04")
        Call SetListItem("May", "05")
        Call SetListItem("June", "06")
        Call SetListItem("July", "07")
        Call SetListItem("August", "08")
        Call SetListItem("September", "09")
        Call SetListItem("October", "10")
        Call SetListItem("November", "11")
        Call SetListItem("December", "12")
    End If
End Function

Public Function RCodesTwo_SetDynaList()
Call SetListTitle("RCodesTwo")
    
    Dim FirstCode As String
    
    FirstCode = GetString(USD1099R.Code1, GetCopy())
    
    If FirstCode = "1" Then
        Call SetListItem("8-Excess contributions plus earnings taxable in 2021", "8")
        Call SetListItem("B-Designated Roth account distribution", "B")
        Call SetListItem("D-Annuity payments from nonqualified annuities", "D")
        Call SetListItem("K-Distribution of IRA without FMV", "K")
        Call SetListItem("L-Loan treated as distribution", "L")
        Call SetListItem("M-Qualified plan loan offset", "M")
        Call SetListItem("P-Excess contributions plus earnings taxable in 2020", "P")
    ElseIf FirstCode = "2" Then
        Call SetListItem("8-Excess contributions plus earnings taxable in 2021", "8")
        Call SetListItem("B-Designated Roth account distribution", "B")
        Call SetListItem("D-Annuity payments from nonqualified annuities", "D")
        Call SetListItem("K-Distribution of IRA without FMV", "K")
        Call SetListItem("L-Loan treated as distribution", "L")
        Call SetListItem("M-Qualified plan loan offset", "M")
        Call SetListItem("P-Excess contributions plus earnings taxable in 2020", "P")
    ElseIf FirstCode = "3" Then
        Call SetListItem("D-Annuity payments from nonqualified annuities", "D")
    ElseIf FirstCode = "4" Then
        Call SetListItem("8-Excess contributions plus earnings taxable in 2021", "8")
        Call SetListItem("A-May be eligible for 10-year averaging", "A")
        Call SetListItem("B-Designated Roth account distribution", "B")
        Call SetListItem("D-Annuity payments from nonqualified annuities", "D")
        Call SetListItem("G-Direct rollover", "G")
        Call SetListItem("H-Direct rollover of a designated Roth account to a Roth IRA", "H")
        Call SetListItem("K-Distribution of IRA without FMV", "K")
        Call SetListItem("L-Loan treated as distribution", "L")
        Call SetListItem("M-Qualified plan loan offset", "M")
        Call SetListItem("P-Excess contributions plus earnings taxable in 2020", "P")
    ElseIf FirstCode = "5" Then
        Call SetListItem("No valid second distribution code combination", " ")
    ElseIf FirstCode = "6" Then
        Call SetListItem("W-Long-term care insurance payments", "W")
    ElseIf FirstCode = "7" Then
        Call SetListItem("A-May be eligible for 10-year averaging", "A")
        Call SetListItem("B-Designated Roth account distribution", "B")
        Call SetListItem("D-Annuity payments from nonqualified annuities", "D")
        Call SetListItem("K-Distribution of IRA without FMV", "K")
        Call SetListItem("L-Loan treated as distribution", "L")
        Call SetListItem("M-Qualified plan loan offset", "M")
    ElseIf FirstCode = "8" Then
        Call SetListItem("1-Early distribution - no known exception", "1")
        Call SetListItem("2-Early distribution - exception applies", "2")
        Call SetListItem("4-Death", "4")
        Call SetListItem("B-Designated Roth account distribution", "B")
        Call SetListItem("J-Early distribution from Roth IRA", "J")
        Call SetListItem("K-Distribution of IRA without FMV", "K")
    ElseIf FirstCode = "9" Then
        Call SetListItem("No valid second distribution code combination", " ")
    ElseIf FirstCode = "A" Then
        Call SetListItem("4-Death", "4")
        Call SetListItem("7-Normal distribution", "7")
    ElseIf FirstCode = "B" Then
        Call SetListItem("1-Early distribution - no known exception", "1")
        Call SetListItem("2-Early distribution - exception applies", "2")
        Call SetListItem("4-Death", "4")
        Call SetListItem("7-Normal distribution", "7")
        Call SetListItem("8-Excess contributions plus earnings taxable in 2021", "8")
        Call SetListItem("G-Direct rollover", "G")
        Call SetListItem("L-Loan treated as distribution", "L")
        Call SetListItem("M-Qualified plan loan offset", "M")
        Call SetListItem("P-Excess contributions plus earnings taxable in 2020", "P")
        Call SetListItem("U-Dividend distribution from an ESOP", "U")
    ElseIf FirstCode = "C" Then
        Call SetListItem("D-Annuity payments from nonqualified annuities", "D")
    ElseIf FirstCode = "D" Then
        Call SetListItem("1-Early distribution - no known exception", "1")
        Call SetListItem("2-Early distribution - exception applies", "2")
        Call SetListItem("3-Disability", "3")
        Call SetListItem("4-Death", "4")
        Call SetListItem("7-Normal distribution", "7")
        Call SetListItem("C-Reportable death benefits under section 6050Y", "C")
    ElseIf FirstCode = "E" Then
        Call SetListItem("No valid second distribution code combination", " ")
    ElseIf FirstCode = "F" Then
        Call SetListItem("No valid second distribution code combination", " ")
    ElseIf FirstCode = "G" Then
        Call SetListItem("4-Death", "4")
        Call SetListItem("B-Designated Roth account distribution", "B")
        Call SetListItem("K-Distribution of IRA without FMV", "K")
    ElseIf FirstCode = "H" Then
        Call SetListItem("4-Death", "4")
    ElseIf FirstCode = "J" Then
        Call SetListItem("8-Excess contributions plus earnings taxable in 2021", "8")
        Call SetListItem("P-Excess contributions plus earnings taxable in 2020", "P")
    ElseIf FirstCode = "K" Then
        Call SetListItem("1-Early distribution - no known exception", "1")
        Call SetListItem("2-Early distribution - exception applies", "2")
        Call SetListItem("4-Death", "4")
        Call SetListItem("7-Normal distribution", "7")
        Call SetListItem("8-Excess contributions plus earnings taxable in 2021", "8")
        Call SetListItem("G-Direct rollover", "G")
    ElseIf FirstCode = "L" Then
        Call SetListItem("1-Early distribution - no known exception", "1")
        Call SetListItem("2-Early distribution - exception applies", "2")
        Call SetListItem("4-Death", "4")
        Call SetListItem("7-Normal distribution", "7")
        Call SetListItem("B-Designated Roth account distribution", "B")
    ElseIf FirstCode = "M" Then
        Call SetListItem("1-Early distribution - no known exception", "1")
        Call SetListItem("2-Early distribution - exception applies", "2")
        Call SetListItem("4-Death", "4")
        Call SetListItem("7-Normal distribution", "7")
        Call SetListItem("B-Designated Roth account distribution", "B")
    ElseIf FirstCode = "N" Then
        Call SetListItem("No valid second distribution code combination", " ")
    ElseIf FirstCode = "P" Then
        Call SetListItem("1-Early distribution - no known exception", "1")
        Call SetListItem("2-Early distribution - exception applies", "2")
        Call SetListItem("4-Death", "4")
        Call SetListItem("B-Designated Roth account distribution", "B")
        Call SetListItem("J-Early distribution from Roth IRA", "J")
    ElseIf FirstCode = "Q" Then
        Call SetListItem("No valid second distribution code combination", " ")
    ElseIf FirstCode = "R" Then
        Call SetListItem("No valid second distribution code combination", " ")
    ElseIf FirstCode = "S" Then
        Call SetListItem("No valid second distribution code combination", " ")
    ElseIf FirstCode = "T" Then
        Call SetListItem("No valid second distribution code combination", " ")
    ElseIf FirstCode = "U" Then
        Call SetListItem("B-Designated Roth account distribution", "B")
    ElseIf FirstCode = "W" Then
        Call SetListItem("6-Tax free exchange", "6")
    ElseIf FirstCode = "" Then
        Call SetListItem("Use the first distribution code list above", " ")
    Else
        Call SetListItem("No valid second distribution code combination", " ")
    End If

End Function

Private Sub SchHStatesList_SetList()
   ListTitle = "SchHStates"
   ListItem = "AL - Alabama|AL"
   ListItem = "AK - Alaska|AK"
   ListItem = "AZ - Arizona|AZ"
   ListItem = "AR - Arkansas|AR"
   ListItem = "CA - California|CA"
   ListItem = "CO - Colorado|CO"
   ListItem = "CT - Connecticut|CT"
   ListItem = "DE - Delaware|DE"
   ListItem = "DC - District of Columbia|DC"
   ListItem = "FL - Florida|FL"
   ListItem = "GA - Georgia|GA"
   ListItem = "HI - Hawaii|HI"
   ListItem = "ID - Idaho|ID"
   ListItem = "IL - Illinois|IL"
   ListItem = "IN - Indiana|IN"
   ListItem = "IA - Iowa|IA"
   ListItem = "KS - Kansas|KS"
   ListItem = "KY - Kentucky|KY"
   ListItem = "LA - Louisiana|LA"
   ListItem = "ME - Maine|ME"
   ListItem = "MD - Maryland|MD"
   ListItem = "MA - Massachusetts|MA"
   ListItem = "MI - Michigan|MI"
   ListItem = "MN - Minnesota|MN"
   ListItem = "MS - Mississippi|MS"
   ListItem = "MO - Missouri|MO"
   ListItem = "MT - Montana|MT"
   ListItem = "NE - Nebraska|NE"
   ListItem = "NV - Nevada|NV"
   ListItem = "NH - New Hampshire|NH"
   ListItem = "NJ - New Jersey|NJ"
   ListItem = "NM - New Mexico|NM"
   ListItem = "NY - New York|NY"
   ListItem = "NC - North Carolina|NC"
   ListItem = "ND - North Dakota|ND"
   ListItem = "OH - Ohio|OH"
   ListItem = "OK - Oklahoma|OK"
   ListItem = "OR - Oregon|OR"
   ListItem = "PA - Pennsylvania|PA"
   ListItem = "PR - Puerto Rico|PR"
   ListItem = "RI - Rhode Island|RI"
   ListItem = "SC - South Carolina|SC"
   ListItem = "SD - South Dakota|SD"
   ListItem = "TN - Tennessee|TN"
   ListItem = "TX - Texas|TX"
   ListItem = "UT - Utah|UT"
   ListItem = "VT - Vermont|VT"
   ListItem = "VA - Virginia|VA"
   ListItem = "VI - Virgin Islands|VI"
   ListItem = "WA - Washington|WA"
   ListItem = "WV - West Virginia|WV"
   ListItem = "WI - Wisconsin|WI"
   ListItem = "WY - Wyoming|WY"
End Sub
    
Private Sub W2Codes_SetList()
  ListTitle = "Form W-2 Codes"
  ListItem = "A-Uncollected Soc. Sec. or RRTA Tax on tips|A"
  ListItem = "B-Uncollected Medicare Tax on tips|B"
  ListItem = "C-Taxable cost of group-term life insurance|C"
  ListItem = "D-Elective deferrals to section 401(k)|D"
  ListItem = "E-Elective deferrals under section 403(b)|E"
  ListItem = "F-Elective deferrals under section 408(k)(6)|F"
  ListItem = "G-Elective deferrals to section 457(b) plan|G"
  ListItem = "H-Elective deferrals to a section 501(c)(18)(D) plan|H"
  ListItem = "J-Nontaxable sick pay|J"
  ListItem = "K-Excise tax on excess golden parachute payments|K"
  ListItem = "L-Substantiated employee business exp. reimbursements|L"
  ListItem = "M-Uncollected Soc. Sec. or RRTA tax on grp-term life ins.|M"
  ListItem = "N-Uncollected Medicare tax on group-term life ins.|N"
  ListItem = "P-Excludable moving expense reimbursements|P"
  ListItem = "Q-Nontaxable combat pay|Q"
  ListItem = "R-Employer contributions to an Archer MSA|R"
  ListItem = "S-Employee salary reduction under section 408(p) SIMPLE|S"
  ListItem = "T-Adoption benefits|T"
  ListItem = "V-Income from exercise of nonstatutory stock options|V"
  ListItem = "W-Employer contributions to your Health Savings Account|W"
  ListItem = "Y-Deferrals under a section 409A nonqualified plan|Y"
  ListItem = "Z-Income under section 409A on a nonqualified plan|Z"
  ListItem = "AA-Designated Roth contributions under a 401(k) plan|AA"
  ListItem = "BB-Designated Roth contributions under section 403(b)|BB"
'  ListItem = "CC-HIRE exempt wages and tips|CC"
  ListItem = "DD-Cost of employer-sponsored health coverage|DD"
  ListItem = "EE-Designated Roth contributions under a 457(b) plan|EE"
  ListItem = "FF-Permitted benefits under health reimbursement arrangement|FF"
  ListItem = "GG-Income from qualified equity grants under section 83(i)|GG"
  ListItem = "HH-Aggregate deferrals under section 83(i) elections as of the close of the calendar year|HH"
End Sub

Private Sub W2GUCodes_SetList()
  ListTitle = "Form W-2 Codes"
  ListItem = "A-Uncollected Soc. Sec. or RRTA Tax on tips|A"
  ListItem = "B-Uncollected Medicare Tax on tips|B"
  ListItem = "C-Taxable cost of group-term life insurance|C"
  ListItem = "D-Elective deferrals to section 401(k)|D"
  ListItem = "E-Elective deferrals under section 403(b)|E"
  ListItem = "F-Elective deferrals under section 408(k)(6)|F"
  ListItem = "G-Elective deferrals to section 457(b) plan|G"
  ListItem = "H-Elective deferrals to a section 501(c)(18)(D) plan|H"
  ListItem = "J-Nontaxable sick pay|J"
  ListItem = "M-Uncollected Soc. Sec. or RRTA tax on grp-term life ins.|M"
  ListItem = "N-Uncollected Medicare tax on group-term life ins.|N"
  ListItem = "P-Excludable moving expense reimbursements|P"
  ListItem = "Q-Nontaxable combat pay|Q"
  ListItem = "R-Employer contributions to an Archer MSA|R"
  ListItem = "S-Employee salary reduction under section 408(p) SIMPLE|S"
  ListItem = "T-Adoption benefits|T"
  ListItem = "V-Income from exercise of nonstatutory stock options|V"
  ListItem = "W-Employer contributions to your Health Savings Account|W"
  ListItem = "Y-Deferrals under a section 409A nonqualified plan|Y"
  ListItem = "Z-Income under section 409A on a nonqualified plan|Z"
  ListItem = "AA-Designated Roth contributions under a 401(k) plan|AA"
  ListItem = "BB-Designated Roth contributions under section 403(b)|BB"
'  ListItem = "CC-HIRE exempt wages and tips|CC"
  ListItem = "DD-Cost of employer-sponsored health coverage|DD"
  ListItem = "EE-Designated Roth contributions under a 457(b) plan|EE"
  ListItem = "FF-Permitted benefits under health reimbursement arrangement|FF"
  ListItem = "GG-Income from qualified equity grants under section 83(i)|GG"
  ListItem = "HH-Aggregate deferrals under section 83(i) elections|HH"
End Sub
    
Private Sub W2CMCodes_SetList()
  ListTitle = "Form W-2CM Codes"
  ListItem = "A-Uncollected Soc. Sec. or RRTA Tax on tips|A"
  ListItem = "B-Uncollected Medicare Tax on tips|B"
  ListItem = "C-Taxable cost of group-term life insurance|C"
  ListItem = "D-Elective deferrals to section 401(k)|D"
  ListItem = "E-Elective deferrals under section 403(b)|E"
  ListItem = "F-Elective deferrals under section 408(k)(6)|F"
  ListItem = "G-Elective deferrals to section 457(b) plan|G"
  ListItem = "H-Elective deferrals to a section 501(c)(18)(D) plan|H"
  ListItem = "J-Nontaxable sick pay|J"
  ListItem = "K-Excise tax on excess golden parachute payments|K"
  ListItem = "L-Substantiated employee business exp. reimbursements|L"
  ListItem = "M-Uncollected Soc. Sec. or RRTA tax on grp-term life ins.|M"
  ListItem = "N-Uncollected Medicare tax on group-term life ins.|N"
  ListItem = "P-Excludable moving expense reimbursements|P"
  ListItem = "Q-Nontaxable combat pay|Q"
  ListItem = "R-Employer contributions to an Archer MSA|R"
  ListItem = "S-Employee salary reduction under section 408(p) SIMPLE|S"
  ListItem = "T-Adoption benefits|T"
  ListItem = "V-Income from exercise of nonstatutory stock options|V"
  ListItem = "W-Employer contributions to your Health Savings Account|W"
  ListItem = "Y-Deferrals under a section 409A nonqualified plan|Y"
  ListItem = "Z-Income under section 409A on a nonqualified plan|Z"
  ListItem = "AA-Designated Roth contributions under a 401(k) plan|AA"
  ListItem = "BB-Designated Roth contributions under section 403(b)|BB"
'  ListItem = "CC-HIRE exempt wages and tips|CC"
  ListItem = "DD-Cost of employer-sponsored health coverage|DD"
  ListItem = "EE-Designated Roth contributions under a 457(b) plan|EE"
'FF not added to CM per XML enumerations
'  ListItem = "FF-Permitted benefits under health reimbursement arrangement|FF"
End Sub

Private Sub W2PRCodes1_SetList()
  ListTitle = "Form W-2PR Codes"
  ListItem = "A-Public employees' wages for overtime worked during emergency|A"
  ListItem = "B-Exempt income paid to a Puerto Rico Police member|B"
  ListItem = "C-Stipends received by certain physicians during the internship period|C"
  ListItem = "D-Compensation paid to an eligible researcher or scientist for services|D"
  ListItem = "E-Salary not over $40,000 per year|E"
  ListItem = "F-Vacation and sick leave liquidation payment to public employees|F"
  ListItem = "G-Disaster payments declared exempt|G"
  ListItem = "H-Payments to public employees under the Voluntary Transition Program|H"
  ListItem = "I-Compensation or indemnification paid to an employee due to dismissal|I"
End Sub

Private Sub W2PRCodes2_SetList()
  ListTitle = "Form W-2PR Codes"
  ListItem = "A-Public employees' wages for overtime worked during emergency|A"
  ListItem = "B-Exempt income paid to a Puerto Rico Police member|B"
  ListItem = "C-Stipends received by certain physicians during the internship period|C"
  ListItem = "D-Compensation paid to an eligible researcher or scientist for services|D"
  ListItem = "G-Disaster payments declared exempt|G"
  ListItem = "H-Payments to public employees under the Voluntary Transition Program|H"
  ListItem = "I-Compensation or indemnification paid to an employee due to dismissal|I"
End Sub
    
Private Sub W2CMLocCodes_SetList()
  ListTitle = "Form W-2CM Location Codes"
  ListItem = "20-Saipan|20"
  ListItem = "21-Rota|21"
  ListItem = "22-Tinian|22"
  ListItem = "23-Northern Is.|23"
End Sub

Private Sub LocalWth_SetList()
    ListTitle = "Locality"
    ListItem = "Indiana Locality|IN"
    ListItem = "Other Locality|Other"
End Sub

Private Sub InstallSalePropertyCode_SetList()
  ListTitle = "Type of Property"
  ListItem = "1 Sale property is timeshare or residential lot|1"
  ListItem = "2 Sale by an individual of personal use property|2"
  ListItem = "3 Sale of any property used in the trade or business of farming|3"
  ListItem = "4 All other installment sales not listed|4"
End Sub

Private Sub PropType_SetList()
  ListTitle = "Type of Property"
  ListItem = "1 Single Family Residence|1"
  ListItem = "2 Multi-Family Residence|2"
  ListItem = "3 Vacation/Short-Term Rental|3"
  ListItem = "4 Commercial|4"
  ListItem = "5 Land|5"
  ListItem = "6 Royalties|6"
  ListItem = "7 Self-Rental|7"
  ListItem = "8 Other (describe)|8"
End Sub

Private Sub PropTypeK1_SetList()
  ListTitle = "Type of Property"
  ListItem = "1 Single Family Residence|1"
  ListItem = "2 Multi-Family Residence|2"
  ListItem = "3 Vacation/Short-Term Rental|3"
  ListItem = "4 Commercial|4"
  ListItem = "5 Land|5"
  ListItem = "6 Royalties|6"
  ListItem = "7 Self-Rental|7"
  ListItem = "8 Other|8"
End Sub

Private Sub IncomeCodesNR_SetList()
  ListTitle = "Income Codes"
  ListItem = "01 Interest paid by U.S. obligors--general|01"
  ListItem = "02 Interest paid on real property mortgages|02"
  ListItem = "03 Interest paid to controlling foreign corporations|03"
  ListItem = "04 Interest paid to foreign corporations|04"
  ListItem = "05 Interest on tax-free covenant bonds|05"
  ListItem = "06 Dividends paid by U.S. corporations--general|06"
  ListItem = "07 Dividends qualifying for direct dividend rate|07"
  ListItem = "08 Dividends paid by foreign corporations|08"
  ListItem = "09 Capital gains|09"
  ListItem = "10 Industrial royalties|10"
  ListItem = "11 Motion picture or television copyright royalties|11"
  ListItem = "12 Other royalties (ex: copyright, recording, publishing)|12"
  ListItem = "13 Real property income and natural resources royalties|13"
  ListItem = "14 Pensions, annuities, alimony, and/or insurance premiums|14"
  ListItem = "15 Scholarship or fellowship grants|15"
  ListItem = "16 Compensation for independent personal services|16"
  ListItem = "17 Compensation for dependent personal services|17"
  ListItem = "18 Compensation for teaching|18"
  ListItem = "19 Compensation during studying and training|19"
  ListItem = "24 Real estate investment trust (REIT) distributions of capital gains|24"
  ListItem = "25 Trust distributions subject to IRC section 1445|25"
  ListItem = "26 Unsevered growing crops and timber distributions by a trust subject to IRC section 1445|26"
  ListItem = "27 Publicly traded partnership distributions subject to IRC section 1446|27"
  ListItem = "28 Gambling winnings|28"
  ListItem = "29 Deposit interest|29"
  ListItem = "30 Original issue discount (OID)|30"
  ListItem = "31 Short-term OID|31"
  ListItem = "32 Notional principal contract income|32"
  ListItem = "33 Substitute payment--interest|33"
  ListItem = "34 Substitute payment--dividend|34"
  ListItem = "35 Substitute payment--other|35"
  ListItem = "36 Capital gains distributions|36"
  ListItem = "37 Return of capital|37"
  ListItem = "38 Eligible deferred compensation items subject to IRC section 877A(d)(1)|38"
  ListItem = "39 Distributions from a nongrantor trust subject to IRC section 877A(f)(1)|39"
  ListItem = "40 Other U.S. source dividend equivalents under IRC section 871(m)(formerly 871(l))|40"
  ListItem = "41 Guarantee of indebtedness|41"
  ListItem = "42 Earnings as an artist or athlete--no central withholding agreement|42"
  ListItem = "43 Earnings as an artist or athlete--central withholding agreement|43"
  ListItem = "50 Other income|50"
End Sub

Private Sub ExemptionCodeNR_SetList()
  ListTitle = "Exemption Codes"
  ListItem = "01 Income effectively connected with a U.S. trade or business|01"
  ListItem = "02 Exempt under an IRC section (income other than portfolio interest)|02"
  ListItem = "03 Income is not from U.S. sources|03"
  ListItem = "04 Exempt under tax treaty|04"
  ListItem = "05 Portfolio interest exempt under an IRC section|05"
  ListItem = "06 Qualified intermediary that assumes primary withholding resposibility|06"
  ListItem = "07 Withholding foreign partnership or withholding foreign trust|07"
  ListItem = "08 U.S. branch treated as a U.S. person|08"
  ListItem = "09 Qualified intermediary represents income is exempt|09"
  ListItem = "10 Qual. securities lender that assumes primary withholding responsibility for sub. div.|10"
End Sub

Private Sub RecipientCodeNR_SetList()
  ListTitle = "Recipient Codes"
  ListItem = "01 Individual|01"
  ListItem = "09 Artist or athlete|09"
End Sub

Public Function DepTypeList_SetDynaList()
'Any changes to this picklist in the custom file will also needed to be updated in the REPO - TaxPlatform.BasicInfo FILE- EnterDependent.vue
  Call SetListTitle("DepTypeList")

  Call SetListItem("Child who lived with you (or away at college)", "Lived with you (or away at college)")
  Call SetListItem("Child who lived with someone else due to divorce/separation", "Lived with someone else - divorce/separation")
  Call SetListItem("Other dependent", "Other dependent")
  If GetBool(USWDependents.ChildRel, GetCopy()) = True Then
    Call SetListItem("Nondependent qualifying child", "Nondependent qualifying child")
  End If
  Call SetListItem("Not a dependent this year", "Not a dependent this year")
  If GetBool(USWDependents.Alert95, GetCopy()) = True Then
    Call SetListItem("Nondependent qualifying person for dependent care credit", "Nondependent qualifying person for dependent care credit")
  End If
End Function

Public Function DepRelList_SetDynaList()
'Any changes to this picklist in the custom file will also needed to be updated in the REPO - TaxPlatform.BasicInfo FILE- EnterDependent.vue 
  Call SetListTitle("DepRelList")

  If GetBool(USWResidency.F1040NR) = True And GetBool(USF1040NR.MarriedNA) = True And GetBool(USWBasicInfo.India) = True Then
    Call SetListItem("Spouse", "Spouse")
  End If
  Call SetListItem("Son", "Son")
  Call SetListItem("Daughter", "Daughter")
  Call SetListItem("Stepchild", "Stpchild")
  Call SetListItem("Grandchild", "Grdchild")
  Call SetListItem("Foster child", "Fstrchd")
  Call SetListItem("Parent", "Parent")
  Call SetListItem("Grandparent", "GrdPrnt")
  Call SetListItem("Brother", "Brother")
  Call SetListItem("Sister", "Sister")
  Call SetListItem("Niece", "Niece")
  Call SetListItem("Nephew", "Nephew")
  Call SetListItem("Aunt", "Aunt")
  Call SetListItem("Uncle", "Uncle")
  Call SetListItem("Father-in-law", "F-n-Law")
  Call SetListItem("Mother-in-law", "M-n-Law")
  Call SetListItem("Son-in-law", "S-n-Law")
  Call SetListItem("Daughter-in-law", "D-n-Law")
  Call SetListItem("Brother-in-law", "B-n-Law")
  Call SetListItem("Sister-in-law", "SisnLaw")
  Call SetListItem("Half brother", "Hlf Br")
  Call SetListItem("Half sister", "Hlf Str")
  Call SetListItem("Stepbrother", "Stpbr")
  Call SetListItem("Stepsister", "Stpstr")
  Call SetListItem("Stepfather", "Stpfthr")
  Call SetListItem("Stepmother", "Stpmthr")
  Call SetListItem("Other", "Other")
End Function

Private Sub CodeList_SetList()
'used on Form 5471, Sch. G
   ListTitle = "Corresponding Code"

   ListItem = "De minimis|DM"
   ListItem = "High tax|HT"
   ListItem = "Deductions taken into account|DED"
   ListItem = "Active/hedging commodities|AHC"
   ListItem = "Business needs|BN"
   ListItem = "Active rents/royalties|ARR"
   ListItem = "Certain export financing|EF"
   ListItem = "Regular dealers|RD"
   ListItem = "Securities dealers|SD"
   ListItem = "Same country dividends/interest|SCDI"
   ListItem = "Same country rents/royalties|SCRR"
   ListItem = "Look through|LT"
   ListItem = "Agricultural commodities|AC"
   ListItem = "Same country manufacturing|SCM"
   ListItem = "Same country sales/use|SCSU"
   ListItem = "Physical manufacturing|PM"
   ListItem = "Substantial contribution|SC"
   ListItem = "Branch|BR"
   ListItem = "Active financing|AF"
   ListItem = "Active insurance|AI"
   ListItem = "Earnings & profits limitation|EP"
   ListItem = "Other|XX"
   
End Sub

Private Sub AgCodes_SetList()
  ListTitle = "Agriculture Codes"
  ListItem = "111100 Oilseed and grain farming|111100"
  ListItem = "111210 Vegetable and melon farming|111210"
  ListItem = "111300 Fruit and tree nut farming|111300"
  ListItem = "111400 Greenhouse, nursery, and floriculture production|111400"
  ListItem = "111900 Other crop farming|111900"
  ListItem = "112111 Beef cattle ranching and farming|112111"
  ListItem = "112112 Cattle feedlots|112112"
  ListItem = "112120 Dairy cattle and milk production|112120"
  ListItem = "112210 Hog and pig farming|112210"
  ListItem = "112300 Poultry and egg production|112300"
  ListItem = "112400 Sheep and goat farming|112400"
  ListItem = "112510 Aquaculture|112510"
  ListItem = "112900 Other animal production|112900"
  ListItem = "113000 Forestry and logging|113000"
  ListItem = "113110 Timber tract operations|113110"
  ListItem = "113210 Forestry nurseries and gathering of forest products|113210"
  ListItem = "113310 Logging|113310"
End Sub

Private Sub BusTypeCodes_SetList()
  ListTitle = "Business Codes"
  ListItem = "View All Codes"
  ListItem = "Accommodation, Food Services, & Drinking Places - Accommodation"
  ListItem = "Accommodation, Food Services, & Drinking Places - Food & Drinking Places"
  ListItem = "Administrative & Support Services and Waste Management Services"
  ListItem = "Agriculture, Forestry, Hunting, & Fishing - General"
  ListItem = "Agriculture, Forestry, Hunting, & Fishing - Support Activities"
  ListItem = "Arts & Entertainment - Amusement, Gambling, & Recreation Industries"
  ListItem = "Arts & Entertainment - Museums, Historical Sites, & Similar Institutions"
  ListItem = "Arts & Entertainment - Performing Arts, Spectator Sports, & Related Industries"
  ListItem = "Construction of Buildings - General"
  ListItem = "Construction of Buildings - Heavy and Civil Engineering Construction"
  ListItem = "Construction of Buildings - Specialty Trade Contractors"
  ListItem = "Education Services"
  ListItem = "Finance & Insurance - Credit Intermediation & Related Activities"
  ListItem = "Finance & Insurance - Insurance Agents, Brokers, & Related Activities"
  ListItem = "Finance & Insurance - Securities, Commodities, & Other Financial Investments"
  ListItem = "Health Care & Social Assistance - Ambulatory Health Care Services"
  ListItem = "Health Care & Social Assistance - Hospitals"
  ListItem = "Health Care & Social Assistance - Nursing & Residential Care Facilities"
  ListItem = "Health Care & Social Assistance - Social Assistance"
  ListItem = "Information - General"
  ListItem = "Information - Broadcasting (except Internet) & Telecommunications"
  ListItem = "Information - Data Processing Services"
  ListItem = "Information - Motion Picture & Sound Recording"
  ListItem = "Manufacturing - General"
  ListItem = "Manufacturing - Chemical Manufacturing"
  ListItem = "Manufacturing - Food Manufacturing"
  ListItem = "Manufacturing - Leather & Allied Product Manufacturing"
  ListItem = "Manufacturing - Nonmetallic Mineral Product Manufacturing"
  ListItem = "Mining"
  ListItem = "Other Services - Personal & Laundry Services"
  ListItem = "Other Services - Repair & Maintenance"
  ListItem = "Professional, Scientific, & Tech. - General"
  ListItem = "Professional, Scientific, & Tech. - Architectural, Engineering, & Related Services"
  ListItem = "Professional, Scientific, & Tech. - Computer Systems Design & Related Services"
  ListItem = "Professional, Scientific, & Tech. - Specialized Design Services"
  ListItem = "Professional, Scientific, & Tech. - Other"
  ListItem = "Real Estate"
  ListItem = "Rental & Leasing Services"
  ListItem = "Religious, Grantmaking, Civic, Professional, & Similar Orgs."
  ListItem = "Retail Trade - Building Material & Garden Equipment & Supplies Dealers"
  ListItem = "Retail Trade - Clothing & Accessories Stores"
  ListItem = "Retail Trade - Electronic & Appliance Stores"
  ListItem = "Retail Trade - Food & Beverage Stores"
  ListItem = "Retail Trade - Furniture & Home Furnishing Stores"
  ListItem = "Retail Trade - Gasoline Stations"
  ListItem = "Retail Trade - General Merchandise Stores"
  ListItem = "Retail Trade - Health & Personal Care Stores"
  ListItem = "Retail Trade - Motor Vehicle & Parts Dealers"
  ListItem = "Retail Trade - Sporting Goods, Hobby, Book, & Music Stores"
  ListItem = "Retail Trade - Miscellaneous Store Retailers"
  ListItem = "Retail Trade - Nonstore Retailers"
  ListItem = "Transportation & Warehousing - General"
  ListItem = "Transportation & Warehousing - Couriers & Messengers"
  ListItem = "Transportation & Warehousing - Warehousing & Storage Facilities"
  ListItem = "Utilities"
  ListItem = "Wholesale Trade - Merchant Wholesalers, Durable Goods"
  ListItem = "Wholesale Trade - Merchant Wholesalers, Nondurable Goods"
  ListItem = "Wholesale Electronic Markets and Agents & Brokers"
  ListItem = "Unclassified Establishments"
End Sub

Public Function BusCodesList_SetDynaList()
    ' used in desktop
    Call SetListTitle("BusCodesList")
    
    Dim BusTypeCode As String
    
    BusTypeCode = GetString(USSchC.BusTypeCode, GetCopy())
    
    If BusTypeCode = "Accommodation, Food Services, & Drinking Places - Accommodation" Then
        Call SetListItem("721310 Rooming and boarding houses", "721310")
        Call SetListItem("721210 RV parks and recreational camps", "721210")
        Call SetListItem("721100 Travel accommodation", "721100")
    ElseIf BusTypeCode = "Accommodation, Food Services, & Drinking Places - Food & Drinking Places" Then
        Call SetListItem("722514 Cafeterias and buffets", "722514")
        Call SetListItem("722410 Drinking places (alcoholic beverages)", "722410")
        Call SetListItem("722511 Full-service restaurants", "722511")
        Call SetListItem("722513 Limited-service restaurants", "722513")
        Call SetListItem("722515 Snack and non-alcoholic beverage bars", "722515")
        Call SetListItem("722300 Special food services", "722300")
    ElseIf BusTypeCode = "Administrative & Support Services and Waste Management Services" Then
        Call SetListItem("561430 Business service centers", "561430")
        Call SetListItem("561740 Carpet and upholstery cleaning services", "561740")
        Call SetListItem("561440 Collection agencies", "561440")
        Call SetListItem("561450 Credit bureaus", "561450")
        Call SetListItem("561410 Document preparation services", "561410")
        Call SetListItem("561300 Employment services", "561300")
        Call SetListItem("561710 Exterminating and pest control services", "561710")
        Call SetListItem("561210 Facilities support services", "561210")
        Call SetListItem("561600 Investigation and security services", "561600")
        Call SetListItem("561720 Janitorial services", "561720")
        Call SetListItem("561730 Landscaping services", "561730")
        Call SetListItem("561110 Office administrative services", "561110")
        Call SetListItem("561420 Telephone call centers", "561420")
        Call SetListItem("561500 Travel arrangement and reservation services", "561500")
        Call SetListItem("561490 Other business support services", "561490")
        Call SetListItem("561790 Other services to buildings and dwellings", "561790")
        Call SetListItem("561900 Other support services", "561900")
        Call SetListItem("562000 Waste management and remediation services", "562000")
    ElseIf BusTypeCode = "Agriculture, Forestry, Hunting, & Fishing - General" Then
        Call SetListItem("112900 Animal production", "112900")
        Call SetListItem("114110 Fishing", "114110")
        Call SetListItem("113000 Forestry and logging", "113000")
        Call SetListItem("114210 Hunting and trapping", "114210")
    ElseIf BusTypeCode = "Agriculture, Forestry, Hunting, & Fishing - Support Activities" Then
        Call SetListItem("115210 Support activities for animal production", "115210")
        Call SetListItem("115110 Support activities for crop production", "115110")
        Call SetListItem("115310 Support activities for forestry", "115310")
    ElseIf BusTypeCode = "Arts & Entertainment - Amusement, Gambling, & Recreation Industries" Then
        Call SetListItem("713100 Amusement parks and arcades", "713100")
        Call SetListItem("713200 Gambling industries", "713200")
        Call SetListItem("713900 Other amusement and recreation services", "713900")
    ElseIf BusTypeCode = "Arts & Entertainment - Museums, Historical Sites, & Similar Institutions" Then
        Call SetListItem("712100 Museums, historical sites, and similar institutions", "712100")
    ElseIf BusTypeCode = "Arts & Entertainment - Performing Arts, Spectator Sports, & Related Industries" Then
        Call SetListItem("711410 Agents and managers for public figures", "711410")
        Call SetListItem("711510 Independent artists, writers, and performers", "711510")
        Call SetListItem("711100 Performing arts companies", "711100")
        Call SetListItem("711300 Promoters of performing arts, sports, and events", "711300")
        Call SetListItem("711210 Spectator sports", "711210")
    ElseIf BusTypeCode = "Construction of Buildings - General" Then
        Call SetListItem("236200 Nonresidential building construction", "236200")
        Call SetListItem("236100 Residential building construction", "236100")
    ElseIf BusTypeCode = "Construction of Buildings - Heavy and Civil Engineering Construction" Then
        Call SetListItem("237310 Highway, street, and bridge construction", "237310")
        Call SetListItem("237210 Land subdivision", "237210")
        Call SetListItem("237100 Utility system construction", "237100")
        Call SetListItem("237990 Other heavy engineering construction", "237990")
    ElseIf BusTypeCode = "Construction of Buildings - Specialty Trade Contractors" Then
        Call SetListItem("238310 Drywall and insulation contractors", "238310")
        Call SetListItem("238210 Electrical contractors", "238210")
        Call SetListItem("238350 Finish carpentry contractors", "238350")
        Call SetListItem("238330 Floor contractors", "238330")
        Call SetListItem("238130 Framing carpentry contractors", "238130")
        Call SetListItem("238150 Glass and glazing contractors", "238150")
        Call SetListItem("238140 Masonry contractors", "238140")
        Call SetListItem("238320 Painting and wall covering contractors", "238320")
        Call SetListItem("238220 Plumbing, heating and air conditioning contractors", "238220")
        Call SetListItem("238110 Poured concrete contractors", "238110")
        Call SetListItem("238160 Roofing contractors", "238160")
        Call SetListItem("238170 Siding contractors", "238170")
        Call SetListItem("238910 Site preparation contractors", "238910")
        Call SetListItem("238120 Structural steel construction contractors", "238120")
        Call SetListItem("238340 Tile and terrazzo contractors", "238340")
        Call SetListItem("238290 Other building equipment contractors", "238290")
        Call SetListItem("238390 Other building finishing contractors", "238390")
        Call SetListItem("238190 Other foundation and structure contractors", "238190")
        Call SetListItem("238990 All other specialty trade contractors", "238990")
    ElseIf BusTypeCode = "Education Services" Then
        Call SetListItem("611000 Educational services", "611000")
    ElseIf BusTypeCode = "Finance & Insurance - Credit Intermediation & Related Activities" Then
        Call SetListItem("522100 Depository credit intermediation", "522100")
        Call SetListItem("522200 Nondepository credit intermediation", "522200")
        Call SetListItem("522300 Activities related to credit intermediation", "522300")
    ElseIf BusTypeCode = "Finance & Insurance - Insurance Agents, Brokers, & Related Activities" Then
        Call SetListItem("524210 Insurance agencies and brokerages", "524210")
        Call SetListItem("524290 Other insurance related activities", "524290")
    ElseIf BusTypeCode = "Finance & Insurance - Securities, Commodities, & Other Financial Investments" Then
        Call SetListItem("523140 Commodity contracts brokers", "523140")
        Call SetListItem("523130 Commodity contracts dealers", "523130")
        Call SetListItem("523110 Investment bankers and securities dealers", "523110")
        Call SetListItem("523210 Securities and commodity exchanges", "523210")
        Call SetListItem("523120 Securities brokers", "523120")
        Call SetListItem("523900 Other financial investment activities", "523900")
    ElseIf BusTypeCode = "Health Care & Social Assistance - Ambulatory Health Care Services" Then
        Call SetListItem("621610 Home health care services", "621610")
        Call SetListItem("621510 Medical and diagnostic laboratories", "621510")
        Call SetListItem("621310 Offices of chiropractors", "621310")
        Call SetListItem("621210 Offices of dentists", "621210")
        Call SetListItem("621330 Offices of mental health practitioners", "621330")
        Call SetListItem("621320 Offices of optometrists", "621320")
        Call SetListItem("621340 Offices of physical, occupational and speech therapists", "621340")
        Call SetListItem("621111 Offices of physicians", "621111")
        Call SetListItem("621112 Offices of mental health specialists", "621112")
        Call SetListItem("621391 Offices of podiatrists", "621391")
        Call SetListItem("621399 Offices of all other health practitioners", "621399")
        Call SetListItem("621400 Outpatient care centers", "621400")
        Call SetListItem("621900 Other ambulatory health care services", "621900")
    ElseIf BusTypeCode = "Health Care & Social Assistance - Hospitals" Then
        Call SetListItem("622000 Hospitals", "622000")
    ElseIf BusTypeCode = "Health Care & Social Assistance - Nursing & Residential Care Facilities" Then
        Call SetListItem("623000 Nursing and residential care facilities", "623000")
    ElseIf BusTypeCode = "Health Care & Social Assistance - Social Assistance" Then
        Call SetListItem("624410 Child day care services", "624410")
        Call SetListItem("624200 Community food and housing, and other relief services", "624200")
        Call SetListItem("624100 Individual and family services", "624100")
        Call SetListItem("624310 Vocational rehabilitation services", "624310")
    ElseIf BusTypeCode = "Information - General" Then
        Call SetListItem("511000 Publishing industries", "511000")
    ElseIf BusTypeCode = "Information - Broadcasting (except Internet) & Telecommunications" Then
        Call SetListItem("515000 Broadcasting", "515000")
        Call SetListItem("517000 Telecommunications & Internet service providers", "517000")
    ElseIf BusTypeCode = "Information - Data Processing Services" Then
        Call SetListItem("518210 Data processing, hosting, & related services", "518210")
        Call SetListItem("519100 Other information services", "519100")
    ElseIf BusTypeCode = "Information - Motion Picture & Sound Recording" Then
        Call SetListItem("512100 Motion picture and video industries", "512100")
        Call SetListItem("512200 Sound recording industries", "512200")
    ElseIf BusTypeCode = "Manufacturing - General" Then
        Call SetListItem("315000 Apparel mfg.", "315000")
        Call SetListItem("312000 Beverage and tobacco product mfg.", "312000")
        Call SetListItem("334000 Computer and electronic product mfg.", "334000")
        Call SetListItem("335000 Electrical equipment, appliance, and component mfg.", "335000")
        Call SetListItem("332000 Fabricated metal product mfg.", "332000")
        Call SetListItem("337000 Furniture and related product mfg.", "337000")
        Call SetListItem("333000 Machinery mfg.", "333000")
        Call SetListItem("339110 Medical equipment and supplies mfg.", "339110")
        Call SetListItem("322000 Paper mfg.", "322000")
        Call SetListItem("324100 Petroleum and coal products mfg.", "324100")
        Call SetListItem("326000 Plastics and rubber products mfg.", "326000")
        Call SetListItem("331000 Primary metal mfg.", "331000")
        Call SetListItem("323100 Printing and related support activities", "323100")
        Call SetListItem("313000 Textile mills", "313000")
        Call SetListItem("314000 Textile product mills", "314000")
        Call SetListItem("336000 Transportation equipment mfg.", "336000")
        Call SetListItem("321000 Wood product mfg.", "321000")
        Call SetListItem("339900 Other miscellaneous mfg.", "339900")
    ElseIf BusTypeCode = "Manufacturing - Chemical Manufacturing" Then
        Call SetListItem("325100 Basic chemical mfg.", "325100")
        Call SetListItem("325500 Paint, coating, and adhesive mfg.", "325500")
        Call SetListItem("325300 Pesticide, fertilizer, and other agri. chemical mfg.", "325300")
        Call SetListItem("325410 Pharmaceutical and medicine mfg.", "325410")
        Call SetListItem("325200 Resin, synthetic rubber, and synthetic fibers mfg.", "325200")
        Call SetListItem("325600 Soap, cleaning compound, and toilet preparation mfg.", "325600")
        Call SetListItem("325900 Other chemical product and preparation mfg.", "325900")
    ElseIf BusTypeCode = "Manufacturing - Food Manufacturing" Then
        Call SetListItem("311110 Animal food mfg.", "311110")
        Call SetListItem("311800 Bakeries and tortilla mfg.", "311800")
        Call SetListItem("311500 Dairy product mfg.", "311500")
        Call SetListItem("311400 Fruit and vegetable preserving and speciality food mfg.", "311400")
        Call SetListItem("311200 Grain and oilseed milling", "311200")
        Call SetListItem("311610 Animal slaughtering and processing", "311610")
        Call SetListItem("311710 Seafood product preparation and packaging", "311710")
        Call SetListItem("311300 Sugar and confectionery product mfg.", "311300")
        Call SetListItem("311900 Other food mfg.", "311900")
    ElseIf BusTypeCode = "Manufacturing - Leather & Allied Product Manufacturing" Then
        Call SetListItem("316210 Footwear mfg.", "316210")
        Call SetListItem("316110 Leather and hide tanning and finishing", "316110")
        Call SetListItem("316990 Other leather and allied product mfg.", "316990")
    ElseIf BusTypeCode = "Manufacturing - Nonmetallic Mineral Product Manufacturing" Then
        Call SetListItem("327300 Cement and concrete product mfg.", "327300")
        Call SetListItem("327100 Clay product and refractory mfg.", "327100")
        Call SetListItem("327210 Glass and glass product mfg.", "327210")
        Call SetListItem("327400 Lime and gypsum product mfg.", "327400")
        Call SetListItem("327900 Other nonmetallic mineral product mfg.", "327900")
    ElseIf BusTypeCode = "Mining" Then
        Call SetListItem("212110 Coal mining", "212110")
        Call SetListItem("211120 Crude petroleum extraction", "211120")
        Call SetListItem("212200 Metal ore mining", "212200")
        Call SetListItem("211130 Natural gas extraction", "211130")
        Call SetListItem("212300 Nonmetallic mineral mining and quarrying", "212300")
        Call SetListItem("211110 Oil and gas extraction", "211110")
        Call SetListItem("213110 Support activities for mining", "213110")
    ElseIf BusTypeCode = "Other Services - Personal & Laundry Services" Then
        Call SetListItem("812111 Barber shops", "812111")
        Call SetListItem("812112 Beauty salons", "812112")
        Call SetListItem("812220 Cemeteries and crematories", "812220")
        Call SetListItem("812310 Coin-operated laundries and drycleaners", "812310")
        Call SetListItem("812320 Drycleaning and laundry services", "812320")
        Call SetListItem("812210 Funeral homes and funeral services", "812210")
        Call SetListItem("812330 Linen and uniform supply", "812330")
        Call SetListItem("812113 Nail salons", "812113")
        Call SetListItem("812930 Parking lots and garages", "812930")
        Call SetListItem("812910 Pet care services", "812910")
        Call SetListItem("812920 Photofinishing", "812920")
        Call SetListItem("812190 Other personal care services", "812190")
        Call SetListItem("812990 All other personal services", "812990")
     ElseIf BusTypeCode = "Other Services - Repair & Maintenance" Then
        Call SetListItem("811120 Automotive body, paint, interior, and glass repair", "811120")
        Call SetListItem("811110 Automotive repair and maintenance", "811110")
        Call SetListItem("811190 Other automotive repair and maintenance", "811190")
        Call SetListItem("811310 Commercial and industrial machinery and equipment", "811310")
        Call SetListItem("811210 Electronic equipment repair and maintenance", "811210")
        Call SetListItem("811430 Footwear and leather goods repair", "811430")
        Call SetListItem("811410 Home and garden equipment repair and maintenance", "811410")
        Call SetListItem("811420 Reupholstery and furniture repair", "811420")
        Call SetListItem("811490 Other personal and household goods repair and maintenance", "811490")
     ElseIf BusTypeCode = "Professional, Scientific, & Tech. - General" Then
        Call SetListItem("541100 Legal services", "541100")
        Call SetListItem("541211 Office of certified public accountants", "541211")
        Call SetListItem("541214 Payroll services", "541214")
        Call SetListItem("541213 Tax preparation services", "541213")
        Call SetListItem("541219 Other accounting services", "541219")
    ElseIf BusTypeCode = "Professional, Scientific, & Tech. - Architectural, Engineering, & Related Services" Then
        Call SetListItem("541310 Architectural services", "541310")
        Call SetListItem("541350 Building inspection services", "541350")
        Call SetListItem("541340 Drafting services", "541340")
        Call SetListItem("541330 Engineering services", "541330")
        Call SetListItem("541360 Geophysical surveying and mapping services", "541360")
        Call SetListItem("541320 Landscape architecture services", "541320")
        Call SetListItem("541370 Surveying and mapping services", "541370")
        Call SetListItem("541380 Testing laboratories", "541380")
    ElseIf BusTypeCode = "Professional, Scientific, & Tech. - Computer Systems Design & Related Services" Then
        Call SetListItem("541510 Computer systems design and related services", "541510")
    ElseIf BusTypeCode = "Professional, Scientific, & Tech. - Specialized Design Services" Then
        Call SetListItem("541400 Specialized design services", "541400")
    ElseIf BusTypeCode = "Professional, Scientific, & Tech. - Other" Then
        Call SetListItem("541800 Advertising and related services", "541800")
        Call SetListItem("541600 Management, scientific, and technical consulting services", "541600")
        Call SetListItem("541910 Market research and public opinion polling", "541910")
        Call SetListItem("541920 Photographic services", "541920")
        Call SetListItem("541700 Scientific research and development services", "541700")
        Call SetListItem("541930 Translation and interpretation services", "541930")
        Call SetListItem("541940 Veterinary services", "541940")
        Call SetListItem("541990 All other professional, scientific, and technical services", "541990")
    ElseIf BusTypeCode = "Real Estate" Then
        Call SetListItem("531100 Lessors of real estate", "531100")
        Call SetListItem("531210 Offices of real estate agents and brokers", "531210")
        Call SetListItem("531320 Offices of real estate appraisers", "531320")
        Call SetListItem("531310 Real estate property managers", "531310")
        Call SetListItem("531390 Other activities related to real estate", "531390")
    ElseIf BusTypeCode = "Rental & Leasing Services" Then
        Call SetListItem("532100 Automotive equipment rental and leasing", "532100")
        Call SetListItem("532400 Commercial and industrial equipment rental and leasing", "532400")
        Call SetListItem("532210 Consumer electronics and appliances rental", "532210")
        Call SetListItem("532220 Formal wear and costume rental", "532220")
        Call SetListItem("532310 General rental centers", "532310")
        Call SetListItem("532283 Home health equipment rental", "532283")
        Call SetListItem("532284 Recreational goods rental", "532284")
        Call SetListItem("532230 Video tape and disc rental", "532230")
        Call SetListItem("532290 Other consumer goods rental", "532290")
    ElseIf BusTypeCode = "Religious, Grantmaking, Civic, Professional, & Similar Orgs." Then
        Call SetListItem("813000 Religious, civic, professional, and similar organizations", "813000")
    ElseIf BusTypeCode = "Retail Trade - Building Material & Garden Equipment & Supplies Dealers" Then
        Call SetListItem("444130 Hardware stores", "444130")
        Call SetListItem("444110 Home centers", "444110")
        Call SetListItem("444200 Lawn and garden equipment and supplies stores", "444200")
        Call SetListItem("444120 Paint and wallpaper stores", "444120")
        Call SetListItem("444190 Other building materials dealers", "444190")
    ElseIf BusTypeCode = "Retail Trade - Clothing & Accessories Stores" Then
        Call SetListItem("448130 Children's and infants' clothing stores", "448130")
        Call SetListItem("448150 Clothing accessories stores", "448150")
        Call SetListItem("448140 Family clothing stores", "448140")
        Call SetListItem("448310 Jewelry stores", "448310")
        Call SetListItem("448320 Luggage and leather goods stores", "448320")
        Call SetListItem("448110 Men's clothing stores", "448110")
        Call SetListItem("448210 Shoe stores", "448210")
        Call SetListItem("448120 Women's clothing stores", "448120")
        Call SetListItem("448190 Other clothing stores", "448190")
    ElseIf BusTypeCode = "Retail Trade - Electronic & Appliance Stores" Then
        Call SetListItem("443142 Electronics stores (audio, video, computer and camera)", "443142")
        Call SetListItem("443141 Household appliance stores", "443141")
    ElseIf BusTypeCode = "Retail Trade - Food & Beverage Stores" Then
        Call SetListItem("445310 Beer, wine, and liquor stores", "445310")
        Call SetListItem("445220 Fish and seafood markets", "445220")
        Call SetListItem("445230 Fruit and vegetable markets", "445230")
        Call SetListItem("445100 Grocery stores", "445100")
        Call SetListItem("445210 Meat markets", "445210")
        Call SetListItem("445290 Other specialty food stores", "445290")
    ElseIf BusTypeCode = "Retail Trade - Furniture & Home Furnishing Stores" Then
        Call SetListItem("442110 Furniture stores", "442110")
        Call SetListItem("442200 Home furnishings stores", "442200")
    ElseIf BusTypeCode = "Retail Trade - Gasoline Stations" Then
        Call SetListItem("447100 Gasoline stations", "447100")
    ElseIf BusTypeCode = "Retail Trade - General Merchandise Stores" Then
        Call SetListItem("452000 General merchandise stores", "452000")
     ElseIf BusTypeCode = "Retail Trade - Health & Personal Care Stores" Then
        Call SetListItem("446120 Cosmetics, beauty supplies, and perfume stores", "446120")
        Call SetListItem("446130 Optical goods stores", "446130")
        Call SetListItem("446110 Pharmacies and drug stores", "446110")
        Call SetListItem("446190 Other health and personal care stores", "446190")
    ElseIf BusTypeCode = "Retail Trade - Motor Vehicle & Parts Dealers" Then
        Call SetListItem("441300 Automotive parts, accessories, and tire stores", "441300")
        Call SetListItem("441222 Boat dealers", "441222")
        Call SetListItem("441228 Motorcycle, ATV, and all other motor vehicle dealers", "441228")
        Call SetListItem("441110 New car dealers", "441110")
        Call SetListItem("441210 Recreational vehicle dealers", "441210")
        Call SetListItem("441120 Used car dealers", "441120")
    ElseIf BusTypeCode = "Retail Trade - Sporting Goods, Hobby, Book, & Music Stores" Then
        Call SetListItem("451211 Book stores", "451211")
        Call SetListItem("451120 Hobby, toy, and game stores", "451120")
        Call SetListItem("451140 Musical instrument and supplies stores", "451140")
        Call SetListItem("451212 News dealers and newsstands", "451212")
        Call SetListItem("451130 Sewing, needlework, and piece goods stores", "451130")
        Call SetListItem("451110 Sporting goods stores", "451110")
    ElseIf BusTypeCode = "Retail Trade - Miscellaneous Store Retailers" Then
        Call SetListItem("453920 Art dealers", "453920")
        Call SetListItem("453110 Florists", "453110")
        Call SetListItem("453220 Gift, novelty, and souvenir stores", "453220")
        Call SetListItem("453930 Manufactured (mobile) home dealers", "453930")
        Call SetListItem("453210 Office supplies and stationery stores", "453210")
        Call SetListItem("453910 Pet and pet supplies stores", "453910")
        Call SetListItem("453310 Used merchandise stores", "453310")
        Call SetListItem("453990 All other miscellaneous store retailers", "453990")
    ElseIf BusTypeCode = "Retail Trade - Nonstore Retailers" Then
        Call SetListItem("454112 Electronic auctions", "454112")
        Call SetListItem("454111 Electronic shopping", "454111")
        Call SetListItem("454310 Fuel dealers (incl. heating oil and liquefied petroleum)", "454310")
        Call SetListItem("454113 Mail-order houses", "454113")
        Call SetListItem("454210 Vending machine operators", "454210")
        Call SetListItem("454390 Other direct selling establishments", "454390")
    ElseIf BusTypeCode = "Transportation & Warehousing - General" Then
        Call SetListItem("481000 Air transportation", "481000")
        Call SetListItem("485510 Charter bus industry", "485510")
        Call SetListItem("484110 General freight trucking, local", "484110")
        Call SetListItem("484120 General freight trucking, long-distance", "484120")
        Call SetListItem("485210 Interurban and rural bus transportation", "485210")
        Call SetListItem("486000 Pipeline transportation", "486000")
        Call SetListItem("482110 Rail transportation", "482110")
        Call SetListItem("487000 Scenic and sightseeing transportation", "487000")
        Call SetListItem("485410 School and employee bus transportation", "485410")
        Call SetListItem("484200 Specialized freight trucking", "484200")
        Call SetListItem("485300 Taxi and limousine service", "485300")
        Call SetListItem("485110 Urban transit systems", "485110")
        Call SetListItem("483000 Water transportation", "483000")
        Call SetListItem("485990 Other transit and ground passenger transportation", "485990")
        Call SetListItem("488000 Support activities for transportation", "488000")
    ElseIf BusTypeCode = "Transportation & Warehousing - Couriers & Messengers" Then
        Call SetListItem("492000 Couriers and messengers", "492000")
    ElseIf BusTypeCode = "Transportation & Warehousing - Warehousing & Storage Facilities" Then
        Call SetListItem("493100 Warehousing and storage", "493100")
    ElseIf BusTypeCode = "Utilities" Then
        Call SetListItem("221000 Utilities", "221000")
    ElseIf BusTypeCode = "Wholesale Trade - Merchant Wholesalers, Durable Goods" Then
        Call SetListItem("423600 Electrical goods", "423600")
        Call SetListItem("423200 Furniture and home furnishing", "423200")
        Call SetListItem("423700 Hardware, and plumbing and heating equipment and supplies", "423700")
        Call SetListItem("423940 Jewelry, watch, precious stone, and precious metals", "423940")
        Call SetListItem("423300 Lumber and other construction materials", "423300")
        Call SetListItem("423800 Machinery, equipment, and supplies", "423800")
        Call SetListItem("423500 Metal and mineral", "423500")
        Call SetListItem("423100 Motor vehicle and motor vehicle parts and supplies", "423100")
        Call SetListItem("423400 Professional and commercial equipment and supplies", "423400")
        Call SetListItem("423930 Recyclable materials", "423930")
        Call SetListItem("423910 Sporting and recreational goods and supplies", "423910")
        Call SetListItem("423920 Toy and hobby goods and supplies", "423920")
        Call SetListItem("423990 Other miscellaneous durable goods", "423990")
    ElseIf BusTypeCode = "Wholesale Trade - Merchant Wholesalers, Nondurable Goods" Then
        Call SetListItem("424300 Apparel, piece goods, and notions", "424300")
        Call SetListItem("424800 Beer, wine, and distilled alcoholic beverage", "424800")
        Call SetListItem("424920 Books, periodicals, and newspapers", "424920")
        Call SetListItem("424600 Chemical and allied products", "424600")
        Call SetListItem("424210 Drugs and druggists' sundries", "424210")
        Call SetListItem("424500 Farm product raw materials", "424500")
        Call SetListItem("424910 Farm supplies", "424910")
        Call SetListItem("424930 Flower, nursery stock, and florists' supplies", "424930")
        Call SetListItem("424400 Grocery and related products", "424400")
        Call SetListItem("424950 Paint, varnish, and supplies", "424950")
        Call SetListItem("424100 Paper and paper products", "424100")
        Call SetListItem("424700 Petroleum and petroleum products", "424700")
        Call SetListItem("424940 Tobacco and tobacco products", "424940")
        Call SetListItem("424990 Other miscellaneous nondurable goods", "424990")
    ElseIf BusTypeCode = "Wholesale Electronic Markets and Agents & Brokers" Then
        Call SetListItem("425110 Business to business electronic markets", "425110")
        Call SetListItem("425120 Wholesale trade agents and brokers", "425120")
    ElseIf BusTypeCode = "View All Codes" Then
        Call SetListItem("112900 Animal production", "112900")
        Call SetListItem("113000 Forestry and logging", "113000")
        Call SetListItem("114110 Fishing", "114110")
        Call SetListItem("114210 Hunting and trapping", "114210")
        Call SetListItem("115110 Support activities for crop production", "115110")
        Call SetListItem("115210 Support activities for animal production", "115210")
        Call SetListItem("115310 Support activities for forestry", "115310")
        Call SetListItem("211110 Oil and gas extraction", "211110")
        Call SetListItem("211120 Crude petroleum extraction", "211120")
        Call SetListItem("211130 Natural gas extraction", "211130")
        Call SetListItem("212110 Coal mining", "212110")
        Call SetListItem("212200 Metal ore mining", "212200")
        Call SetListItem("212300 Nonmetallic mineral mining and quarrying", "212300")
        Call SetListItem("213110 Support activities for mining", "213110")
        Call SetListItem("221000 Utilities", "221000")
        Call SetListItem("236100 Residential building construction", "236100")
        Call SetListItem("236200 Nonresidential building construction", "236200")
        Call SetListItem("237100 Utility system construction", "237100")
        Call SetListItem("237210 Land subdivision", "237210")
        Call SetListItem("237310 Highway, street, and bridge construction", "237310")
        Call SetListItem("237990 Other heavy engineering construction", "237990")
        Call SetListItem("238110 Poured concrete contractors", "238110")
        Call SetListItem("238120 Structural steel construction contractors", "238120")
        Call SetListItem("238130 Framing carpentry contractors", "238130")
        Call SetListItem("238140 Masonry contractors", "238140")
        Call SetListItem("238150 Glass and glazing contractors", "238150")
        Call SetListItem("238160 Roofing contractors", "238160")
        Call SetListItem("238170 Siding contractors", "238170")
        Call SetListItem("238190 Other foundation and structure contractors", "238190")
        Call SetListItem("238210 Electrical contractors", "238210")
        Call SetListItem("238220 Plumbing, heating and air conditioning contractors", "238220")
        Call SetListItem("238290 Other building equipment contractors", "238290")
        Call SetListItem("238310 Drywall and insulation contractors", "238310")
        Call SetListItem("238320 Painting and wall covering contractors", "238320")
        Call SetListItem("238330 Floor contractors", "238330")
        Call SetListItem("238340 Tile and terrazzo contractors", "238340")
        Call SetListItem("238350 Finish carpentry contractors", "238350")
        Call SetListItem("238390 Other building finishing contractors", "238390")
        Call SetListItem("238910 Site preparation contractors", "238910")
        Call SetListItem("238990 All other specialty trade contractors", "238990")
        Call SetListItem("311110 Animal food mfg.", "311110")
        Call SetListItem("311200 Grain and oilseed milling", "311200")
        Call SetListItem("311300 Sugar and confectionery product mfg.", "311300")
        Call SetListItem("311400 Fruit and vegetable preserving and speciality food mfg.", "311400")
        Call SetListItem("311500 Dairy product mfg.", "311500")
        Call SetListItem("311610 Animal slaughtering and processing", "311610")
        Call SetListItem("311710 Seafood product preparation and packaging", "311710")
        Call SetListItem("311800 Bakeries and tortilla mfg.", "311800")
        Call SetListItem("311900 Other food mfg.", "311900")
        Call SetListItem("312000 Beverage and tobacco product mfg.", "312000")
        Call SetListItem("313000 Textile mills", "313000")
        Call SetListItem("314000 Textile product mills", "314000")
        Call SetListItem("315000 Apparel mfg.", "315000")
        Call SetListItem("316110 Leather and hide tanning and finishing", "316110")
        Call SetListItem("316210 Footwear mfg.", "316210")
        Call SetListItem("316990 Other leather and allied product mfg.", "316990")
        Call SetListItem("321000 Wood product mfg.", "321000")
        Call SetListItem("322000 Paper mfg.", "322000")
        Call SetListItem("323100 Printing and related support activities", "323100")
        Call SetListItem("324100 Petroleum and coal products mfg.", "324100")
        Call SetListItem("325100 Basic chemical mfg.", "325100")
        Call SetListItem("325200 Resin, synthetic rubber, and synthetic fibers mfg.", "325200")
        Call SetListItem("325300 Pesticide, fertilizer, and other agri. chemical mfg.", "325300")
        Call SetListItem("325410 Pharmaceutical and medicine mfg.", "325410")
        Call SetListItem("325500 Paint, coating, and adhesive mfg.", "325500")
        Call SetListItem("325600 Soap, cleaning compound, and toilet preparation mfg.", "325600")
        Call SetListItem("325900 Other chemical product and preparation mfg.", "325900")
        Call SetListItem("326000 Plastics and rubber products mfg.", "326000")
        Call SetListItem("327100 Clay product and refractory mfg.", "327100")
        Call SetListItem("327210 Glass and glass product mfg.", "327210")
        Call SetListItem("327300 Cement and concrete product mfg.", "327300")
        Call SetListItem("327400 Lime and gypsum product mfg.", "327400")
        Call SetListItem("327900 Other nonmetallic mineral product mfg.", "327900")
        Call SetListItem("331000 Primary metal mfg.", "331000")
        Call SetListItem("332000 Fabricated metal product mfg.", "332000")
        Call SetListItem("333000 Machinery mfg.", "333000")
        Call SetListItem("334000 Computer and electronic product mfg.", "334000")
        Call SetListItem("335000 Electrical equipment, appliance, and component mfg.", "335000")
        Call SetListItem("336000 Transportation equipment mfg.", "336000")
        Call SetListItem("337000 Furniture and related product mfg.", "337000")
        Call SetListItem("339110 Medical equipment and supplies mfg.", "339110")
        Call SetListItem("339900 Other miscellaneous mfg.", "339900")
        Call SetListItem("423100 Motor vehicle and motor vehicle parts and supplies", "423100")
        Call SetListItem("423200 Furniture and home furnishing", "423200")
        Call SetListItem("423300 Lumber and other construction materials", "423300")
        Call SetListItem("423400 Professional and commercial equipment and supplies", "423400")
        Call SetListItem("423500 Metal and mineral", "423500")
        Call SetListItem("423600 Electrical goods", "423600")
        Call SetListItem("423700 Hardware, and plumbing and heating equipment and supplies", "423700")
        Call SetListItem("423800 Machinery, equipment, and supplies", "423800")
        Call SetListItem("423910 Sporting and recreational goods and supplies", "423910")
        Call SetListItem("423920 Toy and hobby goods and supplies", "423920")
        Call SetListItem("423930 Recyclable materials", "423930")
        Call SetListItem("423940 Jewelry, watch, precious stone, and precious metals", "423940")
        Call SetListItem("423990 Other miscellaneous durable goods", "423990")
        Call SetListItem("424100 Paper and paper products", "424100")
        Call SetListItem("424210 Drugs and druggists' sundries", "424210")
        Call SetListItem("424300 Apparel, piece goods, and notions", "424300")
        Call SetListItem("424400 Grocery and related products", "424400")
        Call SetListItem("424500 Farm product raw materials", "424500")
        Call SetListItem("424600 Chemical and allied products", "424600")
        Call SetListItem("424700 Petroleum and petroleum products", "424700")
        Call SetListItem("424800 Beer, wine, and distilled alcoholic beverage", "424800")
        Call SetListItem("424910 Farm supplies", "424910")
        Call SetListItem("424920 Books, periodicals, and newspapers", "424920")
        Call SetListItem("424930 Flower, nursery stock, and florists' supplies", "424930")
        Call SetListItem("424940 Tobacco and tobacco products", "424940")
        Call SetListItem("424950 Paint, varnish, and supplies", "424950")
        Call SetListItem("424990 Other miscellaneous nondurable goods", "424990")
        Call SetListItem("425110 Business to business electronic markets", "425110")
        Call SetListItem("425120 Wholesale trade agents and brokers", "425120")
        Call SetListItem("441110 New car dealers", "441110")
        Call SetListItem("441120 Used car dealers", "441120")
        Call SetListItem("441210 Recreational vehicle dealers", "441210")
        Call SetListItem("441222 Boat dealers", "441222")
        Call SetListItem("441228 Motorcycle, ATV, and all other motor vehicle dealers", "441228")
        Call SetListItem("441300 Automotive parts, accessories, and tire stores", "441300")
        Call SetListItem("442110 Furniture stores", "442110")
        Call SetListItem("442200 Home furnishings stores", "442200")
        Call SetListItem("443141 Electronic stores (incl. audio, video, computer and camera)", "443141")
        Call SetListItem("443142 Household appliance stores", "443142")
        Call SetListItem("444110 Home centers", "444110")
        Call SetListItem("444120 Paint and wallpaper stores", "444120")
        Call SetListItem("444130 Hardware stores", "444130")
        Call SetListItem("444190 Other building materials dealers", "444190")
        Call SetListItem("444200 Lawn and garden equipment and supplies stores", "444200")
        Call SetListItem("445100 Grocery stores", "445100")
        Call SetListItem("445210 Meat markets", "445210")
        Call SetListItem("445220 Fish and seafood markets", "445220")
        Call SetListItem("445230 Fruit and vegetable markets", "445230")
        Call SetListItem("445290 Other specialty food stores", "445290")
        Call SetListItem("445310 Beer, wine, and liquor stores", "445310")
        Call SetListItem("446110 Pharmacies and drug stores", "446110")
        Call SetListItem("446120 Cosmetics, beauty supplies, and perfume stores", "446120")
        Call SetListItem("446130 Optical goods stores", "446130")
        Call SetListItem("446190 Other health and personal care stores", "446190")
        Call SetListItem("447100 Gasoline stations", "447100")
        Call SetListItem("448110 Men's clothing stores", "448110")
        Call SetListItem("448120 Women's clothing stores", "448120")
        Call SetListItem("448130 Children's and infants' clothing stores", "448130")
        Call SetListItem("448140 Family clothing stores", "448140")
        Call SetListItem("448150 Clothing accessories stores", "448150")
        Call SetListItem("448190 Other clothing stores", "448190")
        Call SetListItem("448210 Shoe stores", "448210")
        Call SetListItem("448310 Jewelry stores", "448310")
        Call SetListItem("448320 Luggage and leather goods stores", "448320")
        Call SetListItem("451110 Sporting goods stores", "451110")
        Call SetListItem("451120 Hobby, toy, and game stores", "451120")
        Call SetListItem("451130 Sewing, needlework, and piece goods stores", "451130")
        Call SetListItem("451140 Musical instrument and supplies stores", "451140")
        Call SetListItem("451211 Book stores", "451211")
        Call SetListItem("451212 News dealers and newsstands", "451212")
        Call SetListItem("452000 General merchandise stores", "452000")
        Call SetListItem("453110 Florists", "453110")
        Call SetListItem("453210 Office supplies and stationery stores", "453210")
        Call SetListItem("453220 Gift, novelty, and souvenir stores", "453220")
        Call SetListItem("453310 Used merchandise stores", "453310")
        Call SetListItem("453910 Pet and pet supplies stores", "453910")
        Call SetListItem("453920 Art dealers", "453920")
        Call SetListItem("453930 Manufactured (mobile) home dealers", "453930")
        Call SetListItem("453990 All other miscellaneous store retailers", "453990")
        Call SetListItem("454111 Electronic shopping", "454111")
        Call SetListItem("454112 Electronic auctions", "454112")
        Call SetListItem("454113 Mail-order houses", "454113")
        Call SetListItem("454210 Vending machine operators", "454210")
        Call SetListItem("454310 Fuel dealers (incl. heating oil and liquefied petroleum)", "454310")
        Call SetListItem("454390 Other direct selling establishments", "454390")
        Call SetListItem("481000 Air transportation", "481000")
        Call SetListItem("482110 Rail transportation", "482110")
        Call SetListItem("483000 Water transportation", "483000")
        Call SetListItem("484110 General freight trucking, local", "484110")
        Call SetListItem("484120 General freight trucking, long-distance", "484120")
        Call SetListItem("484200 Specialized freight trucking", "484200")
        Call SetListItem("485110 Urban transit systems", "485110")
        Call SetListItem("485210 Interurban and rural bus transportation", "485210")
        Call SetListItem("485300 Taxi and limousine service", "485300")
        Call SetListItem("485410 School and employee bus transportation", "485410")
        Call SetListItem("485510 Charter bus industry", "485510")
        Call SetListItem("485990 Other transit and ground passenger transportation", "485990")
        Call SetListItem("486000 Pipeline transportation", "486000")
        Call SetListItem("487000 Scenic and sightseeing transportation", "487000")
        Call SetListItem("488000 Support activities for transportation", "488000")
        Call SetListItem("492000 Couriers and messengers", "492000")
        Call SetListItem("493100 Warehousing and storage", "493100")
        Call SetListItem("511000 Publishing industries", "511000")
        Call SetListItem("512100 Motion picture and video industries", "512100")
        Call SetListItem("512200 Sound recording industries", "512200")
        Call SetListItem("515000 Broadcasting", "515000")
        Call SetListItem("517000 Telecommunications & Internet service providers", "517000")
        Call SetListItem("518210 Data processing, hosting, & related services", "518210")
        Call SetListItem("519100 Other information services", "519100")
        Call SetListItem("522100 Depository credit intermediation", "522100")
        Call SetListItem("522200 Nondepository credit intermediation", "522200")
        Call SetListItem("522300 Activities related to credit intermediation", "522300")
        Call SetListItem("523110 Investment bankers and securities dealers", "523110")
        Call SetListItem("523120 Securities brokers", "523120")
        Call SetListItem("523130 Commodity contracts dealers", "523130")
        Call SetListItem("523140 Commodity contracts brokers", "523140")
        Call SetListItem("523210 Securities and commodity exchanges", "523210")
        Call SetListItem("523900 Other financial investment activities", "523900")
        Call SetListItem("524210 Insurance agencies and brokerages", "524210")
        Call SetListItem("524290 Other insurance related activities", "524290")
        Call SetListItem("531100 Lessors of real estate", "531100")
        Call SetListItem("531210 Offices of real estate agents and brokers", "531210")
        Call SetListItem("531310 Real estate property managers", "531310")
        Call SetListItem("531320 Offices of real estate appraisers", "531320")
        Call SetListItem("531390 Other activities related to real estate", "531390")
        Call SetListItem("532100 Automotive equipment rental and leasing", "532100")
        Call SetListItem("532210 Consumer electronics and appliances rental", "532210")
        Call SetListItem("532220 Formal wear and costume rental", "532220")
        Call SetListItem("532230 Video tape and disc rental", "532230")
        Call SetListItem("532283 Home health equipment rental", "532283")
        Call SetListItem("532284 Recreational goods rental", "532284")
        Call SetListItem("532290 Other consumer goods rental", "532290")
        Call SetListItem("532310 General rental centers", "532310")
        Call SetListItem("532400 Commercial and industrial equipment rental and leasing", "532400")
        Call SetListItem("541100 Legal services", "541100")
        Call SetListItem("541211 Office of certified public accountants", "541211")
        Call SetListItem("541213 Tax preparation services", "541213")
        Call SetListItem("541214 Payroll services", "541214")
        Call SetListItem("541219 Other accounting services", "541219")
        Call SetListItem("541310 Architectural services", "541310")
        Call SetListItem("541320 Landscape architecture services", "541320")
        Call SetListItem("541330 Engineering services", "541330")
        Call SetListItem("541340 Drafting services", "541340")
        Call SetListItem("541350 Building inspection services", "541350")
        Call SetListItem("541360 Geophysical surveying and mapping services", "541360")
        Call SetListItem("541370 Surveying and mapping services", "541370")
        Call SetListItem("541380 Testing laboratories", "541380")
        Call SetListItem("541400 Specialized design services", "541400")
        Call SetListItem("541510 Computer systems design and related services", "541510")
        Call SetListItem("541600 Management, scientific, and technical consulting services", "541600")
        Call SetListItem("541700 Scientific research and development services", "541700")
        Call SetListItem("541800 Advertising and related services", "541800")
        Call SetListItem("541910 Market research and public opinion polling", "541910")
        Call SetListItem("541920 Photographic services", "541920")
        Call SetListItem("541930 Translation and interpretation services", "541930")
        Call SetListItem("541940 Veterinary services", "541940")
        Call SetListItem("541990 All other professional, scientific, and technical services", "541990")
        Call SetListItem("561110 Office administrative services", "561110")
        Call SetListItem("561210 Facilities support services", "561210")
        Call SetListItem("561300 Employment services", "561300")
        Call SetListItem("561410 Document preparation services", "561410")
        Call SetListItem("561420 Telephone call centers", "561420")
        Call SetListItem("561430 Business service centers", "561430")
        Call SetListItem("561440 Collection agencies", "561440")
        Call SetListItem("561450 Credit bureaus", "561450")
        Call SetListItem("561490 Other business support services", "561490")
        Call SetListItem("561500 Travel arrangement and reservation services", "561500")
        Call SetListItem("561600 Investigation and security services", "561600")
        Call SetListItem("561710 Exterminating and pest control services", "561710")
        Call SetListItem("561720 Janitorial services", "561720")
        Call SetListItem("561730 Landscaping services", "561730")
        Call SetListItem("561740 Carpet and upholstery cleaning services", "561740")
        Call SetListItem("561790 Other services to buildings and dwellings", "561790")
        Call SetListItem("561900 Other support services", "561900")
        Call SetListItem("562000 Waste management and remediation services", "562000")
        Call SetListItem("611000 Educational services", "611000")
        Call SetListItem("621111 Offices of physicians", "621111")
        Call SetListItem("621112 Offices of mental health specialists", "621112")
        Call SetListItem("621210 Offices of dentists", "621210")
        Call SetListItem("621310 Offices of chiropractors", "621310")
        Call SetListItem("621320 Offices of optometrists", "621320")
        Call SetListItem("621330 Offices of mental health practitioners", "621330")
        Call SetListItem("621340 Offices of physical, occupational and speech therapists", "621340")
        Call SetListItem("621391 Offices of podiatrists", "621391")
        Call SetListItem("621399 Offices of all other health practitioners", "621399")
        Call SetListItem("621400 Outpatient care centers", "621400")
        Call SetListItem("621510 Medical and diagnostic laboratories", "621510")
        Call SetListItem("621610 Home health care services", "621610")
        Call SetListItem("621900 Other ambulatory health care services", "621900")
        Call SetListItem("622000 Hospitals", "622000")
        Call SetListItem("623000 Nursing and residential care facilities", "623000")
        Call SetListItem("624100 Individual and family services", "624100")
        Call SetListItem("624200 Community food and housing, and other relief services", "624200")
        Call SetListItem("624310 Vocational rehabilitation services", "624310")
        Call SetListItem("624410 Child day care services", "624410")
        Call SetListItem("711100 Performing arts companies", "711100")
        Call SetListItem("711210 Spectator sports", "711210")
        Call SetListItem("711300 Promoters of performing arts, sports, and events", "711300")
        Call SetListItem("711410 Agents and managers for public figures", "711410")
        Call SetListItem("711510 Independent artists, writers, and performers", "711510")
        Call SetListItem("712100 Museums, historical sites, and similar institutions", "712100")
        Call SetListItem("713100 Amusement parks and arcades", "713100")
        Call SetListItem("713200 Gambling industries", "713200")
        Call SetListItem("713900 Other amusement and recreation services", "713900")
        Call SetListItem("721100 Travel accommodation", "721100")
        Call SetListItem("721210 RV parks and recreational camps", "721210")
        Call SetListItem("721310 Rooming and boarding houses", "721310")
        Call SetListItem("722300 Special food services", "722300")
        Call SetListItem("722410 Drinking places (alcoholic beverages)", "722410")
        Call SetListItem("722511 Full-service restaurants", "722511")
        Call SetListItem("722513 Limited-service restaurants", "722513")
        Call SetListItem("722514 Cafeterias and buffets", "722514")
        Call SetListItem("722515 Snack and non-alcoholic beverage bars", "722515")
        Call SetListItem("811110 Automotive repair and maintenance", "811110")
        Call SetListItem("811120 Automotive body, paint, interior, and glass repair", "811120")
        Call SetListItem("811190 Other automotive repair and maintenance", "811190")
        Call SetListItem("811210 Electronic equipment repair and maintenance", "811210")
        Call SetListItem("811310 Commercial and industrial machinery and equipment", "811310")
        Call SetListItem("811410 Home and garden equipment repair and maintenance", "811410")
        Call SetListItem("811420 Reupholstery and furniture repair", "811420")
        Call SetListItem("811430 Footwear and leather goods repair", "811430")
        Call SetListItem("811490 Other personal and household goods repair and maintenance", "811490")
        Call SetListItem("812111 Barber shops", "812111")
        Call SetListItem("812112 Beauty salons", "812112")
        Call SetListItem("812113 Nail salons", "812113")
        Call SetListItem("812190 Other personal care services", "812190")
        Call SetListItem("812210 Funeral homes and funeral services", "812210")
        Call SetListItem("812220 Cemeteries and crematories", "812220")
        Call SetListItem("812310 Coin-operated laundries and drycleaners", "812310")
        Call SetListItem("812320 Drycleaning and laundry services", "812320")
        Call SetListItem("812330 Linen and uniform supply", "812330")
        Call SetListItem("812910 Pet care services", "812910")
        Call SetListItem("812920 Photofinishing", "812920")
        Call SetListItem("812930 Parking lots and garages", "812930")
        Call SetListItem("812990 All other personal services", "812990")
        Call SetListItem("813000 Religious, civic, professional, and similar organizations", "813000")
        Call SetListItem("999999 Unclassified establishments", "999999")
    Else
        Call SetListItem("999999 Unclassified establishments", "999999")
    End If
End Function

Private Sub OnlineBusTypeCodes_SetList()
  ListTitle = "Online Business Codes"
  ListItem = "Administrative or Office Support Services"
  ListItem = "Agriculture, Forestry or Mining"
  ListItem = "Animal Husbandry and Pet Services"
  ListItem = "Arts and Entertainment"
  ListItem = "Auto, Repair or Maintenance"
  ListItem = "Beauty, Cleaning or Other Personal Services"
  ListItem = "Business, Marketing, Sales or Consultants"
  ListItem = "Construction and Home Improvement"
  ListItem = "Design, Photography or Audio/Video"
  ListItem = "Engineering, Scientific, and Technical Services"
  ListItem = "Finance, Accounting, or Insurance"
  ListItem = "Healthcare, Residential or Daycare Services"
  ListItem = "Hospitality and Food Services"
  ListItem = "Hunting and Fishing"
  ListItem = "Manufacturing"
  ListItem = "Real Estate, Rental or Leasing"
  ListItem = "Retail or Dealers"
  ListItem = "Transportation, Package or Food Delivery"
  ListItem = "Warehousing or Storage Facilities"
  ListItem = "Wholesale Trade"
  ListItem = "Unclassified Establishments"
End Sub

Public Function ProfCodesList_SetDynaList()
    ' used in online
    Call SetListTitle("ProfCodesList")
    
    Dim CategoryName As String
    
    CategoryName = GetString(USSchC.CategoryName, GetCopy())
    
    If CategoryName = "Transportation" Then
        Call SetListItem("Air transportation", "481000 Air transportation")
        Call SetListItem("Charter bus industry", "485510 Charter bus industry")
        Call SetListItem("Couriers, messengers, and food delivery services", "492000 Couriers, messengers, and food delivery services")
        Call SetListItem("General freight trucking, local", "484110 General freight trucking, local")
        Call SetListItem("General freight trucking, long-distance", "484120 General freight trucking, long-distance")
        Call SetListItem("Interurban and rural bus transportation", "485210 Interurban and rural bus transportation")
        Call SetListItem("Other transit and ground passenger transportation", "485990 Other transit and ground passenger transportation")
        Call SetListItem("Pipeline transportation", "486000 Pipeline transportation")
        Call SetListItem("Rail transportation", "482110 Rail transportation")
        Call SetListItem("Scenic and sightseeing transportation", "487000 Scenic and sightseeing transportation")
        Call SetListItem("School and employee bus transportation", "485410 School and employee bus transportation")
        Call SetListItem("Specialized freight trucking (including household moving vans)", "484200 Specialized freight trucking")
        Call SetListItem("Support activities for transportation (including motor vehicle towing)", "488000 Support activities for transportation")
        Call SetListItem("Taxi, limousine and rideshare services", "485300 Taxi, limousine and rideshare services")
        Call SetListItem("Urban transit systems", "485110 Urban transit systems")
        Call SetListItem("Water transportation", "483000 Water transportation")
        Call SetListItem("None", "999999 Unclassified establishments")
    ElseIf CategoryName = "Hospitality" Then
        Call SetListItem("Cafeterias and buffets", "722514 Cafeterias and buffets")
        Call SetListItem("Drinking places (alcoholic beverages)", "722410 Drinking places (alcoholic beverages)")
        Call SetListItem("Full-service restaurants", "722511 Full-service restaurants")
        Call SetListItem("Limited-service restaurants", "722513 Limited-service restaurants")
        Call SetListItem("Rooming and boarding houses, dormitories, and workers' camps", "721310 Rooming and boarding houses, dormitories, and workers' camps")
        Call SetListItem("RV (recreational vehicle) parks and recreational camps", "721210 RV parks and recreational camps")
        Call SetListItem("Snack and non-alcoholic beverage bars", "722515 Snack and non-alcoholic beverage bars")
        Call SetListItem("Special food services", "722300 Special food services")
        Call SetListItem("Traveler accommodations (including hotels, motels, and bed and breakfast inns)", "721100 Travel accommodations")
        Call SetListItem("None", "999999 Unclassified establishments")
    ElseIf CategoryName = "Arts" Then
        Call SetListItem("Agents and managers for public figures", "711410 Agents and managers for public figures")
        Call SetListItem("Amusement parks and arcades", "713100 Amusement parks and arcades")
        Call SetListItem("Gambling industries", "713200 Gambling industries")
        Call SetListItem("Independent artists, writers, and performers", "711510 Independent artists, writers, and performers")
        Call SetListItem("Museums, historical sites, and similar institutions", "712100 Museums, historical sites, and similar institutions")
        Call SetListItem("Other amusement and recreation services (including golf courses, skiing facilities, marinas, fitness centers, bowling centers, skating rinks, miniature golf courses)", "713900 Other amusement and recreation services")
        Call SetListItem("Performing arts companies", "711100 Performing arts companies")
        Call SetListItem("Promoters of performing arts, sports, and events", "711300 Promoters of performing arts, sports, and events")
        Call SetListItem("Spectator sports (including professional sports clubs and racetrack operations)", "711210 Spectator sports")
        Call SetListItem("None", "999999 Unclassified establishments")
    ElseIf CategoryName = "Design" Then
        Call SetListItem("Broadcasting (except Internet)", "515000 Broadcasting (except Internet)")
        Call SetListItem("Motion picture and video industries (except video rental)", "512100 Motion picture and video industries")
        Call SetListItem("Other information services (including news syndicates and libraries, Internet publishing and broadcasting)", "519100 Other information services")
        Call SetListItem("Photofinishing", "812920 Photofinishing")
        Call SetListItem("Photographic services", "541920 Photographic services")
        Call SetListItem("Sound recording industries", "512200 Sound recording industries")
        Call SetListItem("Specialized design services (including interior, industrial, graphic, and fashion design)", "541400 Specialized design services")
        Call SetListItem("None", "999999 Unclassified establishments")
    ElseIf CategoryName = "Finance" Then
        Call SetListItem("Activities related to credit intermediation (including loan brokers)", "522300 Activities related to credit intermediation")
        Call SetListItem("Commodity contracts brokers", "523140 Commodity contracts brokers")
        Call SetListItem("Commodity contracts dealers", "523130 Commodity contracts dealers")
        Call SetListItem("Depository credit intermediation (including commercial banking, savings institutions, and credit unions)", "522100 Depository credit intermediation")
        Call SetListItem("Insurance agencies and brokerages", "524210 Insurance agencies and brokerages")
        Call SetListItem("Investment bankers and securities dealers", "523110 Investment bankers and securities dealers")
        Call SetListItem("Nondepository credit intermediation (including sales financing and consumer lending)", "522200 Nondepository credit intermediation")
        Call SetListItem("Office of certified public accountants", "541211 Office of certified public accountants")
        Call SetListItem("Other accounting services", "541219 Other accounting services")
        Call SetListItem("Other financial investment activities (including investment advise)", "523900 Other financial investment activities")
        Call SetListItem("Other insurance related activities", "524290 Other insurance related activities")
        Call SetListItem("Payroll services", "541214 Payroll services")
        Call SetListItem("Securities and commodity exchanges", "523210 Securities and commodity exchanges")
        Call SetListItem("Securities brokers", "523120 Securities brokers")
        Call SetListItem("Tax preparation services", "541213 Tax preparation services")
        Call SetListItem("None", "999999 Unclassified establishments")
    ElseIf CategoryName = "Construction" Then
        Call SetListItem("Drywall and insulation contractors", "238310 Drywall and insulation contractors")
        Call SetListItem("Electrical contractors", "238210 Electrical contractors")
        Call SetListItem("Finish carpentry contractors", "238350 Finish carpentry contractors")
        Call SetListItem("Floor contractors", "238330 Floor contractors")
        Call SetListItem("Framing carpentry contractors", "238130 Framing carpentry contractors")
        Call SetListItem("Glass and glazing contractors", "238150 Glass and glazing contractors")
        Call SetListItem("Highway, street, and bridge construction", "237310 Highway, street, and bridge construction")
        Call SetListItem("Land subdivision", "237210 Land subdivision")
        Call SetListItem("Masonry contractors", "238140 Masonry contractors")
        Call SetListItem("Nonresidential building construction", "236200 Nonresidential building construction")
        Call SetListItem("Other building equipment contractors", "238290 Other building equipment contractors")
        Call SetListItem("Other building finishing contractors", "238390 Other building finishing contractors")
        Call SetListItem("Other foundation, structure and building exterior contractors", "238190 Other foundation and structure contractors")
        Call SetListItem("Other heavy and civil engineering construction", "237990 Other heavy and civil engineering construction")
        Call SetListItem("Painting and wall covering contractors", "238320 Painting and wall covering contractors")
        Call SetListItem("Plumbing, heating and air conditioning contractors", "238220 Plumbing, heating and air conditioning contractors")
        Call SetListItem("Poured concrete foundation and structure contractors", "238110 Poured concrete contractors")
        Call SetListItem("Residential building construction", "236100 Residential building construction")
        Call SetListItem("Roofing contractors", "238160 Roofing contractors")
        Call SetListItem("Siding contractors", "238170 Siding contractors")
        Call SetListItem("Site preparation contractors", "238910 Site preparation contractors")
        Call SetListItem("Structural steel and precast concrete construction contractors", "238120 Structural steel construction contractors")
        Call SetListItem("Tile and terrazzo contractors", "238340 Tile and terrazzo contractors")
        Call SetListItem("Utility system construction", "237100 Utility system construction")
        Call SetListItem("All other specialty trade contractors", "238990 All other specialty trade contractors")
        Call SetListItem("None", "999999 Unclassified establishments")
    ElseIf CategoryName = "Business" Then
        Call SetListItem("Advertising and related services", "541800 Advertising and related services")
        Call SetListItem("Broadcasting (except Internet)", "515000 Broadcasting")
        Call SetListItem("Legal services", "541100 Legal services")
        Call SetListItem("Management, scientific, and technical consulting services", "541600 Management, scientific, and technical consulting services")
        Call SetListItem("Market research and public opinion polling", "541910 Market research and public opinion polling")
        Call SetListItem("Other information services (including news syndicates and libraries, Internet publishing and broadcasting)", "519100 Other information services")
        Call SetListItem("Publishing industries (except Internet)", "511000 Publishing industries")
        Call SetListItem("All other professional, scientific, and technical services", "541990 All other professional, scientific, and technical services")
        Call SetListItem("None", "999999 Unclassified establishments")
    ElseIf CategoryName = "Engineering" Then
        Call SetListItem("Architectural services", "541310 Architectural services")
        Call SetListItem("Building inspection services", "541350 Building inspection services")
        Call SetListItem("Computer systems design and related services", "541510 Computer systems design and related services")
        Call SetListItem("Data processing, hosting, and related services", "518210 Data processing, hosting, and related services")
        Call SetListItem("Drafting services", "541340 Drafting services")
        Call SetListItem("Engineering services", "541330 Engineering services")
        Call SetListItem("Geophysical surveying and mapping services", "541360 Geophysical surveying and mapping services")
        Call SetListItem("Landscape architecture services", "541320 Landscape architecture services")
        Call SetListItem("Management, scientific, and technical consulting services", "541600 Management, scientific, and technical consulting services")
        Call SetListItem("Scientific research and development services", "541700 Scientific research and development services")
        Call SetListItem("Surveying and mapping services", "541370 Surveying and mapping services")
        Call SetListItem("Telecommunications and Internet service providers", "517000 Telecommunications and Internet service providers")
        Call SetListItem("Testing laboratories", "541380 Testing laboratories")
        Call SetListItem("All other professional, scientific, and technical services", "541990 All other professional, scientific, and technical services")
        Call SetListItem("None", "999999 Unclassified establishments")
    ElseIf CategoryName = "Retail" Then
        Call SetListItem("Art dealers", "453920 Art dealers")
        Call SetListItem("Automotive parts, accessories, and tire stores", "441300 Automotive parts, accessories, and tire stores")
        Call SetListItem("Beer, wine, and liquor stores", "445310 Beer, wine, and liquor stores")
        Call SetListItem("Boat dealers", "441222 Boat dealers")
        Call SetListItem("Book stores", "451211 Book stores")
        Call SetListItem("Children's and infants' clothing stores", "448130 Children's and infants' clothing stores")
        Call SetListItem("Clothing accessories stores", "448150 Clothing accessories stores")
        Call SetListItem("Cosmetics, beauty supplies, and perfume stores", "446120 Cosmetics, beauty supplies, and perfume stores")
        Call SetListItem("Electronic auctions", "454112 Electronic auctions")
        Call SetListItem("Electronic shopping", "454111 Electronic shopping")
        Call SetListItem("Electronic stores (incl. audio, video, computer and camera)", "443141 Electronic stores (incl. audio, video, computer and camera)")
        Call SetListItem("Family clothing stores", "448140 Family clothing stores")
        Call SetListItem("Fish and seafood markets", "445220 Fish and seafood markets")
        Call SetListItem("Florists", "453110 Florists")
        Call SetListItem("Fruit and vegetable markets", "445230 Fruit and vegetable markets")
        Call SetListItem("Fuel dealers (incl. heating oil and liquefied petroleum)", "454310 Fuel dealers (incl. heating oil and liquefied petroleum)")
        Call SetListItem("Furniture stores", "442110 Furniture stores")
        Call SetListItem("Gasoline stations (including convenience stores with gas)", "447100 Gasoline stations")
        Call SetListItem("General merchandise stores", "452000 General merchandise stores")
        Call SetListItem("Gift, novelty, and souvenir stores", "453220 Gift, novelty, and souvenir stores")
        Call SetListItem("Grocery stores (including supermarkets and convenience stores without gas)", "445100 Grocery stores")
        Call SetListItem("Hardware stores", "444130 Hardware stores")
        Call SetListItem("Hobby, toy, and game stores", "451120 Hobby, toy, and game stores")
        Call SetListItem("Home centers", "444110 Home centers")
        Call SetListItem("Home furnishings stores", "442200 Home furnishings stores")
        Call SetListItem("Household appliance stores", "443142 Household appliance stores")
        Call SetListItem("Jewelry stores", "448310 Jewelry stores")
        Call SetListItem("Lawn and garden equipment and supplies stores", "444200 Lawn and garden equipment and supplies stores")
        Call SetListItem("Luggage and leather goods stores", "448320 Luggage and leather goods stores")
        Call SetListItem("Mail-order houses", "454113 Mail-order houses")
        Call SetListItem("Manufactured (mobile) home dealers", "453930 Manufactured (mobile) home dealers")
        Call SetListItem("Meat markets", "445210 Meat markets")
        Call SetListItem("Men's clothing stores", "448110 Men's clothing stores")
        Call SetListItem("Motorcycle, ATV, and all other motor vehicle dealers", "441228 Motorcycle, ATV, and all other motor vehicle dealers")
        Call SetListItem("Musical instrument and supplies stores", "451140 Musical instrument and supplies stores")
        Call SetListItem("New car dealers", "441110 New car dealers")
        Call SetListItem("News dealers and newsstands", "451212 News dealers and newsstands")
        Call SetListItem("Office supplies and stationery stores", "453210 Office supplies and stationery stores")
        Call SetListItem("Optical goods stores", "446130 Optical goods stores")
        Call SetListItem("Other building materials dealers", "444190 Other building materials dealers")
        Call SetListItem("Other clothing stores", "448190 Other clothing stores")
        Call SetListItem("Other direct selling establishments (including door-to-door retailing, frozen food plan providers, party plan merchandisers, and coffee-break service providers)", "454390 Other direct selling establishments")
        Call SetListItem("Other health and personal care stores", "446190 Other health and personal care stores")
        Call SetListItem("Other miscellaneous store retailers (including tobacco, candle, and trophy shops)", "453990 All other miscellaneous store retailers")
        Call SetListItem("Other specialty food stores", "445290 Other specialty food stores")
        Call SetListItem("Paint and wallpaper stores", "444120 Paint and wallpaper stores")
        Call SetListItem("Pet and pet supplies stores", "453910 Pet and pet supplies stores")
        Call SetListItem("Pharmacies and drug stores", "446110 Pharmacies and drug stores")
        Call SetListItem("Recreational vehicle dealers (including motor home and travel trailer dealers)", "441210 Recreational vehicle dealers")
        Call SetListItem("Sewing, needlework, and piece goods stores", "451130 Sewing, needlework, and piece goods stores")
        Call SetListItem("Shoe stores", "448210 Shoe stores")
        Call SetListItem("Sporting goods stores", "451110 Sporting goods stores")
        Call SetListItem("Used car dealers", "441120 Used car dealers")
        Call SetListItem("Used merchandise stores", "453310 Used merchandise stores")
        Call SetListItem("Vending machine operators", "454210 Vending machine operators")
        Call SetListItem("Women's clothing stores", "448120 Women's clothing stores")
        Call SetListItem("None", "999999 Unclassified establishments")
    ElseIf CategoryName = "Administrative" Then
        Call SetListItem("Business service centers (including private mail centers and copy shops)", "561430 Business service centers")
        Call SetListItem("Collection agencies", "561440 Collection agencies")
        Call SetListItem("Credit bureaus", "561450 Credit bureaus")
        Call SetListItem("Document preparation services", "561410 Document preparation services")
        Call SetListItem("Employment services", "561300 Employment services")
        Call SetListItem("Facilities support (management) services", "561210 Facilities support services")
        Call SetListItem("Office administrative services", "561110 Office administrative services")
        Call SetListItem("Other business support services (including repossession services, court reporting, and stenotype services)", "561490 Other business support services")
        Call SetListItem("Other services to buildings and dwellings", "561790 Other services to buildings and dwellings")
        Call SetListItem("Other support services (including packaging and labeling services, and convention and trade show organizers)", "561900 Other support services")
        Call SetListItem("Telephone call centers (including telephone answering services and telemarketing bureaus)", "561420 Telephone call centers")
        Call SetListItem("None", "999999 Unclassified establishments")
    ElseIf CategoryName = "Healthcare" Then
        Call SetListItem("Child day care services", "624410 Child day care services")
        Call SetListItem("Community food and housing, and emergency, and other relief services", "624200 Community food and housing, and emergency, and other relief services")
        Call SetListItem("Home health care services", "621610 Home health care services")
        Call SetListItem("Hospitals", "622000 Hospitals")
        Call SetListItem("Individual and family services", "624100 Individual and family services")
        Call SetListItem("Medical and diagnostic laboratories", "621510 Medical and diagnostic laboratories")
        Call SetListItem("Nursing and residential care facilities", "623000 Nursing and residential care facilities")
        Call SetListItem("Offices of chiropractors", "621310 Offices of chiropractors")
        Call SetListItem("Offices of dentists", "621210 Offices of dentists")
        Call SetListItem("Offices of mental health practitioners (except physicians)", "621330 Offices of mental health practitioners")
        Call SetListItem("Offices of mental health specialists", "621112 Offices of mental health specialists")
        Call SetListItem("Offices of optometrists", "621320 Offices of optometrists")
        Call SetListItem("Offices of physical, occupational, speech therapists, and audiologists", "621340 Offices of physical, occupational, speech therapists, and audiologists")
        Call SetListItem("Offices of physicians (except mental health specialists)", "621111 Offices of physicians")
        Call SetListItem("Offices of podiatrists", "621391 Offices of podiatrists")
        Call SetListItem("Offices of all other miscellaneous health practitioners", "621399 Offices of all other miscellaneous health practitioners")
        Call SetListItem("Other ambulatory health care services (including ambulance services, blood, and organ banks)", "621900 Other ambulatory health care services")
        Call SetListItem("Outpatient care centers", "621400 Outpatient care centers")
        Call SetListItem("Vocational rehabilitation services", "624310 Vocational rehabilitation services")
        Call SetListItem("None", "999999 Unclassified establishments")
    ElseIf CategoryName = "Beauty" Then
        Call SetListItem("Barber shops", "812111 Barber shops")
        Call SetListItem("Beauty salons", "812112 Beauty salons")
        Call SetListItem("Carpet and upholstery cleaning services", "561740 Carpet and upholstery cleaning services")
        Call SetListItem("Cemeteries and crematorie", "812220 Cemeteries and crematories")
        Call SetListItem("Coin-operated laundries and drycleaners", "812310 Coin-operated laundries and drycleaners")
        Call SetListItem("Drycleaning and laundry services (except coin operated) (including laundry and drycleaning drop-off and pickup sites)", "812320 Drycleaning and laundry services")
        Call SetListItem("Educational services (including schools, colleges, and universities)", "611000 Educational services")
        Call SetListItem("Exterminating and pest control services", "561710 Exterminating and pest control services")
        Call SetListItem("Funeral homes and funeral services", "812210 Funeral homes and funeral services")
        Call SetListItem("Investigation and security services", "561600 Investigation and security services")
        Call SetListItem("Janitorial services", "561720 Janitorial services")
        Call SetListItem("Landscaping services", "561730 Landscaping services")
        Call SetListItem("Linen and uniform supply", "812330 Linen and uniform supply")
        Call SetListItem("Nail salons", "812113 Nail salons")
        Call SetListItem("Other personal care services (including diet and weight reducing centers)", "812190 Other personal care services")
        Call SetListItem("Parking lots and garages", "812930 Parking lots and garages")
        Call SetListItem("Religious, grantmaking, civic, professional, and similar organizations", "813000 Religious, grantmaking, civic, professional, and similar organizations")
        Call SetListItem("Translation and interpretation services", "541930 Translation and interpretation services")
        Call SetListItem("Travel arrangement and reservation services", "561500 Travel arrangement and reservation services")
        Call SetListItem("Utilities", "221000 Utilities")
        Call SetListItem("Waste management and remediation services", "562000 Waste management and remediation services")
        Call SetListItem("All other personal services", "812990 All other personal services")
        Call SetListItem("None", "999999 Unclassified establishments")
    ElseIf CategoryName = "Auto" Then
        Call SetListItem("Automotive mechanical and electrical repair and maintenance", "811110 Automotive repair and maintenance")
        Call SetListItem("Automotive body, paint, interior, and glass repair", "811120 Automotive body, paint, interior, and glass repair")
        Call SetListItem("Commercial and industrial machinery and equipment (except automotive and electronic) repair and maintenance", "811310 Commercial and industrial machinery and equipment")
        Call SetListItem("Electronic and precision equipment repair and maintenance", "811210 Electronic equipment repair and maintenance")
        Call SetListItem("Footwear and leather goods repair", "811430 Footwear and leather goods repair")
        Call SetListItem("Home and garden equipment repair and maintenance", "811410 Home and garden equipment repair and maintenance")
        Call SetListItem("Other automotive repair and maintenance (including oil change and lubrication shops and car washes", "811190 Other automotive repair and maintenance")
        Call SetListItem("Other personal and household goods repair and maintenance", "811490 Other personal and household goods repair and maintenance")
        Call SetListItem("Reupholstery and furniture repair", "811420 Reupholstery and furniture repair")
        Call SetListItem("None", "999999 Unclassified establishments")
    ElseIf CategoryName = "Real Estate" Then
        Call SetListItem("Automotive equipment rental and leasing", "532100 Automotive equipment rental and leasing")
        Call SetListItem("Commercial and industrial equipment rental and leasing", "532400 Commercial and industrial equipment rental and leasing")
        Call SetListItem("Consumer electronics and appliances rental", "532210 Consumer electronics and appliances rental")
        Call SetListItem("Formal wear and costume rental", "532220 Formal wear and costume rental")
        Call SetListItem("General rental centers", "532310 General rental centers")
        Call SetListItem("Home health equipment rental", "532283 Home health equipment rental")
        Call SetListItem("Lessors of real estate (including miniwarehouses and self-storage units)", "531100 Lessors of real estate")
        Call SetListItem("Offices of real estate agents and brokers", "531210 Offices of real estate agents and brokers")
        Call SetListItem("Offices of real estate appraisers", "531320 Offices of real estate appraisers")
        Call SetListItem("Other activities related to real estate", "531390 Other activities related to real estate")
        Call SetListItem("Other consumer goods rental", "532290 Other consumer goods rental")
        Call SetListItem("Real estate property managers", "531310 Real estate property managers")
        Call SetListItem("Recreational goods rental", "532284 Recreational goods rental")
        Call SetListItem("Video tape and disc rental", "532230 Video tape and disc rental")
        Call SetListItem("None", "999999 Unclassified establishments")
    ElseIf CategoryName = "Agriculture" Then
        Call SetListItem("Coal mining", "212110 Coal mining")
        Call SetListItem("Crude petroleum extraction", "211120 Crude petroleum extraction")
        Call SetListItem("Forestry and logging", "113000 Forestry and logging")
        Call SetListItem("Metal ore mining", "212200 Metal ore mining")
        Call SetListItem("Natural gas extraction", "211130 Natural gas extraction")
        Call SetListItem("Nonmetallic mineral mining and quarrying", "212300 Nonmetallic mineral mining and quarrying")
        Call SetListItem("Oil and gas extraction", "211110 Oil and gas extraction")
        Call SetListItem("Support activities for crop production", "115110 Support activities for crop production")
        Call SetListItem("Support activities for forestry", "115310 Support activities for forestry")
        Call SetListItem("Support activities for mining", "213110 Support activities for mining")
        Call SetListItem("None", "999999 Unclassified establishments")
    ElseIf CategoryName = "Hunting" Then
        Call SetListItem("Fishing", "114110 Fishing")
        Call SetListItem("Hunting and trapping", "114210 Hunting and trapping")
        Call SetListItem("None", "999999 Unclassified establishments")
    ElseIf CategoryName = "Animal" Then
        Call SetListItem("Animal production (including breeding of cats and dogs)", "112900 Animal production")
        Call SetListItem("Pet care (except veterinary) services", "812910 Pet care services")
        Call SetListItem("Support activities for animal production (including farriers)", "115210 Support activities for animal production")
        Call SetListItem("Veterinary services", "541940 Veterinary services")
        Call SetListItem("None", "999999 Unclassified establishments")
    ElseIf CategoryName = "Manufacturing" Then
        Call SetListItem("Animal food mfg.", "311110 Animal food mfg.")
        Call SetListItem("Animal slaughtering and processing", "311610 Animal slaughtering and processing")
        Call SetListItem("Apparel mfg.", "315000 Apparel mfg.")
        Call SetListItem("Bakeries, tortilla and dry pasta mfg.", "311800 Bakeries and tortilla mfg.")
        Call SetListItem("Basic chemical mfg.", "325100 Basic chemical mfg.")
        Call SetListItem("Beverage and tobacco product mfg.", "312000 Beverage and tobacco product mfg.")
        Call SetListItem("Cement and concrete product mfg.", "327300 Cement and concrete product mfg.")
        Call SetListItem("Clay product and refractory mfg.", "327100 Clay product and refractory mfg.")
        Call SetListItem("Computer and electronic product mfg.", "334000 Computer and electronic product mfg.")
        Call SetListItem("Dairy product mfg.", "311500 Dairy product mfg.")
        Call SetListItem("Electrical equipment, appliance, and component mfg.", "335000 Electrical equipment, appliance, and component mfg.")
        Call SetListItem("Fabricated metal product mfg.", "332000 Fabricated metal product mfg.")
        Call SetListItem("Footwear mfg. (including leather, rubber, and plastics)", "316210 Footwear mfg.")
        Call SetListItem("Fruit and vegetable preserving and speciality food mfg.", "311400 Fruit and vegetable preserving and speciality food mfg.")
        Call SetListItem("Furniture and related product mfg.", "337000 Furniture and related product mfg.")
        Call SetListItem("Glass and glass product mfg.", "327210 Glass and glass product mfg.")
        Call SetListItem("Grain and oilseed milling", "311200 Grain and oilseed milling")
        Call SetListItem("Leather and hide tanning and finishing", "316110 Leather and hide tanning and finishing")
        Call SetListItem("Lime and gypsum product mfg.", "327400 Lime and gypsum product mfg.")
        Call SetListItem("Machinery mfg.", "333000 Machinery mfg.")
        Call SetListItem("Medical equipment and supplies mfg.", "339110 Medical equipment and supplies mfg.")
        Call SetListItem("Other chemical product and preparation mfg.", "325900 Other chemical product and preparation mfg.")
        Call SetListItem("Other food mfg. (including coffee, tea, flavorings, and seasonings)", "311900 Other food mfg.")
        Call SetListItem("Other leather and allied product mfg.", "316990 Other leather and allied product mfg.")
        Call SetListItem("Other miscellaneous mfg.", "339900 Other miscellaneous mfg.")
        Call SetListItem("Other nonmetallic mineral product mfg.", "327900 Other nonmetallic mineral product mfg.")
        Call SetListItem("Paint, coating, and adhesive mfg.", "325500 Paint, coating, and adhesive mfg.")
        Call SetListItem("Paper mfg.", "322000 Paper mfg.")
        Call SetListItem("Pesticide, fertilizer, and other agri. chemical mfg.", "325300 Pesticide, fertilizer, and other agri. chemical mfg.")
        Call SetListItem("Petroleum and coal products mfg.", "324100 Petroleum and coal products mfg.")
        Call SetListItem("Pharmaceutical and medicine mfg.", "325410 Pharmaceutical and medicine mfg.")
        Call SetListItem("Plastics and rubber products mfg.", "326000 Plastics and rubber products mfg.")
        Call SetListItem("Primary metal mfg.", "331000 Primary metal mfg.")
        Call SetListItem("Printing and related support activities", "323100 Printing and related support activities")
        Call SetListItem("Resin, synthetic rubber, and artificial and synthetic fibers and filaments mfg.", "325200 Resin, synthetic rubber, and synthetic fibers mfg.")
        Call SetListItem("Seafood product preparation and packaging", "311710 Seafood product preparation and packaging")
        Call SetListItem("Soap, cleaning compound, and toilet preparation mfg.", "325600 Soap, cleaning compound, and toilet preparation mfg.")
        Call SetListItem("Sugar and confectionery product mfg.", "311300 Sugar and confectionery product mfg.")
        Call SetListItem("Textile mills", "313000 Textile mills")
        Call SetListItem("Textile product mills", "314000 Textile product mills")
        Call SetListItem("Transportation equipment mfg.", "336000 Transportation equipment mfg.")
        Call SetListItem("Wood product mfg.", "321000 Wood product mfg.")
        Call SetListItem("None", "999999 Unclassified establishments")
    ElseIf CategoryName = "Wholesale" Then
        Call SetListItem("Apparel, piece goods, and notions", "424300 Apparel, piece goods, and notions")
        Call SetListItem("Beer, wine, and distilled alcoholic beverage", "424800 Beer, wine, and distilled alcoholic beverage")
        Call SetListItem("Books, periodicals, and newspapers", "424920 Books, periodicals, and newspapers")
        Call SetListItem("Business to business electronic markets", "425110 Business to business electronic markets")
        Call SetListItem("Chemical and allied products", "424600 Chemical and allied products")
        Call SetListItem("Drugs and druggists' sundries", "424210 Drugs and druggists' sundries")
        Call SetListItem("Farm product raw materials", "424500 Farm product raw materials")
        Call SetListItem("Farm supplies", "424910 Farm supplies")
        Call SetListItem("Flower, nursery stock, and florists' supplies", "424930 Flower, nursery stock, and florists' supplies")
        Call SetListItem("Furniture and home furnishing", "423200 Furniture and home furnishing")
        Call SetListItem("Grocery and related products", "424400 Grocery and related products")
        Call SetListItem("Hardware, and plumbing and heating equipment and supplies", "423700 Hardware, and plumbing and heating equipment and supplies")
        Call SetListItem("Household applicances and electrical and electronic goods", "423600 Household applicances and electrical goods")
        Call SetListItem("Jewelry, watch, precious stone, and precious metals", "423940 Jewelry, watch, precious stone, and precious metals")
        Call SetListItem("Lumber and other construction materials", "423300 Lumber and other construction materials")
        Call SetListItem("Machinery, equipment, and supplies", "423800 Machinery, equipment, and supplies")
        Call SetListItem("Metal and mineral (except petroleum)", "423500 Metal and mineral")
        Call SetListItem("Motor vehicle and motor vehicle parts and supplies", "423100 Motor vehicle and motor vehicle parts and supplies")
        Call SetListItem("Other miscellaneous durable goods", "423990 Other miscellaneous durable goods")
        Call SetListItem("Other miscellaneous nondurable goods", "424990 Other miscellaneous nondurable goods")
        Call SetListItem("Paint, varnish, and supplies", "424950 Paint, varnish, and supplies")
        Call SetListItem("Paper and paper products", "424100 Paper and paper products")
        Call SetListItem("Petroleum and petroleum products", "424700 Petroleum and petroleum products")
        Call SetListItem("Professional and commercial equipment and supplies", "423400 Professional and commercial equipment and supplies")
        Call SetListItem("Recyclable materials", "423930 Recyclable materials")
        Call SetListItem("Sporting and recreational goods and supplies", "423910 Sporting and recreational goods and supplies")
        Call SetListItem("Tobacco and tobacco products", "424940 Tobacco and tobacco products")
        Call SetListItem("Toy and hobby goods and supplies", "423920 Toy and hobby goods and supplies")
        Call SetListItem("Wholesale trade agents and brokers", "425120 Wholesale trade agents and brokers")
        Call SetListItem("None", "999999 Unclassified establishments")
    ElseIf CategoryName = "Warehouse" Then
        Call SetListItem("Warehousing and storage (except leases of miniwash)", "493100 Warehousing and storage")
        Call SetListItem("None", "999999 Unclassified establishments")
    ElseIf CategoryName = "Unclassified" Then
        Call SetListItem("Unclassified establishments (unable to classify)", "999999 Unclassified establishments")
    Else
        Call SetListItem("Unclassified establishments (unable to classify)", "999999 Unclassified establishments")
    End If
End Function

Public Function ProfCodeStr(strCode As String) As String

    If strCode = "" Then
        ProfCodeStr = ""
    ElseIf strCode = "481000" Then
        ProfCodeStr = "481000 Air transportation"
    ElseIf strCode = "485510" Then
        ProfCodeStr = "485510 Charter bus industry"
    ElseIf strCode = "492000" Then
        ProfCodeStr = "492000 Couriers, messengers, and food delivery services"
    ElseIf strCode = "484110" Then
        ProfCodeStr = "484110 General freight trucking, local"
    ElseIf strCode = "484120" Then
        ProfCodeStr = "484120 General freight trucking, long-distance"
    ElseIf strCode = "485210" Then
        ProfCodeStr = "485210 Interurban and rural bus transportation"
    ElseIf strCode = "485990" Then
        ProfCodeStr = "485990 Other transit and ground passenger transportation"
    ElseIf strCode = "486000" Then
        ProfCodeStr = "486000 Pipeline transportation"
    ElseIf strCode = "482110" Then
        ProfCodeStr = "482110 Rail transportation"
    ElseIf strCode = "487000" Then
        ProfCodeStr = "487000 Scenic and sightseeing transportation"
    ElseIf strCode = "485410" Then
        ProfCodeStr = "485410 School and employee bus transportation"
    ElseIf strCode = "484200" Then
        ProfCodeStr = "484200 Specialized freight trucking"
    ElseIf strCode = "488000" Then
        ProfCodeStr = "488000 Support activities for transportation"
    ElseIf strCode = "485300" Then
        ProfCodeStr = "485300 Taxi, limousine and rideshare services"
    ElseIf strCode = "485110" Then
        ProfCodeStr = "485110 Urban transit systems"
    ElseIf strCode = "483000" Then
        ProfCodeStr = "483000 Water transportation"
    End If
    If strCode = "722514" Then
        ProfCodeStr = "722514 Cafeterias and buffets"
    ElseIf strCode = "722410" Then
        ProfCodeStr = "722410 Drinking places (alcoholic beverages)"
    ElseIf strCode = "722511" Then
        ProfCodeStr = "722511 Full-service restaurants"
    ElseIf strCode = "722513" Then
        ProfCodeStr = "722513 Limited-service restaurants"
    ElseIf strCode = "721310" Then
        ProfCodeStr = "721310 Rooming and boarding houses, dormitories, and workers' camps"
    ElseIf strCode = "721210" Then
        ProfCodeStr = "721210 RV parks and recreational camps"
    ElseIf strCode = "722515" Then
        ProfCodeStr = "722515 Snack and non-alcoholic beverage bars"
    ElseIf strCode = "722300" Then
        ProfCodeStr = "722300 Special food services"
    ElseIf strCode = "721100" Then
        ProfCodeStr = "721100 Travel accommodations"
    End If
    If strCode = "711410" Then
        ProfCodeStr = "711410 Agents and managers for public figures"
    ElseIf strCode = "713100" Then
        ProfCodeStr = "713100 Amusement parks and arcades"
    ElseIf strCode = "713200" Then
        ProfCodeStr = "713200 Gambling industries"
    ElseIf strCode = "711510" Then
        ProfCodeStr = "711510 Independent artists, writers, and performers"
    ElseIf strCode = "712100" Then
        ProfCodeStr = "712100 Museums, historical sites, and similar institutions"
    ElseIf strCode = "713900" Then
        ProfCodeStr = "713900 Other amusement and recreation services"
    ElseIf strCode = "711100" Then
        ProfCodeStr = "711100 Performing arts companies"
    ElseIf strCode = "711300" Then
        ProfCodeStr = "711300 Promoters of performing arts, sports, and events"
    ElseIf strCode = "711210" Then
        ProfCodeStr = "711210 Spectator sports"
    End If
    If strCode = "515000" Then
        ProfCodeStr = "515000 Broadcasting (except Internet)"
    ElseIf strCode = "512100" Then
        ProfCodeStr = "512100 Motion picture and video industries"
    ElseIf strCode = "519100" Then
        ProfCodeStr = "519100 Other information services"
    ElseIf strCode = "812920" Then
        ProfCodeStr = "812920 Photofinishing"
    ElseIf strCode = "541920" Then
        ProfCodeStr = "541920 Photographic services"
    ElseIf strCode = "512200" Then
        ProfCodeStr = "512200 Sound recording industries"
    ElseIf strCode = "541400" Then
        ProfCodeStr = "541400 Specialized design services"
    End If
    If strCode = "522300" Then
        ProfCodeStr = "522300 Activities related to credit intermediation"
    ElseIf strCode = "523140" Then
        ProfCodeStr = "523140 Commodity contracts brokers"
    ElseIf strCode = "523130" Then
        ProfCodeStr = "523130 Commodity contracts dealers"
    ElseIf strCode = "522100" Then
        ProfCodeStr = "522100 Depository credit intermediation"
    ElseIf strCode = "524210" Then
        ProfCodeStr = "524210 Insurance agencies and brokerages"
    ElseIf strCode = "523110" Then
        ProfCodeStr = "523110 Investment bankers and securities dealers"
    ElseIf strCode = "522200" Then
        ProfCodeStr = "522200 Nondepository credit intermediation"
    ElseIf strCode = "541211" Then
        ProfCodeStr = "541211 Office of certified public accountants"
    ElseIf strCode = "541219" Then
        ProfCodeStr = "541219 Other accounting services"
    ElseIf strCode = "523900" Then
        ProfCodeStr = "523900 Other financial investment activities"
    ElseIf strCode = "524290" Then
        ProfCodeStr = "524290 Other insurance related activities"
    ElseIf strCode = "541214" Then
        ProfCodeStr = "541214 Payroll services"
    ElseIf strCode = "523210" Then
        ProfCodeStr = "523210 Securities and commodity exchanges"
    ElseIf strCode = "523120" Then
        ProfCodeStr = "523120 Securities brokers"
    ElseIf strCode = "541213" Then
        ProfCodeStr = "541213 Tax preparation services"
    End If
    If strCode = "238310" Then
        ProfCodeStr = "238310 Drywall and insulation contractors"
    ElseIf strCode = "238210" Then
        ProfCodeStr = "238210 Electrical contractors"
    ElseIf strCode = "238350" Then
        ProfCodeStr = "238350 Finish carpentry contractors"
    ElseIf strCode = "238330" Then
        ProfCodeStr = "238330 Floor contractors"
    ElseIf strCode = "238130" Then
        ProfCodeStr = "238130 Framing carpentry contractors"
    ElseIf strCode = "238150" Then
        ProfCodeStr = "238150 Glass and glazing contractors"
    ElseIf strCode = "237310" Then
        ProfCodeStr = "237310 Highway, street, and bridge construction"
    ElseIf strCode = "237210" Then
        ProfCodeStr = "237210 Land subdivision"
    ElseIf strCode = "238140" Then
        ProfCodeStr = "238140 Masonry contractors"
    ElseIf strCode = "236200" Then
        ProfCodeStr = "236200 Nonresidential building construction"
    ElseIf strCode = "238290" Then
        ProfCodeStr = "238290 Other building equipment contractors"
    ElseIf strCode = "238390" Then
        ProfCodeStr = "238390 Other building finishing contractors"
    ElseIf strCode = "238190" Then
        ProfCodeStr = "238190 Other foundation and structure contractors"
    ElseIf strCode = "237990" Then
        ProfCodeStr = "237990 Other heavy and civil engineering construction"
    ElseIf strCode = "238320" Then
        ProfCodeStr = "238320 Painting and wall covering contractors"
    ElseIf strCode = "238220" Then
        ProfCodeStr = "238220 Plumbing, heating and air conditioning contractors"
    ElseIf strCode = "238110" Then
        ProfCodeStr = "238110 Poured concrete contractors"
    ElseIf strCode = "236100" Then
        ProfCodeStr = "236100 Residential building construction"
    ElseIf strCode = "238160" Then
        ProfCodeStr = "238160 Roofing contractors"
    ElseIf strCode = "238170" Then
        ProfCodeStr = "238170 Siding contractors"
    ElseIf strCode = "238910" Then
        ProfCodeStr = "238910 Site preparation contractors"
    ElseIf strCode = "238120" Then
        ProfCodeStr = "238120 Structural steel construction contractors"
    ElseIf strCode = "238340" Then
        ProfCodeStr = "238340 Tile and terrazzo contractors"
    ElseIf strCode = "237100" Then
        ProfCodeStr = "237100 Utility system construction"
    ElseIf strCode = "238990" Then
        ProfCodeStr = "238990 All other specialty trade contractors"
    End If
    If strCode = "541800" Then
        ProfCodeStr = "541800 Advertising and related services"
    ElseIf strCode = "515000" Then
        ProfCodeStr = "515000 Broadcasting"
    ElseIf strCode = "541100" Then
        ProfCodeStr = "541100 Legal services"
    ElseIf strCode = "541600" Then
        ProfCodeStr = "541600 Management, scientific, and technical consulting services"
    ElseIf strCode = "541910" Then
        ProfCodeStr = "541910 Market research and public opinion polling"
    ElseIf strCode = "519100" Then
        ProfCodeStr = "519100 Other information services"
    ElseIf strCode = "511000" Then
        ProfCodeStr = "511000 Publishing industries"
    ElseIf strCode = "541990" Then
        ProfCodeStr = "541990 All other professional, scientific, and technical services"
    End If
    If strCode = "541310" Then
        ProfCodeStr = "541310 Architectural services"
    ElseIf strCode = "541350" Then
        ProfCodeStr = "541350 Building inspection services"
    ElseIf strCode = "541510" Then
        ProfCodeStr = "541510 Computer systems design and related services"
    ElseIf strCode = "518210" Then
        ProfCodeStr = "518210 Data processing, hosting, and related services"
    ElseIf strCode = "541340" Then
        ProfCodeStr = "541340 Drafting services"
    ElseIf strCode = "541330" Then
        ProfCodeStr = "541330 Engineering services"
    ElseIf strCode = "541360" Then
        ProfCodeStr = "541360 Geophysical surveying and mapping services"
    ElseIf strCode = "541320" Then
        ProfCodeStr = "541320 Landscape architecture services"
    ElseIf strCode = "541600" Then
        ProfCodeStr = "541600 Management, scientific, and technical consulting services"
    ElseIf strCode = "541700" Then
        ProfCodeStr = "541700 Scientific research and development services"
    ElseIf strCode = "541370" Then
        ProfCodeStr = "541370 Surveying and mapping services"
    ElseIf strCode = "517000" Then
        ProfCodeStr = "517000 Telecommunications and Internet service providers"
    ElseIf strCode = "541380" Then
        ProfCodeStr = "541380 Testing laboratories"
    ElseIf strCode = "541990" Then
        ProfCodeStr = "541990 All other professional, scientific, and technical services"
    End If
    If strCode = "453920" Then
        ProfCodeStr = "453920 Art dealers"
    ElseIf strCode = "441300" Then
        ProfCodeStr = "441300 Automotive parts, accessories, and tire stores"
    ElseIf strCode = "445310" Then
        ProfCodeStr = "445310 Beer, wine, and liquor stores"
    ElseIf strCode = "441222" Then
        ProfCodeStr = "441222 Boat dealers"
    ElseIf strCode = "451211" Then
        ProfCodeStr = "451211 Book stores"
    ElseIf strCode = "448130" Then
        ProfCodeStr = "448130 Children's and infants' clothing stores"
    ElseIf strCode = "448150" Then
        ProfCodeStr = "448150 Clothing accessories stores"
    ElseIf strCode = "446120" Then
        ProfCodeStr = "446120 Cosmetics, beauty supplies, and perfume stores"
    ElseIf strCode = "454112" Then
        ProfCodeStr = "454112 Electronic auctions"
    ElseIf strCode = "454111" Then
        ProfCodeStr = "454111 Electronic shopping"
    ElseIf strCode = "443141" Then
        ProfCodeStr = "443141 Electronic stores (incl. audio, video, computer and camera)"
    ElseIf strCode = "448140" Then
        ProfCodeStr = "448140 Family clothing stores"
    ElseIf strCode = "445220" Then
        ProfCodeStr = "445220 Fish and seafood markets"
    ElseIf strCode = "453110" Then
        ProfCodeStr = "453110 Florists"
    ElseIf strCode = "445230" Then
        ProfCodeStr = "445230 Fruit and vegetable markets"
    ElseIf strCode = "454310" Then
        ProfCodeStr = "454310 Fuel dealers (incl. heating oil and liquefied petroleum)"
    ElseIf strCode = "442110" Then
        ProfCodeStr = "442110 Furniture stores"
    ElseIf strCode = "447100" Then
        ProfCodeStr = "447100 Gasoline stations"
    ElseIf strCode = "452000" Then
        ProfCodeStr = "452000 General merchandise stores"
    ElseIf strCode = "453220" Then
        ProfCodeStr = "453220 Gift, novelty, and souvenir stores"
    ElseIf strCode = "445100" Then
        ProfCodeStr = "445100 Grocery stores"
    ElseIf strCode = "444130" Then
        ProfCodeStr = "444130 Hardware stores"
    ElseIf strCode = "451120" Then
        ProfCodeStr = "451120 Hobby, toy, and game stores"
    ElseIf strCode = "444110" Then
        ProfCodeStr = "444110 Home centers"
    ElseIf strCode = "442200" Then
        ProfCodeStr = "442200 Home furnishings stores"
    ElseIf strCode = "443142" Then
        ProfCodeStr = "443142 Household appliance stores"
    ElseIf strCode = "448310" Then
        ProfCodeStr = "448310 Jewelry stores"
    ElseIf strCode = "444200" Then
        ProfCodeStr = "444200 Lawn and garden equipment and supplies stores"
    ElseIf strCode = "448320" Then
        ProfCodeStr = "448320 Luggage and leather goods stores"
    ElseIf strCode = "454113" Then
        ProfCodeStr = "454113 Mail-order houses"
    ElseIf strCode = "453930" Then
        ProfCodeStr = "453930 Manufactured (mobile) home dealers"
    ElseIf strCode = "445210" Then
        ProfCodeStr = "445210 Meat markets"
    ElseIf strCode = "448110" Then
        ProfCodeStr = "448110 Men's clothing stores"
    ElseIf strCode = "441228" Then
        ProfCodeStr = "441228 Motorcycle, ATV, and all other motor vehicle dealers"
    ElseIf strCode = "451140" Then
        ProfCodeStr = "451140 Musical instrument and supplies stores"
    ElseIf strCode = "441110" Then
        ProfCodeStr = "441110 New car dealers"
    ElseIf strCode = "451212" Then
        ProfCodeStr = "451212 News dealers and newsstands"
    ElseIf strCode = "453210" Then
        ProfCodeStr = "453210 Office supplies and stationery stores"
    ElseIf strCode = "446130" Then
        ProfCodeStr = "446130 Optical goods stores"
    ElseIf strCode = "444190" Then
        ProfCodeStr = "444190 Other building materials dealers"
    ElseIf strCode = "448190" Then
        ProfCodeStr = "448190 Other clothing stores"
    ElseIf strCode = "454390" Then
        ProfCodeStr = "454390 Other direct selling establishments"
    ElseIf strCode = "446190" Then
        ProfCodeStr = "446190 Other health and personal care stores"
    ElseIf strCode = "453990" Then
        ProfCodeStr = "453990 All other miscellaneous store retailers"
    ElseIf strCode = "445290" Then
        ProfCodeStr = "445290 Other specialty food stores"
    ElseIf strCode = "444120" Then
        ProfCodeStr = "444120 Paint and wallpaper stores"
    ElseIf strCode = "453910" Then
        ProfCodeStr = "453910 Pet and pet supplies stores"
    ElseIf strCode = "446110" Then
        ProfCodeStr = "446110 Pharmacies and drug stores"
    ElseIf strCode = "441210" Then
        ProfCodeStr = "441210 Recreational vehicle dealers"
    ElseIf strCode = "451130" Then
        ProfCodeStr = "451130 Sewing, needlework, and piece goods stores"
    ElseIf strCode = "448210" Then
        ProfCodeStr = "448210 Shoe stores"
    ElseIf strCode = "451110" Then
        ProfCodeStr = "451110 Sporting goods stores"
    ElseIf strCode = "441120" Then
        ProfCodeStr = "441120 Used car dealers"
    ElseIf strCode = "453310" Then
        ProfCodeStr = "453310 Used merchandise stores"
    ElseIf strCode = "454210" Then
        ProfCodeStr = "454210 Vending machine operators"
    ElseIf strCode = "448120" Then
        ProfCodeStr = "448120 Women's clothing stores"
    End If
    If strCode = "561430" Then
        ProfCodeStr = "561430 Business service centers"
    ElseIf strCode = "561440" Then
        ProfCodeStr = "561440 Collection agencies"
    ElseIf strCode = "561450" Then
        ProfCodeStr = "561450 Credit bureaus"
    ElseIf strCode = "561410" Then
        ProfCodeStr = "561410 Document preparation services"
    ElseIf strCode = "561300" Then
        ProfCodeStr = "561300 Employment services"
    ElseIf strCode = "561210" Then
        ProfCodeStr = "561210 Facilities support services"
    ElseIf strCode = "561110" Then
        ProfCodeStr = "561110 Office administrative services"
    ElseIf strCode = "561490" Then
        ProfCodeStr = "561490 Other business support services"
    ElseIf strCode = "561790" Then
        ProfCodeStr = "561790 Other services to buildings and dwellings"
    ElseIf strCode = "561900" Then
        ProfCodeStr = "561900 Other support services"
    ElseIf strCode = "561420" Then
        ProfCodeStr = "561420 Telephone call centers"
    End If
    If strCode = "624410" Then
        ProfCodeStr = "624410 Child day care services"
    ElseIf strCode = "624200" Then
        ProfCodeStr = "624200 Community food and housing, and emergency, and other relief services"
    ElseIf strCode = "621610" Then
        ProfCodeStr = "621610 Home health care services"
    ElseIf strCode = "622000" Then
        ProfCodeStr = "622000 Hospitals"
    ElseIf strCode = "624100" Then
        ProfCodeStr = "624100 Individual and family services"
    ElseIf strCode = "621510" Then
        ProfCodeStr = "621510 Medical and diagnostic laboratories"
    ElseIf strCode = "623000" Then
        ProfCodeStr = "623000 Nursing and residential care facilities"
    ElseIf strCode = "621310" Then
        ProfCodeStr = "621310 Offices of chiropractors"
    ElseIf strCode = "621210" Then
        ProfCodeStr = "621210 Offices of dentists"
    ElseIf strCode = "621330" Then
        ProfCodeStr = "621330 Offices of mental health practitioners"
    ElseIf strCode = "621112" Then
        ProfCodeStr = "621112 Offices of mental health specialists"
    ElseIf strCode = "621320" Then
        ProfCodeStr = "621320 Offices of optometrists"
    ElseIf strCode = "621340" Then
        ProfCodeStr = "621340 Offices of physical, occupational, speech therapists, and audiologists"
    ElseIf strCode = "621111" Then
        ProfCodeStr = "621111 Offices of physicians"
    ElseIf strCode = "621391" Then
        ProfCodeStr = "621391 Offices of podiatrists"
    ElseIf strCode = "621399" Then
        ProfCodeStr = "621399 Offices of all other miscellaneous health practitioners"
    ElseIf strCode = "621900" Then
        ProfCodeStr = "621900 Other ambulatory health care services"
    ElseIf strCode = "621400" Then
        ProfCodeStr = "621400 Outpatient care centers"
    ElseIf strCode = "624310" Then
        ProfCodeStr = "624310 Vocational rehabilitation services"
    End If
    If strCode = "812111" Then
        ProfCodeStr = "812111 Barber shops"
    ElseIf strCode = "812112" Then
        ProfCodeStr = "812112 Beauty salons"
    ElseIf strCode = "561740" Then
        ProfCodeStr = "561740 Carpet and upholstery cleaning services"
    ElseIf strCode = "812220" Then
        ProfCodeStr = "812220 Cemeteries and crematories"
    ElseIf strCode = "812310" Then
        ProfCodeStr = "812310 Coin-operated laundries and drycleaners"
    ElseIf strCode = "812320" Then
        ProfCodeStr = "812320 Drycleaning and laundry services"
    ElseIf strCode = "611000" Then
        ProfCodeStr = "611000 Educational services"
    ElseIf strCode = "561710" Then
        ProfCodeStr = "561710 Exterminating and pest control services"
    ElseIf strCode = "812210" Then
        ProfCodeStr = "812210 Funeral homes and funeral services"
    ElseIf strCode = "561600" Then
        ProfCodeStr = "561600 Investigation and security services"
    ElseIf strCode = "561720" Then
        ProfCodeStr = "561720 Janitorial services"
    ElseIf strCode = "561730" Then
        ProfCodeStr = "561730 Landscaping services"
    ElseIf strCode = "812330" Then
        ProfCodeStr = "812330 Linen and uniform supply"
    ElseIf strCode = "812113" Then
        ProfCodeStr = "812113 Nail salons"
    ElseIf strCode = "812190" Then
        ProfCodeStr = "812190 Other personal care services"
    ElseIf strCode = "812930" Then
        ProfCodeStr = "812930 Parking lots and garages"
    ElseIf strCode = "813000" Then
        ProfCodeStr = "813000 Religious, grantmaking, civic, professional, and similar organizations"
    ElseIf strCode = "541930" Then
        ProfCodeStr = "541930 Translation and interpretation services"
    ElseIf strCode = "561500" Then
        ProfCodeStr = "561500 Travel arrangement and reservation services"
    ElseIf strCode = "221000" Then
        ProfCodeStr = "221000 Utilities"
    ElseIf strCode = "562000" Then
        ProfCodeStr = "562000 Waste management and remediation services"
    ElseIf strCode = "812990" Then
        ProfCodeStr = "812990 All other personal services"
    End If
    If strCode = "811110" Then
        ProfCodeStr = "811110 Automotive repair and maintenance"
    ElseIf strCode = "811120" Then
        ProfCodeStr = "811120 Automotive body, paint, interior, and glass repair"
    ElseIf strCode = "811310" Then
        ProfCodeStr = "811310 Commercial and industrial machinery and equipment"
    ElseIf strCode = "811210" Then
        ProfCodeStr = "811210 Electronic equipment repair and maintenance"
    ElseIf strCode = "811430" Then
        ProfCodeStr = "811430 Footwear and leather goods repair"
    ElseIf strCode = "811410" Then
        ProfCodeStr = "811410 Home and garden equipment repair and maintenance"
    ElseIf strCode = "811190" Then
        ProfCodeStr = "811190 Other automotive repair and maintenance"
    ElseIf strCode = "811490" Then
        ProfCodeStr = "811490 Other personal and household goods repair and maintenance"
    ElseIf strCode = "811420" Then
        ProfCodeStr = "811420 Reupholstery and furniture repair"
    End If
    If strCode = "532100" Then
        ProfCodeStr = "532100 Automotive equipment rental and leasing"
    ElseIf strCode = "532400" Then
        ProfCodeStr = "532400 Commercial and industrial equipment rental and leasing"
    ElseIf strCode = "532210" Then
        ProfCodeStr = "532210 Consumer electronics and appliances rental"
    ElseIf strCode = "532220" Then
        ProfCodeStr = "532220 Formal wear and costume rental"
    ElseIf strCode = "532310" Then
        ProfCodeStr = "532310 General rental centers"
    ElseIf strCode = "532283" Then
        ProfCodeStr = "532283 Home health equipment rental"
    ElseIf strCode = "531100" Then
        ProfCodeStr = "531100 Lessors of real estate"
    ElseIf strCode = "531210" Then
        ProfCodeStr = "531210 Offices of real estate agents and brokers"
    ElseIf strCode = "531320" Then
        ProfCodeStr = "531320 Offices of real estate appraisers"
    ElseIf strCode = "531390" Then
        ProfCodeStr = "531390 Other activities related to real estate"
    ElseIf strCode = "532290" Then
        ProfCodeStr = "532290 Other consumer goods rental"
    ElseIf strCode = "531310" Then
        ProfCodeStr = "531310 Real estate property managers"
    ElseIf strCode = "532284" Then
        ProfCodeStr = "532284 Recreational goods rental"
    ElseIf strCode = "532230" Then
        ProfCodeStr = "532230 Video tape and disc rental"
    End If
    If strCode = "212110" Then
        ProfCodeStr = "212110 Coal mining"
    ElseIf strCode = "211120" Then
        ProfCodeStr = "211120 Crude petroleum extraction"
    ElseIf strCode = "113000" Then
        ProfCodeStr = "113000 Forestry and logging"
    ElseIf strCode = "212200" Then
        ProfCodeStr = "212200 Metal ore mining"
    ElseIf strCode = "211130" Then
        ProfCodeStr = "211130 Natural gas extraction"
    ElseIf strCode = "212300" Then
        ProfCodeStr = "212300 Nonmetallic mineral mining and quarrying"
    ElseIf strCode = "211110" Then
        ProfCodeStr = "211110 Oil and gas extraction"
    ElseIf strCode = "115110" Then
        ProfCodeStr = "115110 Support activities for crop production"
    ElseIf strCode = "115310" Then
        ProfCodeStr = "115310 Support activities for forestry"
    ElseIf strCode = "213110" Then
        ProfCodeStr = "213110 Support activities for mining"
    End If
    If strCode = "114110" Then
        ProfCodeStr = "114110 Fishing"
    ElseIf strCode = "114210" Then
        ProfCodeStr = "114210 Hunting and trapping"
    End If
    If strCode = "112900" Then
        ProfCodeStr = "112900 Animal production"
    ElseIf strCode = "812910" Then
        ProfCodeStr = "812910 Pet care services"
    ElseIf strCode = "115210" Then
        ProfCodeStr = "115210 Support activities for animal production"
    ElseIf strCode = "541940" Then
        ProfCodeStr = "541940 Veterinary services"
    End If
    If strCode = "311110" Then
        ProfCodeStr = "311110 Animal food mfg."
    ElseIf strCode = "311610" Then
        ProfCodeStr = "311610 Animal slaughtering and processing"
    ElseIf strCode = "315000" Then
        ProfCodeStr = "315000 Apparel mfg."
    ElseIf strCode = "311800" Then
        ProfCodeStr = "311800 Bakeries and tortilla mfg."
    ElseIf strCode = "325100" Then
        ProfCodeStr = "325100 Basic chemical mfg."
    ElseIf strCode = "312000" Then
        ProfCodeStr = "312000 Beverage and tobacco product mfg."
    ElseIf strCode = "327300" Then
        ProfCodeStr = "327300 Cement and concrete product mfg."
    ElseIf strCode = "327100" Then
        ProfCodeStr = "327100 Clay product and refractory mfg."
    ElseIf strCode = "334000" Then
        ProfCodeStr = "334000 Computer and electronic product mfg."
    ElseIf strCode = "311500" Then
        ProfCodeStr = "311500 Dairy product mfg."
    ElseIf strCode = "335000" Then
        ProfCodeStr = "335000 Electrical equipment, appliance, and component mfg."
    ElseIf strCode = "332000" Then
        ProfCodeStr = "332000 Fabricated metal product mfg."
    ElseIf strCode = "316210" Then
        ProfCodeStr = "316210 Footwear mfg."
    ElseIf strCode = "311400" Then
        ProfCodeStr = "311400 Fruit and vegetable preserving and speciality food mfg."
    ElseIf strCode = "337000" Then
        ProfCodeStr = "337000 Furniture and related product mfg."
    ElseIf strCode = "327210" Then
        ProfCodeStr = "327210 Glass and glass product mfg."
    ElseIf strCode = "311200" Then
        ProfCodeStr = "311200 Grain and oilseed milling"
    ElseIf strCode = "316110" Then
        ProfCodeStr = "316110 Leather and hide tanning and finishing"
    ElseIf strCode = "327400" Then
        ProfCodeStr = "327400 Lime and gypsum product mfg."
    ElseIf strCode = "333000" Then
        ProfCodeStr = "333000 Machinery mfg."
    ElseIf strCode = "339110" Then
        ProfCodeStr = "339110 Medical equipment and supplies mfg."
    ElseIf strCode = "325900" Then
        ProfCodeStr = "325900 Other chemical product and preparation mfg."
    ElseIf strCode = "311900" Then
        ProfCodeStr = "311900 Other food mfg."
    ElseIf strCode = "316990" Then
        ProfCodeStr = "316990 Other leather and allied product mfg."
    ElseIf strCode = "339900" Then
        ProfCodeStr = "339900 Other miscellaneous mfg."
    ElseIf strCode = "327900" Then
        ProfCodeStr = "327900 Other nonmetallic mineral product mfg."
    ElseIf strCode = "325500" Then
        ProfCodeStr = "325500 Paint, coating, and adhesive mfg."
    ElseIf strCode = "322000" Then
        ProfCodeStr = "322000 Paper mfg."
    ElseIf strCode = "325300" Then
        ProfCodeStr = "325300 Pesticide, fertilizer, and other agri. chemical mfg."
    ElseIf strCode = "324100" Then
        ProfCodeStr = "324100 Petroleum and coal products mfg."
    ElseIf strCode = "325410" Then
        ProfCodeStr = "325410 Pharmaceutical and medicine mfg."
    ElseIf strCode = "326000" Then
        ProfCodeStr = "326000 Plastics and rubber products mfg."
    ElseIf strCode = "331000" Then
        ProfCodeStr = "331000 Primary metal mfg."
    ElseIf strCode = "323100" Then
        ProfCodeStr = "323100 Printing and related support activities"
    ElseIf strCode = "325200" Then
        ProfCodeStr = "325200 Resin, synthetic rubber, and synthetic fibers mfg."
    ElseIf strCode = "311710" Then
        ProfCodeStr = "311710 Seafood product preparation and packaging"
    ElseIf strCode = "325600" Then
        ProfCodeStr = "325600 Soap, cleaning compound, and toilet preparation mfg."
    ElseIf strCode = "311300" Then
        ProfCodeStr = "311300 Sugar and confectionery product mfg."
    ElseIf strCode = "313000" Then
        ProfCodeStr = "313000 Textile mills"
    ElseIf strCode = "314000" Then
        ProfCodeStr = "314000 Textile product mills"
    ElseIf strCode = "336000" Then
        ProfCodeStr = "336000 Transportation equipment mfg."
    ElseIf strCode = "321000" Then
        ProfCodeStr = "321000 Wood product mfg."
    End If
    If strCode = "424300" Then
        ProfCodeStr = "424300 Apparel, piece goods, and notions"
    ElseIf strCode = "424800" Then
        ProfCodeStr = "424800 Beer, wine, and distilled alcoholic beverage"
    ElseIf strCode = "424920" Then
        ProfCodeStr = "424920 Books, periodicals, and newspapers"
    ElseIf strCode = "425110" Then
        ProfCodeStr = "425110 Business to business electronic markets"
    ElseIf strCode = "424600" Then
        ProfCodeStr = "424600 Chemical and allied products"
    ElseIf strCode = "424210" Then
        ProfCodeStr = "424210 Drugs and druggists' sundries"
    ElseIf strCode = "424500" Then
        ProfCodeStr = "424500 Farm product raw materials"
    ElseIf strCode = "424910" Then
        ProfCodeStr = "424910 Farm supplies"
    ElseIf strCode = "424930" Then
        ProfCodeStr = "424930 Flower, nursery stock, and florists' supplies"
    ElseIf strCode = "423200" Then
        ProfCodeStr = "423200 Furniture and home furnishing"
    ElseIf strCode = "424400" Then
        ProfCodeStr = "424400 Grocery and related products"
    ElseIf strCode = "423700" Then
        ProfCodeStr = "423700 Hardware, and plumbing and heating equipment and supplies"
    ElseIf strCode = "423600" Then
        ProfCodeStr = "423600 Household applicances and electrical goods"
    ElseIf strCode = "423940" Then
        ProfCodeStr = "423940 Jewelry, watch, precious stone, and precious metals"
    ElseIf strCode = "423300" Then
        ProfCodeStr = "423300 Lumber and other construction materials"
    ElseIf strCode = "423800" Then
        ProfCodeStr = "423800 Machinery, equipment, and supplies"
    ElseIf strCode = "423500" Then
        ProfCodeStr = "423500 Metal and mineral"
    ElseIf strCode = "423100" Then
        ProfCodeStr = "423100 Motor vehicle and motor vehicle parts and supplies"
    ElseIf strCode = "423990" Then
        ProfCodeStr = "423990 Other miscellaneous durable goods"
    ElseIf strCode = "424990" Then
        ProfCodeStr = "424990 Other miscellaneous nondurable goods"
    ElseIf strCode = "424950" Then
        ProfCodeStr = "424950 Paint, varnish, and supplies"
    ElseIf strCode = "424100" Then
        ProfCodeStr = "424100 Paper and paper products"
    ElseIf strCode = "424700" Then
        ProfCodeStr = "424700 Petroleum and petroleum products"
    ElseIf strCode = "423400" Then
        ProfCodeStr = "423400 Professional and commercial equipment and supplies"
    ElseIf strCode = "423930" Then
        ProfCodeStr = "423930 Recyclable materials"
    ElseIf strCode = "423910" Then
        ProfCodeStr = "423910 Sporting and recreational goods and supplies"
    ElseIf strCode = "424940" Then
        ProfCodeStr = "424940 Tobacco and tobacco products"
    ElseIf strCode = "423920" Then
        ProfCodeStr = "423920 Toy and hobby goods and supplies"
    ElseIf strCode = "425120" Then
        ProfCodeStr = "425120 Wholesale trade agents and brokers"
    End If
    If strCode = "493100" Then
        ProfCodeStr = "493100 Warehousing and storage"
    End If
    If strCode = "999999" Then
        ProfCodeStr = "999999 Unclassified establishments"
    End If
    
    ProfCodeStr = ""
End Function

Public Function BusCodesListStEmp_SetDynaList()
    Call SetListTitle("BusCodesListStEmp")
    
    Dim StEmpBusTypeCode As String
    
    StEmpBusTypeCode = GetString(USSchCStEmp.BusTypeCode, GetCopy())
    
    If StEmpBusTypeCode = "Accommodation, Food Services, & Drinking Places - Accommodation" Then
        Call SetListItem("721310 Rooming and boarding houses", "721310")
        Call SetListItem("721210 RV parks and recreational camps", "721210")
        Call SetListItem("721100 Travel accommodation", "721100")
    ElseIf StEmpBusTypeCode = "Accommodation, Food Services, & Drinking Places - Food & Drinking Places" Then
        Call SetListItem("722514 Cafeterias and buffets", "722514")
        Call SetListItem("722410 Drinking places (alcoholic beverages)", "722410")
        Call SetListItem("722511 Full-service restaurants", "722511")
        Call SetListItem("722513 Limited-service restaurants", "722513")
        Call SetListItem("722515 Snack and non-alcoholic beverage bars", "722515")
        Call SetListItem("722300 Special food services", "722300")
    ElseIf StEmpBusTypeCode = "Administrative & Support Services and Waste Management Services" Then
        Call SetListItem("561430 Business service centers", "561430")
        Call SetListItem("561740 Carpet and upholstery cleaning services", "561740")
        Call SetListItem("561440 Collection agencies", "561440")
        Call SetListItem("561450 Credit bureaus", "561450")
        Call SetListItem("561410 Document preparation services", "561410")
        Call SetListItem("561300 Employment services", "561300")
        Call SetListItem("561710 Exterminating and pest control services", "561710")
        Call SetListItem("561210 Facilities support services", "561210")
        Call SetListItem("561600 Investigation and security services", "561600")
        Call SetListItem("561720 Janitorial services", "561720")
        Call SetListItem("561730 Landscaping services", "561730")
        Call SetListItem("561110 Office administrative services", "561110")
        Call SetListItem("561420 Telephone call centers", "561420")
        Call SetListItem("561500 Travel arrangement and reservation services", "561500")
        Call SetListItem("561490 Other business support services", "561490")
        Call SetListItem("561790 Other services to buildings and dwellings", "561790")
        Call SetListItem("561900 Other support services", "561900")
        Call SetListItem("562000 Waste management and remediation services", "562000")
    ElseIf StEmpBusTypeCode = "Agriculture, Forestry, Hunting, & Fishing - General" Then
        Call SetListItem("112900 Animal production", "112900")
        Call SetListItem("114110 Fishing", "114110")
        Call SetListItem("113000 Forestry and logging", "113000")
        Call SetListItem("114210 Hunting and trapping", "114210")
    ElseIf StEmpBusTypeCode = "Agriculture, Forestry, Hunting, & Fishing - Support Activities" Then
        Call SetListItem("115210 Support activities for animal production", "115210")
        Call SetListItem("115110 Support activities for crop production", "115110")
        Call SetListItem("115310 Support activities for forestry", "115310")
    ElseIf StEmpBusTypeCode = "Arts & Entertainment - Amusement, Gambling, & Recreation Industries" Then
        Call SetListItem("713100 Amusement parks and arcades", "713100")
        Call SetListItem("713200 Gambling industries", "713200")
        Call SetListItem("713900 Other amusement and recreation services", "713900")
    ElseIf StEmpBusTypeCode = "Arts & Entertainment - Museums, Historical Sites, & Similar Institutions" Then
        Call SetListItem("712100 Museums, historical sites, and similar institutions", "712100")
    ElseIf StEmpBusTypeCode = "Arts & Entertainment - Performing Arts, Spectator Sports, & Related Industries" Then
        Call SetListItem("711410 Agents and managers for public figures", "711410")
        Call SetListItem("711510 Independent artists, writers, and performers", "711510")
        Call SetListItem("711100 Performing arts companies", "711100")
        Call SetListItem("711300 Promoters of performing arts, sports, and events", "711300")
        Call SetListItem("711210 Spectator sports", "711210")
    ElseIf StEmpBusTypeCode = "Construction of Buildings - General" Then
        Call SetListItem("236200 Nonresidential building construction", "236200")
        Call SetListItem("236100 Residential building construction", "236100")
    ElseIf StEmpBusTypeCode = "Construction of Buildings - Heavy and Civil Engineering Construction" Then
        Call SetListItem("237310 Highway, street, and bridge construction", "237310")
        Call SetListItem("237210 Land subdivision", "237210")
        Call SetListItem("237100 Utility system construction", "237100")
        Call SetListItem("237990 Other heavy engineering construction", "237990")
    ElseIf StEmpBusTypeCode = "Construction of Buildings - Specialty Trade Contractors" Then
        Call SetListItem("238310 Drywall and insulation contractors", "238310")
        Call SetListItem("238210 Electrical contractors", "238210")
        Call SetListItem("238350 Finish carpentry contractors", "238350")
        Call SetListItem("238330 Floor contractors", "238330")
        Call SetListItem("238130 Framing carpentry contractors", "238130")
        Call SetListItem("238150 Glass and glazing contractors", "238150")
        Call SetListItem("238140 Masonry contractors", "238140")
        Call SetListItem("238320 Painting and wall covering contractors", "238320")
        Call SetListItem("238220 Plumbing, heating and air conditioning contractors", "238220")
        Call SetListItem("238110 Poured concrete contractors", "238110")
        Call SetListItem("238160 Roofing contractors", "238160")
        Call SetListItem("238170 Siding contractors", "238170")
        Call SetListItem("238910 Site preparation contractors", "238910")
        Call SetListItem("238120 Structural steel construction contractors", "238120")
        Call SetListItem("238340 Tile and terrazzo contractors", "238340")
        Call SetListItem("238290 Other building equipment contractors", "238290")
        Call SetListItem("238390 Other building finishing contractors", "238390")
        Call SetListItem("238190 Other foundation and structure contractors", "238190")
        Call SetListItem("238990 All other specialty trade contractors", "238990")
    ElseIf StEmpBusTypeCode = "Education Services" Then
        Call SetListItem("611000 Educational services", "611000")
    ElseIf StEmpBusTypeCode = "Finance & Insurance - Credit Intermediation & Related Activities" Then
        Call SetListItem("522100 Depository credit intermediation", "522100")
        Call SetListItem("522200 Nondepository credit intermediation", "522200")
        Call SetListItem("522300 Activities related to credit intermediation", "522300")
    ElseIf StEmpBusTypeCode = "Finance & Insurance - Insurance Agents, Brokers, & Related Activities" Then
        Call SetListItem("524210 Insurance agencies and brokerages", "524210")
        Call SetListItem("524290 Other insurance related activities", "524290")
    ElseIf StEmpBusTypeCode = "Finance & Insurance - Securities, Commodities, & Other Financial Investments" Then
        Call SetListItem("523140 Commodity contracts brokers", "523140")
        Call SetListItem("523130 Commodity contracts dealers", "523130")
        Call SetListItem("523110 Investment bankers and securities dealers", "523110")
        Call SetListItem("523210 Securities and commodity exchanges", "523210")
        Call SetListItem("523120 Securities brokers", "523120")
        Call SetListItem("523900 Other financial investment activities", "523900")
    ElseIf StEmpBusTypeCode = "Health Care & Social Assistance - Ambulatory Health Care Services" Then
        Call SetListItem("621610 Home health care services", "621610")
        Call SetListItem("621510 Medical and diagnostic laboratories", "621510")
        Call SetListItem("621310 Offices of chiropractors", "621310")
        Call SetListItem("621210 Offices of dentists", "621210")
        Call SetListItem("621330 Offices of mental health practitioners", "621330")
        Call SetListItem("621320 Offices of optometrists", "621320")
        Call SetListItem("621340 Offices of physical, occupational and speech therapists", "621340")
        Call SetListItem("621111 Offices of physicians", "621111")
        Call SetListItem("621112 Offices of mental health specialists", "621112")
        Call SetListItem("621391 Offices of podiatrists", "621391")
        Call SetListItem("621399 Offices of all other health practitioners", "621399")
        Call SetListItem("621400 Outpatient care centers", "621400")
        Call SetListItem("621900 Other ambulatory health care services", "621900")
    ElseIf StEmpBusTypeCode = "Health Care & Social Assistance - Hospitals" Then
        Call SetListItem("622000 Hospitals", "622000")
    ElseIf StEmpBusTypeCode = "Health Care & Social Assistance - Nursing & Residential Care Facilities" Then
        Call SetListItem("623000 Nursing and residential care facilities", "623000")
    ElseIf StEmpBusTypeCode = "Health Care & Social Assistance - Social Assistance" Then
        Call SetListItem("624410 Child day care services", "624410")
        Call SetListItem("624200 Community food and housing, and other relief services", "624200")
        Call SetListItem("624100 Individual and family services", "624100")
        Call SetListItem("624310 Vocational rehabilitation services", "624310")
    ElseIf StEmpBusTypeCode = "Information - General" Then
        Call SetListItem("511000 Publishing industries", "511000")
    ElseIf StEmpBusTypeCode = "Information - Broadcasting (except Internet) & Telecommunications" Then
        Call SetListItem("515000 Broadcasting", "515000")
        Call SetListItem("517000 Telecommunications & Internet service providers", "517000")
    ElseIf StEmpBusTypeCode = "Information - Data Processing Services" Then
        Call SetListItem("518210 Data processing, hosting, & related services", "518210")
        Call SetListItem("519100 Other information services", "519100")
     ElseIf StEmpBusTypeCode = "Information - Motion Picture & Sound Recording" Then
        Call SetListItem("512100 Motion picture and video industries", "512100")
        Call SetListItem("512200 Sound recording industries", "512200")
    ElseIf StEmpBusTypeCode = "Manufacturing - General" Then
        Call SetListItem("315000 Apparel mfg.", "315000")
        Call SetListItem("312000 Beverage and tobacco product mfg.", "312000")
        Call SetListItem("334000 Computer and electronic product mfg.", "334000")
        Call SetListItem("335000 Electrical equipment, appliance, and component mfg.", "335000")
        Call SetListItem("332000 Fabricated metal product mfg.", "332000")
        Call SetListItem("337000 Furniture and related product mfg.", "337000")
        Call SetListItem("333000 Machinery mfg.", "333000")
        Call SetListItem("339110 Medical equipment and supplies mfg.", "339110")
        Call SetListItem("322000 Paper mfg.", "322000")
        Call SetListItem("324100 Petroleum and coal products mfg.", "324100")
        Call SetListItem("326000 Plastics and rubber products mfg.", "326000")
        Call SetListItem("331000 Primary metal mfg.", "331000")
        Call SetListItem("323100 Printing and related support activities", "323100")
        Call SetListItem("313000 Textile mills", "313000")
        Call SetListItem("314000 Textile product mills", "314000")
        Call SetListItem("336000 Transportation equipment mfg.", "336000")
        Call SetListItem("321000 Wood product mfg.", "321000")
        Call SetListItem("339900 Other miscellaneous mfg.", "339900")
    ElseIf StEmpBusTypeCode = "Manufacturing - Chemical Manufacturing" Then
        Call SetListItem("325100 Basic chemical mfg.", "325100")
        Call SetListItem("325500 Paint, coating, and adhesive mfg.", "325500")
        Call SetListItem("325300 Pesticide, fertilizer, and other agri. chemical mfg.", "325300")
        Call SetListItem("325410 Pharmaceutical and medicine mfg.", "325410")
        Call SetListItem("325200 Resin, synthetic rubber, and synthetic fibers mfg.", "325200")
        Call SetListItem("325600 Soap, cleaning compound, and toilet preparation mfg.", "325600")
        Call SetListItem("325900 Other chemical product and preparation mfg.", "325900")
    ElseIf StEmpBusTypeCode = "Manufacturing - Food Manufacturing" Then
        Call SetListItem("311110 Animal food mfg.", "311110")
        Call SetListItem("311800 Bakeries and tortilla mfg.", "311800")
        Call SetListItem("311500 Dairy product mfg.", "311500")
        Call SetListItem("311400 Fruit and vegetable preserving and speciality food mfg.", "311400")
        Call SetListItem("311200 Grain and oilseed milling", "311200")
        Call SetListItem("311610 Animal slaughtering and processing", "311610")
        Call SetListItem("311710 Seafood product preparation and packaging", "311710")
        Call SetListItem("311300 Sugar and confectionery product mfg.", "311300")
        Call SetListItem("311900 Other food mfg.", "311900")
    ElseIf StEmpBusTypeCode = "Manufacturing - Leather & Allied Product Manufacturing" Then
        Call SetListItem("316210 Footwear mfg.", "316210")
        Call SetListItem("316110 Leather and hide tanning and finishing", "316110")
        Call SetListItem("316990 Other leather and allied product mfg.", "316990")
    ElseIf StEmpBusTypeCode = "Manufacturing - Nonmetallic Mineral Product Manufacturing" Then
        Call SetListItem("327300 Cement and concrete product mfg.", "327300")
        Call SetListItem("327100 Clay product and refractory mfg.", "327100")
        Call SetListItem("327210 Glass and glass product mfg.", "327210")
        Call SetListItem("327400 Lime and gypsum product mfg.", "327400")
        Call SetListItem("327900 Other nonmetallic mineral product mfg.", "327900")
    ElseIf StEmpBusTypeCode = "Mining" Then
        Call SetListItem("212110 Coal mining", "212110")
        Call SetListItem("211120 Crude petroleum extraction", "211120")
        Call SetListItem("212200 Metal ore mining", "212200")
        Call SetListItem("211130 Natural gas extraction", "211130")
        Call SetListItem("212300 Nonmetallic mineral mining and quarrying", "212300")
        Call SetListItem("211110 Oil and gas extraction", "211110")
        Call SetListItem("213110 Support activities for mining", "213110")
    ElseIf StEmpBusTypeCode = "Other Services - Personal & Laundry Services" Then
        Call SetListItem("812111 Barber shops", "812111")
        Call SetListItem("812112 Beauty salons", "812112")
        Call SetListItem("812220 Cemeteries and crematories", "812220")
        Call SetListItem("812310 Coin-operated laundries and drycleaners", "812310")
        Call SetListItem("812320 Drycleaning and laundry services", "812320")
        Call SetListItem("812210 Funeral homes and funeral services", "812210")
        Call SetListItem("812330 Linen and uniform supply", "812330")
        Call SetListItem("812113 Nail salons", "812113")
        Call SetListItem("812930 Parking lots and garages", "812930")
        Call SetListItem("812910 Pet care services", "812910")
        Call SetListItem("812920 Photofinishing", "812920")
        Call SetListItem("812190 Other personal care services", "812190")
        Call SetListItem("812990 All other personal services", "812990")
     ElseIf StEmpBusTypeCode = "Other Services - Repair & Maintenance" Then
        Call SetListItem("811120 Automotive body, paint, interior, and glass repair", "811120")
        Call SetListItem("811110 Automotive repair and maintenance", "811110")
        Call SetListItem("811190 Other automotive repair and maintenance", "811190")
        Call SetListItem("811310 Commercial and industrial machinery and equipment", "811310")
        Call SetListItem("811210 Electronic equipment repair and maintenance", "811210")
        Call SetListItem("811430 Footwear and leather goods repair", "811430")
        Call SetListItem("811410 Home and garden equipment repair and maintenance", "811410")
        Call SetListItem("811420 Reupholstery and furniture repair", "811420")
        Call SetListItem("811490 Other personal and household goods repair and maintenance", "811490")
     ElseIf StEmpBusTypeCode = "Professional, Scientific, & Tech. - General" Then
        Call SetListItem("541100 Legal services", "541100")
        Call SetListItem("541211 Office of certified public accountants", "541211")
        Call SetListItem("541214 Payroll services", "541214")
        Call SetListItem("541213 Tax preparation services", "541213")
        Call SetListItem("541219 Other accounting services", "541219")
    ElseIf StEmpBusTypeCode = "Professional, Scientific, & Tech. - Architectural, Engineering, & Related Services" Then
        Call SetListItem("541310 Architectural services", "541310")
        Call SetListItem("541350 Building inspection services", "541350")
        Call SetListItem("541340 Drafting services", "541340")
        Call SetListItem("541330 Engineering services", "541330")
        Call SetListItem("541360 Geophysical surveying and mapping services", "541360")
        Call SetListItem("541320 Landscape architecture services", "541320")
        Call SetListItem("541370 Surveying and mapping services", "541370")
        Call SetListItem("541380 Testing laboratories", "541380")
    ElseIf StEmpBusTypeCode = "Professional, Scientific, & Tech. - Computer Systems Design & Related Services" Then
        Call SetListItem("541510 Computer systems design and related services", "541510")
    ElseIf StEmpBusTypeCode = "Professional, Scientific, & Tech. - Specialized Design Services" Then
        Call SetListItem("541400 Specialized design services", "541400")
    ElseIf StEmpBusTypeCode = "Professional, Scientific, & Tech. - Other" Then
        Call SetListItem("541800 Advertising and related services", "541800")
        Call SetListItem("541600 Management, scientific, and technical consulting services", "541600")
        Call SetListItem("541910 Market research and public opinion polling", "541910")
        Call SetListItem("541920 Photographic services", "541920")
        Call SetListItem("541700 Scientific research and development services", "541700")
        Call SetListItem("541930 Translation and interpretation services", "541930")
        Call SetListItem("541940 Veterinary services", "541940")
        Call SetListItem("541990 All other professional, scientific, and technical services", "541990")
    ElseIf StEmpBusTypeCode = "Real Estate" Then
        Call SetListItem("531100 Lessors of real estate", "531100")
        Call SetListItem("531210 Offices of real estate agents and brokers", "531210")
        Call SetListItem("531320 Offices of real estate appraisers", "531320")
        Call SetListItem("531310 Real estate property managers", "531310")
        Call SetListItem("531390 Other activities related to real estate", "531390")
    ElseIf StEmpBusTypeCode = "Rental & Leasing Services" Then
        Call SetListItem("532100 Automotive equipment rental and leasing", "532100")
        Call SetListItem("532400 Commercial and industrial equipment rental and leasing", "532400")
        Call SetListItem("532210 Consumer electronics and appliances rental", "532210")
        Call SetListItem("532220 Formal wear and costume rental", "532220")
        Call SetListItem("532310 General rental centers", "532310")
        Call SetListItem("532283 Home health equipment rental", "532283")
        Call SetListItem("532284 Recreational goods rental", "532284")
        Call SetListItem("532230 Video tape and disc rental", "532230")
        Call SetListItem("532290 Other consumer goods rental", "532290")
    ElseIf StEmpBusTypeCode = "Religious, Grantmaking, Civic, Professional, & Similar Orgs." Then
        Call SetListItem("813000 Religious, civic, professional, and similar organizations", "813000")
    ElseIf StEmpBusTypeCode = "Retail Trade - Building Material & Garden Equipment & Supplies Dealers" Then
        Call SetListItem("444130 Hardware stores", "444130")
        Call SetListItem("444110 Home centers", "444110")
        Call SetListItem("444200 Lawn and garden equipment and supplies stores", "444200")
        Call SetListItem("444120 Paint and wallpaper stores", "444120")
        Call SetListItem("444190 Other building materials dealers", "444190")
    ElseIf StEmpBusTypeCode = "Retail Trade - Clothing & Accessories Stores" Then
        Call SetListItem("448130 Children's and infants' clothing stores", "448130")
        Call SetListItem("448150 Clothing accessories stores", "448150")
        Call SetListItem("448140 Family clothing stores", "448140")
        Call SetListItem("448310 Jewelry stores", "448310")
        Call SetListItem("448320 Luggage and leather goods stores", "448320")
        Call SetListItem("448110 Men's clothing stores", "448110")
        Call SetListItem("448210 Shoe stores", "448210")
        Call SetListItem("448120 Women's clothing stores", "448120")
        Call SetListItem("448190 Other clothing stores", "448190")
    ElseIf StEmpBusTypeCode = "Retail Trade - Electronic & Appliance Stores" Then
        Call SetListItem("443142 Electronics stores (audio, video, computer and camera)", "443142")
        Call SetListItem("443141 Household appliance stores", "443141")
    ElseIf StEmpBusTypeCode = "Retail Trade - Food & Beverage Stores" Then
        Call SetListItem("445310 Beer, wine, and liquor stores", "445310")
        Call SetListItem("445220 Fish and seafood markets", "445220")
        Call SetListItem("445230 Fruit and vegetable markets", "445230")
        Call SetListItem("445100 Grocery stores", "445100")
        Call SetListItem("445210 Meat markets", "445210")
        Call SetListItem("445290 Other specialty food stores", "445290")
    ElseIf StEmpBusTypeCode = "Retail Trade - Furniture & Home Furnishing Stores" Then
        Call SetListItem("442110 Furniture stores", "442110")
        Call SetListItem("442200 Home furnishings stores", "442200")
    ElseIf StEmpBusTypeCode = "Retail Trade - Gasoline Stations" Then
        Call SetListItem("447100 Gasoline stations", "447100")
    ElseIf StEmpBusTypeCode = "Retail Trade - General Merchandise Stores" Then
        Call SetListItem("452000 General merchandise stores", "452000")
    ElseIf StEmpBusTypeCode = "Retail Trade - Health & Personal Care Stores" Then
        Call SetListItem("446120 Cosmetics, beauty supplies, and perfume stores", "446120")
        Call SetListItem("446130 Optical goods stores", "446130")
        Call SetListItem("446110 Pharmacies and drug stores", "446110")
        Call SetListItem("446190 Other health and personal care stores", "446190")
    ElseIf StEmpBusTypeCode = "Retail Trade - Motor Vehicle & Parts Dealers" Then
        Call SetListItem("441300 Automotive parts, accessories, and tire stores", "441300")
        Call SetListItem("441222 Boat dealers", "441222")
        Call SetListItem("441228 Motorcycle, ATV, and all other motor vehicle dealers", "441228")
        Call SetListItem("441110 New car dealers", "441110")
        Call SetListItem("441210 Recreational vehicle dealers", "441210")
        Call SetListItem("441120 Used car dealers", "441120")
    ElseIf StEmpBusTypeCode = "Retail Trade - Sporting Goods, Hobby, Book, & Music Stores" Then
        Call SetListItem("451211 Book stores", "451211")
        Call SetListItem("451120 Hobby, toy, and game stores", "451120")
        Call SetListItem("451140 Musical instrument and supplies stores", "451140")
        Call SetListItem("451212 News dealers and newsstands", "451212")
        Call SetListItem("451130 Sewing, needlework, and piece goods stores", "451130")
        Call SetListItem("451110 Sporting goods stores", "451110")
    ElseIf StEmpBusTypeCode = "Retail Trade - Miscellaneous Store Retailers" Then
        Call SetListItem("453920 Art dealers", "453920")
        Call SetListItem("453110 Florists", "453110")
        Call SetListItem("453220 Gift, novelty, and souvenir stores", "453220")
        Call SetListItem("453930 Manufactured (mobile) home dealers", "453930")
        Call SetListItem("453210 Office supplies and stationery stores", "453210")
        Call SetListItem("453910 Pet and pet supplies stores", "453910")
        Call SetListItem("453310 Used merchandise stores", "453310")
        Call SetListItem("453990 All other miscellaneous store retailers", "453990")
    ElseIf StEmpBusTypeCode = "Retail Trade - Nonstore Retailers" Then
        Call SetListItem("454112 Electronic auctions", "454112")
        Call SetListItem("454111 Electronic shopping", "454111")
        Call SetListItem("454310 Fuel dealers (incl. heating oil and liquefied petroleum)", "454310")
        Call SetListItem("454113 Mail-order houses", "454113")
        Call SetListItem("454210 Vending machine operators", "454210")
        Call SetListItem("454390 Other direct selling establishments", "454390")
    ElseIf StEmpBusTypeCode = "Transportation & Warehousing - General" Then
        Call SetListItem("481000 Air transportation", "481000")
        Call SetListItem("485510 Charter bus industry", "485510")
        Call SetListItem("484110 General freight trucking, local", "484110")
        Call SetListItem("484120 General freight trucking, long-distance", "484120")
        Call SetListItem("485210 Interurban and rural bus transportation", "485210")
        Call SetListItem("486000 Pipeline transportation", "486000")
        Call SetListItem("482110 Rail transportation", "482110")
        Call SetListItem("487000 Scenic and sightseeing transportation", "487000")
        Call SetListItem("485410 School and employee bus transportation", "485410")
        Call SetListItem("484200 Specialized freight trucking", "484200")
        Call SetListItem("485300 Taxi and limousine service", "485300")
        Call SetListItem("485110 Urban transit systems", "485110")
        Call SetListItem("483000 Water transportation", "483000")
        Call SetListItem("485990 Other transit and ground passenger transportation", "485990")
        Call SetListItem("488000 Support activities for transportation", "488000")
    ElseIf StEmpBusTypeCode = "Transportation & Warehousing - Couriers & Messengers" Then
        Call SetListItem("492000 Couriers and messengers", "492000")
    ElseIf StEmpBusTypeCode = "Transportation & Warehousing - Warehousing & Storage Facilities" Then
        Call SetListItem("493100 Warehousing and storage", "493100")
    ElseIf StEmpBusTypeCode = "Utilities" Then
        Call SetListItem("221000 Utilities", "221000")
    ElseIf StEmpBusTypeCode = "Wholesale Trade - Merchant Wholesalers, Durable Goods" Then
        Call SetListItem("423600 Electrical goods", "423600")
        Call SetListItem("423200 Furniture and home furnishing", "423200")
        Call SetListItem("423700 Hardware, and plumbing and heating equipment and supplies", "423700")
        Call SetListItem("423940 Jewelry, watch, precious stone, and precious metals", "423940")
        Call SetListItem("423300 Lumber and other construction materials", "423300")
        Call SetListItem("423800 Machinery, equipment, and supplies", "423800")
        Call SetListItem("423500 Metal and mineral", "423500")
        Call SetListItem("423100 Motor vehicle and motor vehicle parts and supplies", "423100")
        Call SetListItem("423400 Professional and commercial equipment and supplies", "423400")
        Call SetListItem("423930 Recyclable materials", "423930")
        Call SetListItem("423910 Sporting and recreational goods and supplies", "423910")
        Call SetListItem("423920 Toy and hobby goods and supplies", "423920")
        Call SetListItem("423990 Other miscellaneous durable goods", "423990")
    ElseIf StEmpBusTypeCode = "Wholesale Trade - Merchant Wholesalers, Nondurable Goods" Then
        Call SetListItem("424300 Apparel, piece goods, and notions", "424300")
        Call SetListItem("424800 Beer, wine, and distilled alcoholic beverage", "424800")
        Call SetListItem("424920 Books, periodicals, and newspapers", "424920")
        Call SetListItem("424600 Chemical and allied products", "424600")
        Call SetListItem("424210 Drugs and druggists' sundries", "424210")
        Call SetListItem("424500 Farm product raw materials", "424500")
        Call SetListItem("424910 Farm supplies", "424910")
        Call SetListItem("424930 Flower, nursery stock, and florists' supplies", "424930")
        Call SetListItem("424400 Grocery and related products", "424400")
        Call SetListItem("424950 Paint, varnish, and supplies", "424950")
        Call SetListItem("424100 Paper and paper products", "424100")
        Call SetListItem("424700 Petroleum and petroleum products", "424700")
        Call SetListItem("424940 Tobacco and tobacco products", "424940")
        Call SetListItem("424990 Other miscellaneous nondurable goods", "424990")
    ElseIf StEmpBusTypeCode = "Wholesale Electronic Markets and Agents & Brokers" Then
        Call SetListItem("425110 Business to business electronic markets", "425110")
        Call SetListItem("425120 Wholesale trade agents and brokers", "425120")
    ElseIf StEmpBusTypeCode = "View All Codes" Then
        Call SetListItem("112900 Animal production", "112900")
        Call SetListItem("113000 Forestry and logging", "113000")
        Call SetListItem("114110 Fishing", "114110")
        Call SetListItem("114210 Hunting and trapping", "114210")
        Call SetListItem("115110 Support activities for crop production", "115110")
        Call SetListItem("115210 Support activities for animal production", "115210")
        Call SetListItem("115310 Support activities for forestry", "115310")
        Call SetListItem("211110 Oil and gas extraction", "211110")
        Call SetListItem("211120 Crude petroleum extraction", "211120")
        Call SetListItem("211130 Natural gas extraction", "211130")
        Call SetListItem("212110 Coal mining", "212110")
        Call SetListItem("212200 Metal ore mining", "212200")
        Call SetListItem("212300 Nonmetallic mineral mining and quarrying", "212300")
        Call SetListItem("213110 Support activities for mining", "213110")
        Call SetListItem("221000 Utilities", "221000")
        Call SetListItem("236100 Residential building construction", "236100")
        Call SetListItem("236200 Nonresidential building construction", "236200")
        Call SetListItem("237100 Utility system construction", "237100")
        Call SetListItem("237210 Land subdivision", "237210")
        Call SetListItem("237310 Highway, street, and bridge construction", "237310")
        Call SetListItem("237990 Other heavy engineering construction", "237990")
        Call SetListItem("238110 Poured concrete contractors", "238110")
        Call SetListItem("238120 Structural steel construction contractors", "238120")
        Call SetListItem("238130 Framing carpentry contractors", "238130")
        Call SetListItem("238140 Masonry contractors", "238140")
        Call SetListItem("238150 Glass and glazing contractors", "238150")
        Call SetListItem("238160 Roofing contractors", "238160")
        Call SetListItem("238170 Siding contractors", "238170")
        Call SetListItem("238190 Other foundation and structure contractors", "238190")
        Call SetListItem("238210 Electrical contractors", "238210")
        Call SetListItem("238220 Plumbing, heating and air conditioning contractors", "238220")
        Call SetListItem("238290 Other building equipment contractors", "238290")
        Call SetListItem("238310 Drywall and insulation contractors", "238310")
        Call SetListItem("238320 Painting and wall covering contractors", "238320")
        Call SetListItem("238330 Floor contractors", "238330")
        Call SetListItem("238340 Tile and terrazzo contractors", "238340")
        Call SetListItem("238350 Finish carpentry contractors", "238350")
        Call SetListItem("238390 Other building finishing contractors", "238390")
        Call SetListItem("238910 Site preparation contractors", "238910")
        Call SetListItem("238990 All other specialty trade contractors", "238990")
        Call SetListItem("311110 Animal food mfg.", "311110")
        Call SetListItem("311200 Grain and oilseed milling", "311200")
        Call SetListItem("311300 Sugar and confectionery product mfg.", "311300")
        Call SetListItem("311400 Fruit and vegetable preserving and speciality food mfg.", "311400")
        Call SetListItem("311500 Dairy product mfg.", "311500")
        Call SetListItem("311610 Animal slaughtering and processing", "311610")
        Call SetListItem("311710 Seafood product preparation and packaging", "311710")
        Call SetListItem("311800 Bakeries and tortilla mfg.", "311800")
        Call SetListItem("311900 Other food mfg.", "311900")
        Call SetListItem("312000 Beverage and tobacco product mfg.", "312000")
        Call SetListItem("313000 Textile mills", "313000")
        Call SetListItem("314000 Textile product mills", "314000")
        Call SetListItem("315000 Apparel mfg.", "315000")
        Call SetListItem("316110 Leather and hide tanning and finishing", "316110")
        Call SetListItem("316210 Footwear mfg.", "316210")
        Call SetListItem("316990 Other leather and allied product mfg.", "316990")
        Call SetListItem("321000 Wood product mfg.", "321000")
        Call SetListItem("322000 Paper mfg.", "322000")
        Call SetListItem("323100 Printing and related support activities", "323100")
        Call SetListItem("324100 Petroleum and coal products mfg.", "324100")
        Call SetListItem("325100 Basic chemical mfg.", "325100")
        Call SetListItem("325200 Resin, synthetic rubber, and synthetic fibers mfg.", "325200")
        Call SetListItem("325300 Pesticide, fertilizer, and other agri. chemical mfg.", "325300")
        Call SetListItem("325410 Pharmaceutical and medicine mfg.", "325410")
        Call SetListItem("325500 Paint, coating, and adhesive mfg.", "325500")
        Call SetListItem("325600 Soap, cleaning compound, and toilet preparation mfg.", "325600")
        Call SetListItem("325900 Other chemical product and preparation mfg.", "325900")
        Call SetListItem("326000 Plastics and rubber products mfg.", "326000")
        Call SetListItem("327100 Clay product and refractory mfg.", "327100")
        Call SetListItem("327210 Glass and glass product mfg.", "327210")
        Call SetListItem("327300 Cement and concrete product mfg.", "327300")
        Call SetListItem("327400 Lime and gypsum product mfg.", "327400")
        Call SetListItem("327900 Other nonmetallic mineral product mfg.", "327900")
        Call SetListItem("331000 Primary metal mfg.", "331000")
        Call SetListItem("332000 Fabricated metal product mfg.", "332000")
        Call SetListItem("333000 Machinery mfg.", "333000")
        Call SetListItem("334000 Computer and electronic product mfg.", "334000")
        Call SetListItem("335000 Electrical equipment, appliance, and component mfg.", "335000")
        Call SetListItem("336000 Transportation equipment mfg.", "336000")
        Call SetListItem("337000 Furniture and related product mfg.", "337000")
        Call SetListItem("339110 Medical equipment and supplies mfg.", "339110")
        Call SetListItem("339900 Other miscellaneous mfg.", "339900")
        Call SetListItem("423100 Motor vehicle and motor vehicle parts and supplies", "423100")
        Call SetListItem("423200 Furniture and home furnishing", "423200")
        Call SetListItem("423300 Lumber and other construction materials", "423300")
        Call SetListItem("423400 Professional and commercial equipment and supplies", "423400")
        Call SetListItem("423500 Metal and mineral", "423500")
        Call SetListItem("423600 Electrical goods", "423600")
        Call SetListItem("423700 Hardware, and plumbing and heating equipment and supplies", "423700")
        Call SetListItem("423800 Machinery, equipment, and supplies", "423800")
        Call SetListItem("423910 Sporting and recreational goods and supplies", "423910")
        Call SetListItem("423920 Toy and hobby goods and supplies", "423920")
        Call SetListItem("423930 Recyclable materials", "423930")
        Call SetListItem("423940 Jewelry, watch, precious stone, and precious metals", "423940")
        Call SetListItem("423990 Other miscellaneous durable goods", "423990")
        Call SetListItem("424100 Paper and paper products", "424100")
        Call SetListItem("424210 Drugs and druggists' sundries", "424210")
        Call SetListItem("424300 Apparel, piece goods, and notions", "424300")
        Call SetListItem("424400 Grocery and related products", "424400")
        Call SetListItem("424500 Farm product raw materials", "424500")
        Call SetListItem("424600 Chemical and allied products", "424600")
        Call SetListItem("424700 Petroleum and petroleum products", "424700")
        Call SetListItem("424800 Beer, wine, and distilled alcoholic beverage", "424800")
        Call SetListItem("424910 Farm supplies", "424910")
        Call SetListItem("424920 Books, periodicals, and newspapers", "424920")
        Call SetListItem("424930 Flower, nursery stock, and florists' supplies", "424930")
        Call SetListItem("424940 Tobacco and tobacco products", "424940")
        Call SetListItem("424950 Paint, varnish, and supplies", "424950")
        Call SetListItem("424990 Other miscellaneous nondurable goods", "424990")
        Call SetListItem("425110 Business to business electronic markets", "425110")
        Call SetListItem("425120 Wholesale trade agents and brokers", "425120")
        Call SetListItem("441110 New car dealers", "441110")
        Call SetListItem("441120 Used car dealers", "441120")
        Call SetListItem("441210 Recreational vehicle dealers", "441210")
        Call SetListItem("441222 Boat dealers", "441222")
        Call SetListItem("441228 Motorcycle, ATV, and all other motor vehicle dealers", "441228")
        Call SetListItem("441300 Automotive parts, accessories, and tire stores", "441300")
        Call SetListItem("442110 Furniture stores", "442110")
        Call SetListItem("442200 Home furnishings stores", "442200")
        Call SetListItem("443141 Electronic stores (incl. audio, video, computer and camera)", "443141")
        Call SetListItem("443142 Household appliance stores", "443142")
        Call SetListItem("444110 Home centers", "444110")
        Call SetListItem("444120 Paint and wallpaper stores", "444120")
        Call SetListItem("444130 Hardware stores", "444130")
        Call SetListItem("444190 Other building materials dealers", "444190")
        Call SetListItem("444200 Lawn and garden equipment and supplies stores", "444200")
        Call SetListItem("445100 Grocery stores", "445100")
        Call SetListItem("445210 Meat markets", "445210")
        Call SetListItem("445220 Fish and seafood markets", "445220")
        Call SetListItem("445230 Fruit and vegetable markets", "445230")
        Call SetListItem("445290 Other specialty food stores", "445290")
        Call SetListItem("445310 Beer, wine, and liquor stores", "445310")
        Call SetListItem("446110 Pharmacies and drug stores", "446110")
        Call SetListItem("446120 Cosmetics, beauty supplies, and perfume stores", "446120")
        Call SetListItem("446130 Optical goods stores", "446130")
        Call SetListItem("446190 Other health and personal care stores", "446190")
        Call SetListItem("447100 Gasoline stations", "447100")
        Call SetListItem("448110 Men's clothing stores", "448110")
        Call SetListItem("448120 Women's clothing stores", "448120")
        Call SetListItem("448130 Children's and infants' clothing stores", "448130")
        Call SetListItem("448140 Family clothing stores", "448140")
        Call SetListItem("448150 Clothing accessories stores", "448150")
        Call SetListItem("448190 Other clothing stores", "448190")
        Call SetListItem("448210 Shoe stores", "448210")
        Call SetListItem("448310 Jewelry stores", "448310")
        Call SetListItem("448320 Luggage and leather goods stores", "448320")
        Call SetListItem("451110 Sporting goods stores", "451110")
        Call SetListItem("451120 Hobby, toy, and game stores", "451120")
        Call SetListItem("451130 Sewing, needlework, and piece goods stores", "451130")
        Call SetListItem("451140 Musical instrument and supplies stores", "451140")
        Call SetListItem("451211 Book stores", "451211")
        Call SetListItem("451212 News dealers and newsstands", "451212")
        Call SetListItem("452000 General merchandise stores", "452000")
        Call SetListItem("453110 Florists", "453110")
        Call SetListItem("453210 Office supplies and stationery stores", "453210")
        Call SetListItem("453220 Gift, novelty, and souvenir stores", "453220")
        Call SetListItem("453310 Used merchandise stores", "453310")
        Call SetListItem("453910 Pet and pet supplies stores", "453910")
        Call SetListItem("453920 Art dealers", "453920")
        Call SetListItem("453930 Manufactured (mobile) home dealers", "453930")
        Call SetListItem("453990 All other miscellaneous store retailers", "453990")
        Call SetListItem("454111 Electronic shopping", "454111")
        Call SetListItem("454112 Electronic auctions", "454112")
        Call SetListItem("454113 Mail-order houses", "454113")
        Call SetListItem("454210 Vending machine operators", "454210")
        Call SetListItem("454310 Fuel dealers (incl. heating oil and liquefied petroleum)", "454310")
        Call SetListItem("454390 Other direct selling establishments", "454390")
        Call SetListItem("481000 Air transportation", "481000")
        Call SetListItem("482110 Rail transportation", "482110")
        Call SetListItem("483000 Water transportation", "483000")
        Call SetListItem("484110 General freight trucking, local", "484110")
        Call SetListItem("484120 General freight trucking, long-distance", "484120")
        Call SetListItem("484200 Specialized freight trucking", "484200")
        Call SetListItem("485110 Urban transit systems", "485110")
        Call SetListItem("485210 Interurban and rural bus transportation", "485210")
        Call SetListItem("485300 Taxi and limousine service", "485300")
        Call SetListItem("485410 School and employee bus transportation", "485410")
        Call SetListItem("485510 Charter bus industry", "485510")
        Call SetListItem("485990 Other transit and ground passenger transportation", "485990")
        Call SetListItem("486000 Pipeline transportation", "486000")
        Call SetListItem("487000 Scenic and sightseeing transportation", "487000")
        Call SetListItem("488000 Support activities for transportation", "488000")
        Call SetListItem("492000 Couriers and messengers", "492000")
        Call SetListItem("493100 Warehousing and storage", "493100")
        Call SetListItem("511000 Publishing industries", "511000")
        Call SetListItem("512100 Motion picture and video industries", "512100")
        Call SetListItem("512200 Sound recording industries", "512200")
        Call SetListItem("515000 Broadcasting", "515000")
        Call SetListItem("517000 Telecommunications & Internet service providers", "517000")
        Call SetListItem("518210 Data processing, hosting, & related services", "518210")
        Call SetListItem("519100 Other information services", "519100")
        Call SetListItem("522100 Depository credit intermediation", "522100")
        Call SetListItem("522200 Nondepository credit intermediation", "522200")
        Call SetListItem("522300 Activities related to credit intermediation", "522300")
        Call SetListItem("523110 Investment bankers and securities dealers", "523110")
        Call SetListItem("523120 Securities brokers", "523120")
        Call SetListItem("523130 Commodity contracts dealers", "523130")
        Call SetListItem("523140 Commodity contracts brokers", "523140")
        Call SetListItem("523210 Securities and commodity exchanges", "523210")
        Call SetListItem("523900 Other financial investment activities", "523900")
        Call SetListItem("524210 Insurance agencies and brokerages", "524210")
        Call SetListItem("524290 Other insurance related activities", "524290")
        Call SetListItem("531100 Lessors of real estate", "531100")
        Call SetListItem("531210 Offices of real estate agents and brokers", "531210")
        Call SetListItem("531310 Real estate property managers", "531310")
        Call SetListItem("531320 Offices of real estate appraisers", "531320")
        Call SetListItem("531390 Other activities related to real estate", "531390")
        Call SetListItem("532100 Automotive equipment rental and leasing", "532100")
        Call SetListItem("532210 Consumer electronics and appliances rental", "532210")
        Call SetListItem("532220 Formal wear and costume rental", "532220")
        Call SetListItem("532230 Video tape and disc rental", "532230")
        Call SetListItem("532283 Home health equipment rental", "532283")
        Call SetListItem("532284 Recreational goods rental", "532284")
        Call SetListItem("532290 Other consumer goods rental", "532290")
        Call SetListItem("532310 General rental centers", "532310")
        Call SetListItem("532400 Commercial and industrial equipment rental and leasing", "532400")
        Call SetListItem("541100 Legal services", "541100")
        Call SetListItem("541211 Office of certified public accountants", "541211")
        Call SetListItem("541213 Tax preparation services", "541213")
        Call SetListItem("541214 Payroll services", "541214")
        Call SetListItem("541219 Other accounting services", "541219")
        Call SetListItem("541310 Architectural services", "541310")
        Call SetListItem("541320 Landscape architecture services", "541320")
        Call SetListItem("541330 Engineering services", "541330")
        Call SetListItem("541340 Drafting services", "541340")
        Call SetListItem("541350 Building inspection services", "541350")
        Call SetListItem("541360 Geophysical surveying and mapping services", "541360")
        Call SetListItem("541370 Surveying and mapping services", "541370")
        Call SetListItem("541380 Testing laboratories", "541380")
        Call SetListItem("541400 Specialized design services", "541400")
        Call SetListItem("541510 Computer systems design and related services", "541510")
        Call SetListItem("541600 Management, scientific, and technical consulting services", "541600")
        Call SetListItem("541700 Scientific research and development services", "541700")
        Call SetListItem("541800 Advertising and related services", "541800")
        Call SetListItem("541910 Market research and public opinion polling", "541910")
        Call SetListItem("541920 Photographic services", "541920")
        Call SetListItem("541930 Translation and interpretation services", "541930")
        Call SetListItem("541940 Veterinary services", "541940")
        Call SetListItem("541990 All other professional, scientific, and technical services", "541990")
        Call SetListItem("561110 Office administrative services", "561110")
        Call SetListItem("561210 Facilities support services", "561210")
        Call SetListItem("561300 Employment services", "561300")
        Call SetListItem("561410 Document preparation services", "561410")
        Call SetListItem("561420 Telephone call centers", "561420")
        Call SetListItem("561430 Business service centers", "561430")
        Call SetListItem("561440 Collection agencies", "561440")
        Call SetListItem("561450 Credit bureaus", "561450")
        Call SetListItem("561490 Other business support services", "561490")
        Call SetListItem("561500 Travel arrangement and reservation services", "561500")
        Call SetListItem("561600 Investigation and security services", "561600")
        Call SetListItem("561710 Exterminating and pest control services", "561710")
        Call SetListItem("561720 Janitorial services", "561720")
        Call SetListItem("561730 Landscaping services", "561730")
        Call SetListItem("561740 Carpet and upholstery cleaning services", "561740")
        Call SetListItem("561790 Other services to buildings and dwellings", "561790")
        Call SetListItem("561900 Other support services", "561900")
        Call SetListItem("562000 Waste management and remediation services", "562000")
        Call SetListItem("611000 Educational services", "611000")
        Call SetListItem("621111 Offices of physicians", "621111")
        Call SetListItem("621112 Offices of mental health specialists", "621112")
        Call SetListItem("621210 Offices of dentists", "621210")
        Call SetListItem("621310 Offices of chiropractors", "621310")
        Call SetListItem("621320 Offices of optometrists", "621320")
        Call SetListItem("621330 Offices of mental health practitioners", "621330")
        Call SetListItem("621340 Offices of physical, occupational and speech therapists", "621340")
        Call SetListItem("621391 Offices of podiatrists", "621391")
        Call SetListItem("621399 Offices of all other health practitioners", "621399")
        Call SetListItem("621400 Outpatient care centers", "621400")
        Call SetListItem("621510 Medical and diagnostic laboratories", "621510")
        Call SetListItem("621610 Home health care services", "621610")
        Call SetListItem("621900 Other ambulatory health care services", "621900")
        Call SetListItem("622000 Hospitals", "622000")
        Call SetListItem("623000 Nursing and residential care facilities", "623000")
        Call SetListItem("624100 Individual and family services", "624100")
        Call SetListItem("624200 Community food and housing, and other relief services", "624200")
        Call SetListItem("624310 Vocational rehabilitation services", "624310")
        Call SetListItem("624410 Child day care services", "624410")
        Call SetListItem("711100 Performing arts companies", "711100")
        Call SetListItem("711210 Spectator sports", "711210")
        Call SetListItem("711300 Promoters of performing arts, sports, and events", "711300")
        Call SetListItem("711410 Agents and managers for public figures", "711410")
        Call SetListItem("711510 Independent artists, writers, and performers", "711510")
        Call SetListItem("712100 Museums, historical sites, and similar institutions", "712100")
        Call SetListItem("713100 Amusement parks and arcades", "713100")
        Call SetListItem("713200 Gambling industries", "713200")
        Call SetListItem("713900 Other amusement and recreation services", "713900")
        Call SetListItem("721100 Travel accommodation", "721100")
        Call SetListItem("721210 RV parks and recreational camps", "721210")
        Call SetListItem("721310 Rooming and boarding houses", "721310")
        Call SetListItem("722300 Special food services", "722300")
        Call SetListItem("722410 Drinking places (alcoholic beverages)", "722410")
        Call SetListItem("722511 Full-service restaurants", "722511")
        Call SetListItem("722513 Limited-service restaurants", "722513")
        Call SetListItem("722514 Cafeterias and buffets", "722514")
        Call SetListItem("722515 Snack and non-alcoholic beverage bars", "722515")
        Call SetListItem("811110 Automotive repair and maintenance", "811110")
        Call SetListItem("811120 Automotive body, paint, interior, and glass repair", "811120")
        Call SetListItem("811190 Other automotive repair and maintenance", "811190")
        Call SetListItem("811210 Electronic equipment repair and maintenance", "811210")
        Call SetListItem("811310 Commercial and industrial machinery and equipment", "811310")
        Call SetListItem("811410 Home and garden equipment repair and maintenance", "811410")
        Call SetListItem("811420 Reupholstery and furniture repair", "811420")
        Call SetListItem("811430 Footwear and leather goods repair", "811430")
        Call SetListItem("811490 Other personal and household goods repair and maintenance", "811490")
        Call SetListItem("812111 Barber shops", "812111")
        Call SetListItem("812112 Beauty salons", "812112")
        Call SetListItem("812113 Nail salons", "812113")
        Call SetListItem("812190 Other personal care services", "812190")
        Call SetListItem("812210 Funeral homes and funeral services", "812210")
        Call SetListItem("812220 Cemeteries and crematories", "812220")
        Call SetListItem("812310 Coin-operated laundries and drycleaners", "812310")
        Call SetListItem("812320 Drycleaning and laundry services", "812320")
        Call SetListItem("812330 Linen and uniform supply", "812330")
        Call SetListItem("812910 Pet care services", "812910")
        Call SetListItem("812920 Photofinishing", "812920")
        Call SetListItem("812930 Parking lots and garages", "812930")
        Call SetListItem("812990 All other personal services", "812990")
        Call SetListItem("813000 Religious, civic, professional, and similar organizations", "813000")
        Call SetListItem("999999 Unclassified establishments", "999999")
    Else
        Call SetListItem("999999 Unclassified establishments", "999999")
    End If
End Function

Private Sub F2848Verification_SetList()
   ListTitle = "Power of Attorney Designation"
   ListItem = "a Attorney - member in good standing of the bar|a"
   ListItem = "b CPA - licensed to practice|b"
   ListItem = "c Enrolled Agent - enrolled as an agent under requirements|c"
   ListItem = "d Officer -  bona fide officer|d"
   ListItem = "e Full Time Employee - full time employee of the taxpayer|e"
   ListItem = "f Family Member - member of taxpayer's immediate family|f"
   ListItem = "g Enrolled Actuary - enrolled as an actuary|g"
   ListItem = "h Unenrolled Return Preparer - authority to practice before IRS is limited|h"
   ListItem = "k Student Attorney or CPA - student receives permission to practice before IRS|k"
   ListItem = "r Enrolled Retirement Plan Agent - enrolled as a retirement plan agent|r"
End Sub

Private Sub F3115BusCode_SetList()
    ListTitle = "Business Code"
    ListItem = "112900 Animal production|112900"
    ListItem = "113000 Forestry and logging|113000"
    ListItem = "114110 Fishing|114110"
    ListItem = "114210 Hunting and trapping|114210"
    ListItem = "115110 Support activities for crop production|115110"
    ListItem = "115210 Support activities for animal production|115210"
    ListItem = "115310 Support activities for forestry|115310"
    ListItem = "211110 Oil and gas extraction|211110"
    ListItem = "211120 Crude petroleum extraction|211120"
    ListItem = "211130 Natural gas extraction|211130"
    ListItem = "212110 Coal mining|212110"
    ListItem = "212200 Metal ore mining|212200"
    ListItem = "212300 Nonmetallic mineral mining and quarrying|212300"
    ListItem = "213110 Support activities for mining|213110"
    ListItem = "221000 Utilities|221000"
    ListItem = "236100 Residential building construction|236100"
    ListItem = "236200 Nonresidential building construction|236200"
    ListItem = "237100 Utility system construction|237100"
    ListItem = "237210 Land subdivision|237210"
    ListItem = "237310 Highway, street, and bridge construction|237310"
    ListItem = "237990 Other heavy engineering construction|237990"
    ListItem = "238110 Poured concrete contractors|238110"
    ListItem = "238120 Structural steel construction contractors|238120"
    ListItem = "238130 Framing carpentry contractors|238130"
    ListItem = "238140 Masonry contractors|238140"
    ListItem = "238150 Glass and glazing contractors|238150"
    ListItem = "238160 Roofing contractors|238160"
    ListItem = "238170 Siding contractors|238170"
    ListItem = "238190 Other foundation and structure contractors|238190"
    ListItem = "238210 Electrical contractors|238210"
    ListItem = "238220 Plumbing, heating and air conditioning contractors|238220"
    ListItem = "238290 Other building equipment contractors|238290"
    ListItem = "238310 Drywall and insulation contractors|238310"
    ListItem = "238320 Painting and wall covering contractors|238320"
    ListItem = "238330 Floor contractors|238330"
    ListItem = "238340 Tile and terrazzo contractors|238340"
    ListItem = "238350 Finish carpentry contractors|238350"
    ListItem = "238390 Other building finishing contractors|238390"
    ListItem = "238910 Site preparation contractors|238910"
    ListItem = "238990 All other specialty trade contractors|238990"
    ListItem = "311110 Animal food mfg.|311110"
    ListItem = "311200 Grain and oilseed milling|311200"
    ListItem = "311300 Sugar and confectionery product mfg.|311300"
    ListItem = "311400 Fruit and vegetable preserving and speciality food mfg.|311400"
    ListItem = "311500 Dairy product mfg.|311500"
    ListItem = "311610 Animal slaughtering and processing|311610"
    ListItem = "311710 Seafood product preparation and packaging|311710"
    ListItem = "311800 Bakeries and tortilla mfg.|311800"
    ListItem = "311900 Other food mfg.|311900"
    ListItem = "312000 Beverage and tobacco product mfg.|312000"
    ListItem = "313000 Textile mills|313000"
    ListItem = "314000 Textile product mills|314000"
    ListItem = "315000 Apparel mfg.|315000"
    ListItem = "316110 Leather and hide tanning and finishing|316110"
    ListItem = "316210 Footwear mfg.|316210"
    ListItem = "316990 Other leather and allied product mfg.|316990"
    ListItem = "321000 Wood product mfg.|321000"
    ListItem = "322000 Paper mfg.|322000"
    ListItem = "323100 Printing and related support activities|323100"
    ListItem = "324100 Petroleum and coal products mfg.|324100"
    ListItem = "325100 Basic chemical mfg.|325100"
    ListItem = "325200 Resin, synthetic rubber, and synthetic fibers mfg.|325200"
    ListItem = "325300 Pesticide, fertilizer, and other agri. chemical mfg.|325300"
    ListItem = "325410 Pharmaceutical and medicine mfg.|325410"
    ListItem = "325500 Paint, coating, and adhesive mfg.|325500"
    ListItem = "325600 Soap, cleaning compound, and toilet preparation mfg.|325600"
    ListItem = "325900 Other chemical product and preparation mfg.|325900"
    ListItem = "326000 Plastics and rubber products mfg.|326000"
    ListItem = "327100 Clay product and refractory mfg.|327100"
    ListItem = "327210 Glass and glass product mfg.|327210"
    ListItem = "327300 Cement and concrete product mfg.|327300"
    ListItem = "327400 Lime and gypsum product mfg.|327400"
    ListItem = "327900 Other nonmetallic mineral product mfg.|327900"
    ListItem = "331000 Primary metal mfg.|331000"
    ListItem = "332000 Fabricated metal product mfg.|332000"
    ListItem = "333000 Machinery mfg.|333000"
    ListItem = "334000 Computer and electronic product mfg.|334000"
    ListItem = "335000 Electrical equipment, appliance, and component mfg.|335000"
    ListItem = "336000 Transportation equipment mfg.|336000"
    ListItem = "337000 Furniture and related product mfg.|337000"
    ListItem = "339110 Medical equipment and supplies mfg.|339110"
    ListItem = "339900 Other miscellaneous mfg.|339900"
    ListItem = "423100 Motor vehicle and motor vehicle parts and supplies|423100"
    ListItem = "423200 Furniture and home furnishing|423200"
    ListItem = "423300 Lumber and other construction materials|423300"
    ListItem = "423400 Professional and commercial equipment and supplies|423400"
    ListItem = "423500 Metal and mineral|423500"
    ListItem = "423600 Electrical goods|423600"
    ListItem = "423700 Hardware, and plumbing and heating equipment and supplies|423700"
    ListItem = "423800 Machinery, equipment, and supplies|423800"
    ListItem = "423910 Sporting and recreational goods and supplies|423910"
    ListItem = "423920 Toy and hobby goods and supplies|423920"
    ListItem = "423930 Recyclable materials|423930"
    ListItem = "423940 Jewelry, watch, precious stone, and precious metals|423940"
    ListItem = "423990 Other miscellaneous durable goods|423990"
    ListItem = "424100 Paper and paper products|424100"
    ListItem = "424210 Drugs and druggists' sundries|424210"
    ListItem = "424300 Apparel, piece goods, and notions|424300"
    ListItem = "424400 Grocery and related products|424400"
    ListItem = "424500 Farm product raw materials|424500"
    ListItem = "424600 Chemical and allied products|424600"
    ListItem = "424700 Petroleum and petroleum products|424700"
    ListItem = "424800 Beer, wine, and distilled alcoholic beverage|424800"
    ListItem = "424910 Farm supplies|424910"
    ListItem = "424920 Books, periodicals, and newspapers|424920"
    ListItem = "424930 Flower, nursery stock, and florists' supplies|424930"
    ListItem = "424940 Tobacco and tobacco products|424940"
    ListItem = "424950 Paint, varnish, and supplies|424950"
    ListItem = "424990 Other miscellaneous nondurable goods|424990"
    ListItem = "425110 Business to business electronic markets|425110"
    ListItem = "425120 Wholesale trade agents and brokers|425120"
    ListItem = "441110 New car dealers|441110"
    ListItem = "441120 Used car dealers|441120"
    ListItem = "441210 Recreational vehicle dealers|441210"
    ListItem = "441222 Boat dealers|441222"
    ListItem = "441228 Motorcycle, ATV, and all other motor vehicle dealers|441228"
    ListItem = "441300 Automotive parts, accessories, and tire stores|441300"
    ListItem = "442110 Furniture stores|442110"
    ListItem = "442200 Home furnishings stores|442200"
    ListItem = "443141 Electronic stores (incl. audio, video, computer and camera)|443141"
    ListItem = "443142 Household appliance stores|443142"
    ListItem = "444110 Home centers|444110"
    ListItem = "444120 Paint and wallpaper stores|444120"
    ListItem = "444130 Hardware stores|444130"
    ListItem = "444190 Other building materials dealers|444190"
    ListItem = "444200 Lawn and garden equipment and supplies stores|444200"
    ListItem = "445100 Grocery stores|445100"
    ListItem = "445210 Meat markets|445210"
    ListItem = "445220 Fish and seafood markets|445220"
    ListItem = "445230 Fruit and vegetable markets|445230"
    ListItem = "445290 Other specialty food stores|445290"
    ListItem = "445310 Beer, wine, and liquor stores|445310"
    ListItem = "446110 Pharmacies and drug stores|446110"
    ListItem = "446120 Cosmetics, beauty supplies, and perfume stores|446120"
    ListItem = "446130 Optical goods stores|446130"
    ListItem = "446190 Other health and personal care stores|446190"
    ListItem = "447100 Gasoline stations|447100"
    ListItem = "448110 Men's clothing stores|448110"
    ListItem = "448120 Women's clothing stores|448120"
    ListItem = "448130 Children's and infants' clothing stores|448130"
    ListItem = "448140 Family clothing stores|448140"
    ListItem = "448150 Clothing accessories stores|448150"
    ListItem = "448190 Other clothing stores|448190"
    ListItem = "448210 Shoe stores|448210"
    ListItem = "448310 Jewelry stores|448310"
    ListItem = "448320 Luggage and leather goods stores|448320"
    ListItem = "451110 Sporting goods stores|451110"
    ListItem = "451120 Hobby, toy, and game stores|451120"
    ListItem = "451130 Sewing, needlework, and piece goods stores|451130"
    ListItem = "451140 Musical instrument and supplies stores|451140"
    ListItem = "451211 Book stores|451211"
    ListItem = "451212 News dealers and newsstands|451212"
    ListItem = "452000 General merchandise stores|452000"
    ListItem = "453110 Florists|453110"
    ListItem = "453210 Office supplies and stationery stores|453210"
    ListItem = "453220 Gift, novelty, and souvenir stores|453220"
    ListItem = "453310 Used merchandise stores|453310"
    ListItem = "453910 Pet and pet supplies stores|453910"
    ListItem = "453920 Art dealers|453920"
    ListItem = "453930 Manufactured (mobile) home dealers|453930"
    ListItem = "453990 All other miscellaneous store retailers|453990"
    ListItem = "454111 Electronic shopping|454111"
    ListItem = "454112 Electronic auctions|454112"
    ListItem = "454113 Mail-order houses|454113"
    ListItem = "454210 Vending machine operators|454210"
    ListItem = "454310 Fuel dealers (incl. heating oil and liquefied petroleum)|454310"
    ListItem = "454390 Other direct selling establishments|454390"
    ListItem = "481000 Air transportation|481000"
    ListItem = "482110 Rail transportation|482110"
    ListItem = "483000 Water transportation|483000"
    ListItem = "484110 General freight trucking, local|484110"
    ListItem = "484120 General freight trucking, long-distance|484120"
    ListItem = "484200 Specialized freight trucking|484200"
    ListItem = "485110 Urban transit systems|485110"
    ListItem = "485210 Interurban and rural bus transportation|485210"
    ListItem = "485300 Taxi and limousine service|485300"
    ListItem = "485410 School and employee bus transportation|485410"
    ListItem = "485510 Charter bus industry|485510"
    ListItem = "485990 Other transit and ground passenger transportation|485990"
    ListItem = "486000 Pipeline transportation|486000"
    ListItem = "487000 Scenic and sightseeing transportation|487000"
    ListItem = "488000 Support activities for transportation|488000"
    ListItem = "492000 Couriers and messengers|492000"
    ListItem = "493100 Warehousing and storage|493100"
    ListItem = "511000 Publishing industries|511000"
    ListItem = "512100 Motion picture and video industries|512100"
    ListItem = "512200 Sound recording industries|512200"
    ListItem = "515000 Broadcasting|515000"
    ListItem = "517000 Telecommunications & Internet service providers|517000"
    ListItem = "518210 Data processing, hosting, & related services|518210"
    ListItem = "519100 Other information services|519100"
    ListItem = "522100 Depository credit intermediation|522100"
    ListItem = "522200 Nondepository credit intermediation|522200"
    ListItem = "522300 Activities related to credit intermediation|522300"
    ListItem = "523110 Investment bankers and securities dealers|523110"
    ListItem = "523120 Securities brokers|523120"
    ListItem = "523130 Commodity contracts dealers|523130"
    ListItem = "523140 Commodity contracts brokers|523140"
    ListItem = "523210 Securities and commodity exchanges|523210"
    ListItem = "523900 Other financial investment activities|523900"
    ListItem = "524210 Insurance agencies and brokerages|524210"
    ListItem = "524290 Other insurance related activities|524290"
    ListItem = "531100 Lessors of real estate|531100"
    ListItem = "531210 Offices of real estate agents and brokers|531210"
    ListItem = "531310 Real estate property managers|531310"
    ListItem = "531320 Offices of real estate appraisers|531320"
    ListItem = "531390 Other activities related to real estate|531390"
    ListItem = "532100 Automotive equipment rental and leasing|532100"
    ListItem = "532210 Consumer electronics and appliances rental|532210"
    ListItem = "532220 Formal wear and costume rental|532220"
    ListItem = "532230 Video tape and disc rental|532230"
    ListItem = "532283 Home health equipment rental|532283"
    ListItem = "532284 Recreational goods rental|532284"
    ListItem = "532290 Other consumer goods rental|532290"
    ListItem = "532310 General rental centers|532310"
    ListItem = "532400 Commercial and industrial equipment rental and leasing|532400"
    ListItem = "541100 Legal services|541100"
    ListItem = "541211 Office of certified public accountants|541211"
    ListItem = "541213 Tax preparation services|541213"
    ListItem = "541214 Payroll services|541214"
    ListItem = "541219 Other accounting services|541219"
    ListItem = "541310 Architectural services|541310"
    ListItem = "541320 Landscape architecture services|541320"
    ListItem = "541330 Engineering services|541330"
    ListItem = "541340 Drafting services|541340"
    ListItem = "541350 Building inspection services|541350"
    ListItem = "541360 Geophysical surveying and mapping services|541360"
    ListItem = "541370 Surveying and mapping services|541370"
    ListItem = "541380 Testing laboratories|541380"
    ListItem = "541400 Specialized design services|541400"
    ListItem = "541510 Computer systems design and related services|541510"
    ListItem = "541600 Management, scientific, and technical consulting services|541600"
    ListItem = "541700 Scientific research and development services|541700"
    ListItem = "541800 Advertising and related services|541800"
    ListItem = "541910 Market research and public opinion polling|541910"
    ListItem = "541920 Photographic services|541920"
    ListItem = "541930 Translation and interpretation services|541930"
    ListItem = "541940 Veterinary services|541940"
    ListItem = "541990 All other professional, scientific, and technical services|541990"
    ListItem = "561110 Office administrative services|561110"
    ListItem = "561210 Facilities support services|561210"
    ListItem = "561300 Employment services|561300"
    ListItem = "561410 Document preparation services|561410"
    ListItem = "561420 Telephone call centers|561420"
    ListItem = "561430 Business service centers|561430"
    ListItem = "561440 Collection agencies|561440"
    ListItem = "561450 Credit bureaus|561450"
    ListItem = "561490 Other business support services|561490"
    ListItem = "561500 Travel arrangement and reservation services|561500"
    ListItem = "561600 Investigation and security services|561600"
    ListItem = "561710 Exterminating and pest control services|561710"
    ListItem = "561720 Janitorial services|561720"
    ListItem = "561730 Landscaping services|561730"
    ListItem = "561740 Carpet and upholstery cleaning services|561740"
    ListItem = "561790 Other services to buildings and dwellings|561790"
    ListItem = "561900 Other support services|561900"
    ListItem = "562000 Waste management and remediation services|562000"
    ListItem = "611000 Educational services|611000"
    ListItem = "621111 Offices of physicians|621111"
    ListItem = "621112 Offices of mental health specialists|621112"
    ListItem = "621210 Offices of dentists|621210"
    ListItem = "621310 Offices of chiropractors|621310"
    ListItem = "621320 Offices of optometrists|621320"
    ListItem = "621330 Offices of mental health practitioners|621330"
    ListItem = "621340 Offices of physical, occupational and speech therapists|621340"
    ListItem = "621391 Offices of podiatrists|621391"
    ListItem = "621399 Offices of all other health practitioners|621399"
    ListItem = "621400 Outpatient care centers|621400"
    ListItem = "621510 Medical and diagnostic laboratories|621510"
    ListItem = "621610 Home health care services|621610"
    ListItem = "621900 Other ambulatory health care services|621900"
    ListItem = "622000 Hospitals|622000"
    ListItem = "623000 Nursing and residential care facilities|623000"
    ListItem = "624100 Individual and family services|624100"
    ListItem = "624200 Community food and housing, and other relief services|624200"
    ListItem = "624310 Vocational rehabilitation services|624310"
    ListItem = "624410 Child day care services|624410"
    ListItem = "711100 Performing arts companies|711100"
    ListItem = "711210 Spectator sports|711210"
    ListItem = "711300 Promoters of performing arts, sports, and events|711300"
    ListItem = "711410 Agents and managers for public figures|711410"
    ListItem = "711510 Independent artists, writers, and performers|711510"
    ListItem = "712100 Museums, historical sites, and similar institutions|712100"
    ListItem = "713100 Amusement parks and arcades|713100"
    ListItem = "713200 Gambling industries|713200"
    ListItem = "713900 Other amusement and recreation services|713900"
    ListItem = "721100 Travel accommodation|721100"
    ListItem = "721210 RV parks and recreational camps|721210"
    ListItem = "721310 Rooming and boarding houses|721310"
    ListItem = "722300 Special food services|722300"
    ListItem = "722410 Drinking places (alcoholic beverages)|722410"
    ListItem = "722511 Full-service restaurants|722511"
    ListItem = "722513 Limited-service restaurants|722513"
    ListItem = "722514 Cafeterias and buffets|722514"
    ListItem = "722515 Snack and non-alcoholic beverage bars|722515"
    ListItem = "811110 Automotive repair and maintenance|811110"
    ListItem = "811120 Automotive body, paint, interior, and glass repair|811120"
    ListItem = "811190 Other automotive repair and maintenance|811190"
    ListItem = "811210 Electronic equipment repair and maintenance|811210"
    ListItem = "811310 Commercial and industrial machinery and equipment|811310"
    ListItem = "811410 Home and garden equipment repair and maintenance|811410"
    ListItem = "811420 Reupholstery and furniture repair|811420"
    ListItem = "811430 Footwear and leather goods repair|811430"
    ListItem = "811490 Other personal and household goods repair and maintenance|811490"
    ListItem = "812111 Barber shops|812111"
    ListItem = "812112 Beauty salons|812112"
    ListItem = "812113 Nail salons|812113"
    ListItem = "812190 Other personal care services|812190"
    ListItem = "812210 Funeral homes and funeral services|812210"
    ListItem = "812220 Cemeteries and crematories|812220"
    ListItem = "812310 Coin-operated laundries and drycleaners|812310"
    ListItem = "812320 Drycleaning and laundry services|812320"
    ListItem = "812330 Linen and uniform supply|812330"
    ListItem = "812910 Pet care services|812910"
    ListItem = "812920 Photofinishing|812920"
    ListItem = "812930 Parking lots and garages|812930"
    ListItem = "812990 All other personal services|812990"
    ListItem = "813000 Religious, civic, professional, and similar organizations|813000"
    ListItem = "999999 Unclassified establishments|999999"
End Sub

Private Sub F1099CEventCode_SetList()
   ListTitle = "Identifiable Event Code"
   ListItem = "A - Bankruptcy|A"
   ListItem = "B - Other judicial debt relief|B"
   ListItem = "C - Statute of limitations or expiration of deficiency period|C"
   ListItem = "D - Foreclosure election|D"
   ListItem = "E - Debt relief from probate or similar proceeding|E"
   ListItem = "F - By agreement|F"
   ListItem = "G - Decision or policy to discontinue collection|G"
   ListItem = "H - Other actual discharge before identifiable event|H"
End Sub

Public Function CapGainCodesList_SetDynaList()
    'Removed codes C, D, W from list. Those codes now have their own boxes (12, 1f, 1g, respectively) - 9/13/2016 AT
    Call SetListTitle("CapGainCodesList")
    
    If GetBool(USDCapGain.YesBasis, GetNumber(USDCapGain.copynumber)) = True Then
        Call SetListItem("B - Basis reported was incorrect on Form 1099-B received", "B")
        Call SetListItem("T - Type of Gain/Loss reported in Box 1c is incorrect", "T")
        Call SetListItem("N - Received Form 1099-B as a nominee", "N")
        Call SetListItem("Q - Qualified small business stock exclusion", "Q")
        Call SetListItem("X - DC Zone assets or qualified community asset", "X")
        Call SetListItem("R - Rollover of QSB stock, EZ assets, ESOP", "R")
        Call SetListItem("L - Other Non-Deductible Loss (including Personal Loss)", "L")
        Call SetListItem("E - Selling expenses or option premium", "E")
        Call SetListItem("S - Loss on small business stock (section 1244)", "S")
        Call SetListItem("O - Other adjustment not listed", "O")
        Call SetListItem("B,T - Codes B and T apply", "BT")
        Call SetListItem("None", " ")
    ElseIf GetBool(USDCapGain.NoBasis, GetNumber(USDCapGain.copynumber)) = True Then
        Call SetListItem("T - Type of Gain/Loss reported in Box 1c is incorrect", "T")
        Call SetListItem("N - Received Form 1099-B as a nominee", "N")
        Call SetListItem("Q - Qualified small business stock exclusion", "Q")
        Call SetListItem("X - DC Zone assets or qualified community asset", "X")
        Call SetListItem("R - Rollover of QSB stock, EZ assets, ESOP", "R")
        Call SetListItem("L - Other Non-Deductible Loss (including Personal Loss)", "L")
        Call SetListItem("E - Selling expenses or option premium", "E")
        Call SetListItem("S - Loss on small business stock (section 1244)", "S")
        Call SetListItem("O - Other adjustment not listed", "O")
        Call SetListItem("None", " ")
    Else
        Call SetListItem("N - Received Form 1099-S as a nominee", "N")
        Call SetListItem("Q - Qualified small business stock exclusion", "Q")
        Call SetListItem("X - DC Zone assets or qualified community asset", "X")
        Call SetListItem("R - Rollover of QSB stock, EZ assets, ESOP", "R")
        Call SetListItem("L - Other Non-Deductible Loss (including Personal Loss)", "L")
        Call SetListItem("E - Selling expenses or option premium", "E")
        Call SetListItem("S - Loss on small business stock (section 1244)", "S")
        Call SetListItem("Z - Deferral of gain invested in a QOF", "Z")
        Call SetListItem("Y - Gain previously deferred in a QOF", "Y")
        Call SetListItem("O - Other adjustment not listed", "O")
        Call SetListItem("E,L - Codes E and L apply", "EL")
        Call SetListItem("None", " ")
    End If
End Function

Public Function F8949AttachCategoryList_SetDynaList()
    Dim allOptions As String
    Dim usedOptions As String
    Dim myOption As String
    Dim tempOption As String
    Dim count As Integer
    
    Call SetListTitle("F8949AttachCategoryList")
    
    If GetBool(USW8949AttachSummary.AttStmt, ParentCopy()) = True Then
        allOptions = "A|B|C|D|E|F"
        usedOptions = GetString(USW8949AttachSummary.UsedOptions, ParentCopy())
        myOption = GetString(USW8949Attach.Cat, GetCopy())
        
        count = 0
        Do While Len(allOptions) > (count * 2)
            tempOption = Mid(allOptions, (count * 2) + 1, 1)
            If FindInStr(usedOptions, tempOption) = 0 Or tempOption = myOption Then
                If tempOption = "A" Then
                    Call SetListItem("Short-term Category A", "A")
                ElseIf tempOption = "B" Then
                    Call SetListItem("Short-term Category B", "B")
                ElseIf tempOption = "C" Then
                    Call SetListItem("Short-term Category C", "C")
                ElseIf tempOption = "D" Then
                    Call SetListItem("Long-term Category D", "D")
                ElseIf tempOption = "E" Then
                    Call SetListItem("Long-term Category E", "E")
                ElseIf tempOption = "F" Then
                    Call SetListItem("Long-term Category F", "F")
                End If
            End If
            count = count + 1
        Loop
    Else
        Call SetListItem("None", " ")
    End If
End Function


Private Sub CapGainCategoryType_SetList()
   ListTitle = "Capital Gain Reporting Category Type"
   ListItem = "A - Short-term transaction in which basis was reported to the IRS|A"
   ListItem = "B - Short-term transaction in which basis was NOT reported to the IRS|B"
   ListItem = "C - Short-term transaction for which you did NOT receive a Form 1099-B|C"
   ListItem = "D - Long-term transaction in which basis was reported to the IRS|D"
   ListItem = "E - Long-term transaction in which basis was NOT reported to the IRS|E"
   ListItem = "F - Long-term transaction for which you did NOT receive a Form 1099-B|F"
End Sub


Public Function TaxTreatyList_SetDynaList()
    Call SetListTitle("TaxTreatyList")
    
    Dim ForCtryCd As String
    
    ForCtryCd = GetString(USSchOI.TreatyCtryCd(Index))
    
    If ForCtryCd = "AS" Then
        Call SetListItem("14")
        Call SetListItem("15")
        Call SetListItem("17")
        Call SetListItem("19")
        Call SetListItem("20")
    ElseIf ForCtryCd = "AU" Then
        Call SetListItem("14")
        Call SetListItem("15")
        Call SetListItem("17")
        Call SetListItem("19")
        Call SetListItem("20")
    ElseIf ForCtryCd = "BG" Then
        Call SetListItem("21(2) SCHOLARSHIPS OR FELLOWSHIP GRANT")
        Call SetListItem("21(2) STUDYING AND TRAINING REMITTANCES OR ALLOWANCES")
        Call SetListItem("21(2) STUDYING AND TRAINING COMPENSATION DURING STUDY OR TRAINING")
        Call SetListItem("15")
        Call SetListItem("16")
        Call SetListItem("18")
        Call SetListItem("20")
        Call SetListItem("21(1)")
    ElseIf ForCtryCd = "BB" Then
        Call SetListItem("14 INDEPENDENT PERSONAL SERVICES ANY FOREIGN CONTRACTOR")
        Call SetListItem("14 INDEPENDENT PERSONAL SERVICES ANY US CONTRACTOR")
        Call SetListItem("15")
        Call SetListItem("17")
        Call SetListItem("19")
        Call SetListItem("20")
    ElseIf ForCtryCd = "BE" Then
        Call SetListItem("7")
        Call SetListItem("14")
        Call SetListItem("16")
        Call SetListItem("18")
        Call SetListItem("19(2)")
        Call SetListItem("19(1)(a)")
        Call SetListItem("19(1)(b)")
    ElseIf ForCtryCd = "BU" Then
        Call SetListItem("7")
        Call SetListItem("14")
        Call SetListItem("16")
        Call SetListItem("18")
        Call SetListItem("19(2)")
        Call SetListItem("19(1)(a)")
        Call SetListItem("19(1)(b)")
    ElseIf ForCtryCd = "CA" Then
        Call SetListItem("VII")
        Call SetListItem("XIX")
        Call SetListItem("XV DEPENDENT PERSONAL SERVICES ANY US OR FOREIGN RESIDENT")
        Call SetListItem("XV DEPENDENT PERSONAL SERVICES ANY FOREIGN RESIDENT")
        Call SetListItem("XVI")
        Call SetListItem("XX")
    ElseIf ForCtryCd = "CH" Then
        Call SetListItem("20(b)")
        Call SetListItem("13")
        Call SetListItem("14")
        Call SetListItem("16")
        Call SetListItem("18")
        Call SetListItem("19")
        Call SetListItem("20(a)")
        Call SetListItem("20(c)")
    ElseIf ForCtryCd = "AM" Or ForCtryCd = "AJ" Or ForCtryCd = "GG" Or ForCtryCd = "BO" Or ForCtryCd = "KG" Or ForCtryCd = "MD" Or ForCtryCd = "TI" Or ForCtryCd = "TX" Or ForCtryCd = "UZ" Then
        Call SetListItem("VI(1) SCHOLARSHIP OR FELLOWSHIP GRANT")
        Call SetListItem("VI(1) TEACHING")
        Call SetListItem("VI(1) STUDYING AND TRAINING REMITTANCES OR ALLOWANCES")
        Call SetListItem("VI(1) STUDYING AND TRAINING COMPENSATION WHILE GAINING EXPERIENCE")
        Call SetListItem("VI(1) STUDYING AND TRAINING COMPENSATION UNDER US GOVERNMENT PROGRAM")
        Call SetListItem("VI(1)(A)")
        Call SetListItem("VI(2) INDEPENDENT PERSONAL SERVICES")
        Call SetListItem("VI(2) DEPENDENT PERSONAL SERVICES")
    ElseIf ForCtryCd = "CY" Then
        Call SetListItem("21(1) SCHOLARSHIP OR FELLOWSHIP GRANT")
        Call SetListItem("21(1) STUDYING AND TRAINING REMITTANCES OR ALLOWANCES")
        Call SetListItem("21(1) STUDYING AND TRAINING COMPENSATION DURING TRAINING")
        Call SetListItem("17")
        Call SetListItem("18")
        Call SetListItem("19(1)")
        Call SetListItem("21(2)")
        Call SetListItem("21(3)")
        Call SetListItem("22")
    ElseIf ForCtryCd = "EZ" Then
        Call SetListItem("21(1) SCHOLARSHIP OR FELLOWSHIP GRANT")
        Call SetListItem("21(1) STUDYING AND TRAINING REMITTANCES OR ALLOWANCES")
        Call SetListItem("21(1) STUDYING AND TRAINING COMPENSATION DURING TRAINING")
        Call SetListItem("14")
        Call SetListItem("15")
        Call SetListItem("18")
        Call SetListItem("20")
        Call SetListItem("21(5)")
        Call SetListItem("21(2)")
        Call SetListItem("21(3)")
    ElseIf ForCtryCd = "DA" Then
        Call SetListItem("14")
        Call SetListItem("15")
        Call SetListItem("17")
        Call SetListItem("19")
        Call SetListItem("20")
    ElseIf ForCtryCd = "EG" Then
        Call SetListItem("23(1) SCHOLARSHIP OR FELLOWSHIP GRANT")
        Call SetListItem("23(1) STUDYING AND TRAINING REMITTANCES OR ALLOWANCES")
        Call SetListItem("23(1) STUDYING AND TRAINING COMPENSATION DURING TRAINING")
        Call SetListItem("15")
        Call SetListItem("16")
        Call SetListItem("17")
        Call SetListItem("21")
        Call SetListItem("22")
        Call SetListItem("23(2)")
        Call SetListItem("23(3)")
    ElseIf ForCtryCd = "EN" Then
        Call SetListItem("20(1) SCHOLARSHIP OR FELLOWSHIP GRANTS")
        Call SetListItem("20(1) STUDYING AND TRAINING REMITTANCES OR ALLOWANCES")
        Call SetListItem("20(1) STUDYING AND TRAINING COMPENSATION DURING TRAINING")
        Call SetListItem("14")
        Call SetListItem("15")
        Call SetListItem("17")
        Call SetListItem("19")
        Call SetListItem("20(2) STUDYING AND TRAINING COMPENSATION DURING TRAINING")
        Call SetListItem("20(2) STUDYING AND TRAINING COMPENSATION WHILE GAINING EXPERIENCE")
        Call SetListItem("20(3)")
    ElseIf ForCtryCd = "FI" Then
        Call SetListItem("14")
        Call SetListItem("15")
        Call SetListItem("17")
        Call SetListItem("19")
        Call SetListItem("20")
    ElseIf ForCtryCd = "FR" Then
        Call SetListItem("21(1) SCHOLARSHIP OR FELLOWSHIP GRANT")
        Call SetListItem("21(1) STUDYING AND TRAINING REMITTANCES OR ALLOWANCES")
        Call SetListItem("21(1) STUDYING AND TRAINING COMPENSATION DURING STUDY OR TRAINING")
        Call SetListItem("14")
        Call SetListItem("15")
        Call SetListItem("17")
        Call SetListItem("19")
        Call SetListItem("20")
        Call SetListItem("21(2) STUDYING AND TRAINING COMPENSATION DURING STUDY OR TRAINING")
        Call SetListItem("21(2) STUDYING AND TRAINING COMPENSATION WHILE GAINING EXPERIENCE")
    ElseIf ForCtryCd = "GM" Then
        Call SetListItem("20(3)")
        Call SetListItem("7")
        Call SetListItem("15")
        Call SetListItem("17")
        Call SetListItem("19")
        Call SetListItem("20(1)")
        Call SetListItem("20(2)")
        Call SetListItem("20(4)")
        Call SetListItem("20(5)")
    ElseIf ForCtryCd = "GR" Then
        Call SetListItem("X INDEPENDENT PERSONAL SERVICES GREEK RESIDENT CONTRACTOR")
        Call SetListItem("X INDEPENDENT PERSONAL SERVICES OTHER FOREIGN OR US RESIDENT CONTRACTOR")
        Call SetListItem("X DEPENDENT PERSONAL SERVICES GREEK RESIDENT")
        Call SetListItem("X DEPENDENT PERSONAL SERVICES OTHER FOREIGN OR US RESIDENT")
        Call SetListItem("XI")
        Call SetListItem("XII")
        Call SetListItem("XIII")
    ElseIf ForCtryCd = "HU" Then
        Call SetListItem("13")
        Call SetListItem("14")
        Call SetListItem("16")
        Call SetListItem("17")
        Call SetListItem("18(1)")
    ElseIf ForCtryCd = "IC" Then
        Call SetListItem("19(1) SCHOLARSHIP OR FELLOWSHIP GRANT")
        Call SetListItem("19(1) STUDYING AND TRAINING REMITTANCES OR ALLOWANCES")
        Call SetListItem("19(1) STUDYING AND TRAINING COMPENSATION DURING STUDY OR TRAINING")
        Call SetListItem("7")
        Call SetListItem("14")
        Call SetListItem("16")
        Call SetListItem("18")
        Call SetListItem("19(2)")
        Call SetListItem("19(3)")
    ElseIf ForCtryCd = "IN" Then
        Call SetListItem("15")
        Call SetListItem("16")
        Call SetListItem("18")
        Call SetListItem("19")
        Call SetListItem("22")
        Call SetListItem("21(1)")
    ElseIf ForCtryCd = "ID" Then
        Call SetListItem("19(1) SCHOLARSHIP AND FELLOWSHIP GRANT")
        Call SetListItem("19(1) STUDYING AND TRAINING REMITTANCES OR ALLOWANCES")
        Call SetListItem("19(1) STUDYING AND TRAINING COMPENSATION DURING TRAINING")
        Call SetListItem("15")
        Call SetListItem("16")
        Call SetListItem("17")
        Call SetListItem("18")
        Call SetListItem("20")
        Call SetListItem("19(2)")
    ElseIf ForCtryCd = "EI" Then
        Call SetListItem("14")
        Call SetListItem("15")
        Call SetListItem("17")
        Call SetListItem("18")
        Call SetListItem("20")
    ElseIf ForCtryCd = "IS" Then
        Call SetListItem("24(1) SCHOLARSHIP AND FELLOWSHIP GRANT")
        Call SetListItem("24(1) STUDYING AND TRAINING REMITTANCES OR ALLOWANCES")
        Call SetListItem("24(1) STUDYING AND TRAINING COMPENSATION DURING STUDY OR TRAINING")
        Call SetListItem("16")
        Call SetListItem("17")
        Call SetListItem("18")
        Call SetListItem("20")
        Call SetListItem("22")
        Call SetListItem("23")
        Call SetListItem("24(2)")
        Call SetListItem("24(3)")
    ElseIf ForCtryCd = "IT" Then
        Call SetListItem("14(1)")
        Call SetListItem("15(2)")
        Call SetListItem("17")
        Call SetListItem("19")
        Call SetListItem("20")
        Call SetListItem("21")
    ElseIf ForCtryCd = "JM" Then
        Call SetListItem("14 INDEPENDENT PERSONAL SERVICES ANY FOREIGN CONTRACTOR")
        Call SetListItem("14 INDEPENDENT PERSONAL SERVICES ANY US CONTRACTOR")
        Call SetListItem("15")
        Call SetListItem("18")
        Call SetListItem("20")
        Call SetListItem("22")
        Call SetListItem("21(1)")
        Call SetListItem("21(2) STUDYING AND TRAINING COMPENSATION DURING STUDY")
        Call SetListItem("21(2) STUDYING AND TRAINING COMPENSATION WHILE GAINING EXPERIENCE")
    ElseIf ForCtryCd = "JA" Then
        Call SetListItem("7")
        Call SetListItem("14")
        Call SetListItem("16")
        Call SetListItem("18")
        Call SetListItem("20")
        Call SetListItem("19")
    ElseIf ForCtryCd = "KZ" Then
        Call SetListItem("17")
        Call SetListItem("19 SCHOLARSHIP OR FELLOWSHIP GRANT")
        Call SetListItem("19 STUDYING AND TRAINING REMITTANCES OR ALLOWANCES")
        Call SetListItem("14")
        Call SetListItem("15")
    ElseIf ForCtryCd = "KS" Then
        Call SetListItem("21(1) SCHOLARSHIP OR FELLOWSHIP GRANT")
        Call SetListItem("21(1) STUDYING AND TRAINING REMITTANCES OR ALLOWANCES")
        Call SetListItem("21(1) STUDYING AND TRAINING COMPENSATION DURING TRAINING")
        Call SetListItem("18")
        Call SetListItem("19")
        Call SetListItem("20")
        Call SetListItem("21(2)")
        Call SetListItem("21(3)")
        Call SetListItem("22")
    ElseIf ForCtryCd = "LG" Then
        Call SetListItem("20(1) SCHOLARSHIP OR FELLOWSHIP GRANTS")
        Call SetListItem("20(1) STUDYING AND TRAINING REMITTANCES OR ALLOWANCES")
        Call SetListItem("20(1) STUDYING AND TRAINING COMPENSATION DURING TRAINING")
        Call SetListItem("14")
        Call SetListItem("15")
        Call SetListItem("17")
        Call SetListItem("19")
        Call SetListItem("20(2) STUDYING AND TRAINING COMPENSATION DURING TRAINING")
        Call SetListItem("20(2) STUDYING AND TRAINING COMPENSATION WHILE GAINING EXPERIENCE")
        Call SetListItem("20(3)")
    ElseIf ForCtryCd = "LH" Then
        Call SetListItem("20(1) SCHOLARSHIP OR FELLOWSHIP GRANTS")
        Call SetListItem("20(1) STUDYING AND TRAINING REMITTANCES OR ALLOWANCES")
        Call SetListItem("20(1) STUDYING AND TRAINING COMPENSATION DURING TRAINING")
        Call SetListItem("14")
        Call SetListItem("15")
        Call SetListItem("17")
        Call SetListItem("19")
        Call SetListItem("20(2) STUDYING AND TRAINING COMPENSATION DURING TRAINING")
        Call SetListItem("20(2) STUDYING AND TRAINING COMPENSATION WHILE GAINING EXPERIENCE")
        Call SetListItem("20(3)")
    ElseIf ForCtryCd = "LU" Then
        Call SetListItem("15")
        Call SetListItem("16")
        Call SetListItem("18")
        Call SetListItem("20")
        Call SetListItem("21(2)")
        Call SetListItem("21(1)")
    ElseIf ForCtryCd = "MT" Then
        Call SetListItem("7")
        Call SetListItem("14")
        Call SetListItem("16")
        Call SetListItem("19")
        Call SetListItem("20(1)")
        Call SetListItem("20(2)")
        Call SetListItem("20")
    ElseIf ForCtryCd = "MX" Then
        Call SetListItem("14")
        Call SetListItem("15")
        Call SetListItem("18")
        Call SetListItem("20")
        Call SetListItem("21")
    ElseIf ForCtryCd = "MO" Then
        Call SetListItem("18 SCHOLARSHIP OR FELLOWSHIP GRANT")
        Call SetListItem("18 STUDYING AND TRAINING REMITTANCES OR ALLOWANCES")
        Call SetListItem("18 STUDYING AND TRAINING COMPENSATION DURING TRAINING")
        Call SetListItem("14")
        Call SetListItem("15")
        Call SetListItem("17")
    ElseIf ForCtryCd = "NL" Then
        Call SetListItem("22(1) STUDYING AND TRAINING REMITTANCES OR ALLOWANCES")
        Call SetListItem("22(1) STUDYING AND TRAINING COMPENSATION WHILE GAINING EXPERIENCE")
        Call SetListItem("22(2) SCHOLARSHIP OR FELLOWSHIP GRANT")
        Call SetListItem("22(2) STUDYING AND TRAINING COMPENSATION WHILE RECIPIENT OF SCHOLARSHIP OR FELLOWSHIP GRANT")
        Call SetListItem("15")
        Call SetListItem("16")
        Call SetListItem("18")
        Call SetListItem("20")
        Call SetListItem("21(1)")
    ElseIf ForCtryCd = "NZ" Then
        Call SetListItem("14")
        Call SetListItem("15")
        Call SetListItem("17")
        Call SetListItem("19")
        Call SetListItem("20")
    ElseIf ForCtryCd = "NO" Then
        Call SetListItem("13 INDEPENDENT PERSONAL SERVICES")
        Call SetListItem("13 PUBLIC ENTERTAINMENT")
        Call SetListItem("14")
        Call SetListItem("15")
        Call SetListItem("16(1) SCHOLARSHIP OR FELLOWSHIP GRANT")
        Call SetListItem("16(1) STUDYING AND TRAINING REMITTANCES OR ALLOWANCES")
        Call SetListItem("16(1) STUDYING AND TRAINING COMPENSATION DURING TRAINING")
        Call SetListItem("16(2)")
        Call SetListItem("16(3)")
        Call SetListItem("17")
    ElseIf ForCtryCd = "PK" Then
        Call SetListItem("XIII(1) SCHOLARSHIP OR FELLOWSHIP GRANT")
        Call SetListItem("XIII(1) STUDYING AND TRAINING REMITTANCES OR ALLOWANCES")
        Call SetListItem("XIII(1) STUDYING AND TRAINING COMPENSATION DURING TRAINING")
        Call SetListItem("XI INDEPENDENT PERSONAL SERVICES")
        Call SetListItem("XI DEPENDENT PERSONAL SERVICES")
        Call SetListItem("XII")
        Call SetListItem("XIII(2)")
        Call SetListItem("XIII(3)")
        Call SetListItem("IX")
    ElseIf ForCtryCd = "RP" Then
        Call SetListItem("15 INDEPENDENT PERSONAL SERVICES ANY FOREIGN CONTRACTOR")
        Call SetListItem("15 INDEPENDENT PERSONAL SERVICES ANY US RESIDENT")
        Call SetListItem("16")
        Call SetListItem("17")
        Call SetListItem("20")
        Call SetListItem("21")
        Call SetListItem("22(1) SCHOLARSHIP OR FELLOWSHIP GRANT")
        Call SetListItem("22(1) STUDYING AND TRAINING REMITTANCES OR ALLOWANCES")
        Call SetListItem("22(1) STUDYING AND TRAINING COMPENSATION DURING STUDY")
        Call SetListItem("22(2)")
        Call SetListItem("22(3)")
    ElseIf ForCtryCd = "PL" Then
        Call SetListItem("18(1) SCHOLARSHIP OR FELLOWSHIP GRANT")
        Call SetListItem("18(1) STUDYING AND TRAINING REMITTANCES OR ALLOWANCES")
        Call SetListItem("18(1) STUDYING AND TRAINING COMPENSATION DURING TRAINING")
        Call SetListItem("15")
        Call SetListItem("16")
        Call SetListItem("17")
        Call SetListItem("18(2)")
        Call SetListItem("18(3)")
        Call SetListItem("19")
    ElseIf ForCtryCd = "PO" Then
        Call SetListItem("15")
        Call SetListItem("16")
        Call SetListItem("19")
        Call SetListItem("21")
        Call SetListItem("22")
        Call SetListItem("23(1) SCHOLARSHIP OR FELLOWSHIP GRANT")
        Call SetListItem("23(1) STUDYING AND TRAINING REMITTANCES OR ALLOWANCES")
        Call SetListItem("23(1) STUDYING AND TRAINING COMPENSATION DURING STUDY OR TRAINING")
        Call SetListItem("23(2) STUDYING AND TRAINING COMPENSATION DURING STUDY OR TRAINING")
        Call SetListItem("23(2) STUDYING AND TRAINING COMPENSATION WHILE GAINING EXPERIENCE")
    ElseIf ForCtryCd = "RO" Then
        Call SetListItem("20(1) SCHOLARSHIP OR FELLOWSHIP GRANT")
        Call SetListItem("20(1) STUDYING AND TRAINING REMITTANCES OR ALLOWANCES")
        Call SetListItem("20(1) STUDYING AND TRAINING COMPENSATION DURING TRAINING")
        Call SetListItem("14 INDEPENDENT PERSONAL SERVICES")
        Call SetListItem("14 PUBLIC ENTERTAINMENT")
        Call SetListItem("15 DEPENDENT PERSONAL SERVICES")
        Call SetListItem("15 PUBLIC ENTERTAINMENT")
        Call SetListItem("18")
        Call SetListItem("19")
        Call SetListItem("20(2)")
        Call SetListItem("20(3)")
    ElseIf ForCtryCd = "RS" Then
        Call SetListItem("18 SCHOLARSHIP OR FELLOWSHIP GRANT")
        Call SetListItem("18 STUDYING AND TRAINING REMITTANCES OR ALLOWANCES")
        Call SetListItem("13")
        Call SetListItem("14")
        Call SetListItem("16")
    ElseIf ForCtryCd = "LO" Then
        Call SetListItem("21(1) SCHOLARSHIP OR FELLOWSHIP GRANT")
        Call SetListItem("21(1) STUDYING AND TRAINING REMITTANCES OR ALLOWANCES")
        Call SetListItem("21(1) STUDYING AND TRAINING COMPENSATION DURING TRAINING")
        Call SetListItem("14")
        Call SetListItem("15")
        Call SetListItem("18")
        Call SetListItem("20")
        Call SetListItem("21(5)")
        Call SetListItem("21(2)")
        Call SetListItem("21(3)")
    ElseIf ForCtryCd = "SI" Then
        Call SetListItem("20(1) SCHOLARSHIP OR FELLOWSHIP GRANT")
        Call SetListItem("20(1) STUDYING AND TRAINING REMITTANCES OR ALLOWANCES")
        Call SetListItem("20(1) STUDYING AND TRAINING COMPENSATION DURING TRAINING")
        Call SetListItem("14")
        Call SetListItem("15")
        Call SetListItem("17")
        Call SetListItem("19")
        Call SetListItem("20(3)")
        Call SetListItem("20(2) STUDYING AND TRAINING COMPENSATION DURING TRAINING")
        Call SetListItem("20(2) STUDYING AND TRAINING COMPENSATION WHILE GAINING EXPERIENCE")
    ElseIf ForCtryCd = "SF" Then
        Call SetListItem("14")
        Call SetListItem("15")
        Call SetListItem("17")
        Call SetListItem("19")
        Call SetListItem("20")
    ElseIf ForCtryCd = "SP" Then
        Call SetListItem("22(1) SCHOLARSHIP OR FELLOWSHIP GRANT")
        Call SetListItem("22(1) STUDYING AND TRAINING REMITTANCES OR ALLOWANCES")
        Call SetListItem("22(1) STUDYING AND TRAINING COMPENSATION DURING TRAINING")
        Call SetListItem("15")
        Call SetListItem("16")
        Call SetListItem("19")
        Call SetListItem("21")
        Call SetListItem("22(2)")
    ElseIf ForCtryCd = "CE" Then
        Call SetListItem("15")
        Call SetListItem("16")
        Call SetListItem("18")
        Call SetListItem("20")
        Call SetListItem("21(1)")
        Call SetListItem("21(2)")
    ElseIf ForCtryCd = "SW" Then
        Call SetListItem("14")
        Call SetListItem("15")
        Call SetListItem("18")
        Call SetListItem("20")
        Call SetListItem("21")
    ElseIf ForCtryCd = "SZ" Then
        Call SetListItem("14")
        Call SetListItem("15")
        Call SetListItem("17")
        Call SetListItem("19")
        Call SetListItem("20")
    ElseIf ForCtryCd = "TH" Then
        Call SetListItem("22(1) SCHOLARSHIP OR FELLOWSHIP GRANT")
        Call SetListItem("22(1) STUDYING AND TRAINING REMITTANCES OR ALLOWANCES")
        Call SetListItem("22(1) STUDYING AND TRAINING COMPENSATION DURING TRAINING")
        Call SetListItem("15 INDEPENDENT PERSONAL SERVICES ANY US RESIDENT OR PERMANENT ESTABLISHMENT")
        Call SetListItem("15 INDEPENDENT PERSONAL SERVICES ANY FOREIGN CONTRACTOR")
        Call SetListItem("16")
        Call SetListItem("19")
        Call SetListItem("21")
        Call SetListItem("23")
        Call SetListItem("22(2)")
        Call SetListItem("22(3)")
    ElseIf ForCtryCd = "TD" Then
        Call SetListItem("19(1) SCHOLARSHIP OR FELLOWSHIP GRANT")
        Call SetListItem("19(1) STUDYING AND TRAINING REMITTANCES OR ALLOWANCES")
        Call SetListItem("19(1) STUDYING AND TRAINING COMPENSATION DURING STUDY OR RESEARCH")
        Call SetListItem("19(1) STUDYING AND TRAINING COMPENSATION DURING PROFESSIONAL TRAINING")
        Call SetListItem("17 INDEPENDENT PERSONAL SERVICES ANY FOREIGN RESIDENT CONTRACTOR")
        Call SetListItem("17 INDEPENDENT PERSONAL SERVICES ANY US CONTRACTOR")
        Call SetListItem("17 DEPENDENT PERSONAL SERVICES ANY FOREIGN RESIDENT")
        Call SetListItem("17 DEPENDENT PERSONAL SERVICES ANY US RESIDENT")
        Call SetListItem("18")
        Call SetListItem("19(2)")
        Call SetListItem("19(3)")
        Call SetListItem("20")
    ElseIf ForCtryCd = "TS" Then
        Call SetListItem("20 SCHOLARSHIP AND FELLOWSHIP GRANT")
        Call SetListItem("20 STUDYING AND TRAINING REMITTANCES OR ALLOWANCES")
        Call SetListItem("20 STUDYING AND TRAINING COMPENSATION DURING TRAINING")
        Call SetListItem("14")
        Call SetListItem("15")
        Call SetListItem("17")
        Call SetListItem("19")
    ElseIf ForCtryCd = "TU" Then
        Call SetListItem("14")
        Call SetListItem("15")
        Call SetListItem("17")
        Call SetListItem("19")
        Call SetListItem("20(2)")
        Call SetListItem("20(1)")
    ElseIf ForCtryCd = "UP" Then
        Call SetListItem("20 SCHOLARSHIP OR FELLOWSHIP GRANT")
        Call SetListItem("20 STUDYING AND TRAINING REMITTANCES OR ALLOWANCES")
        Call SetListItem("14")
        Call SetListItem("15")
        Call SetListItem("18")
    ElseIf ForCtryCd = "UK" Then
        Call SetListItem("7")
        Call SetListItem("14")
        Call SetListItem("16")
        Call SetListItem("19")
        Call SetListItem("20A")
        Call SetListItem("20")
    ElseIf ForCtryCd = "VE" Then
        Call SetListItem("21(1) SCHOLARSHIP OR FELLOWSHIP GRANTS")
        Call SetListItem("21(1) STUDYING AND TRAINING REMITTANCES OR ALLOWANCES")
        Call SetListItem("21(1) STUDYING AND TRAINING COMPENSATION DURING TRAINING")
        Call SetListItem("14")
        Call SetListItem("15")
        Call SetListItem("18")
        Call SetListItem("20")
        Call SetListItem("21(3)")
        Call SetListItem("21(2) STUDYING AND TRAINING COMPENSATION DURING TRAINING")
        Call SetListItem("21(2) STUDYING AND TRAINING COMPENSATION WHILE GAINING EXPERIENCE")
    End If
End Function

Public Function IsTreatyCountry(ForCtryCd As String) As Boolean
    If ForCtryCd = "AS" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "AU" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "BG" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "BB" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "BE" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "BU" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "CA" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "CH" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "AM" Or ForCtryCd = "AJ" Or ForCtryCd = "GG" Or ForCtryCd = "BO" Or ForCtryCd = "KG" Or ForCtryCd = "MD" Or ForCtryCd = "TI" Or ForCtryCd = "TX" Or ForCtryCd = "UZ" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "CY" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "EZ" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "DA" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "EG" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "EN" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "FI" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "FR" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "GM" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "GR" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "HU" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "IC" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "IN" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "ID" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "EI" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "IS" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "IT" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "JM" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "JA" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "KZ" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "KS" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "LG" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "LH" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "LU" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "MT" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "MX" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "MO" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "NL" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "NZ" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "NO" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "PK" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "RP" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "PL" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "PO" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "RO" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "RS" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "LO" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "SI" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "SF" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "SP" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "CE" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "SW" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "SZ" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "TH" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "TD" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "TS" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "TU" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "UP" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "UK" Then
        IsTreatyCountry = True
    ElseIf ForCtryCd = "VE" Then
        IsTreatyCountry = True
    Else
        IsTreatyCountry = False
    End If
End Function

Public Function StudentIDList_SetDynaList()
    Call SetListTitle("StudentIDList")
    
    If GetString(USWBasicInfo.FirstName) <> "" And GetString(USWBasicInfo.LastName) <> "" And GetString(USWBasicInfo.SSN) <> "" Then
        Call SetListItem(GetString(USWBasicInfo.SSN) + " - " + GetString(USWBasicInfo.FirstName), GetString(USWBasicInfo.SSN))
    End If
        
    If GetString(USF1040.SpouseFirst) <> "" And GetString(USF1040.SpouseLast) <> "" And GetString(USF1040.SpouseSSN) <> "" And GetBool(USF1040.Joint) = True And GetBool(USWResidency.F1040NR) = False And GetBool(USWResidency.Dual) = False Then
        Call SetListItem(GetString(USF1040.SpouseSSN) + " - " + GetString(USF1040.SpouseFirst), GetString(USF1040.SpouseSSN))
    End If
        
    If GetBool(USWDependents.DepQual, 1) = True And GetString(USWDependents.DepName, 1) <> "" And GetString(USWDependents.DepLast, 1) <> "" And GetString(USWDependents.DepSSN, 1) <> "" Then
        Call SetListItem(GetString(USWDependents.DepSSN, 1) + " - " + GetString(USWDependents.DepName, 1), GetString(USWDependents.DepSSN, 1))
    End If
    
    If GetBool(USWDependents.DepQual, 2) = True And GetString(USWDependents.DepName, 2) <> "" And GetString(USWDependents.DepLast, 2) <> "" And GetString(USWDependents.DepSSN, 2) <> "" Then
        Call SetListItem(GetString(USWDependents.DepSSN, 2) + " - " + GetString(USWDependents.DepName, 2), GetString(USWDependents.DepSSN, 2))
    End If
    
    If GetBool(USWDependents.DepQual, 3) = True And GetString(USWDependents.DepName, 3) <> "" And GetString(USWDependents.DepLast, 3) <> "" And GetString(USWDependents.DepSSN, 3) <> "" Then
        Call SetListItem(GetString(USWDependents.DepSSN, 3) + " - " + GetString(USWDependents.DepName, 3), GetString(USWDependents.DepSSN, 3))
    End If
    
    If GetBool(USWDependents.DepQual, 4) = True And GetString(USWDependents.DepName, 4) <> "" And GetString(USWDependents.DepLast, 4) <> "" And GetString(USWDependents.DepSSN, 4) <> "" Then
        Call SetListItem(GetString(USWDependents.DepSSN, 4) + " - " + GetString(USWDependents.DepName, 4), GetString(USWDependents.DepSSN, 4))
    End If
    
    If GetBool(USWDependents.DepQual, 5) = True And GetString(USWDependents.DepName, 5) <> "" And GetString(USWDependents.DepLast, 5) <> "" And GetString(USWDependents.DepSSN, 5) <> "" Then
        Call SetListItem(GetString(USWDependents.DepSSN, 5) + " - " + GetString(USWDependents.DepName, 5), GetString(USWDependents.DepSSN, 5))
    End If
    
    If GetBool(USWDependents.DepQual, 6) = True And GetString(USWDependents.DepName, 6) <> "" And GetString(USWDependents.DepLast, 6) <> "" And GetString(USWDependents.DepSSN, 6) <> "" Then
        Call SetListItem(GetString(USWDependents.DepSSN, 6) + " - " + GetString(USWDependents.DepName, 6), GetString(USWDependents.DepSSN, 6))
    End If
    
    If GetBool(USWDependents.DepQual, 7) = True And GetString(USWDependents.DepName, 7) <> "" And GetString(USWDependents.DepLast, 7) <> "" And GetString(USWDependents.DepSSN, 7) <> "" Then
        Call SetListItem(GetString(USWDependents.DepSSN, 7) + " - " + GetString(USWDependents.DepName, 7), GetString(USWDependents.DepSSN, 7))
    End If
    
    If GetBool(USWDependents.DepQual, 8) = True And GetString(USWDependents.DepName, 8) <> "" And GetString(USWDependents.DepLast, 8) <> "" And GetString(USWDependents.DepSSN, 8) <> "" Then
        Call SetListItem(GetString(USWDependents.DepSSN, 8) + " - " + GetString(USWDependents.DepName, 8), GetString(USWDependents.DepSSN, 8))
    End If
    
    If GetBool(USWDependents.DepQual, 9) = True And GetString(USWDependents.DepName, 9) <> "" And GetString(USWDependents.DepLast, 9) <> "" And GetString(USWDependents.DepSSN, 9) <> "" Then
        Call SetListItem(GetString(USWDependents.DepSSN, 9) + " - " + GetString(USWDependents.DepName, 9), GetString(USWDependents.DepSSN, 9))
    End If
    
    If GetBool(USWDependents.DepQual, 10) = True And GetString(USWDependents.DepName, 10) <> "" And GetString(USWDependents.DepLast, 10) <> "" And GetString(USWDependents.DepSSN, 10) <> "" Then
        Call SetListItem(GetString(USWDependents.DepSSN, 10) + " - " + GetString(USWDependents.DepName, 10), GetString(USWDependents.DepSSN, 10))
    End If
    
    If GetBool(USWDependents.DepQual, 11) = True And GetString(USWDependents.DepName, 11) <> "" And GetString(USWDependents.DepLast, 11) <> "" And GetString(USWDependents.DepSSN, 11) <> "" Then
        Call SetListItem(GetString(USWDependents.DepSSN, 11) + " - " + GetString(USWDependents.DepName, 11), GetString(USWDependents.DepSSN, 11))
    End If
    
    If GetBool(USWDependents.DepQual, 12) = True And GetString(USWDependents.DepName, 12) <> "" And GetString(USWDependents.DepLast, 12) <> "" And GetString(USWDependents.DepSSN, 12) <> "" Then
        Call SetListItem(GetString(USWDependents.DepSSN, 12) + " - " + GetString(USWDependents.DepName, 12), GetString(USWDependents.DepSSN, 12))
    End If
    
    If GetBool(USWDependents.DepQual, 13) = True And GetString(USWDependents.DepName, 13) <> "" And GetString(USWDependents.DepLast, 13) <> "" And GetString(USWDependents.DepSSN, 13) <> "" Then
        Call SetListItem(GetString(USWDependents.DepSSN, 13) + " - " + GetString(USWDependents.DepName, 13), GetString(USWDependents.DepSSN, 13))
    End If
    
    If GetBool(USWDependents.DepQual, 14) = True And GetString(USWDependents.DepName, 14) <> "" And GetString(USWDependents.DepLast, 14) <> "" And GetString(USWDependents.DepSSN, 14) <> "" Then
        Call SetListItem(GetString(USWDependents.DepSSN, 14) + " - " + GetString(USWDependents.DepName, 14), GetString(USWDependents.DepSSN, 14))
    End If
    
    If GetBool(USWDependents.DepQual, 15) = True And GetString(USWDependents.DepName, 15) <> "" And GetString(USWDependents.DepLast, 15) <> "" And GetString(USWDependents.DepSSN, 15) <> "" Then
        Call SetListItem(GetString(USWDependents.DepSSN, 15) + " - " + GetString(USWDependents.DepName, 15), GetString(USWDependents.DepSSN, 15))
    End If
End Function

Public Function W7ITINList_SetDynaList()
    Call SetListTitle("W7ITINList")
    
    Dim UsedOptions As String
    Dim Count As Integer
    Dim Dep As String
    Dim TP As String
    Dim SP As String
    Dim Curr As String
    
    UsedOptions = GetString(USFW7.UsedOptions, GetCopy())
    Count = 1
    TP = GetString(USWBasicInfo.SSN)
    SP = GetString(USWBasicInfo.SpouseSSN)
    Curr = GetString(USFW7.CurrentOption, GetCopy())
    
    If IsValidITIN(TP) = True And GetString(USWBasicInfo.FirstName) <> "" And (FindInStr(UsedOptions, TP) = 0 Or TP = Curr) Then
        Call SetListItem(TP + " - " + GetString(USWBasicInfo.FirstName), TP)
    End If
    
    If IsValidITIN(SP) = True And GetString(USF1040.SpouseFirst) <> "" And (FindInStr(UsedOptions, SP) = 0 Or SP = Curr) Then
        Call SetListItem(SP + " - " + GetString(USF1040.SpouseFirst), SP)
    End If
    
    Do While Count < 16
        Dep = GetString(USWDependents.DepSSN, Count)
        If IsValidITIN(Dep) = True And GetString(USWDependents.DepName, Count) <> "" And (FindInStr(UsedOptions, Dep) = 0 Or Dep = Curr) Then
            Call SetListItem(Dep + " - " + GetString(USWDependents.DepName, Count), Dep)
            Count = Count + 1
        Else
            Count = Count + 1
        End If
    Loop
    
    Call SetListItem("None", " ")
End Function

Public Function DependentIDList_SetDynaList()
    Call SetListTitle("DependentIDList")
        
    If GetBool(USWDependents.DepQual, 1) = True And GetString(USWDependents.DepName, 1) <> "" And GetString(USWDependents.DepLast, 1) <> "" And GetString(USWDependents.DepSSN, 1) <> "" Then
        Call SetListItem(GetString(USWDependents.DepComb, 1), GetString(USWDependents.DepComb, 1))
    End If
    
    If GetBool(USWDependents.DepQual, 2) = True And GetString(USWDependents.DepName, 2) <> "" And GetString(USWDependents.DepLast, 2) <> "" And GetString(USWDependents.DepSSN, 2) <> "" Then
        Call SetListItem(GetString(USWDependents.DepComb, 2), GetString(USWDependents.DepComb, 2))
    End If
    
    If GetBool(USWDependents.DepQual, 3) = True And GetString(USWDependents.DepName, 3) <> "" And GetString(USWDependents.DepLast, 3) <> "" And GetString(USWDependents.DepSSN, 3) <> "" Then
        Call SetListItem(GetString(USWDependents.DepComb, 3), GetString(USWDependents.DepComb, 3))
    End If
    
    If GetBool(USWDependents.DepQual, 4) = True And GetString(USWDependents.DepName, 4) <> "" And GetString(USWDependents.DepLast, 4) <> "" And GetString(USWDependents.DepSSN, 4) <> "" Then
        Call SetListItem(GetString(USWDependents.DepComb, 4), GetString(USWDependents.DepComb, 4))
    End If
    
    If GetBool(USWDependents.DepQual, 5) = True And GetString(USWDependents.DepName, 5) <> "" And GetString(USWDependents.DepLast, 5) <> "" And GetString(USWDependents.DepSSN, 5) <> "" Then
        Call SetListItem(GetString(USWDependents.DepComb, 5), GetString(USWDependents.DepComb, 5))
    End If
    
    If GetBool(USWDependents.DepQual, 6) = True And GetString(USWDependents.DepName, 6) <> "" And GetString(USWDependents.DepLast, 6) <> "" And GetString(USWDependents.DepSSN, 6) <> "" Then
        Call SetListItem(GetString(USWDependents.DepComb, 6), GetString(USWDependents.DepComb, 6))
    End If
    
    If GetBool(USWDependents.DepQual, 7) = True And GetString(USWDependents.DepName, 7) <> "" And GetString(USWDependents.DepLast, 7) <> "" And GetString(USWDependents.DepSSN, 7) <> "" Then
        Call SetListItem(GetString(USWDependents.DepComb, 7), GetString(USWDependents.DepComb, 7))
    End If
    
    If GetBool(USWDependents.DepQual, 8) = True And GetString(USWDependents.DepName, 8) <> "" And GetString(USWDependents.DepLast, 8) <> "" And GetString(USWDependents.DepSSN, 8) <> "" Then
        Call SetListItem(GetString(USWDependents.DepComb, 8), GetString(USWDependents.DepComb, 8))
    End If
    
    If GetBool(USWDependents.DepQual, 9) = True And GetString(USWDependents.DepName, 9) <> "" And GetString(USWDependents.DepLast, 9) <> "" And GetString(USWDependents.DepSSN, 9) <> "" Then
        Call SetListItem(GetString(USWDependents.DepComb, 9), GetString(USWDependents.DepComb, 9))
    End If
    
    If GetBool(USWDependents.DepQual, 10) = True And GetString(USWDependents.DepName, 10) <> "" And GetString(USWDependents.DepLast, 10) <> "" And GetString(USWDependents.DepSSN, 10) <> "" Then
        Call SetListItem(GetString(USWDependents.DepComb, 10), GetString(USWDependents.DepComb, 10))
    End If
    
    If GetBool(USWDependents.DepQual, 11) = True And GetString(USWDependents.DepName, 11) <> "" And GetString(USWDependents.DepLast, 11) <> "" And GetString(USWDependents.DepSSN, 11) <> "" Then
        Call SetListItem(GetString(USWDependents.DepComb, 11), GetString(USWDependents.DepComb, 11))
    End If
    
    If GetBool(USWDependents.DepQual, 12) = True And GetString(USWDependents.DepName, 12) <> "" And GetString(USWDependents.DepLast, 12) <> "" And GetString(USWDependents.DepSSN, 12) <> "" Then
        Call SetListItem(GetString(USWDependents.DepComb, 12), GetString(USWDependents.DepComb, 12))
    End If
    
    If GetBool(USWDependents.DepQual, 13) = True And GetString(USWDependents.DepName, 13) <> "" And GetString(USWDependents.DepLast, 13) <> "" And GetString(USWDependents.DepSSN, 13) <> "" Then
        Call SetListItem(GetString(USWDependents.DepComb, 13), GetString(USWDependents.DepComb, 13))
    End If
    
    If GetBool(USWDependents.DepQual, 14) = True And GetString(USWDependents.DepName, 14) <> "" And GetString(USWDependents.DepLast, 14) <> "" And GetString(USWDependents.DepSSN, 14) <> "" Then
        Call SetListItem(GetString(USWDependents.DepComb, 14), GetString(USWDependents.DepComb, 14))
    End If
    
    If GetBool(USWDependents.DepQual, 15) = True And GetString(USWDependents.DepName, 15) <> "" And GetString(USWDependents.DepLast, 15) <> "" And GetString(USWDependents.DepSSN, 15) <> "" Then
        Call SetListItem(GetString(USWDependents.DepComb, 15), GetString(USWDependents.DepComb, 15))
    End If
End Function

Public Function QIDList_SetDynaList()
    Call SetListTitle("QIDList")
    
    If GetString(USWBasicInfo.FirstName) <> "" And GetString(USWBasicInfo.LastName) <> "" And GetString(USWBasicInfo.SSN) <> "" Then
        Call SetListItem(GetString(USWBasicInfo.SSN) + " - " + GetString(USWBasicInfo.FirstName), GetString(USWBasicInfo.SSN))
    End If
        
    If GetString(USF1040.SpouseFirst) <> "" And GetString(USF1040.SpouseLast) <> "" And GetString(USF1040.SpouseSSN) <> "" And GetBool(USF1040.Joint) = True And GetBool(USWResidency.F1040NR) = False And GetBool(USWResidency.Dual) = False Then
        Call SetListItem(GetString(USF1040.SpouseSSN) + " - " + GetString(USF1040.SpouseFirst), GetString(USF1040.SpouseSSN))
    End If
    
    If GetBool(USWDependents.DepQual, 1) = True And GetString(USWDependents.DepName, 1) <> "" And GetString(USWDependents.DepLast, 1) <> "" And GetString(USWDependents.DepSSN, 1) <> "" Then
        Call SetListItem(GetString(USWDependents.DepSSN, 1) + " - " + GetString(USWDependents.DepName, 1), GetString(USWDependents.DepSSN, 1))
    End If
    
    If GetBool(USWDependents.DepQual, 2) = True And GetString(USWDependents.DepName, 2) <> "" And GetString(USWDependents.DepLast, 2) <> "" And GetString(USWDependents.DepSSN, 2) <> "" Then
        Call SetListItem(GetString(USWDependents.DepSSN, 2) + " - " + GetString(USWDependents.DepName, 2), GetString(USWDependents.DepSSN, 2))
    End If
    
    If GetBool(USWDependents.DepQual, 3) = True And GetString(USWDependents.DepName, 3) <> "" And GetString(USWDependents.DepLast, 3) <> "" And GetString(USWDependents.DepSSN, 3) <> "" Then
        Call SetListItem(GetString(USWDependents.DepSSN, 3) + " - " + GetString(USWDependents.DepName, 3), GetString(USWDependents.DepSSN, 3))
    End If
    
    If GetBool(USWDependents.DepQual, 4) = True And GetString(USWDependents.DepName, 4) <> "" And GetString(USWDependents.DepLast, 4) <> "" And GetString(USWDependents.DepSSN, 4) <> "" Then
        Call SetListItem(GetString(USWDependents.DepSSN, 4) + " - " + GetString(USWDependents.DepName, 4), GetString(USWDependents.DepSSN, 4))
    End If
    
    If GetBool(USWDependents.DepQual, 5) = True And GetString(USWDependents.DepName, 5) <> "" And GetString(USWDependents.DepLast, 5) <> "" And GetString(USWDependents.DepSSN, 5) <> "" Then
        Call SetListItem(GetString(USWDependents.DepSSN, 5) + " - " + GetString(USWDependents.DepName, 5), GetString(USWDependents.DepSSN, 5))
    End If
    
    If GetBool(USWDependents.DepQual, 6) = True And GetString(USWDependents.DepName, 6) <> "" And GetString(USWDependents.DepLast, 6) <> "" And GetString(USWDependents.DepSSN, 6) <> "" Then
        Call SetListItem(GetString(USWDependents.DepSSN, 6) + " - " + GetString(USWDependents.DepName, 6), GetString(USWDependents.DepSSN, 6))
    End If
    
    If GetBool(USWDependents.DepQual, 7) = True And GetString(USWDependents.DepName, 7) <> "" And GetString(USWDependents.DepLast, 7) <> "" And GetString(USWDependents.DepSSN, 7) <> "" Then
        Call SetListItem(GetString(USWDependents.DepSSN, 7) + " - " + GetString(USWDependents.DepName, 7), GetString(USWDependents.DepSSN, 7))
    End If
    
    If GetBool(USWDependents.DepQual, 8) = True And GetString(USWDependents.DepName, 8) <> "" And GetString(USWDependents.DepLast, 8) <> "" And GetString(USWDependents.DepSSN, 8) <> "" Then
        Call SetListItem(GetString(USWDependents.DepSSN, 8) + " - " + GetString(USWDependents.DepName, 8), GetString(USWDependents.DepSSN, 8))
    End If
    
    If GetBool(USWDependents.DepQual, 9) = True And GetString(USWDependents.DepName, 9) <> "" And GetString(USWDependents.DepLast, 9) <> "" And GetString(USWDependents.DepSSN, 9) <> "" Then
        Call SetListItem(GetString(USWDependents.DepSSN, 9) + " - " + GetString(USWDependents.DepName, 9), GetString(USWDependents.DepSSN, 9))
    End If
    
    If GetBool(USWDependents.DepQual, 10) = True And GetString(USWDependents.DepName, 10) <> "" And GetString(USWDependents.DepLast, 10) <> "" And GetString(USWDependents.DepSSN, 10) <> "" Then
        Call SetListItem(GetString(USWDependents.DepSSN, 10) + " - " + GetString(USWDependents.DepName, 10), GetString(USWDependents.DepSSN, 10))
    End If
    
    If GetBool(USWDependents.DepQual, 11) = True And GetString(USWDependents.DepName, 11) <> "" And GetString(USWDependents.DepLast, 11) <> "" And GetString(USWDependents.DepSSN, 11) <> "" Then
        Call SetListItem(GetString(USWDependents.DepSSN, 11) + " - " + GetString(USWDependents.DepName, 11), GetString(USWDependents.DepSSN, 11))
    End If
    
    If GetBool(USWDependents.DepQual, 12) = True And GetString(USWDependents.DepName, 12) <> "" And GetString(USWDependents.DepLast, 12) <> "" And GetString(USWDependents.DepSSN, 12) <> "" Then
        Call SetListItem(GetString(USWDependents.DepSSN, 12) + " - " + GetString(USWDependents.DepName, 12), GetString(USWDependents.DepSSN, 12))
    End If
    
    If GetBool(USWDependents.DepQual, 13) = True And GetString(USWDependents.DepName, 13) <> "" And GetString(USWDependents.DepLast, 13) <> "" And GetString(USWDependents.DepSSN, 13) <> "" Then
        Call SetListItem(GetString(USWDependents.DepSSN, 13) + " - " + GetString(USWDependents.DepName, 13), GetString(USWDependents.DepSSN, 13))
    End If
    
    If GetBool(USWDependents.DepQual, 14) = True And GetString(USWDependents.DepName, 14) <> "" And GetString(USWDependents.DepLast, 14) <> "" And GetString(USWDependents.DepSSN, 14) <> "" Then
        Call SetListItem(GetString(USWDependents.DepSSN, 14) + " - " + GetString(USWDependents.DepName, 14), GetString(USWDependents.DepSSN, 14))
    End If
    
    If GetBool(USWDependents.DepQual, 15) = True And GetString(USWDependents.DepName, 15) <> "" And GetString(USWDependents.DepLast, 15) <> "" And GetString(USWDependents.DepSSN, 15) <> "" Then
        Call SetListItem(GetString(USWDependents.DepSSN, 15) + " - " + GetString(USWDependents.DepName, 15), GetString(USWDependents.DepSSN, 15))
    End If
    
        Call SetListItem("Someone else", "Someone else")
End Function

Public Function QOthDBList_SetDynaList()
    Call SetListTitle("QOthDBList")
    
    Dim count As Integer
    Dim count2 As Integer
    Dim hold As String
    Dim holdname As String
    
    count = 1
    
    Do While count <= GetAllCopies(USD1099Q)
        If GetBool(USD1099Q.DBOther, count) = True Then
            hold = GetString(USD1099Q.OthDBSSN, count)
            holdname = GetString(USD1099Q.DBName, count)
            count2 = count - 1
            Do While count2 <= GetAllCopies(USD1099Q) And count2 > 0
                If GetBool(USD1099Q.DBOther, count2) = True Then
                    If hold = GetString(USD1099Q.OthDBSSN, count2) And GetString(USD1099Q.OthDBSSN, count2) <> "" Then
                        count2 = 999
                    Else
                        count2 = count2 - 1
                    End If
                Else
                    count2 = count2 - 1
                End If
            Loop
            
            If count2 <> 999 Then
                If hold <> "" And Trim(holdname) <> "" Then
                    Call SetListItem(hold + " - " + holdname, hold)
                End If
            End If
        End If
        count = count + 1
    Loop
End Function

Public Function SEHealthBizList_SetDynaList()
    Call SetListTitle("SEHealthBizList")
    
    Dim count1 As Integer
    Dim count2 As Integer
    Dim count3 As Integer
    Dim count4 As Integer
    Dim count5 As Integer
    Dim count6 As Integer
    
    count1 = 1
    count2 = 1
    count3 = 1
    count4 = 1
    count5 = 1
    count6 = 1
    
    Do While count1 <= GetAllCopies(USSchC)
        If GetBool(USSchC.Exist, count1) = True Then
            If GetString(USSchC.BusName, count1) <> "" Then
                Call SetListItem("Schedule C - " & GetString(USSchC.BusName, count1) & " (LinkID " & GetStaticCopyStr(USSchC, count1) & ")", "Sch. C (LinkID " & GetStaticCopyStr(USSchC, count1) & ")")
            ElseIf GetString(USSchC.BusType, count1) <> "" Then
                Call SetListItem("Schedule C - " & GetString(USSchC.BusType, count1) & " (LinkID " & GetStaticCopyStr(USSchC, count1) & ")", "Sch. C (LinkID " & GetStaticCopyStr(USSchC, count1) & ")")
            Else
                Call SetListItem("Schedule C - Copy " & CStr(count1) & " (LinkID " & GetStaticCopyStr(USSchC, count1) & ")", "Sch. C (LinkID " & GetStaticCopyStr(USSchC, count1) & ")")
            End If
        End If
        count1 = count1 + 1
    Loop
    
    Do While count2 <= GetAllCopies(USSchCStEmp)
        If GetBool(USSchCStEmp.Exist, count2) = True Then
            If GetString(USSchCStEmp.BusName, count2) <> "" Then
                Call SetListItem("Schedule C Stat. Emp. - " & GetString(USSchCStEmp.BusName, count2) & " (LinkID " & GetStaticCopyStr(USSchCStEmp, count2) & ")", "Sch. C Stat. Emp. (LinkID " & GetStaticCopyStr(USSchCStEmp, count2) & ")")
            ElseIf GetString(USSchCStEmp.BusType, count2) <> "" Then
                Call SetListItem("Schedule C Stat. Emp. - " & GetString(USSchCStEmp.BusType, count2) & " (LinkID " & GetStaticCopyStr(USSchCStEmp, count2) & ")", "Sch. C Stat. Emp. (LinkID " & GetStaticCopyStr(USSchCStEmp, count2) & ")")
            Else
                Call SetListItem("Schedule C Stat. Emp. - Copy " & CStr(count2) & " (LinkID " & GetStaticCopyStr(USSchCStEmp, count2) & ")", "Sch. C Stat. Emp. (LinkID " & GetStaticCopyStr(USSchCStEmp, count2) & ")")
            End If
        End If
        count2 = count2 + 1
    Loop
    
    Do While count3 <= GetAllCopies(USSchF)
        If GetBool(USSchF.Exist, count3) = True Then
            If GetString(USSchF.PrinProd, count3) <> "" Then
                Call SetListItem("Schedule F - " & GetString(USSchF.PrinProd, count3) & " (LinkID " & GetStaticCopyStr(USSchF, count3) & ")", "Sch. F (LinkID " & GetStaticCopyStr(USSchF, count3) & ")")
            Else
                Call SetListItem("Schedule F - Copy " & CStr(count3) & " (LinkID " & GetStaticCopyStr(USSchF, count3) & ")", "Sch. F (LinkID " & GetStaticCopyStr(USSchF, count3) & ")")
            End If
        End If
        count3 = count3 + 1
    Loop
    
    Do While count4 <= GetAllCopies(USDPartK1)
        If GetBool(USDPartK1.Exist, count4) = True Then
            If GetString(USDPartK1.CoName, count4) <> "" Then
                Call SetListItem("Schedule K-1 (1065) - " & GetString(USDPartK1.CoName, count4) & " (LinkID " & GetStaticCopyStr(USDPartK1, count4) & ")", "Partnership (LinkID " & GetStaticCopyStr(USDPartK1, count4) & ")")
            Else
                Call SetListItem("Schedule K-1 (1065) - Copy " & CStr(count4) & " (LinkID " & GetStaticCopyStr(USDPartK1, count4) & ")", "Partnership (LinkID " & GetStaticCopyStr(USDPartK1, count4) & ")")
            End If
        End If
        count4 = count4 + 1
    Loop
    
    Do While count5 <= GetAllCopies(USDSCorpK1)
        If GetBool(USDSCorpK1.Exist, count5) = True Then
            If GetString(USDSCorpK1.CoName, count5) <> "" Then
                Call SetListItem("Schedule K-1 (1120S) - " & GetString(USDSCorpK1.CoName, count5) & " (LinkID " & GetStaticCopyStr(USDSCorpK1, count5) & ")", "S-Corporation (LinkID " & GetStaticCopyStr(USDSCorpK1, count5) & ")")
            Else
                Call SetListItem("Schedule K-1 (1120S) - Copy " & CStr(count5) & " (LinkID " & GetStaticCopyStr(USDSCorpK1, count5) & ")", "S-Corporation (LinkID " & GetStaticCopyStr(USDSCorpK1, count5) & ")")
            End If
        End If
        count5 = count5 + 1
    Loop
    
    Do While count6 <= GetAllCopies(USDW2)
        If GetBool(USDW2.Exist, count6) = True And GetBool(USDW2.Stat, count6) = False Then
            If GetString(USDW2.EmpName, count6) <> "" Then
                Call SetListItem("Form W-2 - " & GetString(USDW2.EmpName, count6) & " (LinkID " & GetStaticCopyStr(USDW2, count6) & ")", "Form W-2 (LinkID " & GetStaticCopyStr(USDW2, count6) & ")")
            Else
                Call SetListItem("Form W-2 - Copy " & CStr(count6) & " (LinkID " & GetStaticCopyStr(USDW2, count6) & ")", "Form W-2 (LinkID " & GetStaticCopyStr(USDW2, count6) & ")")
            End If
        End If
        count6 = count6 + 1
    Loop
    
End Function

Public Function USSchEListK1_SetDynaList()
    Call SetListTitle("USSchEListK1")
    
    Dim count As Integer
    
    count = 1
    
    Do While count <= GetAllCopies(USSchEP1)
        If GetBool(USSchEP1.Exist, count) = True Then
            If GetString(USSchEP1.Add1, count) <> "" Then
                Call SetListItem(GetString(USSchEP1.Add1, count))
            Else
                Call SetListItem("Copy " & CStr(count))
            End If
        End If
        count = count + 1
    Loop
    Call SetListItem("New Copy")
End Function

Public Function USSchCList_SetDynaList()
    Call SetListTitle("USSchCList")
    
    Dim count As Integer
    
    count = 1
    
    Do While count <= GetAllCopies(USSchC)
        If GetBool(USSchC.Exist, count) = True Then
            If GetString(USSchC.BusType, count) <> "" Then
                Call SetListItem(GetString(USSchC.BusType, count))
            Else
                Call SetListItem("Copy " & CStr(count))
            End If
        End If
        count = count + 1
    Loop
End Function

Public Function USSchEList_SetDynaList()
    Call SetListTitle("USSchEList")
    
    Dim count As Integer
    
    count = 1
    
    Do While count <= GetAllCopies(USSchEP1)
        If GetBool(USSchEP1.Exist, count) = True Then
            If GetString(USSchEP1.Add1, count) <> "" Then
                Call SetListItem(GetString(USSchEP1.Add1, count))
            Else
                Call SetListItem("Copy " & CStr(count))
            End If
        End If
        count = count + 1
    Loop
End Function

Public Function USSchFList_SetDynaList()
    Call SetListTitle("USSchFList")
    
    Dim count As Integer
    
    count = 1
    
    Do While count <= GetAllCopies(USSchF)
        If GetBool(USSchF.Exist, count) = True Then
            If GetString(USSchF.PrinProd, count) <> "" Then
                Call SetListItem(GetString(USSchF.PrinProd, count))
            Else
                Call SetListItem("Copy " & CStr(count))
            End If
        End If
        count = count + 1
    Loop
End Function

Public Function USF4835List_SetDynaList()
    Call SetListTitle("USF4835List")
    
    Dim count As Integer
    
    count = 1
    
    Do While count <= GetAllCopies(USF4835)
        If GetBool(USF4835.Exist, count) = True Then
            If GetString(USF4835.Property, count) <> "" Then
                Call SetListItem(GetString(USF4835.Property, count))
            Else
                Call SetListItem("Copy " & CStr(count))
            End If
        End If
        count = count + 1
    Loop
End Function

Public Function Form1099MiscList_SetDynaList()
    Call SetListTitle("Form1099MiscList")
    
    Dim count As Integer
    
    count = 1
    
    Do While count <= GetAllCopies(USSchC)
        'If GetNumber(USSchC.Exist, count) = 1 Then
            If GetString(USSchC.BusType2, count) <> "" Then
                Call SetListItem("Schedule C - " & GetString(USSchC.BusType2, count) & " (ID #" & GetStaticCopyStr(USSchC, count) & ")", "Schedule C (ID #" & GetStaticCopyStr(USSchC, count) & ")")
            Else
                Call SetListItem("Schedule C - Copy " & CStr(count) & " (ID #" & GetStaticCopyStr(USSchC, count) & ")", "Schedule C (ID #" & GetStaticCopyStr(USSchC, count) & ")")
            End If
        'End If
        count = count + 1
    Loop
    
    Dim count2 As Integer
    
    count2 = 1
    
    Do While count2 <= GetAllCopies(USSchEP1)
        'If GetNumber(USSchEP1.Exist, count2) = 1 Then
            If GetString(USSchEP1.Add12, count2) <> "" Then
                Call SetListItem("Schedule E - " & GetString(USSchEP1.Add12, count2) & " (ID #" & GetStaticCopyStr(USSchEP1, count2) & ")", "Schedule E (ID #" & GetStaticCopyStr(USSchEP1, count2) & ")")
            Else
                Call SetListItem("Schedule E - Copy " & CStr(count2) & " (ID #" & GetStaticCopyStr(USSchEP1, count2) & ")", "Schedule E (ID #" & GetStaticCopyStr(USSchEP1, count2) & ")")
            End If
        'End If
        count2 = count2 + 1
    Loop
    
    Dim count3 As Integer
    
    count3 = 1
    
    'Do While count3 <= GetAllCopies(USSchF)
        'If GetBool(USSchF.Exist, count3) = True Then
            'If GetString(USSchF.PrinProd2, count3) <> "" Then
                'Call SetListItem(GetString(USSchF.PrinProd2, count3))
            'Else
                'Call SetListItem("Copy " & CStr(count3))
            'End If
        'End If
       ' count3 = count3 + 1
    'Loop
    
    'Dim count4 As Integer
    
    'count4 = 1
    
    'Do While count4 <= GetAllCopies(USF4835)
        'If GetBool(USF4835.Exist, count4) = True Then
            'If GetString(USF4835.Property2, count4) <> "" Then
                'Call SetListItem(GetString(USF4835.Property2, count4))
            'Else
                'Call SetListItem("Copy " & CStr(count4))
            'End If
        'End If
        'count4 = count4 + 1
    'Loop
    

    Call SetListItem("Form 1040/1040-NR, Other Income")
End Function

Private Sub Profession1099_SetList()
   ListTitle = "Profession 1099"
   ListItem = "Actor|Actor"
   ListItem = "Business or Marketing Consultant|Business or Marketing Consultant"
   ListItem = "Graphic Designer|Graphic Designer"
   ListItem = "Handyperson|Handyperson"
   ListItem = "Musician|Musician"
   ListItem = "Photographer|Photographer"
   ListItem = "Sales Representative|Sales Representative"
   ListItem = "Tutor or Teacher|Tutor or Teacher"
   ListItem = "Web or Software Developer|Web or Software Developer"
   ListItem = "Writer or Blogger|Writer or Blogger"
   ListItem = "Other|Other"
   ListItem = "Not Applicable|Not Applicable"
End Sub

Public Function USPassActList_SetDynaList()
    Call SetListTitle("USPassActList")
    
    Dim count As Integer
    Dim count1 As Integer
    Dim count2 As Integer
    Dim count3 As Integer
    Dim count4 As Integer
    Dim count5 As Integer
    Dim count6 As Integer
    Dim count7 As Integer
    
    count4 = 1
    
    Do While count4 <= GetAllCopies(USSchC)
        If GetBool(USSchC.Exist, count4) = True Then
            If Trim(GetString(USSchC.BusName, count4)) <> "" Then
                Call SetListItem("Sch C - " & GetString(USSchC.BusName, count4) & " (LinkID " & GetStaticCopyStr(USSchC, count4) & ")", "Sch. C (LinkID " & GetStaticCopyStr(USSchC, count4) & ")")
            Else
                Call SetListItem("Sch C - Copy " & CStr(count4) & " (LinkID " & GetStaticCopyStr(USSchC, count4) & ")", "Sch. C (LinkID " & GetStaticCopyStr(USSchC, count4) & ")")
            End If
        End If
        count4 = count4 + 1
    Loop
    
    
    count7 = 1
    
    Do While count7 <= GetAllCopies(USSchCStEmp)
        If GetBool(USSchCStEmp.Exist, count7) = True Then
            If Trim(GetString(USSchCStEmp.BusName, count7)) <> "" Then
                Call SetListItem("Sch C Stat Emp - " & GetString(USSchCStEmp.BusName, count7) & " (LinkID " & GetStaticCopyStr(USSchCStEmp, count7) & ")", "Sch. C Stat. Emp. (LinkID " & GetStaticCopyStr(USSchCStEmp, count7) & ")")
            Else
                Call SetListItem("Sch C Stat Emp - Copy " & CStr(count7) & " (LinkID " & GetStaticCopyStr(USSchCStEmp, count7) & ")", "Sch. C Stat. Emp. (LinkID " & GetStaticCopyStr(USSchCStEmp, count7) & ")")
            End If
        End If
        count7 = count7 + 1
    Loop
    
    
    count = 1
    
    Do While count <= GetAllCopies(USSchEP1)
        If GetBool(USSchEP1.RentY, count) = True Then
            If Trim(GetString(USSchEP1.Add1, count)) <> "" Then
                Call SetListItem("Sch E - " & GetString(USSchEP1.Add1, count) & " (LinkID " & GetStaticCopyStr(USSchEP1, count) & ")", "Sch. E (LinkID " & GetStaticCopyStr(USSchEP1, count) & ")")
            Else
                Call SetListItem("Sch E - Copy " & CStr(count) & " (LinkID " & GetStaticCopyStr(USSchEP1, count) & ")", "Sch. E (LinkID " & GetStaticCopyStr(USSchEP1, count) & ")")
            End If
        End If
        count = count + 1
    Loop
    
    
    count5 = 1
    
    Do While count5 <= GetAllCopies(USSchF)
        If GetBool(USSchF.Exist, count5) = True Then
            If Trim(GetString(USSchF.PrinProd, count5)) <> "" Then
                Call SetListItem("Sch F - " & GetString(USSchF.PrinProd, count5) & " (LinkID " & GetStaticCopyStr(USSchF, count5) & ")", "Sch. F (LinkID " & GetStaticCopyStr(USSchF, count5) & ")")
            Else
                Call SetListItem("Sch F - Copy " & CStr(count5) & " (LinkID " & GetStaticCopyStr(USSchF, count5) & ")", "Sch. F (LinkID " & GetStaticCopyStr(USSchF, count5) & ")")
            End If
        End If
        count5 = count5 + 1
    Loop
    
    
    count1 = 1
    
    Do While count1 <= GetAllCopies(USF4835)
        If GetBool(USF4835.Exist, count1) = True Then
            If Trim(GetString(USF4835.Property, count1)) <> "" Then
                Call SetListItem("Form 4835 - " & GetString(USF4835.Property, count1) & " (LinkID " & GetStaticCopyStr(USF4835, count1) & ")", "Form 4835 (LinkID " & GetStaticCopyStr(USF4835, count1) & ")")
            Else
                Call SetListItem("Form 4835 - Copy " & CStr(count1) & " (LinkID " & GetStaticCopyStr(USF4835, count1) & ")", "Form 4835 (LinkID " & GetStaticCopyStr(USF4835, count1) & ")")
            End If
        End If
        count1 = count1 + 1
    Loop


    count2 = 1
    
    Do While count2 <= GetAllCopies(USDPartK1)
        If GetBool(USDPartK1.Exist, count2) = True Then
            If Trim(GetString(USDPartK1.CoName, count2)) <> "" Then
                Call SetListItem("Partnership - " & GetString(USDPartK1.CoName, count2) & " (LinkID " & GetStaticCopyStr(USDPartK1, count2) & ")", "Partnership (LinkID " & GetStaticCopyStr(USDPartK1, count2) & ")")
            Else
                Call SetListItem("Partnership - Copy " & CStr(count2) & " (LinkID " & GetStaticCopyStr(USDPartK1, count2) & ")", "Partnership (LinkID " & GetStaticCopyStr(USDPartK1, count2) & ")")
            End If
        End If
        count2 = count2 + 1
    Loop
    
    
    count3 = 1
    
    Do While count3 <= GetAllCopies(USDSCorpK1)
        If GetBool(USDSCorpK1.Exist, count3) = True Then
            If Trim(GetString(USDSCorpK1.CoName, count3)) <> "" Then
                Call SetListItem("S-Corporation - " & GetString(USDSCorpK1.CoName, count3) & " (LinkID " & GetStaticCopyStr(USDSCorpK1, count3) & ")", "S-Corporation (LinkID " & GetStaticCopyStr(USDSCorpK1, count3) & ")")
            Else
                Call SetListItem("S-Corporation - Copy " & CStr(count3) & " (LinkID " & GetStaticCopyStr(USDSCorpK1, count3) & ")", "S-Corporation (LinkID " & GetStaticCopyStr(USDSCorpK1, count3) & ")")
            End If
        End If
        count3 = count3 + 1
    Loop
    
    
    count6 = 1
    
    Do While count6 <= GetAllCopies(USDEstK1)
        If GetBool(USDEstK1.Exist, count6) = True Then
            If Trim(GetString(USDEstK1.TrustName, count6)) <> "" Then
                Call SetListItem("Estate or Trust - " & GetString(USDEstK1.TrustName, count6) & " (LinkID " & GetStaticCopyStr(USDEstK1, count6) & ")", "Estate or Trust (LinkID " & GetStaticCopyStr(USDEstK1, count6) & ")")
            Else
                Call SetListItem("Estate or Trust - Copy " & CStr(count6) & " (LinkID " & GetStaticCopyStr(USDEstK1, count6) & ")", "Estate or Trust (LinkID " & GetStaticCopyStr(USDEstK1, count6) & ")")
            End If
        End If
        count6 = count6 + 1
    Loop
End Function

Public Function Form1116ResourcedList_SetDynaList()
    Call SetListTitle("Form1116ResourcedList")
    
    Dim count As Integer
    
    count = 1
    
    Do While count <= GetAllCopies(USF1116)
        If GetBool(USF1116.Resourced, count) = True Then
            Call SetListItem(GetString(USF1116.ForName(0), count) & " (LinkID " & GetStaticCopyStr(USF1116, count) & ")", GetString(USF1116.ForName(0), count) & " (LinkID " & GetStaticCopyStr(USF1116, count) & ")")
        End If
        count = count + 1
    Loop
    
    Call SetListItem("Not applicable")

End Function

Private Sub SpecialGainCode_SetList()
' TNguyen 10/11/21 - Added code F for TY21
   ListTitle = "Special Gain Code"
   ListItem = "A - IRC 1256 gain|A"
   ListItem = "B - Form 4797 (IRC 1231)|B"
   ListItem = "C - Straddle(s)|C"
   ListItem = "D - Collectibles|D"
   ListItem = "E - Exempt by treaty|E"
   ListItem = "F - Deferred gain relating to a noninclusion transfer|F"
End Sub

Private Sub IDTypeList_SetList()
    ListTitle = "IDTypeList"
    
    ListItem = "Driver's License|Driver's License"
    ListItem = "State Issued ID|State Issued ID"
    ListItem = "Do Not Want to Provide Identification|No Identification Provided"
    ListItem = "Do Not Have Identification|No Identification"

End Sub

Private Sub TPGPYFedFundingConsent_SetList()
    ListTitle = "TPGPYFedFundingConsent"
    
    ListItem = "Yes, the client consents to requesting prior year(s) anticipated refund and funding amount|Yes"
    ListItem = "No, the client does not consent to requesting prior year(s) anticipated refund and funding amount|No"

End Sub

Public Function RTIDTypes_SetDynaList()
    Call SetListTitle("RTIDTypes")
    
    If GetBool(USWRALApp.TPG) = True Then
        Call SetListItem("Driver's License (U.S. State)")
        Call SetListItem("Driver's License (Foreign)")
        Call SetListItem("U.S. Passport")
        Call SetListItem("Foreign Passport")
        Call SetListItem("U.S. State-Issued ID Card")
        Call SetListItem("U.S. Military ID Card")
        Call SetListItem("Native American Tribal ID Card")
        Call SetListItem("Mexican Consular ID Card")
        Call SetListItem("Alien ID")
        Call SetListItem("Green Card")
        Call SetListItem("Work Visa")
    Else
        Call SetListItem("U.S. Driver's License")
        Call SetListItem("U.S. DMV/BMV State ID")
        Call SetListItem("U.S. Military ID")
        Call SetListItem("U.S. Passport")
        Call SetListItem("Foreign Passport")
        Call SetListItem("Resident Alien ID")
        Call SetListItem("Matricula Consular Card")
        Call SetListItem("Tribal ID")
        Call SetListItem("Foreign Issued Driver's License/ID")
    End If
End Function


Public Function StRefFilingStatus_SetDynaList()
Call SetListTitle("StRefFilingStatus")
    If GetBool(USWStRef.F1040) = True Then
        Call SetListItem("Single")
        Call SetListItem("Married Filing Joint")
        Call SetListItem("Married Filing Separate")
        Call SetListItem("Head of Household")
        Call SetListItem("Qualifying Widow(er)")
    Else
        Call SetListItem("Single")
        Call SetListItem("Married Filing Separate")
        Call SetListItem("Qualifying Widow(er)")
    End If
End Function

Public Function LumpSumTax(Inc As Currency) As Currency
    If Inc < 1191@ Then
        LumpSumTax = Round(CCur(CDbl(Inc) * 0.11))
    ElseIf Inc < 2271@ Then
        LumpSumTax = Round(CCur(CDbl((Inc - 1190@)) * 0.12) + 130.9@)
    ElseIf Inc < 4531@ Then
        LumpSumTax = Round(CCur(CDbl((Inc - 2270@)) * 0.14) + 260.5@)
    ElseIf Inc < 6691@ Then
        LumpSumTax = Round(CCur(CDbl((Inc - 4530@)) * 0.15) + 576.9@)
    ElseIf Inc < 9171@ Then
        LumpSumTax = Round(CCur(CDbl((Inc - 6690@)) * 0.16) + 900.9@)
    ElseIf Inc < 11441@ Then
        LumpSumTax = Round(CCur(CDbl((Inc - 9170@)) * 0.18) + 1297.7@)
    ElseIf Inc < 13711@ Then
        LumpSumTax = Round(CCur(CDbl((Inc - 11440@)) * 0.2) + 1706.3@)
    ElseIf Inc < 17161@ Then
        LumpSumTax = Round(CCur(CDbl((Inc - 13710@)) * 0.23) + 2160.3@)
    ElseIf Inc < 22881@ Then
        LumpSumTax = Round(CCur(CDbl((Inc - 17160@)) * 0.26) + 2953.8@)
    ElseIf Inc < 28601@ Then
        LumpSumTax = Round(CCur(CDbl((Inc - 22880@)) * 0.3) + 4441@)
    ElseIf Inc < 34321@ Then
        LumpSumTax = Round(CCur(CDbl((Inc - 28600@)) * 0.34) + 6157@)
    ElseIf Inc < 42301@ Then
        LumpSumTax = Round(CCur(CDbl((Inc - 34320@)) * 0.38) + 8101.8@)
    ElseIf Inc < 57191@ Then
        LumpSumTax = Round(CCur(CDbl((Inc - 42300@)) * 0.42) + 11134.2@)
    ElseIf Inc < 85791@ Then
        LumpSumTax = Round(CCur(CDbl((Inc - 57190@)) * 0.48) + 17388@)
    Else
        LumpSumTax = Round(CCur(CDbl((Inc - 85790@)) * 0.5) + 31116@)
    End If
End Function
Private Sub FTCCountry_SetList()
' Used by Forms 1116 and 1099DIV, 1099INT, K-1s.  Need separate list to allow selection of US Territories, Unknown, Various, All Other Countries.
    ListTitle = "FTC Country"
    ListItem = "Afghanistan"
    ListItem = "Akrotiri"
    ListItem = "Albania"
    ListItem = "Algeria"
    ListItem = "American Samoa"
    ListItem = "Andorra"
    ListItem = "Angola"
    ListItem = "Anguilla"
    ListItem = "Antarctica"
    ListItem = "Antigua & Barbuda"
    ListItem = "Argentina"
    ListItem = "Armenia"
    ListItem = "Aruba"
    ListItem = "Ashmore & Cartier Islands"
    ListItem = "Australia"
    ListItem = "Austria"
    ListItem = "Azerbaijan"
    ListItem = "Bahamas"
    ListItem = "Bahrain"
    ListItem = "Baker Island"
    ListItem = "Bangladesh"
    ListItem = "Barbados"
    ListItem = "Belarus"
    ListItem = "Belgium"
    ListItem = "Belize"
    ListItem = "Benin"
    ListItem = "Bermuda"
    ListItem = "Bhutan"
    ListItem = "Bolivia"
    ListItem = "Bosnia-Herzegovina"
    ListItem = "Botswana"
    ListItem = "Bouvet Island"
    ListItem = "Brazil"
    ListItem = "British Indian Ocean Territory"
    ListItem = "British Virgin Islands"
    ListItem = "Brunei"
    ListItem = "Bulgaria"
    ListItem = "Burkina Faso"
    ListItem = "Burma"
    ListItem = "Burundi"
    ListItem = "Cambodia"
    ListItem = "Cameroon"
    ListItem = "Canada"
    ListItem = "Cape Verde"
    ListItem = "Cayman Islands"
    ListItem = "Central African Republic"
    ListItem = "Chad"
    ListItem = "Chile"
    ListItem = "China"
    ListItem = "Christmas Island"
    ListItem = "Clipperton Island"
    ListItem = "Cocos (Keeling) Islands"
    ListItem = "Colombia"
    ListItem = "Comoros"
    ListItem = "Congo (Brazzaville)"
    ListItem = "Congo (Kinshasa)"
    ListItem = "Cooks Islands"
    ListItem = "Coral Sea Islands"
    ListItem = "Costa Rica"
    ListItem = "Cote d'Ivoire (Ivory Coast)"
    ListItem = "Croatia"
    ListItem = "Cuba"
    ListItem = "Curacao"
    ListItem = "Cyprus"
    ListItem = "Czech Republic"
    ListItem = "Denmark"
    ListItem = "Dhekelia"
    ListItem = "Djibouti"
    ListItem = "Dominica"
    ListItem = "Dominican Republic"
    ListItem = "East Timor"
    ListItem = "Ecuador"
    ListItem = "Egypt"
    ListItem = "El Salvador"
    ListItem = "Equatorial Guinea"
    ListItem = "Eritrea"
    ListItem = "Estonia"
    ListItem = "Ethiopia"
    ListItem = "Falkland Islands (Islas Malvinas)"
    ListItem = "Faroe Islands"
    ListItem = "Federated States of Micronesia"
    ListItem = "Fiji"
    ListItem = "Finland"
    ListItem = "France"
    ListItem = "French Polynesia"
    ListItem = "French Southern & Antarctic Lands"
    ListItem = "Gabon"
    ListItem = "The Gambia"
    ListItem = "Georgia"
    ListItem = "Germany"
    ListItem = "Ghana"
    ListItem = "Gibraltar"
    ListItem = "Greece"
    ListItem = "Greenland"
    ListItem = "Grenada"
    ListItem = "Guam"
    ListItem = "Guatemala"
    ListItem = "Guernsey"
    ListItem = "Guinea"
    ListItem = "Guinea-Bissau"
    ListItem = "Guyana"
    ListItem = "Haiti"
    ListItem = "Heard Island & McDonald Islands"
    ListItem = "Holy See"
    ListItem = "Honduras"
    ListItem = "Hong Kong"
    ListItem = "Howland Island"
    ListItem = "Hungary"
    ListItem = "Iceland"
    ListItem = "India"
    ListItem = "Indonesia"
    ListItem = "Iran"
    ListItem = "Iraq"
    ListItem = "Ireland"
    ListItem = "Israel"
    ListItem = "Italy"
    ListItem = "Jamaica"
    ListItem = "Jan Mayen"
    ListItem = "Japan"
    ListItem = "Jarvis Island"
    ListItem = "Jersey"
    ListItem = "Johnston Atoll"
    ListItem = "Jordan"
    ListItem = "Kazakhstan"
    ListItem = "Kenya"
    ListItem = "Kingman Reef"
    ListItem = "Kiribati"
    ListItem = "Korea, Democratic People's Republic of (North)"
    ListItem = "Korea, Republic of (South)"
    ListItem = "Kosovo"
    ListItem = "Kuwait"
    ListItem = "Kyrgyzstan"
    ListItem = "Laos"
    ListItem = "Latvia"
    ListItem = "Lebanon"
    ListItem = "Lesotho"
    ListItem = "Liberia"
    ListItem = "Libya"
    ListItem = "Liechtenstein"
    ListItem = "Lithuania"
    ListItem = "Luxembourg"
    ListItem = "Macau"
    ListItem = "Macedonia"
    ListItem = "Madagascar"
    ListItem = "Malawi"
    ListItem = "Malaysia"
    ListItem = "Maldives"
    ListItem = "Mali"
    ListItem = "Malta"
    ListItem = "Man, Isle of"
    ListItem = "Marshall Islands"
    ListItem = "Mauritania"
    ListItem = "Mauritius"
    ListItem = "Mexico"
    ListItem = "Midway Islands"
    ListItem = "Moldova"
    ListItem = "Monaco"
    ListItem = "Mongolia"
    ListItem = "Montenegro"
    ListItem = "Montserrat"
    ListItem = "Morocco"
    ListItem = "Mozambique"
    ListItem = "Namibia"
    ListItem = "Nauru"
    ListItem = "Navassa Island"
    ListItem = "Nepal"
    ListItem = "Netherlands"
    ListItem = "New Caledonia"
    ListItem = "New Zealand"
    ListItem = "Nicaragua"
    ListItem = "Niger"
    ListItem = "Nigeria"
    ListItem = "Niue"
    ListItem = "Norfolk Island"
    ListItem = "Northern Mariana Islands"
    ListItem = "Norway"
    ListItem = "Oman"
    ListItem = "Other Country"
    ListItem = "Pakistan"
    ListItem = "Palau"
    ListItem = "Palmyra Atoll"
    ListItem = "Panama"
    ListItem = "Papua-New Guinea"
    ListItem = "Paracel Islands"
    ListItem = "Paraguay"
    ListItem = "Peru"
    ListItem = "Philippines"
    ListItem = "Pitcairn Islands"
    ListItem = "Poland"
    ListItem = "Portugal"
    ListItem = "Puerto Rico"
    ListItem = "Qatar"
    ListItem = "Romania"
    ListItem = "Russia"
    ListItem = "Rwanda"
    ListItem = "Saint Barthelemy"
    ListItem = "Saint Martin"
    ListItem = "Samoa"
    ListItem = "San Marino"
    ListItem = "Sao Tome & Principe"
    ListItem = "Saudi Arabia"
    ListItem = "Senegal"
    ListItem = "Serbia"
    ListItem = "Seychelles"
    ListItem = "Sierra Leone"
    ListItem = "Singapore"
    ListItem = "Sint Maarten"
    ListItem = "Slovakia"
    ListItem = "Slovenia"
    ListItem = "Solomon Islands"
    ListItem = "Somalia"
    ListItem = "South Africa"
    ListItem = "South Georgia & The South Sandwich Islands"
    ListItem = "South Sudan"
    ListItem = "Spain"
    ListItem = "Spratly Islands"
    ListItem = "Sri Lanka"
    ListItem = "Saint Helena"
    ListItem = "Saint Kitts & Nevis"
    ListItem = "Saint Lucia Island"
    ListItem = "Saint Pierre & Miquelon"
    ListItem = "Saint Vincent & the Grenadines"
    ListItem = "Sudan"
    ListItem = "Suriname"
    ListItem = "Svalbard"
    ListItem = "Swaziland"
    ListItem = "Sweden"
    ListItem = "Switzerland"
    ListItem = "Syria"
    ListItem = "Taiwan"
    ListItem = "Tajikistan"
    ListItem = "Tanzania"
    ListItem = "Thailand"
    ListItem = "Togo"
    ListItem = "Tokelau"
    ListItem = "Tonga"
    ListItem = "Trinidad & Tobago"
    ListItem = "Tunisia"
    ListItem = "Turkey"
    ListItem = "Turkmenistan"
    ListItem = "Turks & Caicos Islands"
    ListItem = "Tuvalu"
    ListItem = "Uganda"
    ListItem = "Ukraine"
    ListItem = "United Arab Emirates"
    ListItem = "United Kingdom"
    ListItem = "Uruguay"
    ListItem = "Uzbekistan"
    ListItem = "Vanuatu"
    ListItem = "Venezuela"
    ListItem = "Vietnam"
    ListItem = "Virgin Islands"
    ListItem = "Wake Island"
    ListItem = "Wallis & Futuna"
    ListItem = "Western Sahara"
    ListItem = "Yemen (Aden)"
    ListItem = "Zambia"
    ListItem = "Zimbabwe"
    ListItem = "Unknown Country"
    ListItem = "Various"
    ListItem = "All other countries"
End Sub

Public Function FSTC1(Inc As Currency) As Double
'For KY family size credit
'Updated 9/20/2021 on Sch ITC SH
    If Inc <= 12880@ Then
        FSTC1 = 1
    ElseIf Inc <= 13395@ Then
        FSTC1 = 0.9
    ElseIf Inc <= 13910@ Then
        FSTC1 = 0.8
    ElseIf Inc <= 14426@ Then
        FSTC1 = 0.7
    ElseIf Inc <= 14941@ Then
        FSTC1 = 0.6
    ElseIf Inc <= 15456@ Then
        FSTC1 = 0.5
    ElseIf Inc <= 15971@ Then
        FSTC1 = 0.4
    ElseIf Inc <= 16358@ Then
        FSTC1 = 0.3
    ElseIf Inc <= 16744@ Then
        FSTC1 = 0.2
    ElseIf Inc <= 17130@ Then
        FSTC1 = 0.1
    Else
        FSTC1 = 0
    End If
End Function
    
Public Function FSTC2(Inc As Currency) As Double
'For KY family size credit
'Updated 9/20/2021 on Sch ITC SH
    If Inc <= 17240@ Then
        FSTC2 = 1
    ElseIf Inc <= 18117@ Then
        FSTC2 = 0.9
    ElseIf Inc <= 18814@ Then
        FSTC2 = 0.8
    ElseIf Inc <= 19510@ Then
        FSTC2 = 0.7
    ElseIf Inc <= 20207@ Then
        FSTC2 = 0.6
    ElseIf Inc <= 20904@ Then
        FSTC2 = 0.5
    ElseIf Inc <= 21601@ Then
        FSTC2 = 0.4
    ElseIf Inc <= 22123@ Then
        FSTC2 = 0.3
    ElseIf Inc <= 22646@ Then
        FSTC2 = 0.2
    ElseIf Inc <= 23169@ Then
        FSTC2 = 0.1
    Else
        FSTC2 = 0
    End If
End Function

Public Function FSTC3(Inc As Currency) As Double
'For KY family size credit
'Updated 9/20/2021 on Sch ITC SH
    If Inc <= 21960@ Then
        FSTC3 = 1
    ElseIf Inc <= 22838@ Then
        FSTC3 = 0.9
    ElseIf Inc <= 23717@ Then
        FSTC3 = 0.8
    ElseIf Inc <= 24595@ Then
        FSTC3 = 0.7
    ElseIf Inc <= 25474@ Then
        FSTC3 = 0.6
    ElseIf Inc <= 26352@ Then
        FSTC3 = 0.5
    ElseIf Inc <= 27230@ Then
        FSTC3 = 0.4
    ElseIf Inc <= 27889@ Then
        FSTC3 = 0.3
    ElseIf Inc <= 28548@ Then
        FSTC3 = 0.2
    ElseIf Inc <= 29207@ Then
        FSTC3 = 0.1
    Else
        FSTC3 = 0
    End If
End Function

Public Function FSTC4(Inc As Currency) As Double
'For KY family size credit
'Updated 9/20/2021 on Sch ITC SH
    If Inc <= 26500@ Then
        FSTC4 = 1
    ElseIf Inc <= 27560@ Then
        FSTC4 = 0.9
    ElseIf Inc <= 28620@ Then
        FSTC4 = 0.8
    ElseIf Inc <= 29680@ Then
        FSTC4 = 0.7
    ElseIf Inc <= 30740@ Then
        FSTC4 = 0.6
    ElseIf Inc <= 31800@ Then
        FSTC4 = 0.5
    ElseIf Inc <= 32860@ Then
        FSTC4 = 0.4
    ElseIf Inc <= 33655@ Then
        FSTC4 = 0.3
    ElseIf Inc <= 34450@ Then
        FSTC4 = 0.2
    ElseIf Inc <= 35245@ Then
        FSTC4 = 0.1
    Else
        FSTC4 = 0
    End If
End Function

Public Function IGTC1(Inc As Currency) As Currency
'For KY income gap credit
'Updated 9/15/2020 on Sch ITC SH
    If Inc <= 12760@ Then
        IGTC1 = 0@
    ElseIf Inc <= 13270@ Then
        IGTC1 = 11@
    ElseIf Inc <= 13781@ Then
        IGTC1 = 20@
    ElseIf Inc <= 14291@ Then
        IGTC1 = 29@
    ElseIf Inc <= 14802@ Then
        IGTC1 = 37@
    ElseIf Inc <= 15312@ Then
        IGTC1 = 45@
    ElseIf Inc <= 15882@ Then
        IGTC1 = 51@
    ElseIf Inc <= 16205@ Then
        IGTC1 = 58@
    ElseIf Inc <= 16588@ Then
        IGTC1 = 64@
    ElseIf Inc <= 16971@ Then
        IGTC1 = 69@
    Else
        IGTC1 = 0@
    End If
End Function

Public Function IGTC2(Inc As Currency) As Currency
'For KY income gap credit
'Updated 9/15/2020 on Sch ITC SH
    If Inc <= 17240@ Then
        IGTC2 = 0@
    ElseIf Inc <= 17930@ Then
        IGTC2 = 7@
    ElseIf Inc <= 18619@ Then
        IGTC2 = 13@
    ElseIf Inc <= 19309@ Then
        IGTC2 = 18@
    ElseIf Inc <= 19998@ Then
        IGTC2 = 22@
    ElseIf Inc <= 20688@ Then
        IGTC2 = 24@
    ElseIf Inc <= 21378@ Then
        IGTC2 = 26@
    ElseIf Inc <= 21895@ Then
        IGTC2 = 27@
    ElseIf Inc <= 22412@ Then
        IGTC2 = 28@
    ElseIf Inc <= 22929@ Then
        IGTC2 = 28@
    Else
        IGTC2 = 0@
    End If
End Function

Public Function IGTC3(Inc As Currency) As Currency
'For KY income gap credit
'Updated 9/15/2020 on Sch ITC SH
    If Inc <= 21720@ Then
        IGTC3 = 0@
    ElseIf Inc <= 22589@ Then
        IGTC3 = 3@
    ElseIf Inc <= 23458@ Then
        IGTC3 = 6@
    ElseIf Inc <= 24326@ Then
        IGTC3 = 6@
    ElseIf Inc <= 25195@ Then
        IGTC3 = 6@
    ElseIf Inc <= 26064@ Then
        IGTC3 = 4@
    Else
        IGTC3 = 0@
    End If
End Function

Public Function OptionLocalList1_SetDynaList()
    Call SetListTitle("OptionLocalList1")

    Dim Local1 As String
    
    Local1 = GetString(USWSalesTax.State1)
    
    If Local1 <> "" Then
        If Local1 = "AK" Then
            Call SetListItem("Juneau")
            Call SetListItem("Kenai")
            Call SetListItem("Ketchikan")
            Call SetListItem("Kodiak")
            Call SetListItem("Sitka")
            Call SetListItem("Wasilla")
            Call SetListItem("Any locality with sales tax")
        ElseIf Local1 = "AZ" Then
            Call SetListItem("Chandler")
            Call SetListItem("Gilbert")
            Call SetListItem("Glendale")
            Call SetListItem("Mesa")
            Call SetListItem("Peoria")
            Call SetListItem("Phoenix")
            Call SetListItem("Scottsdale")
            Call SetListItem("Tempe")
            Call SetListItem("Tucson")
            Call SetListItem("Yuma")
            Call SetListItem("Any other locality with sales tax")
        ElseIf Local1 = "AR" Then
            Call SetListItem("Any locality with sales tax")
        ElseIf Local1 = "CO" Then
            Call SetListItem("Adams County")
            Call SetListItem("Arapahoe County")
            Call SetListItem("Arvada")
            Call SetListItem("Aurora")
            Call SetListItem("Boulder County")
            Call SetListItem("Centennial")
            Call SetListItem("City of Boulder")
            Call SetListItem("City of Denver")
            Call SetListItem("City of Pueblo")
            Call SetListItem("Colorado Springs")
            Call SetListItem("El Paso County")
            Call SetListItem("Fort Collins")
            Call SetListItem("Greeley")
            Call SetListItem("Jefferson County")
            Call SetListItem("Lakewood")
            Call SetListItem("Larimer County")
            Call SetListItem("Longmont")
            Call SetListItem("Pueblo County")
            Call SetListItem("Thornton")
            Call SetListItem("Westminster")
            Call SetListItem("Any other locality with sales tax")
        ElseIf Local1 = "GA" Then
            Call SetListItem("Dekalb County (excluding Atlanta)")
            Call SetListItem("Any other locality with sales tax")
        ElseIf Local1 = "IL" Then
            Call SetListItem("Arlington Heights")
            Call SetListItem("Aurora")
            Call SetListItem("Bloomington")
            Call SetListItem("Champaign")
            Call SetListItem("Chicago")
            Call SetListItem("Cicero")
            Call SetListItem("Decatur")
            Call SetListItem("Elgin")
            Call SetListItem("Evanston")
            Call SetListItem("Joliet")
            Call SetListItem("Palatine")
            Call SetListItem("Peoria")
            Call SetListItem("Schaumburg")
            Call SetListItem("Skokie")
            Call SetListItem("Springfield")
            Call SetListItem("Waukegan")
            Call SetListItem("Any other locality with sales tax")
        ElseIf Local1 = "LA" Then
            Call SetListItem("Ascension Parish")
            Call SetListItem("Bossier Parish")
            Call SetListItem("Caddo Parish")
            Call SetListItem("Calcasieu Parish")
            Call SetListItem("East Baton Rouge Parish")
            Call SetListItem("Iberia Parish")
            Call SetListItem("Jefferson Parish")
            Call SetListItem("Lafayette Parish")
            Call SetListItem("Lafourche Parish")
            Call SetListItem("Livingston Parish")
            Call SetListItem("Orleans Parish")
            Call SetListItem("Ouachita Parish")
            Call SetListItem("Rapides Parish")
            Call SetListItem("St. Bernard Parish")
            Call SetListItem("St. Landry Parish")
            Call SetListItem("St Tammany Parish")
            Call SetListItem("Tangipahoa Parish")
            Call SetListItem("Terrebonne Parish")
            Call SetListItem("Any other locality with sales tax")
        ElseIf Local1 = "MS" Then
            Call SetListItem("City of Jackson")
            Call SetListItem("City of Tupelo")
        ElseIf Local1 = "MO" Then
            Call SetListItem("Any locality with sales tax")
        ElseIf Local1 = "NY" Then
            Call SetListItem("Albany County")
            Call SetListItem("Allegany County")
            Call SetListItem("Broome County")
            Call SetListItem("Cattaraugus County")
            Call SetListItem("Cayuga County")
            Call SetListItem("Chautauqua County")
            Call SetListItem("Chemung County")
            Call SetListItem("Chenango County")
            Call SetListItem("City of Auburn")
            Call SetListItem("City of Glens Falls")
            Call SetListItem("City of Gloversville")
            Call SetListItem("City of Ithaca")
            Call SetListItem("City of Johnstown")
            Call SetListItem("City of Mount Vernon")
            Call SetListItem("City of New Rochelle")
            Call SetListItem("City of Norwich")
            Call SetListItem("City of Olean")
            Call SetListItem("City of Oneida")
            Call SetListItem("City of Oswego")
            Call SetListItem("City of Rome")
            Call SetListItem("City of Salamanca")
            Call SetListItem("City of Saratoga Springs")
            Call SetListItem("City of Utica")
            Call SetListItem("City of White Plains")
            Call SetListItem("City of Yonkers")
            Call SetListItem("Clinton County")
            Call SetListItem("Columbia County")
            Call SetListItem("Cortland County")
            Call SetListItem("Delaware County")
            Call SetListItem("Dutchess County")
            Call SetListItem("Erie County")
            Call SetListItem("Essex County")
            Call SetListItem("Franklin County")
            Call SetListItem("Fulton County")
            Call SetListItem("Genesee County")
            Call SetListItem("Greene County")
            Call SetListItem("Hamilton County")
            Call SetListItem("Herkimer County")
            Call SetListItem("Jefferson County")
            Call SetListItem("Lewis County")
            Call SetListItem("Livingston County")
            Call SetListItem("Madison County")
            Call SetListItem("Monroe County")
            Call SetListItem("Montgomery County")
            Call SetListItem("Nassau County")
            Call SetListItem("New York City")
            Call SetListItem("Niagra County")
            Call SetListItem("Oneida County")
            Call SetListItem("Onondaga County")
            Call SetListItem("Ontario County")
            Call SetListItem("Orange County")
            Call SetListItem("Orleans County")
            Call SetListItem("Oswego County")
            Call SetListItem("Otsego County")
            Call SetListItem("Putnam County")
            Call SetListItem("Rensselaer County")
            Call SetListItem("Rockland County")
            Call SetListItem("St. Lawrence County")
            Call SetListItem("Saratoga County")
            Call SetListItem("Schenectady County")
            Call SetListItem("Schoharie County")
            Call SetListItem("Schuyler County")
            Call SetListItem("Seneca County")
            Call SetListItem("Steuben County")
            Call SetListItem("Suffolk County")
            Call SetListItem("Sullivan County")
            Call SetListItem("Tioga County")
            Call SetListItem("Tompkins County")
            Call SetListItem("Ulster County")
            Call SetListItem("Warren County")
            Call SetListItem("Washington County")
            Call SetListItem("Wayne County")
            Call SetListItem("Westchester County")
            Call SetListItem("Wyoming County")
            Call SetListItem("Yates County")
            Call SetListItem("Any other locality with sales tax")
        ElseIf Local1 = "NC" Then
            Call SetListItem("Any locality with sales tax")
        ElseIf Local1 = "SC" Then
            Call SetListItem("Aiken County")
            Call SetListItem("Abbeville County")
            Call SetListItem("Allendale County")
            Call SetListItem("Anderson County")
            Call SetListItem("Bamberg County")
            Call SetListItem("Barnwell County")
            Call SetListItem("Beaufort County")
            Call SetListItem("Berkeley County")
            Call SetListItem("Calhoun County")
            Call SetListItem("Charleston County")
            Call SetListItem("Cherokee County")
            Call SetListItem("Chester County")
            Call SetListItem("Chesterfield County")
            Call SetListItem("Clarendon County")
            Call SetListItem("Colleton County")
            Call SetListItem("Darlington County")
            Call SetListItem("Dillon County")
            Call SetListItem("Dorchester County")
            Call SetListItem("Edgefield County")
            Call SetListItem("Fairfield County")
            Call SetListItem("Florence County")
            Call SetListItem("Greenwood County")
            Call SetListItem("Hampton County")
            Call SetListItem("Horry County")
            Call SetListItem("Jasper County")
            Call SetListItem("Kershaw County")
            Call SetListItem("Lancaster County")
            Call SetListItem("Laurens County")
            Call SetListItem("Lee County")
            Call SetListItem("Lexington County")
            Call SetListItem("Marion County")
            Call SetListItem("Marlboro County")
            Call SetListItem("McCormick County")
            Call SetListItem("Myrtle Beach")
            Call SetListItem("Newberry County")
            Call SetListItem("Orangeburg County")
            Call SetListItem("Pickens County")
            Call SetListItem("Richland County")
            Call SetListItem("Saluda County")
            Call SetListItem("Spartanburg County")
            Call SetListItem("Sumter County")
            Call SetListItem("Union County")
            Call SetListItem("Williamsburg County")
            Call SetListItem("York County")
            Call SetListItem("Any other locality with sales tax")
        ElseIf Local1 = "TN" Then
            Call SetListItem("Any locality with sales tax")
        ElseIf Local1 = "UT" Then
            Call SetListItem("Any locality with sales tax")
        ElseIf Local1 = "VA" Then
            Call SetListItem("Any locality with sales tax")
        Else
            Call SetListItem("Not applicable")
        End If
    End If
End Function

Public Function OptionLocalList2_SetDynaList()
    Call SetListTitle("OptionLocalList2")

    Dim Local1 As String

    Local1 = GetString(USWSalesTax.State2)
    
    If Local1 <> "" Then
        If Local1 = "AK" Then
            Call SetListItem("Juneau")
            Call SetListItem("Kenai")
            Call SetListItem("Ketchikan")
            Call SetListItem("Kodiak")
            Call SetListItem("Sitka")
            Call SetListItem("Wasilla")
            Call SetListItem("Any locality with sales tax")
        ElseIf Local1 = "AZ" Then
            Call SetListItem("Chandler")
            Call SetListItem("Gilbert")
            Call SetListItem("Glendale")
            Call SetListItem("Mesa")
            Call SetListItem("Peoria")
            Call SetListItem("Phoenix")
            Call SetListItem("Scottsdale")
            Call SetListItem("Tempe")
            Call SetListItem("Tucson")
            Call SetListItem("Yuma")
            Call SetListItem("Any other locality with sales tax")
        ElseIf Local1 = "AR" Then
            Call SetListItem("Any locality with sales tax")
        ElseIf Local1 = "CO" Then
            Call SetListItem("Adams County")
            Call SetListItem("Arapahoe County")
            Call SetListItem("Arvada")
            Call SetListItem("Aurora")
            Call SetListItem("Boulder County")
            Call SetListItem("Centennial")
            Call SetListItem("City of Boulder")
            Call SetListItem("City of Denver")
            Call SetListItem("City of Pueblo")
            Call SetListItem("Colorado Springs")
            Call SetListItem("El Paso County")
            Call SetListItem("Fort Collins")
            Call SetListItem("Greeley")
            Call SetListItem("Jefferson County")
            Call SetListItem("Lakewood")
            Call SetListItem("Larimer County")
            Call SetListItem("Longmont")
            Call SetListItem("Pueblo County")
            Call SetListItem("Thornton")
            Call SetListItem("Westminster")
            Call SetListItem("Any other locality with sales tax")
        ElseIf Local1 = "GA" Then
            Call SetListItem("Dekalb County (excluding Atlanta)")
            Call SetListItem("Any other locality with sales tax")
        ElseIf Local1 = "IL" Then
            Call SetListItem("Arlington Heights")
            Call SetListItem("Aurora")
            Call SetListItem("Bloomington")
            Call SetListItem("Champaign")
            Call SetListItem("Chicago")
            Call SetListItem("Cicero")
            Call SetListItem("Decatur")
            Call SetListItem("Elgin")
            Call SetListItem("Evanston")
            Call SetListItem("Joliet")
            Call SetListItem("Palatine")
            Call SetListItem("Peoria")
            Call SetListItem("Schaumburg")
            Call SetListItem("Skokie")
            Call SetListItem("Springfield")
            Call SetListItem("Waukegan")
            Call SetListItem("Any other locality with sales tax")
        ElseIf Local1 = "LA" Then
            Call SetListItem("Ascension Parish")
            Call SetListItem("Bossier Parish")
            Call SetListItem("Caddo Parish")
            Call SetListItem("Calcasieu Parish")
            Call SetListItem("East Baton Rouge Parish")
            Call SetListItem("Iberia Parish")
            Call SetListItem("Jefferson Parish")
            Call SetListItem("Lafayette Parish")
            Call SetListItem("Lafourche Parish")
            Call SetListItem("Livingston Parish")
            Call SetListItem("Orleans Parish")
            Call SetListItem("Ouachita Parish")
            Call SetListItem("Rapides Parish")
            Call SetListItem("St. Bernard Parish")
            Call SetListItem("St. Landry Parish")
            Call SetListItem("St Tammany Parish")
            Call SetListItem("Tangipahoa Parish")
            Call SetListItem("Terrebonne Parish")
            Call SetListItem("Any other locality with sales tax")
        ElseIf Local1 = "MS" Then
            Call SetListItem("City of Jackson")
            Call SetListItem("City of Tupelo")
        ElseIf Local1 = "MO" Then
            Call SetListItem("Any locality with sales tax")
        ElseIf Local1 = "NY" Then
            Call SetListItem("Albany County")
            Call SetListItem("Allegany County")
            Call SetListItem("Broome County")
            Call SetListItem("Cattaraugus County")
            Call SetListItem("Cayuga County")
            Call SetListItem("Chautauqua County")
            Call SetListItem("Chemung County")
            Call SetListItem("Chenango County")
            Call SetListItem("City of Auburn")
            Call SetListItem("City of Glens Falls")
            Call SetListItem("City of Gloversville")
            Call SetListItem("City of Ithaca")
            Call SetListItem("City of Johnstown")
            Call SetListItem("City of Mount Vernon")
            Call SetListItem("City of New Rochelle")
            Call SetListItem("City of Norwich")
            Call SetListItem("City of Olean")
            Call SetListItem("City of Oneida")
            Call SetListItem("City of Oswego")
            Call SetListItem("City of Rome")
            Call SetListItem("City of Salamanca")
            Call SetListItem("City of Saratoga Springs")
            Call SetListItem("City of Utica")
            Call SetListItem("City of White Plains")
            Call SetListItem("City of Yonkers")
            Call SetListItem("Clinton County")
            Call SetListItem("Columbia County")
            Call SetListItem("Cortland County")
            Call SetListItem("Delaware County")
            Call SetListItem("Dutchess County")
            Call SetListItem("Erie County")
            Call SetListItem("Essex County")
            Call SetListItem("Franklin County")
            Call SetListItem("Fulton County")
            Call SetListItem("Genesee County")
            Call SetListItem("Greene County")
            Call SetListItem("Hamilton County")
            Call SetListItem("Herkimer County")
            Call SetListItem("Jefferson County")
            Call SetListItem("Lewis County")
            Call SetListItem("Livingston County")
            Call SetListItem("Madison County")
            Call SetListItem("Monroe County")
            Call SetListItem("Montgomery County")
            Call SetListItem("Nassau County")
            Call SetListItem("New York City")
            Call SetListItem("Niagra County")
            Call SetListItem("Oneida County")
            Call SetListItem("Onondaga County")
            Call SetListItem("Ontario County")
            Call SetListItem("Orange County")
            Call SetListItem("Orleans County")
            Call SetListItem("Oswego County")
            Call SetListItem("Otsego County")
            Call SetListItem("Putnam County")
            Call SetListItem("Rensselaer County")
            Call SetListItem("Rockland County")
            Call SetListItem("St. Lawrence County")
            Call SetListItem("Saratoga County")
            Call SetListItem("Schenectady County")
            Call SetListItem("Schoharie County")
            Call SetListItem("Schuyler County")
            Call SetListItem("Seneca County")
            Call SetListItem("Steuben County")
            Call SetListItem("Suffolk County")
            Call SetListItem("Sullivan County")
            Call SetListItem("Tioga County")
            Call SetListItem("Tompkins County")
            Call SetListItem("Ulster County")
            Call SetListItem("Warren County")
            Call SetListItem("Washington County")
            Call SetListItem("Wayne County")
            Call SetListItem("Westchester County")
            Call SetListItem("Wyoming County")
            Call SetListItem("Yates County")
            Call SetListItem("Any other locality with sales tax")
        ElseIf Local1 = "NC" Then
            Call SetListItem("Any locality with sales tax")
        ElseIf Local1 = "SC" Then
            Call SetListItem("Aiken County")
            Call SetListItem("Abbeville County")
            Call SetListItem("Allendale County")
            Call SetListItem("Anderson County")
            Call SetListItem("Bamberg County")
            Call SetListItem("Barnwell County")
            Call SetListItem("Beaufort County")
            Call SetListItem("Berkeley County")
            Call SetListItem("Calhoun County")
            Call SetListItem("Charleston County")
            Call SetListItem("Cherokee County")
            Call SetListItem("Chester County")
            Call SetListItem("Chesterfield County")
            Call SetListItem("Clarendon County")
            Call SetListItem("Colleton County")
            Call SetListItem("Darlington County")
            Call SetListItem("Dillon County")
            Call SetListItem("Dorchester County")
            Call SetListItem("Edgefield County")
            Call SetListItem("Fairfield County")
            Call SetListItem("Florence County")
            Call SetListItem("Greenwood County")
            Call SetListItem("Hampton County")
            Call SetListItem("Horry County")
            Call SetListItem("Jasper County")
            Call SetListItem("Kershaw County")
            Call SetListItem("Lancaster County")
            Call SetListItem("Laurens County")
            Call SetListItem("Lee County")
            Call SetListItem("Lexington County")
            Call SetListItem("Marion County")
            Call SetListItem("Marlboro County")
            Call SetListItem("McCormick County")
            Call SetListItem("Myrtle Beach")
            Call SetListItem("Newberry County")
            Call SetListItem("Orangeburg County")
            Call SetListItem("Pickens County")
            Call SetListItem("Richland County")
            Call SetListItem("Saluda County")
            Call SetListItem("Spartanburg County")
            Call SetListItem("Sumter County")
            Call SetListItem("Union County")
            Call SetListItem("Williamsburg County")
            Call SetListItem("York County")
            Call SetListItem("Any other locality with sales tax")
        ElseIf Local1 = "TN" Then
            Call SetListItem("Any locality with sales tax")
        ElseIf Local1 = "UT" Then
            Call SetListItem("Any locality with sales tax")
        ElseIf Local1 = "VA" Then
            Call SetListItem("Any locality with sales tax")
        Else
            Call SetListItem("Not applicable")
        End If
    End If
End Function

Public Function OptionLocalList3_SetDynaList()
    Call SetListTitle("OptionLocalList3")

    Dim Local1 As String

    Local1 = GetString(USWSalesTax.State3)
    
    If Local1 <> "" Then
        If Local1 = "AK" Then
            Call SetListItem("Juneau")
            Call SetListItem("Kenai")
            Call SetListItem("Ketchikan")
            Call SetListItem("Kodiak")
            Call SetListItem("Sitka")
            Call SetListItem("Wasilla")
            Call SetListItem("Any locality with sales tax")
        ElseIf Local1 = "AZ" Then
            Call SetListItem("Chandler")
            Call SetListItem("Gilbert")
            Call SetListItem("Glendale")
            Call SetListItem("Mesa")
            Call SetListItem("Peoria")
            Call SetListItem("Phoenix")
            Call SetListItem("Scottsdale")
            Call SetListItem("Tempe")
            Call SetListItem("Tucson")
            Call SetListItem("Yuma")
            Call SetListItem("Any other locality with sales tax")
        ElseIf Local1 = "AR" Then
            Call SetListItem("Any locality with sales tax")
        ElseIf Local1 = "CO" Then
            Call SetListItem("Adams County")
            Call SetListItem("Arapahoe County")
            Call SetListItem("Arvada")
            Call SetListItem("Aurora")
            Call SetListItem("Boulder County")
            Call SetListItem("Centennial")
            Call SetListItem("City of Boulder")
            Call SetListItem("City of Denver")
            Call SetListItem("City of Pueblo")
            Call SetListItem("Colorado Springs")
            Call SetListItem("El Paso County")
            Call SetListItem("Fort Collins")
            Call SetListItem("Greeley")
            Call SetListItem("Jefferson County")
            Call SetListItem("Lakewood")
            Call SetListItem("Larimer County")
            Call SetListItem("Longmont")
            Call SetListItem("Pueblo County")
            Call SetListItem("Thornton")
            Call SetListItem("Westminster")
            Call SetListItem("Any other locality with sales tax")
        ElseIf Local1 = "GA" Then
            Call SetListItem("Dekalb County (excluding Atlanta)")
            Call SetListItem("Any other locality with sales tax")
        ElseIf Local1 = "IL" Then
            Call SetListItem("Arlington Heights")
            Call SetListItem("Aurora")
            Call SetListItem("Bloomington")
            Call SetListItem("Champaign")
            Call SetListItem("Chicago")
            Call SetListItem("Cicero")
            Call SetListItem("Decatur")
            Call SetListItem("Elgin")
            Call SetListItem("Evanston")
            Call SetListItem("Joliet")
            Call SetListItem("Palatine")
            Call SetListItem("Peoria")
            Call SetListItem("Schaumburg")
            Call SetListItem("Skokie")
            Call SetListItem("Springfield")
            Call SetListItem("Waukegan")
            Call SetListItem("Any other locality with sales tax")
        ElseIf Local1 = "LA" Then
            Call SetListItem("Ascension Parish")
            Call SetListItem("Bossier Parish")
            Call SetListItem("Caddo Parish")
            Call SetListItem("Calcasieu Parish")
            Call SetListItem("East Baton Rouge Parish")
            Call SetListItem("Iberia Parish")
            Call SetListItem("Jefferson Parish")
            Call SetListItem("Lafayette Parish")
            Call SetListItem("Lafourche Parish")
            Call SetListItem("Livingston Parish")
            Call SetListItem("Orleans Parish")
            Call SetListItem("Ouachita Parish")
            Call SetListItem("Rapides Parish")
            Call SetListItem("St. Bernard Parish")
            Call SetListItem("St. Landry Parish")
            Call SetListItem("St Tammany Parish")
            Call SetListItem("Tangipahoa Parish")
            Call SetListItem("Terrebonne Parish")
            Call SetListItem("Any other locality with sales tax")
        ElseIf Local1 = "MS" Then
            Call SetListItem("City of Jackson")
            Call SetListItem("City of Tupelo")
        ElseIf Local1 = "MO" Then
            Call SetListItem("Any locality with sales tax")
        ElseIf Local1 = "NY" Then
            Call SetListItem("Albany County")
            Call SetListItem("Allegany County")
            Call SetListItem("Broome County")
            Call SetListItem("Cattaraugus County")
            Call SetListItem("Cayuga County")
            Call SetListItem("Chautauqua County")
            Call SetListItem("Chemung County")
            Call SetListItem("Chenango County")
            Call SetListItem("City of Auburn")
            Call SetListItem("City of Glens Falls")
            Call SetListItem("City of Gloversville")
            Call SetListItem("City of Ithaca")
            Call SetListItem("City of Johnstown")
            Call SetListItem("City of Mount Vernon")
            Call SetListItem("City of New Rochelle")
            Call SetListItem("City of Norwich")
            Call SetListItem("City of Olean")
            Call SetListItem("City of Oneida")
            Call SetListItem("City of Oswego")
            Call SetListItem("City of Rome")
            Call SetListItem("City of Salamanca")
            Call SetListItem("City of Saratoga Springs")
            Call SetListItem("City of Utica")
            Call SetListItem("City of White Plains")
            Call SetListItem("City of Yonkers")
            Call SetListItem("Clinton County")
            Call SetListItem("Columbia County")
            Call SetListItem("Cortland County")
            Call SetListItem("Delaware County")
            Call SetListItem("Dutchess County")
            Call SetListItem("Erie County")
            Call SetListItem("Essex County")
            Call SetListItem("Franklin County")
            Call SetListItem("Fulton County")
            Call SetListItem("Genesee County")
            Call SetListItem("Greene County")
            Call SetListItem("Hamilton County")
            Call SetListItem("Herkimer County")
            Call SetListItem("Jefferson County")
            Call SetListItem("Lewis County")
            Call SetListItem("Livingston County")
            Call SetListItem("Madison County")
            Call SetListItem("Monroe County")
            Call SetListItem("Montgomery County")
            Call SetListItem("Nassau County")
            Call SetListItem("New York City")
            Call SetListItem("Niagra County")
            Call SetListItem("Oneida County")
            Call SetListItem("Onondaga County")
            Call SetListItem("Ontario County")
            Call SetListItem("Orange County")
            Call SetListItem("Orleans County")
            Call SetListItem("Oswego County")
            Call SetListItem("Otsego County")
            Call SetListItem("Putnam County")
            Call SetListItem("Rensselaer County")
            Call SetListItem("Rockland County")
            Call SetListItem("St. Lawrence County")
            Call SetListItem("Saratoga County")
            Call SetListItem("Schenectady County")
            Call SetListItem("Schoharie County")
            Call SetListItem("Schuyler County")
            Call SetListItem("Seneca County")
            Call SetListItem("Steuben County")
            Call SetListItem("Suffolk County")
            Call SetListItem("Sullivan County")
            Call SetListItem("Tioga County")
            Call SetListItem("Tompkins County")
            Call SetListItem("Ulster County")
            Call SetListItem("Warren County")
            Call SetListItem("Washington County")
            Call SetListItem("Wayne County")
            Call SetListItem("Westchester County")
            Call SetListItem("Wyoming County")
            Call SetListItem("Yates County")
            Call SetListItem("Any other locality with sales tax")
        ElseIf Local1 = "NC" Then
            Call SetListItem("Any locality with sales tax")
        ElseIf Local1 = "SC" Then
            Call SetListItem("Aiken County")
            Call SetListItem("Abbeville County")
            Call SetListItem("Allendale County")
            Call SetListItem("Anderson County")
            Call SetListItem("Bamberg County")
            Call SetListItem("Barnwell County")
            Call SetListItem("Beaufort County")
            Call SetListItem("Berkeley County")
            Call SetListItem("Calhoun County")
            Call SetListItem("Charleston County")
            Call SetListItem("Cherokee County")
            Call SetListItem("Chester County")
            Call SetListItem("Chesterfield County")
            Call SetListItem("Clarendon County")
            Call SetListItem("Colleton County")
            Call SetListItem("Darlington County")
            Call SetListItem("Dillon County")
            Call SetListItem("Dorchester County")
            Call SetListItem("Edgefield County")
            Call SetListItem("Fairfield County")
            Call SetListItem("Florence County")
            Call SetListItem("Greenwood County")
            Call SetListItem("Hampton County")
            Call SetListItem("Horry County")
            Call SetListItem("Jasper County")
            Call SetListItem("Kershaw County")
            Call SetListItem("Lancaster County")
            Call SetListItem("Laurens County")
            Call SetListItem("Lee County")
            Call SetListItem("Lexington County")
            Call SetListItem("Marion County")
            Call SetListItem("Marlboro County")
            Call SetListItem("McCormick County")
            Call SetListItem("Myrtle Beach")
            Call SetListItem("Newberry County")
            Call SetListItem("Orangeburg County")
            Call SetListItem("Pickens County")
            Call SetListItem("Richland County")
            Call SetListItem("Saluda County")
            Call SetListItem("Spartanburg County")
            Call SetListItem("Sumter County")
            Call SetListItem("Union County")
            Call SetListItem("Williamsburg County")
            Call SetListItem("York County")
            Call SetListItem("Any other locality with sales tax")
        ElseIf Local1 = "TN" Then
            Call SetListItem("Any locality with sales tax")
        ElseIf Local1 = "UT" Then
            Call SetListItem("Any locality with sales tax")
        ElseIf Local1 = "VA" Then
            Call SetListItem("Any locality with sales tax")
        Else
            Call SetListItem("Not applicable")
        End If
    End If
End Function

Public Function OptionLocalList4_SetDynaList()
    Call SetListTitle("OptionLocalList4")

    Dim Local1 As String
    
    Local1 = GetString(USWSalesTax.State4)
    
    If Local1 <> "" Then
        If Local1 = "AK" Then
            Call SetListItem("Juneau")
            Call SetListItem("Kenai")
            Call SetListItem("Ketchikan")
            Call SetListItem("Kodiak")
            Call SetListItem("Sitka")
            Call SetListItem("Wasilla")
            Call SetListItem("Any locality with sales tax")
        ElseIf Local1 = "AZ" Then
            Call SetListItem("Chandler")
            Call SetListItem("Gilbert")
            Call SetListItem("Glendale")
            Call SetListItem("Mesa")
            Call SetListItem("Peoria")
            Call SetListItem("Phoenix")
            Call SetListItem("Scottsdale")
            Call SetListItem("Tempe")
            Call SetListItem("Tucson")
            Call SetListItem("Yuma")
            Call SetListItem("Any other locality with sales tax")
        ElseIf Local1 = "AR" Then
            Call SetListItem("Any locality with sales tax")
        ElseIf Local1 = "CO" Then
            Call SetListItem("Adams County")
            Call SetListItem("Arapahoe County")
            Call SetListItem("Arvada")
            Call SetListItem("Aurora")
            Call SetListItem("Boulder County")
            Call SetListItem("Centennial")
            Call SetListItem("City of Boulder")
            Call SetListItem("City of Denver")
            Call SetListItem("City of Pueblo")
            Call SetListItem("Colorado Springs")
            Call SetListItem("El Paso County")
            Call SetListItem("Fort Collins")
            Call SetListItem("Greeley")
            Call SetListItem("Jefferson County")
            Call SetListItem("Lakewood")
            Call SetListItem("Larimer County")
            Call SetListItem("Longmont")
            Call SetListItem("Pueblo County")
            Call SetListItem("Thornton")
            Call SetListItem("Westminster")
            Call SetListItem("Any other locality with sales tax")
        ElseIf Local1 = "GA" Then
            Call SetListItem("Dekalb County (excluding Atlanta)")
            Call SetListItem("Any other locality with sales tax")
        ElseIf Local1 = "IL" Then
            Call SetListItem("Arlington Heights")
            Call SetListItem("Aurora")
            Call SetListItem("Bloomington")
            Call SetListItem("Champaign")
            Call SetListItem("Chicago")
            Call SetListItem("Cicero")
            Call SetListItem("Decatur")
            Call SetListItem("Elgin")
            Call SetListItem("Evanston")
            Call SetListItem("Joliet")
            Call SetListItem("Palatine")
            Call SetListItem("Peoria")
            Call SetListItem("Schaumburg")
            Call SetListItem("Skokie")
            Call SetListItem("Springfield")
            Call SetListItem("Waukegan")
            Call SetListItem("Any other locality with sales tax")
        ElseIf Local1 = "LA" Then
            Call SetListItem("Ascension Parish")
            Call SetListItem("Bossier Parish")
            Call SetListItem("Caddo Parish")
            Call SetListItem("Calcasieu Parish")
            Call SetListItem("East Baton Rouge Parish")
            Call SetListItem("Iberia Parish")
            Call SetListItem("Jefferson Parish")
            Call SetListItem("Lafayette Parish")
            Call SetListItem("Lafourche Parish")
            Call SetListItem("Livingston Parish")
            Call SetListItem("Orleans Parish")
            Call SetListItem("Ouachita Parish")
            Call SetListItem("Rapides Parish")
            Call SetListItem("St. Bernard Parish")
            Call SetListItem("St. Landry Parish")
            Call SetListItem("St Tammany Parish")
            Call SetListItem("Tangipahoa Parish")
            Call SetListItem("Terrebonne Parish")
            Call SetListItem("Any other locality with sales tax")
        ElseIf Local1 = "MS" Then
            Call SetListItem("City of Jackson")
            Call SetListItem("City of Tupelo")
        ElseIf Local1 = "MO" Then
            Call SetListItem("Any locality with sales tax")
        ElseIf Local1 = "NY" Then
            Call SetListItem("Albany County")
            Call SetListItem("Allegany County")
            Call SetListItem("Broome County")
            Call SetListItem("Cattaraugus County")
            Call SetListItem("Cayuga County")
            Call SetListItem("Chautauqua County")
            Call SetListItem("Chemung County")
            Call SetListItem("Chenango County")
            Call SetListItem("City of Auburn")
            Call SetListItem("City of Glens Falls")
            Call SetListItem("City of Gloversville")
            Call SetListItem("City of Ithaca")
            Call SetListItem("City of Johnstown")
            Call SetListItem("City of Mount Vernon")
            Call SetListItem("City of New Rochelle")
            Call SetListItem("City of Norwich")
            Call SetListItem("City of Olean")
            Call SetListItem("City of Oneida")
            Call SetListItem("City of Oswego")
            Call SetListItem("City of Rome")
            Call SetListItem("City of Salamanca")
            Call SetListItem("City of Saratoga Springs")
            Call SetListItem("City of Utica")
            Call SetListItem("City of White Plains")
            Call SetListItem("City of Yonkers")
            Call SetListItem("Clinton County")
            Call SetListItem("Columbia County")
            Call SetListItem("Cortland County")
            Call SetListItem("Delaware County")
            Call SetListItem("Dutchess County")
            Call SetListItem("Erie County")
            Call SetListItem("Essex County")
            Call SetListItem("Franklin County")
            Call SetListItem("Fulton County")
            Call SetListItem("Genesee County")
            Call SetListItem("Greene County")
            Call SetListItem("Hamilton County")
            Call SetListItem("Herkimer County")
            Call SetListItem("Jefferson County")
            Call SetListItem("Lewis County")
            Call SetListItem("Livingston County")
            Call SetListItem("Madison County")
            Call SetListItem("Monroe County")
            Call SetListItem("Montgomery County")
            Call SetListItem("Nassau County")
            Call SetListItem("New York City")
            Call SetListItem("Niagra County")
            Call SetListItem("Oneida County")
            Call SetListItem("Onondaga County")
            Call SetListItem("Ontario County")
            Call SetListItem("Orange County")
            Call SetListItem("Orleans County")
            Call SetListItem("Oswego County")
            Call SetListItem("Otsego County")
            Call SetListItem("Putnam County")
            Call SetListItem("Rensselaer County")
            Call SetListItem("Rockland County")
            Call SetListItem("St. Lawrence County")
            Call SetListItem("Saratoga County")
            Call SetListItem("Schenectady County")
            Call SetListItem("Schoharie County")
            Call SetListItem("Schuyler County")
            Call SetListItem("Seneca County")
            Call SetListItem("Steuben County")
            Call SetListItem("Suffolk County")
            Call SetListItem("Sullivan County")
            Call SetListItem("Tioga County")
            Call SetListItem("Tompkins County")
            Call SetListItem("Ulster County")
            Call SetListItem("Warren County")
            Call SetListItem("Washington County")
            Call SetListItem("Wayne County")
            Call SetListItem("Westchester County")
            Call SetListItem("Wyoming County")
            Call SetListItem("Yates County")
            Call SetListItem("Any other locality with sales tax")
        ElseIf Local1 = "NC" Then
            Call SetListItem("Any locality with sales tax")
        ElseIf Local1 = "SC" Then
            Call SetListItem("Aiken County")
            Call SetListItem("Abbeville County")
            Call SetListItem("Allendale County")
            Call SetListItem("Anderson County")
            Call SetListItem("Bamberg County")
            Call SetListItem("Barnwell County")
            Call SetListItem("Beaufort County")
            Call SetListItem("Berkeley County")
            Call SetListItem("Calhoun County")
            Call SetListItem("Charleston County")
            Call SetListItem("Cherokee County")
            Call SetListItem("Chester County")
            Call SetListItem("Chesterfield County")
            Call SetListItem("Clarendon County")
            Call SetListItem("Colleton County")
            Call SetListItem("Darlington County")
            Call SetListItem("Dillon County")
            Call SetListItem("Dorchester County")
            Call SetListItem("Edgefield County")
            Call SetListItem("Fairfield County")
            Call SetListItem("Florence County")
            Call SetListItem("Greenwood County")
            Call SetListItem("Hampton County")
            Call SetListItem("Horry County")
            Call SetListItem("Jasper County")
            Call SetListItem("Kershaw County")
            Call SetListItem("Lancaster County")
            Call SetListItem("Laurens County")
            Call SetListItem("Lee County")
            Call SetListItem("Lexington County")
            Call SetListItem("Marion County")
            Call SetListItem("Marlboro County")
            Call SetListItem("McCormick County")
            Call SetListItem("Myrtle Beach")
            Call SetListItem("Newberry County")
            Call SetListItem("Orangeburg County")
            Call SetListItem("Pickens County")
            Call SetListItem("Richland County")
            Call SetListItem("Saluda County")
            Call SetListItem("Spartanburg County")
            Call SetListItem("Sumter County")
            Call SetListItem("Union County")
            Call SetListItem("Williamsburg County")
            Call SetListItem("York County")
            Call SetListItem("Any other locality with sales tax")
        ElseIf Local1 = "TN" Then
            Call SetListItem("Any locality with sales tax")
        ElseIf Local1 = "UT" Then
            Call SetListItem("Any locality with sales tax")
        ElseIf Local1 = "VA" Then
            Call SetListItem("Any locality with sales tax")
        Else
            Call SetListItem("Not applicable")
        End If
    End If
End Function

Public Function OptionLocalList5_SetDynaList()
    Call SetListTitle("OptionLocalList5")

    Dim Local1 As String
    
    Local1 = GetString(USWSalesTax.State5)

    If Local1 <> "" Then
        If Local1 = "AK" Then
            Call SetListItem("Juneau")
            Call SetListItem("Kenai")
            Call SetListItem("Ketchikan")
            Call SetListItem("Kodiak")
            Call SetListItem("Sitka")
            Call SetListItem("Wasilla")
            Call SetListItem("Any locality with sales tax")
        ElseIf Local1 = "AZ" Then
            Call SetListItem("Chandler")
            Call SetListItem("Gilbert")
            Call SetListItem("Glendale")
            Call SetListItem("Mesa")
            Call SetListItem("Peoria")
            Call SetListItem("Phoenix")
            Call SetListItem("Scottsdale")
            Call SetListItem("Tempe")
            Call SetListItem("Tucson")
            Call SetListItem("Yuma")
            Call SetListItem("Any other locality with sales tax")
        ElseIf Local1 = "AR" Then
            Call SetListItem("Any locality with sales tax")
        ElseIf Local1 = "CO" Then
            Call SetListItem("Adams County")
            Call SetListItem("Arapahoe County")
            Call SetListItem("Arvada")
            Call SetListItem("Aurora")
            Call SetListItem("Boulder County")
            Call SetListItem("Centennial")
            Call SetListItem("City of Boulder")
            Call SetListItem("City of Denver")
            Call SetListItem("City of Pueblo")
            Call SetListItem("Colorado Springs")
            Call SetListItem("El Paso County")
            Call SetListItem("Fort Collins")
            Call SetListItem("Greeley")
            Call SetListItem("Jefferson County")
            Call SetListItem("Lakewood")
            Call SetListItem("Larimer County")
            Call SetListItem("Longmont")
            Call SetListItem("Pueblo County")
            Call SetListItem("Thornton")
            Call SetListItem("Westminster")
            Call SetListItem("Any other locality with sales tax")
        ElseIf Local1 = "GA" Then
            Call SetListItem("Dekalb County (excluding Atlanta)")
            Call SetListItem("Any other locality with sales tax")
        ElseIf Local1 = "IL" Then
            Call SetListItem("Arlington Heights")
            Call SetListItem("Aurora")
            Call SetListItem("Bloomington")
            Call SetListItem("Champaign")
            Call SetListItem("Chicago")
            Call SetListItem("Cicero")
            Call SetListItem("Decatur")
            Call SetListItem("Elgin")
            Call SetListItem("Evanston")
            Call SetListItem("Joliet")
            Call SetListItem("Palatine")
            Call SetListItem("Peoria")
            Call SetListItem("Schaumburg")
            Call SetListItem("Skokie")
            Call SetListItem("Springfield")
            Call SetListItem("Waukegan")
            Call SetListItem("Any other locality with sales tax")
        ElseIf Local1 = "LA" Then
            Call SetListItem("Ascension Parish")
            Call SetListItem("Bossier Parish")
            Call SetListItem("Caddo Parish")
            Call SetListItem("Calcasieu Parish")
            Call SetListItem("East Baton Rouge Parish")
            Call SetListItem("Iberia Parish")
            Call SetListItem("Jefferson Parish")
            Call SetListItem("Lafayette Parish")
            Call SetListItem("Lafourche Parish")
            Call SetListItem("Livingston Parish")
            Call SetListItem("Orleans Parish")
            Call SetListItem("Ouachita Parish")
            Call SetListItem("Rapides Parish")
            Call SetListItem("St. Bernard Parish")
            Call SetListItem("St. Landry Parish")
            Call SetListItem("St Tammany Parish")
            Call SetListItem("Tangipahoa Parish")
            Call SetListItem("Terrebonne Parish")
            Call SetListItem("Any other locality with sales tax")
        ElseIf Local1 = "MS" Then
            Call SetListItem("City of Jackson")
            Call SetListItem("City of Tupelo")
        ElseIf Local1 = "MO" Then
            Call SetListItem("Any locality with sales tax")
        ElseIf Local1 = "NY" Then
            Call SetListItem("Albany County")
            Call SetListItem("Allegany County")
            Call SetListItem("Broome County")
            Call SetListItem("Cattaraugus County")
            Call SetListItem("Cayuga County")
            Call SetListItem("Chautauqua County")
            Call SetListItem("Chemung County")
            Call SetListItem("Chenango County")
            Call SetListItem("City of Auburn")
            Call SetListItem("City of Glens Falls")
            Call SetListItem("City of Gloversville")
            Call SetListItem("City of Ithaca")
            Call SetListItem("City of Johnstown")
            Call SetListItem("City of Mount Vernon")
            Call SetListItem("City of New Rochelle")
            Call SetListItem("City of Norwich")
            Call SetListItem("City of Olean")
            Call SetListItem("City of Oneida")
            Call SetListItem("City of Oswego")
            Call SetListItem("City of Rome")
            Call SetListItem("City of Salamanca")
            Call SetListItem("City of Saratoga Springs")
            Call SetListItem("City of Utica")
            Call SetListItem("City of White Plains")
            Call SetListItem("City of Yonkers")
            Call SetListItem("Clinton County")
            Call SetListItem("Columbia County")
            Call SetListItem("Cortland County")
            Call SetListItem("Delaware County")
            Call SetListItem("Dutchess County")
            Call SetListItem("Erie County")
            Call SetListItem("Essex County")
            Call SetListItem("Franklin County")
            Call SetListItem("Fulton County")
            Call SetListItem("Genesee County")
            Call SetListItem("Greene County")
            Call SetListItem("Hamilton County")
            Call SetListItem("Herkimer County")
            Call SetListItem("Jefferson County")
            Call SetListItem("Lewis County")
            Call SetListItem("Livingston County")
            Call SetListItem("Madison County")
            Call SetListItem("Monroe County")
            Call SetListItem("Montgomery County")
            Call SetListItem("Nassau County")
            Call SetListItem("New York City")
            Call SetListItem("Niagra County")
            Call SetListItem("Oneida County")
            Call SetListItem("Onondaga County")
            Call SetListItem("Ontario County")
            Call SetListItem("Orange County")
            Call SetListItem("Orleans County")
            Call SetListItem("Oswego County")
            Call SetListItem("Otsego County")
            Call SetListItem("Putnam County")
            Call SetListItem("Rensselaer County")
            Call SetListItem("Rockland County")
            Call SetListItem("St. Lawrence County")
            Call SetListItem("Saratoga County")
            Call SetListItem("Schenectady County")
            Call SetListItem("Schoharie County")
            Call SetListItem("Schuyler County")
            Call SetListItem("Seneca County")
            Call SetListItem("Steuben County")
            Call SetListItem("Suffolk County")
            Call SetListItem("Sullivan County")
            Call SetListItem("Tioga County")
            Call SetListItem("Tompkins County")
            Call SetListItem("Ulster County")
            Call SetListItem("Warren County")
            Call SetListItem("Washington County")
            Call SetListItem("Wayne County")
            Call SetListItem("Westchester County")
            Call SetListItem("Wyoming County")
            Call SetListItem("Yates County")
            Call SetListItem("Any other locality with sales tax")
        ElseIf Local1 = "NC" Then
            Call SetListItem("Any locality with sales tax")
        ElseIf Local1 = "SC" Then
            Call SetListItem("Aiken County")
            Call SetListItem("Abbeville County")
            Call SetListItem("Allendale County")
            Call SetListItem("Anderson County")
            Call SetListItem("Bamberg County")
            Call SetListItem("Barnwell County")
            Call SetListItem("Beaufort County")
            Call SetListItem("Berkeley County")
            Call SetListItem("Calhoun County")
            Call SetListItem("Charleston County")
            Call SetListItem("Cherokee County")
            Call SetListItem("Chester County")
            Call SetListItem("Chesterfield County")
            Call SetListItem("Clarendon County")
            Call SetListItem("Colleton County")
            Call SetListItem("Darlington County")
            Call SetListItem("Dillon County")
            Call SetListItem("Dorchester County")
            Call SetListItem("Edgefield County")
            Call SetListItem("Fairfield County")
            Call SetListItem("Florence County")
            Call SetListItem("Greenwood County")
            Call SetListItem("Hampton County")
            Call SetListItem("Horry County")
            Call SetListItem("Jasper County")
            Call SetListItem("Kershaw County")
            Call SetListItem("Lancaster County")
            Call SetListItem("Laurens County")
            Call SetListItem("Lee County")
            Call SetListItem("Lexington County")
            Call SetListItem("Marion County")
            Call SetListItem("Marlboro County")
            Call SetListItem("McCormick County")
            Call SetListItem("Myrtle Beach")
            Call SetListItem("Newberry County")
            Call SetListItem("Orangeburg County")
            Call SetListItem("Pickens County")
            Call SetListItem("Richland County")
            Call SetListItem("Saluda County")
            Call SetListItem("Spartanburg County")
            Call SetListItem("Sumter County")
            Call SetListItem("Union County")
            Call SetListItem("Williamsburg County")
            Call SetListItem("York County")
            Call SetListItem("Any other locality with sales tax")
        ElseIf Local1 = "TN" Then
            Call SetListItem("Any locality with sales tax")
        ElseIf Local1 = "UT" Then
            Call SetListItem("Any locality with sales tax")
        ElseIf Local1 = "VA" Then
            Call SetListItem("Any locality with sales tax")
        Else
            Call SetListItem("Not applicable")
        End If
    End If
End Function

Private Sub SandboxTypeCodes_SetList()
  ListTitle = "Sandbox Codes"
  ListItem = "View All Codes"
  ListItem = "Odd Numbers"
  ListItem = "Even Numbers"
  ListItem = "Alphabetical"
End Sub

Public Function SandboxCodesList_SetDynaList()
    Call SetListTitle("SandboxCodesList")
    
    Dim TypeCode As String
    
    TypeCode = GetString(USSandbox.TypeCode)
    
    If TypeCode = "View All Codes" Then
        Call SetListItem("1", "1")
        Call SetListItem("2", "2")
        Call SetListItem("3", "3")
        Call SetListItem("4", "1")
        Call SetListItem("5", "5")
        Call SetListItem("6", "6")
        Call SetListItem("7", "7")
        Call SetListItem("8", "8")
        Call SetListItem("9", "9")
        Call SetListItem("10", "10")
        Call SetListItem("A", "A")
        Call SetListItem("B", "B")
        Call SetListItem("C", "C")
        Call SetListItem("D", "D")
        Call SetListItem("E", "E")
        Call SetListItem("F", "F")
        Call SetListItem("G", "G")
        Call SetListItem("H", "H")
        Call SetListItem("I", "I")
        Call SetListItem("J", "J")
        Call SetListItem("K", "K")
        Call SetListItem("L", "L")
        Call SetListItem("M", "M")
        Call SetListItem("N", "N")
        Call SetListItem("O", "O")
        Call SetListItem("P", "P")
        Call SetListItem("Q", "Q")
        Call SetListItem("R", "R")
        Call SetListItem("S", "S")
        Call SetListItem("T", "T")
        Call SetListItem("U", "U")
        Call SetListItem("V", "V")
        Call SetListItem("W", "W")
        Call SetListItem("X", "X")
        Call SetListItem("Y", "Y")
        Call SetListItem("Z", "Z")
    ElseIf TypeCode = "Odd Numbers" Then
        Call SetListItem("1", "1")
        Call SetListItem("3", "3")
        Call SetListItem("5", "5")
        Call SetListItem("7", "7")
        Call SetListItem("9", "9")
    ElseIf TypeCode = "Even Numbers" Then
        Call SetListItem("2", "2")
        Call SetListItem("4", "4")
        Call SetListItem("6", "6")
        Call SetListItem("8", "8")
        Call SetListItem("10", "10")
    ElseIf TypeCode = "Alphabetical" Then
        Call SetListItem("A", "A")
        Call SetListItem("B", "B")
        Call SetListItem("C", "C")
        Call SetListItem("D", "D")
        Call SetListItem("E", "E")
        Call SetListItem("F", "F")
        Call SetListItem("G", "G")
        Call SetListItem("H", "H")
        Call SetListItem("I", "I")
        Call SetListItem("J", "J")
        Call SetListItem("K", "K")
        Call SetListItem("L", "L")
        Call SetListItem("M", "M")
        Call SetListItem("N", "N")
        Call SetListItem("O", "O")
        Call SetListItem("P", "P")
        Call SetListItem("Q", "Q")
        Call SetListItem("R", "R")
        Call SetListItem("S", "S")
        Call SetListItem("T", "T")
        Call SetListItem("U", "U")
        Call SetListItem("V", "V")
        Call SetListItem("W", "W")
        Call SetListItem("X", "X")
        Call SetListItem("Y", "Y")
        Call SetListItem("Z", "Z")
    Else
        Call SetListItem("No Type Selected", "No Type Selected")
    End If
End Function

Public Function GenSalesTaxRate(WhatState As String) As Double
'No change for 2021
    If WhatState = "AL" Then
        GenSalesTaxRate = 4#
    ElseIf WhatState = "AZ" Then
        GenSalesTaxRate = 5.6
    ElseIf WhatState = "AR" Then
        GenSalesTaxRate = 6.5
    ElseIf WhatState = "CA" Then
        GenSalesTaxRate = 7.25
    ElseIf WhatState = "CO" Then
        GenSalesTaxRate = 2.9
    ElseIf WhatState = "CT" Then
        GenSalesTaxRate = 6.35
    ElseIf WhatState = "DC" Then
        GenSalesTaxRate = 6#
    ElseIf WhatState = "FL" Then
        GenSalesTaxRate = 6#
    ElseIf WhatState = "GA" Then
        GenSalesTaxRate = 4#
    ElseIf WhatState = "HI" Then
        GenSalesTaxRate = 4#
    ElseIf WhatState = "ID" Then
        GenSalesTaxRate = 6#
    ElseIf WhatState = "IL" Then
        GenSalesTaxRate = 6.25
    ElseIf WhatState = "IN" Then
        GenSalesTaxRate = 7#
    ElseIf WhatState = "IA" Then
        GenSalesTaxRate = 6#
    ElseIf WhatState = "KS" Then
        GenSalesTaxRate = 6.5
    ElseIf WhatState = "KY" Then
        GenSalesTaxRate = 6#
    ElseIf WhatState = "LA" Then
        GenSalesTaxRate = 4.45
    ElseIf WhatState = "ME" Then
        GenSalesTaxRate = 5.5
    ElseIf WhatState = "MD" Then
        GenSalesTaxRate = 6#
    ElseIf WhatState = "MA" Then
        GenSalesTaxRate = 6.25
    ElseIf WhatState = "MI" Then
        GenSalesTaxRate = 6#
    ElseIf WhatState = "MN" Then
        GenSalesTaxRate = 6.875
    ElseIf WhatState = "MS" Then
        GenSalesTaxRate = 7#
    ElseIf WhatState = "MO" Then
        GenSalesTaxRate = 4.225
    ElseIf WhatState = "NE" Then
        GenSalesTaxRate = 5.5
    ElseIf WhatState = "NV" Then
        GenSalesTaxRate = 6.85
    ElseIf WhatState = "NJ" Then
        GenSalesTaxRate = 6.625
    ElseIf WhatState = "NM" Then
        GenSalesTaxRate = 5.125
    ElseIf WhatState = "NY" Then
        GenSalesTaxRate = 4#
    ElseIf WhatState = "NC" Then
        GenSalesTaxRate = 4.75
    ElseIf WhatState = "ND" Then
        GenSalesTaxRate = 5#
    ElseIf WhatState = "OH" Then
        GenSalesTaxRate = 5.75
    ElseIf WhatState = "OK" Then
        GenSalesTaxRate = 4.5
    ElseIf WhatState = "PA" Then
        GenSalesTaxRate = 6#
    ElseIf WhatState = "RI" Then
        GenSalesTaxRate = 7#
    ElseIf WhatState = "SC" Then
        GenSalesTaxRate = 6#
    ElseIf WhatState = "SD" Then
        GenSalesTaxRate = 4.5
    ElseIf WhatState = "TN" Then
        GenSalesTaxRate = 7#
    ElseIf WhatState = "TX" Then
        GenSalesTaxRate = 6.25
    ElseIf WhatState = "UT" Then
        GenSalesTaxRate = 4.85
    ElseIf WhatState = "VT" Then
        GenSalesTaxRate = 6#
    ElseIf WhatState = "VA" Then
        GenSalesTaxRate = 4.3
    ElseIf WhatState = "WA" Then
        GenSalesTaxRate = 6.5
    ElseIf WhatState = "WV" Then
        GenSalesTaxRate = 6#
    ElseIf WhatState = "WI" Then
        GenSalesTaxRate = 5#
    ElseIf WhatState = "WY" Then
        GenSalesTaxRate = 4#
    Else
        GenSalesTaxRate = 0#
    End If
End Function

Public Function LocalOptionalTable(WhatState As String, Local As String) As String
'Updated for 2021
    If WhatState = "AK" Then
        If Local = "Juneau" Or Local = "Kenai" Or Local = "Ketchikan" Or Local = "Kodiak" Or Local = "Sitka" Or Local = "Wasilla" Or Local = "Any locality with sales tax" Then
            LocalOptionalTable = "OLSTTC"
        End If
    ElseIf WhatState = "AZ" Then
        If Local = "Mesa" Or Local = "Phoenix" Or Local = "Tucson" Then
            LocalOptionalTable = "OLSTTA"
        ElseIf Local = "Chandler" Or Local = "Gilbert" Or Local = "Glendale" Or Local = "Peoria" Or Local = "Scottsdale" Or Local = "Tempe" Or Local = "Yuma" Or Local = "Any other locality with sales tax" Then
            LocalOptionalTable = "OLSTTB"
        End If
    ElseIf WhatState = "AR" Then
        If Local = "Any locality with sales tax" Then
            LocalOptionalTable = "OLSTTC"
        End If
    ElseIf WhatState = "CO" Then
        If Local = "Adams County" Or Local = "Arapahoe County" Or Local = "Aurora" Or Local = "Boulder County" Or Local = "Centennial" Or Local = "Colorado Springs" Or Local = "City of Denver" Or Local = "City of Pueblo" Or Local = "El Paso County" Or Local = "Larimer County" Or Local = "Pueblo County" Or Local = "Any other locality with sales tax" Then
            LocalOptionalTable = "OLSTTA"
        ElseIf Local = "Arvada" Or Local = "City of Boulder" Or Local = "Fort Collins" Or Local = "Greeley" Or Local = "Jefferson County" Or Local = "Lakewood" Or Local = "Longmont" Or Local = "Thornton" Or Local = "Westminster" Then
            LocalOptionalTable = "OLSTTB"
        End If
    ElseIf WhatState = "GA" Then
        If Local = "Dekalb County (excluding Atlanta)" Then
            LocalOptionalTable = "OLSTTB"
        ElseIf Local = "Any other locality with sales tax" Then
            LocalOptionalTable = "OLSTTC"
        End If
    ElseIf WhatState = "IL" Then
        If Local = "Arlington Heights" Or Local = "Bloomington" Or Local = "Champaign" Or Local = "Chicago" Or Local = "Cicero" Or Local = "Decatur" Or Local = "Evanston" Or Local = "Palatine" Or Local = "Peoria" Or Local = "Schaumburg" Or Local = "Skokie" Or Local = "Springfield" Or Local = "Any other locality with sales tax" Then
            LocalOptionalTable = "OLSTTA"
        ElseIf Local = "Aurora" Or Local = "Elgin" Or Local = "Joliet" Or Local = "Waukegan" Then
            LocalOptionalTable = "OLSTTB
        End If
    ElseIf WhatState = "LA" Then
        If Local = "East Baton Rouge Parish" Or Local = "Jefferson Parish" Then
            LocalOptionalTable = "OLSTTB"
        ElseIf Local = "Ascension Parish" Or Local = "Bossier Parish" Or Local = "Caddo Parish" Or Local = "Calcasieu Parish" Or Local = "Iberia Parish" Or Local = "Lafayette Parish" Or Local = "Lafourche Parish" Or Local = "Livingston Parish" Or Local = "Orleans Parish" Or Local = "Ouachita Parish" Or Local = "Rapides Parish" Or Local = "St. Bernard Parish" Or Local = "St. Landry Parish" Or Local = "St Tammany Parish" Or Local = "Tangipahoa Parish" Or Local = "Terrebonne Parish" Or Local = "Any other locality with sales tax" Then
            LocalOptionalTable = "OLSTTC"
        End If
    ElseIf WhatState = "MS" Then
        If Local = "City of Jackson" Then
            LocalOptionalTable = "OLSTTA"
        ElseIf Local = "City of Tupelo" Then
            LocalOptionalTable = "OLSTTC"
        End If
    ElseIf WhatState = "MO" Then
        If Local = "Any locality with sales tax" Then
            LocalOptionalTable = "OLSTTC"
        End If
    ElseIf WhatState = "NY" Then
        If Local = "Chautauqua County" Or Local = "Chenango County" Or Local = "Columbia County" Or Local = "Delaware County" Or Local = "Greene County" Or Local = "Hamilton County" Or Local = "New York City" Or Local = "City of Norwich" Or Local = "Tioga County" Then
            LocalOptionalTable = "OLSTTA"
        ElseIf Local = "Albany County" Or Local = "Allegany County" Or Local = "Broome County" Or Local = "Cattaraugus County" Or Local = "Cayuga County" Or Local = "Chemung County" Or Local = "Clinton County" Or Local = "Cortland County" Or Local = "Dutchess County" Or Local = "Erie County" Or Local = "Essex County" Or Local = "Franklin County" Or Local = "Fulton County" Or Local = "Genesee County" Or Local = "Herkimer County" Or Local = "Jefferson County" Or Local = "Lewis County" Or Local = "Livingston County" Or Local = "Madison County" Or Local = "Monroe County" Or Local = "Montgomery County" Or Local = "Nassau County" Or Local = "Niagra County" Or Local = "Oneida County" Or Local = "Onondaga County" Or Local = "Ontario County" Or Local = "Orange County" Or Local = "Orleans County" Or Local = "Oswego County" Or Local = "Otsego County" Or Local = "Putnam County" Or Local = "Rensselaer County" Or Local = "Rockland County" Or Local = "St. Lawrence County" Or Local = "Saratoga County" Or Local = "Schenectady County" Or Local = "Schoharie County" Or Local = "Schuyler County" Or Local = "Seneca County" Or Local = "Steuben County" Or Local = "Suffolk County" Or Local = "Sullivan County" Or Local = "Tompkins County" Or Local = "Ulster County" Or Local = "Warren County" Or Local = "Washington County" Or Local = "Wayne County" Or Local = "Westchester County" Or Local = "Wyoming County" Or Local = "Yates County" Then
            LocalOptionalTable = "OLSTTB"
        ElseIf Local = "City of Auburn" Or Local = "City of Glens Falls" Or Local = "City of Gloversville" Or Local = "City of Ithaca" Or Local = "City of Johnstown" Or Local = "City of Mount Vernon" Or Local = "City of New Rochelle" Or Local = "City of Olean" Or Local = "City of Oneida" Or Local = "City of Oswego" Or Local = "City of Rome" Or Local = "City of Salamanca" Or Local = "City of Saratoga Springs" Or Local = "City of Utica" Or Local = "City of White Plains" Or Local = "City of Yonkers" Then
            LocalOptionalTable = "OLSTTB"
        ElseIf Local = "Any other locality with sales tax" Then
            LocalOptionalTable = "OLSTTD"
        End If
    ElseIf WhatState = "NC" Then
        If Local = "Any locality with sales tax" Then
            LocalOptionalTable = "OLSTTA"
        End If
    ElseIf WhatState = "SC" Then
        If Local = "Aiken County" Or Local = "Anderson County" Or Local = "Greenwood County" Or Local = "Horry County" Or Local = "Lexington County" Or Local = "Myrtle Beach" Or Local = "Newberry County" Or Local = "Orangeburg County" Or Local = "Spartanburg County" Or Local = "York County" Then
            LocalOptionalTable = "OLSTTA"
        ElseIf Local = "Allendale County" Or Local = "Bamberg County" Or Local = "Barnwell County" Or Local = "Calhoun County" Or Local = "Charleston County" Or Local = "Cherokee County" Or Local = "Chester County" Or Local = "Chesterfield County" Or Local = "Colleton County" Or Local = "Darlington County" Or Local = "Dillon County" Or Local = "Edgefield County" Or Local = "Florence County" Or Local = "Hampton County" Or Local = "Jasper County" Or Local = "Kershaw County" Or Local = "Lancaster County" Or Local = "Laurens County" Or Local = "Lee County" Or Local = "Marion County" Or Local = "Marlboro County" Or Local = "McCormick County" Or Local = "Saluda County" Or Local = "Sumter County" Or Local = "Williamsburg County" Then
            LocalOptionalTable = "OLSTTB"
        ElseIf Local = "Abbeville County" Or Local = "Beaufort County" Or Local = "Berkeley County" Or Local = "Clarendon County" Or Local = "Dorchester County" Or Local = "Fairfield County" Or Local = "Pickens County" Or Local = "Richland County" Or Local = "Union County" Or Local = "Any other locality with sales tax" Then
            LocalOptionalTable = "OLSTTC"
        End If
    ElseIf WhatState = "TN" Then
        If Local = "Any locality with sales tax" Then
            LocalOptionalTable = "OLSTTC"
        End If
    ElseIf WhatState = "UT" Then
        If Local = "Any locality with sales tax" Then
            LocalOptionalTable = "OLSTTA"
        End If
    ElseIf WhatState = "VA" Then
        If Local = "Any locality with sales tax" Then
            LocalOptionalTable = "OLSTTB"
        End If
    End If
    
    LocalOptionalTable = ""
End Function

Public Function IsLocalOptional(WhatState As String) As Boolean
'No change for 2021
    If WhatState = "AK" Then
        IsLocalOptional = True
    ElseIf WhatState = "AZ" Then
        IsLocalOptional = True
    ElseIf WhatState = "AR" Then
        IsLocalOptional = True
    ElseIf WhatState = "CO" Then
        IsLocalOptional = True
    ElseIf WhatState = "GA" Then
        IsLocalOptional = True
    ElseIf WhatState = "IL" Then
        IsLocalOptional = True
    ElseIf WhatState = "LA" Then
        IsLocalOptional = True
    ElseIf WhatState = "MS" Then
        IsLocalOptional = True
    ElseIf WhatState = "MO" Then
        IsLocalOptional = True
    ElseIf WhatState = "NY" Then
        IsLocalOptional = True
    ElseIf WhatState = "NC" Then
        IsLocalOptional = True
    ElseIf WhatState = "SC" Then
        IsLocalOptional = True
    ElseIf WhatState = "TN" Then
        IsLocalOptional = True
    ElseIf WhatState = "UT" Then
        IsLocalOptional = True
    ElseIf WhatState = "VA" Then
        IsLocalOptional = True
    Else
        IsLocalOptional = False
    End If
End Function

Public Function NoLocalSalesTax(WhatState As String) As Boolean
'No change for 2021
'These are the states noted with "4" in the Optional State Sales Tax Tables
    If WhatState = "CT" Then
        NoLocalSalesTax = True
    ElseIf WhatState = "DC" Then
        NoLocalSalesTax = True
    ElseIf WhatState = "IN" Then
        NoLocalSalesTax = True
    ElseIf WhatState = "KY" Then
        NoLocalSalesTax = True
    ElseIf WhatState = "ME" Then
        NoLocalSalesTax = True
    ElseIf WhatState = "MD" Then
        NoLocalSalesTax = True
    ElseIf WhatState = "MA" Then
        NoLocalSalesTax = True
    ElseIf WhatState = "MI" Then
        NoLocalSalesTax = True
    ElseIf WhatState = "NJ" Then
        NoLocalSalesTax = True
    ElseIf WhatState = "RI" Then
        NoLocalSalesTax = True
    Else
        NoLocalSalesTax = False
    End If
End Function

Public Function NotImportStIDs(State As String) As String
'Updated for 2020
    If State = "AL" Then
        NotImportStIDs = "AL"
    ElseIf State = "AZ" Then
        NotImportStIDs = "AZ"
    ElseIf State = "CT" Then
        NotImportStIDs = "CT"
    ElseIf State = "ID" Then
        NotImportStIDs = "ID"
    ElseIf State = "IL" Then
        NotImportStIDs = "IL"
    ElseIf State = "IN" Then
        NotImportStIDs = "IN"
    ElseIf State = "IA" Then
        NotImportStIDs = "IA"
    ElseIf State = "KY" Then
        NotImportStIDs = "KY"
    ElseIf State = "MD" Then
        NotImportStIDs = "MD"
    ElseIf State = "MN" Then
        NotImportStIDs = "MN"
    ElseIf State = "ND" Then
        NotImportStIDs = "ND"
    ElseIf State = "SC" Then
        NotImportStIDs = "SC"
    ElseIf State = "VA" Then
        NotImportStIDs = "VA"
    ElseIf State = "WV" Then
        NotImportStIDs = "WV"
    ElseIf State = "WI" Then
        NotImportStIDs = "WI"
    Else
        NotImportStIDs = " "
    End If
End Function

Private Sub CreditTypeList_SetList()

   ListTitle = "CreditList"

   ListItem = "1a. Investment"
   ListItem = "1c. Increasing research activities"
   ListItem = "1d. Low-income housing credit"
   ListItem = "1e. Disabled access"
   ListItem = "1f. Renewable electricity, ref. coal, etc."
   ListItem = "1g. Indian Employment"
   ListItem = "1h. Orphan drug"
   ListItem = "1i. New markets"
   ListItem = "1j. Small employer pension start-up"
   ListItem = "1k. Employer-provided child care"
   ListItem = "1l. Biodiesel and renewable diesel fuels"
   ListItem = "1m. Low sulfur diesel fuel prod."
   ListItem = "1n. Distilled spirits"
   ListItem = "1o. Nonconventional source fuel"
   ListItem = "1p. Energy efficient home"
   ListItem = "1q. Energy efficient appliance"
   ListItem = "1r. Alternative motor vehicle"
   ListItem = "1s. Alternative fuel vehicle refuel prop."
   ListItem = "1t. Enhanced oil recovery"
   ListItem = "1u. Mine rescue team training"
   ListItem = "1v. Ag. chemicals security"
   ListItem = "1w. Employer differential wage payments"
   ListItem = "1x. Carbon dioxide sequestration"
   ListItem = "1y. Qualified plug-in electric drive"
   ListItem = "1z. Qualified plug-in electric vehicle"
   ListItem = "1aa. Employee retention"
   ListItem = "1bb. General credits from electing large part."
   ListItem = "1zz. Other"
   ListItem = "3. Empowerment zone employment"
   ListItem = "4a. Investment"
   ListItem = "4b. Work opportunity"
   ListItem = "4c. Biofuel producer"
   ListItem = "4d. Low-income housing"
   ListItem = "4e. Renewable electricity, ref. coal, etc."
   ListItem = "4f. Employer SS and Medicare taxes paid"
   ListItem = "4g. Qualified railroad track main."
   ListItem = "4h. Small employer health ins. prem."
   ListItem = "4i. Increasing research activities"
   ListItem = "4j. Employer credit for paid family and medical leave"
   ListItem = "4z. Other"
   
End Sub

Public Function RITax(Inc As Currency) As Currency
    If Inc <= 66200@ Then
        RITax = Round(CCur(CDbl(Inc) * 0.0375))
    ElseIf Inc <= 150550@ Then
        RITax = Round(CCur(CDbl((Inc - 66200@)) * 0.0475) + 2482.50@)
    Else
        RITax = Round(CCur(CDbl((Inc - 150550@)) * 0.0599) + 6489.13@)
    End If
End Function

Private Sub SetCustomData()
    'Call SetCustomItem("RefundOwe", USF1040.RefundOwe)
    'Call SetCustomItem("RefundChangeIndicator", USF1040.RefundOwe)
    Call SetCustomItem("RefundOwe", USF1040.RefOweMenu)
    Call SetCustomItem("RefundChangeIndicator", USF1040.RefOweMenu)
    Call SetCustomItem("Modified", USF1040.Modified)
    Call SetCustomItem("Common", USWBasicInfo.Common)
    Call SetCustomItem("SpouseCommon", USWBasicInfo.SpouseCommon)
    Call SetCustomItem("CombNames", USWBasicInfo.CombNames)
    Call SetCustomItem("HomeComb", USWBasicInfo.HomeComb)
    Call SetCustomItem("TPSSN", USWBasicInfo.SSN)
    
    'TaxACT Express Disqualification Field
    Call SetCustomItem("MobDisQual", USF1040.MobDisQual)
    
    'Used by programmers when setting ISDUPLICATESSN(), used in IV_USStep1
    Call SetCustomItem("TPInvalidID", USW1040Supp.InvalidSSN)
    Call SetCustomItem("SPInvalidID", USW1040Supp.InvalidSPSSN)
    
    'Used to toggle between 1040 and 1040NR instructions
    Call SetCustomItem("FederalInstructions", USWResidency.F1040NR)

    'Used to toggle between 1040 and 1040NR Short Form Description (Forms List and Copy Pickers)
    Call SetCustomItem("FederalFormShortDesc", USWResidency.F1040NR)

    'Alerts
    Call SetCustomItem("AllAlerts", USFInterview.Yallalert) 'used by states in paper filing steps
    Call SetCustomItem("EFAlerts", USFInterview.EFAlerts)
    Call SetCustomItem("EFQualifiesAlerts", USFInterview.EFQUALIFYALERTS)
    Call SetCustomItem("ExtensionAlerts", USFInterview.ExtensionAlerts)
    Call SetCustomItem("BankAlerts", USFInterview.BankAlerts)
    Call SetCustomItem("TaxSavingAlerts", USFInterview.TaxSavingAlerts)
    Call SetCustomItem("1040SSAlerts", USFInterview.SSAlerts)
    Call SetCustomItem("1040SSEFQualAlerts", USFInterview.SSEFQualAlerts)
    Call SetCustomItem("1040SSEFAlerts", USFInterview.SSEFAlerts)
    Call SetCustomItem("1040NRAlerts", USFInterview.NRAlerts)
    Call SetCustomItem("1040NREFQualAlerts", USFInterview.NREFQualAlerts)
    Call SetCustomItem("1040NREFAlerts", USFInterview.NREFAlerts)
    Call SetCustomItem("1040NRExtensionAlerts", USFInterview.ExtensionNRAlerts)
   
    'EF Options Submission Information
    Call SetCustomItem("EFAvailable", USWEFOptions.EFAvailable)
    Call SetCustomItem("EFSubmission", USWEFOptions.EFSubmission)
    Call SetCustomItem("EFSubmissionHistory", USWEFOptions.EFSubmissionHistory)
    Call SetCustomItem("EFProcessing", USWEFOptions.EFProcessing)
    Call SetCustomItem("EFPrice", USWEFOptions.EFPrice)
    Call SetCustomItem("OLGSState", USWEFOptions.OLGSState)
    
    'Used to mark federal checkboxes on USWEFOptions - interview condition RESETFEDEFCHECKBOXES
    Call SetCustomItem("FedOnlyEF", USWEFOptions.FedEF)
    Call SetCustomItem("FedOptionEF", USWEFOptions.Fed)
    Call SetCustomItem("ClearSOStateExt", USWEFOptions.ClearSOStateExt)
    
    'Flag used by engineers to force completion of Federal Q&A once Final is live.
    Call SetCustomItem("HasRestartedQNA", USFInterview.HasRestartedQNA)
        
   ' Ef Stuff
    Call SetCustomItem("ClientEmail", USWBasicInfo.email)
    Call SetCustomItem("ClientPhone", USWBasicInfo.Dayphone)
    Call SetCustomItem("EFiledBank", USWEFWksht.EFiledBank)
    Call SetCustomItem("SendEFRefOweOptions", USWEFInst.RefBalDueSelection)
    Call SetCustomItem("ReceiveEFRefOweOptions", USWEFInst.RefBalDueOnSubmit)
    Call SetCustomItem("EFIN2", USWEFWksht.EFIN)
    
   '***** XML Fraud Data Elements ********
    Call SetCustomItem("FirstInputRTN", USWFraud.EngFirstInputRTN)
    Call SetCustomItem("FirstInputAcctNum", USWFraud.EngFirstInputAcctNum)
    Call SetCustomItem("FirstInputTimeStamp", USWFraud.EngFirstInputTimeStamp)
    Call SetCustomItem("CreateReturnCellPhoneNum", USWFraud.EngCreateReturnCellPhoneNum)
    Call SetCustomItem("CreateReturnEmailAddressTxt", USWFraud.EngCreateReturnEmailAddressTxt)
    Call SetCustomItem("CellPhoneNum", USWFraud.EngCellPhoneNum)
    Call SetCustomItem("EmailAddressTxt", USWFraud.EmailAddressTxt)
    Call SetCustomItem("TrustedCustomerCd", USWFraud.EngTrustedCustomerCd)
    Call SetCustomItem("GoogleAuth", USWFraud.GoogleAuth)
    Call SetCustomItem("OOBSecurityVerificationCd", USWFraud.EngOOBSecVerCd)
    Call SetCustomItem("LastSubmissionRqrOOBCd", USWFraud.EngLastSubmissionRqrOOBCd)
    Call SetCustomItem("PaymentDeclinedCounter", USWFraud.PymtDclnCount)
    Call SetCustomItem("PaymentCCSubmitted", USWFraud.PymtCCSubmit)
    Call SetCustomItem("ProfileUserNameChangeInd", USWFraud.EngProfileUserNameChg)
    Call SetCustomItem("ProfilePasswordChangeInd", USWFraud.EngProfilePasswordChg)
    Call SetCustomItem("ProfileEmailAddressChangeInd", USWFraud.EngProfileEmailAddressChg)
    Call SetCustomItem("ProfileCellPhoneChangeInd", USWFraud.EngProfileCellPhoneChg)
    Call SetCustomItem("CreateIPAddress", USWFraud.EngCreateIPAddress)
    Call SetCustomItem("CreateReturnDeviceID", USWFraud.EngCreateReturnDeviceID)
    Call SetCustomItem("CreateReturnDeviceType", USWFraud.EngCreateReturnDeviceType)
    Call SetCustomItem("CreateReturnUserAgent", USWFraud.EngCreateReturnUserAgent)
    Call SetCustomItem("CreateReturnBrowserLang", USWFraud.EngCreateReturnBrowserLang)
    Call SetCustomItem("CreateReturnPlatform", USWFraud.EngCreateReturnPlatform)
    Call SetCustomItem("CreateReturnTimeZone", USWFraud.EngCreateReturnTimeZone)
    Call SetCustomItem("CreateReturnSystemTime", USWFraud.EngCreateReturnSystemTime)
    Call SetCustomItem("CreateMacAddress", USWFraud.EngCreateMacAddress)
    Call SetCustomItem("CreateMacTimestamp", USWFraud.EngCreateMacTimestamp)
    Call SetCustomItem("SubmitReturnIPAddress", USWFraud.EngSubmitReturnIPAddress)
    Call SetCustomItem("SubmitReturnFinalIPPortNum", USWFraud.EngSubmitReturnFinalIPPortNum)
    Call SetCustomItem("DeviceID", USWFraud.EngSubmitReturnDeviceID)
    Call SetCustomItem("DeviceType", USWFraud.EngSubmitReturnDeviceType)
    Call SetCustomItem("UserAgent", USWFraud.EngSubmitReturnUserAgent)
    Call SetCustomItem("BrowserLang", USWFraud.EngSubmitReturnBrowserLang)
    Call SetCustomItem("Platform", USWFraud.EngSubmitReturnPlatform)
    Call SetCustomItem("TimeZone", USWFraud.EngSubmitReturnTimeZone)
    Call SetCustomItem("SystemTime", USWFraud.EngSubmitReturnSystemTime)
    Call SetCustomItem("TotalPreparationSubmissionTs", USWFraud.EngTotalPreparationSubmissionTs)
    Call SetCustomItem("TotActiveTimePrepSubmission", USWFraud.EngTotalActiveTimePrepSub)
    Call SetCustomItem("AuthenticationReviewCd", USWFraud.EngAuthenticationReviewCd)
    Call SetCustomItem("AuthenticationReviewText", USWFraud.EngAuthenticationReviewText)
    Call SetCustomItem("VendorControlNum", USWFraud.EngVendorControlNum)
    Call SetCustomItem("CreateIPTimestamp", USWFraud.EngCreateIPTimestamp)
    Call SetCustomItem("OOBEmail", USWFraud.EngOOBEmail)
    Call SetCustomItem("OOBCellPhone", USWFraud.EngOOBCellPhone)
    Call SetCustomItem("EmailAddressInd", USWFraud.EmailAddressInd)
    Call SetCustomItem("CreateIPPort", USWFraud.EngCreateIPPort)
    Call SetCustomItem("CreateReturnDeviceIDTimeStamp", USWFraud.CreateReturnDeviceIDTimeStamp)
    Call SetCustomItem("SubmitReturnDeviceIDTimeStamp", USWFraud.SubmitReturnDeviceIDTimeStamp)
    Call SetCustomItem("SubmitReturnIPTimeStamp", USWFraud.SubmitReturnIPTimeStamp)
    Call SetCustomItem("SubmitMacAddress", USWFraud.EngSubmitMacAddress)
    Call SetCustomItem("SubmitReturnMacTimestamp", USWFraud.EngSubmitMacTimestamp)
    
    Call SetCustomItem("F1099DLIndicator", USWFraud.F1099DLInd)
    Call SetCustomItem("CreateIPAddressTest", USWFraud.TestCreateIPAddress)
    Call SetCustomItem("SubmitReturnIPAddressTest", USWFraud.TestSubmitIPAddress)
    Call SetCustomItem("W2DownloadFailedAttemptCnt", USWEFWkSht2.W2DownloadFailedAttemptCnt)
    
    Call SetCustomItem("ViewBankInfo", USWEFWksht.ViewBankInfo)
    Call SetCustomItem("FedSetaside", USWEFQual.Con1)
    Call SetCustomItem("BadCCName", USWEFWksht.NoName)
    Call SetCustomItem("BadCCDate", USWEFWksht.NoDate)
    Call SetCustomItem("EFileFail", USFShared.EFileFail)
    Call SetCustomItem("EFilePass", USFShared.EFilePass)
    Call SetCustomItem("SubmissionTrackingID", USFShared.SubmissionTrackingID)
    Call SetCustomItem("CheckForEFStaus", USFShared.CheckForEFStatus)
    Call SetCustomItem("CheckForEFAmendedStatus", USFShared.CheckForEFAmendStatus)
    Call SetCustomItem("TermsAndConditions", USFShared.Check10)
    Call SetCustomItem("EFN", USFInterview.EFN)
    Call SetCustomItem("QualifiesForEF", USWEFQual.QualifiesForEF)
    Call SetCustomItem("EFByPass", USWEFQual.EFByPass)
    Call SetCustomItem("EFAlerted", USWEFQual.EFAlerted)
    Call SetCustomItem("Overridden", USWEFQual.Overridden)
    Call SetCustomItem("CC_Type", USWEFWksht.CCType)
    Call SetCustomItem("CC_Number", USWEFWksht.CC_Number)
    Call SetCustomItem("CC_CCVNumber", USWEFWksht.CCCVCode)
    Call SetCustomItem("CC_ExpMonth", USWEFWksht.CCExpMo)
    Call SetCustomItem("CC_ExpYear", USWEFWksht.CCExpYr)
    Call SetCustomItem("CC_BillAddress", USWEFWksht.CC_BillAddress)
    Call SetCustomItem("CC_BillZip", USWEFWksht.CC_BillZip)
    Call SetCustomItem("RBIN", USWPrepMnNm.RBIN)
    Call SetCustomItem("BankProduct", USWPrepMnNm.BankProduct)
    Call SetCustomItem("EFilePassword", USWPrepMnNm.EFilePassword)
    Call SetCustomItem("ConfirmEFilePassword", USWPrepMnNm.ConfPass)
	Call SetCustomItem("PrepLocalSecurityType", USWPrepMnNm.Extra1)
	Call SetCustomItem("PrepViewLogsCount", USWPrepMnNm.Extra2)
    Call SetCustomItem("EFileFTPOK", USWEFWksht.FTPOK)
    Call SetCustomItem("EFileISAPIOK", USWEFWksht.ISAPIOK)
    Call SetCustomItem("SubmittedEF", USWSpouse.Submitted)
    Call SetCustomItem("SubmittedFedRet", USFShared.FedSubmit)
    Call SetCustomItem("SubmittedRefund", USFShared.FedRefund)
    Call SetCustomItem("SubmittedBalDue", USFShared.FedOwe)
    Call SetCustomItem("SubmittedStateRet", USFShared.StateSubmit)
    Call SetCustomItem("OLSecondEmail", USWBasicInfo.OLSecondEmail)
    
    'Print Device ID/IP Address/IP Timestamp - used for NY 2D barcode
    Call SetCustomItem("PrintReturnDeviceID", USWFraud.PrintReturnDeviceID)
    Call SetCustomItem("PrintReturnIPAddress", USWFraud.PrintReturnIPAddress)
    Call SetCustomItem("PrintReturnIPTimestamp", USWFraud.PrintReturnIPTimestamp)
    
    
    'Refund Marketplace- Remove
    Call SetCustomItem("RMForeignAdd", USWBasicInfo.ForCountry)
    
    'Reload IV_USEF_xmit fields - Alerts
    Call SetCustomItem("StopXmit", USWEFQual.Text20)
    Call SetCustomItem("XmitReload", USWEFQual.Text21)
    
    'New Credit Card Collection Process Fields - TA Fees
    Call SetCustomItem("CC_Name", USWEFWksht.CC_Name)
    Call SetCustomItem("TACCType", USWEFWksht.TACCType)
    Call SetCustomItem("TACCLastFour", USWEFWksht.TACCLastFour)
    Call SetCustomItem("TACCMonth", USWEFWksht.TACCMonth)
    Call SetCustomItem("TACCYear", USWEFWksht.TACCYear)
    Call SetCustomItem("TACCToken", USWEFWksht.TACCToken)
    Call SetCustomItem("TACCBillStreet", USWEFWksht.TACCBillStreet)
    Call SetCustomItem("CC_BillCity", USWEFWksht.CC_BillCity)
    Call SetCustomItem("CC_BillState", USWEFWksht.CC_BillState)
    Call SetCustomItem("TACCBillZip", USWEFWksht.TACCBillZip)    
   
    'Bank Fields (RTN and DAN) check
    Call SetCustomItem("RTNChange", USWEFWkSht2.RTNChange)
    Call SetCustomItem("DANChange", USWEFWkSht2.DANChange)
    
    'HasEfileModuleError - set fields
    Call SetCustomItem("DuplicateReturn", USWEFWksht.DuplicateReturn)
    Call SetCustomItem("StReqFedAccept", USWEFWksht.StReqFedAccept)
    
    Call SetCustomItem("EFNotifEmail", USWBasicInfo.EFNotifEmail)
    Call SetCustomItem("TextProvider", USWBasicInfo.EFNotifSMS)
    Call SetCustomItem("TextNumber", USWBasicInfo.EFNotifMobile)
    Call SetCustomItem("FreeDlxEFile", USWEFWksht.FreeDlxEf)
    Call SetCustomItem("FreeStateEFile", USWEFWksht.FreeStateEF)
    ' First FFA Offer (RB 12-19-07)
    Call SetCustomItem("FreeIRSReturn", USWEFWksht.IRSFreeFile)
    ' Second FFA Offer - For 2007 no 2nd offer at this point (RB 12-30-07)
    Call SetCustomItem("FreeIRSReturn2", USWEFWkSht2.FFAOffer2)
    'VITA Site Identification Number
    Call SetCustomItem("VITASIDN", USWEFWksht.VITASIDN)
    Call SetCustomItem("PrePaidEF", USWEFWksht.Prepaid)
    'Call SetCustomItem("SSPinNo", USWEFWksht.SSPinNo)
    Call SetCustomItem("Need8453", USF8453Prep.AnyBoxes)
    Call SetCustomItem("PrepContactEmail", USWBasicInfo.Prepemail)
    Call SetCustomItem("EFTestMode", USWEFWksht.TestMode)
    Call SetCustomItem("EFMax", USWEFQual.EFMax)
    Call SetCustomItem("STATEQNAY", USFInterview.STATEQNAY)
    Call SetCustomItem("HaveEFStatesAttached", USWEFQual.HaveEFStatesAttached)
    Call SetCustomItem("HaveMultiEFStatesAttached", USWEFQual.HaveMultiEFStatesAttached)
    ' Used in CouldHaveEFState function (RB 12-12-07)
    Call SetCustomItem("LivesInPBEFState", USWEFQual.LivesInPBEFState)
    Call SetCustomItem("LivesInEFState", USWEFQual.AvailStates)
    Call SetCustomItem("DirDepChecking", USF1040.Checking)
    Call SetCustomItem("DirDepSavings", USF1040.SaveAcct)
    Call SetCustomItem("efefopin", USWBasicInfo.EROPIN)
    Call SetCustomItem("efdate", USWBasicInfo.Date)
    Call SetCustomItem("eftpsspin", USWBasicInfo.TpSSPin)
    Call SetCustomItem("efspsspin", USWBasicInfo.SpSSPin)
    Call SetCustomItem("eftpbdate", USWBasicInfo.TPBDate)
    Call SetCustomItem("efspbdate", USWBasicInfo.SPBDate)
    Call SetCustomItem("CancelPiggyback", USWEFOptions.CancelPiggyBack)
    Call SetCustomItem("FedEF", USWEFQual.fedef)
    Call SetCustomItem("FedStateEF", USWEFQual.fedstateef)
    Call SetCustomItem("StateEFOnly", USWEFQual.stateef)
    Call SetCustomItem("FedExtension", USWEFOptions.Form4868)
    Call SetCustomItem("MDExtension", USWEFOptions.SOMDExt)
    Call SetCustomItem("NYExtension", USWEFOptions.SONYExt)
    Call SetCustomItem("NJExtension", USWEFOptions.SONJExt)
    Call SetCustomItem("AZExtension", USWEFOptions.SOAZExt)
    Call SetCustomItem("LAExtension", USWEFOptions.SOLAExt)
    Call SetCustomItem("DCExtension", USWEFOptions.SODCExt)
    Call SetCustomItem("VAExtension", USWEFOptions.SOVAExt)
    Call SetCustomItem("CTExtension", USWEFOptions.SOCTExt)
    Call SetCustomItem("ReceivedEFStatus", USWEFWksht.ReceivedEFStatus)
    Call SetCustomItem("FedEFStatus", USWEFWksht.FedEFStatus)
    Call SetCustomItem("FedAmendEFStatus", USWEFWksht.Text11)
    Call SetCustomItem("StateEFStatus", USWEFWksht.StateEFStatus)
    Call SetCustomItem("SpecialStateEFStatus", USWEFWksht.SpecialStateEFStatus)
    Call SetCustomItem("SentFedToIRS", USWEFWksht.SentFedToIRS)
    Call SetCustomItem("GotFedAckFromIRS", USWEFWksht.GotFedAckFromIRS)
    Call SetCustomItem("TimeoutGettingFedAckFromIRS", USWEFWksht.TimeoutGettingFedAckFromIRS)
    Call SetCustomItem("StopEFile", USWEFQual.StopFedEFile)
    Call SetCustomItem("StopPrint", USWEFQual.StopPrint)
    Call SetCustomItem("NoFormText", USWEFQual.NoFormText)
    Call SetCustomItem("ConsumerFedBankReturn", USWBankProd.BankReturn)
    Call SetCustomItem("ConsumerFedBankEFIN", USWBankProd.ConsumerEFIN)
    Call SetCustomItem("ConsumerStateRepublicBankReturn", USWBankProd.StateBankReturn)
    Call SetCustomItem("BankProdDebitCardReturn", USWBankProd.DebitCardReturn)
    Call SetCustomItem("BankProdCreditCard", USWBankProd.Edit55)
    Call SetCustomItem("BankProdDebitCardAndRPT", USWBankProd.DebitCardAndRPT)
    Call SetCustomItem("BankProdDebitCardSelected", USWBankProd.DebitCardSelected)
    Call SetCustomItem("StateBankProdDebitCardSelected", USWBankProd.SelectedStateDC)
    Call SetCustomItem("BankProdPayStateCC", USWBankProd.Edit21)
    Call SetCustomItem("BankProdFedRPT", USWBankProd.RPTReturn)
    Call SetCustomItem("BankProdStateRPT", USWBankProd.IsStateRPT)
    Call SetCustomItem("BankProdStateDebitCardReturn", USWBankProd.StateDebitCardReturn)
    Call SetCustomItem("BankProdStateDebitCardReturnRPT", USWBankProd.StateDebitCardAndRPT)    
    Call SetCustomItem("BankProdFedStateDC", USWBankProd.FedStDebitCardReturn)
    Call SetCustomItem("BankProdFedStateRPTDC", USWBankProd.FedStDebitCardAndRPT)
    Call SetCustomItem("BankProdType", USWBankProd.BankProdTypeTest)
    Call SetCustomItem("BankProdDirDepRTN", USWEFWkSht2.DirDepRTN)
    Call SetCustomItem("BankProdDirDepDAN", USWEFWkSht2.DirDepDan)
    Call SetCustomItem("OriginalAGI", USWEFWkSht2.EFOriginalAGI)
    Call SetCustomItem("OriginalTPPin", USWEFWkSht2.EFTpPIN)
    Call SetCustomItem("OriginalSPPin", USWEFWkSht2.EFSpPIN)
    Call SetCustomItem("IRSFreeFile", USWEFWkSht2.IRSFree)
    Call SetCustomItem("StateFreeFile", USWEFWkSht2.StateFreeFile)
    Call SetCustomItem("StateVITA", USWEFWkSht2.StateVITA)
    Call SetCustomItem("PiggyBackN", USWEFOptions.ClearFilingOption)
    Call SetCustomItem("FedBankEFIN", USWRALApp.FedBankEFIN)
    Call SetCustomItem("RepMOEFIN", USWRALApp.RepMOEFIN)

    'Acceptance/ Submission ID for 9325 
    Call SetCustomItem("DateAccepted", USF9325.Date1)
    Call SetCustomItem("SubmissionID", USF9325.SubID1)
    
    Call SetCustomItem("DateAcceptedExt", USF9325.Date3)
    Call SetCustomItem("SubmissionIDExt", USF9325.SubID2)
    
    Call SetCustomItem("FilingFeePaid", USWEFWksht.FilingFeePaid)
    Call SetCustomItem("PaidSSN", USWEFWksht.PaidSSN)
    Call SetCustomItem("TPState", USF1040.StateAbb)
    Call SetCustomItem("PrevState", USWResidency.PrevResState)
    Call SetCustomItem("StPlanRefOwe", USWResidency.StPlanRefOwe)
    Call SetCustomItem("ShowRef", USWResidency.ShowRef)
    
    Call SetCustomItem("EfileStatus", USWPrepMnNm.EfileStatus)
    Call SetCustomItem("RefundOweEFiled", USWPrepMnNm.RefundOweEFiled)
    Call SetCustomItem("FedEFStatus", USWPrepMnNm.FedEFStatus)
    Call SetCustomItem("State1EFStatus", USWPrepMnNm.State1EFStatus)
    Call SetCustomItem("State2EFStatus", USWPrepMnNm.State2EFStatus)
    Call SetCustomItem("State3EFStatus", USWPrepMnNm.State3EFStatus)
    Call SetCustomItem("AmendedEFStatus", USWPrepMnNm.AmendedEFStatus)
    Call SetCustomItem("ExtensionEFStatus", USWPrepMnNm.ExtensionEFStatus)
    Call SetCustomItem("SpecialEFStatus", USWPrepMnNm.SpecialEFStatus)
    Call SetCustomItem("EfileExtension", USWPrepMnNm.EfileExtension)
    Call SetCustomItem("ExtRefundOweEFiled", USWPrepMnNm.ExtRefundOweEFiled)
    Call SetCustomItem("State1Name", USWPrepMnNm.State1Name)
    Call SetCustomItem("State2Name", USWPrepMnNm.State2Name)
    Call SetCustomItem("State3Name", USWPrepMnNm.State3Name)
    Call SetCustomItem("ExtStateName", USWPrepMnNm.ExtStateName)
    Call SetCustomItem("SpecStateName", USWPrepMnNm.SpecStateName)
    Call SetCustomItem("AmendStateName", USWPrepMnNm.AmendStateName)
    Call SetCustomItem("EncryptedSSN", USWPrepMnNm.EncryptedSSN)
    Call SetCustomItem("DesigneePin", USWPrepMnNm.DesigneePIN)
    Call SetCustomItem("CAFNum", USWPrepMnNm.CAFNum)
    Call SetCustomItem("AddOnFee", USWPrepMnNm.AddonFee)
    Call SetCustomItem("ClientLocked", USWPrepMnNm.Extra3)
    
    Call SetCustomItem("TpPYPin", USWBasicInfo.TpPYPin)
    Call SetCustomItem("SpPYPin", USWBasicInfo.SpPYPin)
    Call SetCustomItem("TpPYAGI", USWBasicInfo.TpPinAGI)
    Call SetCustomItem("SpPYAGI", USWBasicInfo.SpPinAGI)
    Call SetCustomItem("TpPYPinLookup", USWEFWkSht2.PYTpPINLookup)
    Call SetCustomItem("SpPYPinLookup", USWEFWkSht2.PYSpPINLookup)
    
    'Fields below used to determine Returning User Path in EF step
    Call SetCustomItem("AcceptTPSSN", USWEFWkSht2.AcceptTPSSN)
    Call SetCustomItem("AcceptSPSSN", USWEFWkSht2.AcceptSPSSN)
    Call SetCustomItem("AcceptTPPIN", USWEFWkSht2.AcceptTPPIN)
    Call SetCustomItem("AcceptSPPIN", USWEFWkSht2.AcceptSPPIN)
    Call SetCustomItem("NoAcceptTPAGI", USWEFWkSht2.NoAcceptTPAGI)
    Call SetCustomItem("NoAcceptSPAGI", USWEFWkSht2.NoAcceptSPAGI)
    
    'States we don't support
    Call SetCustomItem("LivesInAK", USWRec.AK)
    Call SetCustomItem("LivesInTX", USWRec.TX)
    Call SetCustomItem("LivesInWA", USWRec.WA)
    Call SetCustomItem("LivesInFL", USWRec.FL)
    Call SetCustomItem("LivesInSD", USWRec.SD)
    Call SetCustomItem("LivesInTN", USWRec.TN)
    Call SetCustomItem("LivesInNV", USWRec.NV)
    Call SetCustomItem("LivesInWY", USWRec.WY)
    Call SetCustomItem("NoStateResidency", USWResidency.NotHaveStProg)
    
    'States we do support
    Call SetCustomItem("LivesInAL", USWResidency.ALSP)
    Call SetCustomItem("LivesInAR", USWResidency.ARSP)
    Call SetCustomItem("LivesInAZ", USWResidency.AZSP)
    Call SetCustomItem("LivesInCA", USWResidency.CASP)
    Call SetCustomItem("LivesInCO", USWResidency.COSP)
    Call SetCustomItem("LivesInCT", USWResidency.CTSP)
    Call SetCustomItem("LivesInDC", USWResidency.DCSP)
    Call SetCustomItem("LivesInDE", USWResidency.DESP)
    Call SetCustomItem("LivesInGA", USWResidency.GASP)
    Call SetCustomItem("LivesInHI", USWResidency.HISP)
    Call SetCustomItem("LivesInIA", USWResidency.IASP)
    Call SetCustomItem("LivesInID", USWResidency.IDSP)
    Call SetCustomItem("LivesInIL", USWResidency.ILSP)
    Call SetCustomItem("LivesInIN", USWResidency.INSP)
    Call SetCustomItem("LivesInKS", USWResidency.KSSP)
    Call SetCustomItem("LivesInKY", USWResidency.KYSP)
    Call SetCustomItem("LivesInLA", USWResidency.LASP)
    Call SetCustomItem("LivesInMA", USWResidency.MASP)
    Call SetCustomItem("LivesInMD", USWResidency.MDSP)
    Call SetCustomItem("LivesInME", USWResidency.MESP)
    Call SetCustomItem("LivesInMN", USWResidency.MNSP)
    Call SetCustomItem("LivesInMI", USWResidency.MISP)
    Call SetCustomItem("LivesInMO", USWResidency.MOSP)
    Call SetCustomItem("LivesInMS", USWResidency.MSSP)
    Call SetCustomItem("LivesInMT", USWResidency.MTSP)
    Call SetCustomItem("LivesInNC", USWResidency.NCSP)
    Call SetCustomItem("LivesInND", USWResidency.NDSP)
    Call SetCustomItem("LivesInNE", USWResidency.NESP)
    Call SetCustomItem("LivesInNH", USWResidency.NHSP)
    Call SetCustomItem("LivesInNJ", USWResidency.NJSP)
    Call SetCustomItem("LivesInNM", USWResidency.NMSP)
    Call SetCustomItem("LivesInNY", USWResidency.NYSP)
    Call SetCustomItem("LivesInOH", USWResidency.OHSP)
    Call SetCustomItem("LivesInOK", USWResidency.OKSP)
    Call SetCustomItem("LivesInOR", USWResidency.ORSP)
    Call SetCustomItem("LivesInPA", USWResidency.PASP)
    Call SetCustomItem("LivesInRI", USWResidency.RISP)
    Call SetCustomItem("LivesInSC", USWResidency.SCSP)
    Call SetCustomItem("LivesInUT", USWResidency.UTSP)
    Call SetCustomItem("LivesInVA", USWResidency.VASP)
    Call SetCustomItem("LivesInVT", USWResidency.VTSP)
    Call SetCustomItem("LivesInWV", USWResidency.WVSP)
    Call SetCustomItem("LivesInWI", USWResidency.WISP)
    
    'Interview topics
    Call SetCustomItem("FromStepCombo", USTopicList.FromStepCombo)
    Call SetCustomItem("ShowTopics", USTopicList.ShowTopics)
    Call SetCustomItem("ShutOffTopics", USTopicList.ShutOffTopics)
    Call SetCustomItem("StopTopics", USTopicList.StopTopics)
    Call SetCustomItem("HaveDependents", USTopicList.HaveDependents)
    Call SetCustomItem("HaveWages", USTopicList.HaveWages)
    Call SetCustomItem("HaveInt", USTopicList.HaveInt)
    Call SetCustomItem("HaveDiv", USTopicList.Have1099DIV)
    Call SetCustomItem("HaveInvest", USTopicList.HaveInvest)
    Call SetCustomItem("HaveBusInc", USTopicList.HaveBusInc)
    Call SetCustomItem("HaveRentInc", USTopicList.HaveRentInc)
    Call SetCustomItem("HavePensions", USTopicList.HavePensions)
    Call SetCustomItem("HaveOthInc", USTopicList.HaveOthInc)
    Call SetCustomItem("HaveHSA", USTopicList.HaveHSA)
    Call SetCustomItem("HaveIRA", USTopicList.HaveIRA)
    Call SetCustomItem("HaveEducation", USTopicList.HaveEducation)
    Call SetCustomItem("HaveOthAdj", USTopicList.HaveOthAdj)
    Call SetCustomItem("HaveTaxes", USTopicList.HaveTaxes)
    Call SetCustomItem("HaveContrib", USTopicList.HaveContrib)
    Call SetCustomItem("HaveOthDed", USTopicList.HaveOthDed)
    Call SetCustomItem("HaveChildCare", USTopicList.HaveChildCare)
    Call SetCustomItem("HaveOthCred", USTopicList.HaveOthCred)
    Call SetCustomItem("HaveAMT", USTopicList.HaveAMT)
    Call SetCustomItem("HaveUnderPay", USTopicList.HaveUnderPay)
    Call SetCustomItem("HaveSSB", USTopicList.HaveSSB)
    Call SetCustomItem("HaveStRefund", USTopicList.HaveStRefund)
    Call SetCustomItem("HaveChildTax", USTopicList.HaveChildTax)
    Call SetCustomItem("HaveKidTax", USTopicList.HaveKidTax)
    Call SetCustomItem("ShowWelcomeBack", USTopicList.ShowWelcomeBack)
    Call SetCustomItem("HaveSTCapGains", USSchD.HaveSTCapGains)
    Call SetCustomItem("HaveLTCapGains", USSchD.HaveLTCapGains)
    Call SetCustomItem("HaveMFJReturn", USWBasicInfo.JointCalc)

    'Preparers stuff
    Call SetCustomItem("NoPrep", USWBasicInfo.NoPrep)
    Call SetCustomItem("EFIN", USWPrepMnNm.EROEFIN)
    Call SetCustomItem("PractitionerPIN", USWPrepMnNm.EROPIN)
    Call SetCustomItem("PINType", USWPrepMnNm.PINType)
    Call SetCustomItem("PrepSign", USWBasicInfo.cmbPrepSign)
    Call SetCustomItem("PrepName", USWPrepMnNm.PPName)
    Call SetCustomItem("PrepFName", USWPrepMnNm.PFName)
    Call SetCustomItem("PrepLName", USWPrepMnNm.PLName)
    Call SetCustomItem("PrepMName", USWPrepMnNm.PInit)
    Call SetCustomItem("FirmName", USWPrepMnNm.PrepName)
    Call SetCustomItem("PrepAddress", USWPrepMnNm.PrepAdd)
    Call SetCustomItem("PrepAddress2", USWPrepMnNm.PrepAdd2)
    Call SetCustomItem("PrepCity", USWPrepMnNm.PrepCity)
    Call SetCustomItem("PrepState", USWPrepMnNm.PrepState)
    Call SetCustomItem("PrepZip", USWPrepMnNm.PrepZip)
    Call SetCustomItem("PrepForeignCountry", USWPrepMnNm.PrepForCtry)
    Call SetCustomItem("PrepForeignProvince", USWPrepMnNm.PrepForProvince)
    Call SetCustomItem("PrepForeignPostalCode", USWPrepMnNm.PrepForPC)
    Call SetCustomItem("PrepSSN", USWPrepMnNm.PrepSSN)
    Call SetCustomItem("PrepEIN", USWPrepMnNm.PrepEIN)
    Call SetCustomItem("PrepPTIN", USWPrepMnNm.PrepPTIN)
    Call SetCustomItem("PrepPhone", USWPrepMnNm.PrepPhone)
    Call SetCustomItem("PrepPhone2", USWPrepMnNm.PrepOthPhone)
    Call SetCustomItem("PrepSMS", USWBasicInfo.PrepSMS)
    Call SetCustomItem("PrepUseMobile", USWPrepMnNm.PrepUseMobileEF)
    Call SetCustomItem("PrepNoUseMobile", USWPrepMnNm.PrepNoUseMobileEF)    
    Call SetCustomItem("PrepForPhone", USWPrepMnNm.PrepForPhone)
    Call SetCustomItem("PrepFax", USWPrepMnNm.PrepFAX)
    Call SetCustomItem("PrepEmail", USWPrepMnNm.PrepEmail)
    Call SetCustomItem("PrepSE", USWPrepMnNm.SelfEm)
    Call SetCustomItem("PrepERO", USWPrepMnNm.EROck)
    Call SetCustomItem("IRSDiscussY", USWPrepMnNm.AuthY)
    Call SetCustomItem("IRSDiscussN", USWPrepMnNm.AuthN)
    Call SetCustomItem("Always1040", USWPrepMnNm.Always1040)
    Call SetCustomItem("File1040SR", USWPrepMnNm.File1040SR)
    Call SetCustomItem("AlwaysStateLongForm", USWPrepMnNm.AlwaysStateLongForm)
    Call SetCustomItem("Always2210", USWPrepMnNm.Always2210)
    Call SetCustomItem("AlwaysState2210", USWPrepMnNm.AlwaysState2210)
    Call SetCustomItem("W2AutoCalc", USWPrepMnNm.Fill3and5)
    Call SetCustomItem("PrintPrepName", USWPrepMnNm.AltSigMeth)
    Call SetCustomItem("SuppressSSN", USWPrepMnNm.SuppressSSN)
    Call SetCustomItem("PrintSchB", USWPrepMnNm.ForceSchB)
    Call SetCustomItem("Force8949", USWPrepMnNm.Force8949)
    Call SetCustomItem("W2AutoCalcBox16", USWPrepMnNm.Fill16)
    Call SetCustomItem("W2AutoCalcBox18", USWPrepMnNm.Fill18)
    Call SetCustomItem("NYAutoCalcUseTax", USWPrepMnNm.NYUseYes)
    Call SetCustomItem("PrintOffsetCoverSheet", USWPrepMnNm.PrLeft)
    Call SetCustomItem("CenterPrepCoverSheet", USWPrepMnNm.PrCentered)
    Call SetCustomItem("PreparerSpecialStateID", USWPrepMnNm.PrepStateID)
    Call SetCustomItem("PrintPrepDate", USWPrepMnNm.PrDate)
    Call SetCustomItem("PrintStateCBF", USWPrepBInv.StY)    
    Call SetCustomItem("UnlimitedPP", USWEFWksht.UnlimitedPP)
    Call SetCustomItem("PPAmount", USWEFWksht.PPAmount)
    Call SetCustomItem("PrepTADY", USWEFWksht.PrepTADY)
    Call SetCustomItem("NYExclusion", USWPrepMnNm.NYExclusion)
    Call SetCustomItem("MNPrepType", USWPrepMnNm.MNPrepType)
    

    'Client Manager and PDF Import - Programmers pull and populate from these fields
    Call SetCustomItem("ClientStatus", USWPrepMnNm.Status)
    Call SetCustomItem("ClientPayStatus", USWPrepMnNm.PayStatus)
    Call SetCustomItem("TaxpayerFName", USWBasicInfo.FirstName)
    Call SetCustomItem("TaxpayerMName", USWBasicInfo.TPInit)
    Call SetCustomItem("TaxpayerLName", USWBasicInfo.LastName)
    Call SetCustomItem("TaxpayerSSN", USWBasicInfo.SSN)
    Call SetCustomItem("TaxpayerDOB", USWBasicInfo.YouBirth)
    Call SetCustomItem("TaxpayerOccupation", USWBasicInfo.TPOccu)
    Call SetCustomItem("TaxpayerEmail", USWBasicInfo.email)
    Call SetCustomItem("TaxpayerStateIDType", USWBasicInfo.IDType)
    Call SetCustomItem("TaxpayerStateIDNumber", USWBasicInfo.IDNumber)
    Call SetCustomItem("TaxpayerStateIDIssuance", USWBasicInfo.Issue)
    Call SetCustomItem("TaxpayerStateIDIssueDate", USWBasicInfo.IDDate)
    Call SetCustomItem("TaxpayerStateIDExpirationDate", USWBasicInfo.IDExp)
    Call SetCustomItem("TaxpayerDisabled", USWBasicInfo.TPDisable)
    Call SetCustomItem("TaxpayerRetired", USWPrepMnNm.TaxpayerRetired)
    Call SetCustomItem("TaxpayerRetirementDate", USWBasicInfo.TPDateRetired)
    Call SetCustomItem("TaxpayerDeceased", USWPrepMnNm.TaxpayerDeceased)
    Call SetCustomItem("TaxpayerDOD", USWBasicInfo.YouDeath)
    Call SetCustomItem("TaxpayerFilingStatus", USWPrepMnNm.TaxpayerFilingStatus)
    Call SetCustomItem("TaxpayerFilingStatusSingle", USWBasicInfo.Single)
    Call SetCustomItem("TaxpayerFilingStatusJoint", USWBasicInfo.Joint)
    Call SetCustomItem("TaxpayerFilingStatusMFS", USWBasicInfo.MFS)
    Call SetCustomItem("TaxpayerFilingStatusHOH", USWBasicInfo.HOH)
    Call SetCustomItem("TaxpayerFilingStatusWidow", USWBasicInfo.Widow)
    Call SetCustomItem("TaxpayerWorkPhone", USWBasicInfo.WorkPhone)
    Call SetCustomItem("TaxpayerWorkExt", USWBasicInfo.WorkExt)
    Call SetCustomItem("TaxpayerCellPhone", USWBasicInfo.CellNumber)
    Call SetCustomItem("TaxpayerCellProvider", USWBasicInfo.SMSProvider)
    Call SetCustomItem("TaxpayerHomePhone", USWBasicInfo.HomePhone)
    Call SetCustomItem("TaxpayerFaxNumber", USWBasicInfo.FaxNumber)
    Call SetCustomItem("TaxpayerBestContactHome", USWBasicInfo.TPContactHome)
    Call SetCustomItem("TaxpayerBestContactWork", USWBasicInfo.TPContactWork)
    Call SetCustomItem("TaxpayerBestContactCell", USWBasicInfo.TPContactCell)
    
    Call SetCustomItem("SpouseFName", USWBasicInfo.SpouseFirst)
    Call SetCustomItem("SpouseMName", USWBasicInfo.SpInit)
    Call SetCustomItem("SpouseLName", USWBasicInfo.SpouseLast)
    Call SetCustomItem("SpouseSSN", USWBasicInfo.SpouseSSN)
    Call SetCustomItem("SpouseDOB", USWBasicInfo.SpouseBirth)
    Call SetCustomItem("SpouseOccupation", USWBasicInfo.SPOccu)
    Call SetCustomItem("SpouseEmail", USWBasicInfo.SPemail)
    Call SetCustomItem("SpouseStateIDType", USWBasicInfo.SPIDType)
    Call SetCustomItem("SpouseStateIDNumber", USWBasicInfo.SPIDNumber)
    Call SetCustomItem("SpouseStateIDIssuance", USWBasicInfo.SPIssue)
    Call SetCustomItem("SpouseStateIDIssueDate", USWBasicInfo.SPIDDate)
    Call SetCustomItem("SpouseStateIDExpirationDate", USWBasicInfo.SPIDExp)
    Call SetCustomItem("SpouseDisabled", USWBasicInfo.SPDisable)
    Call SetCustomItem("SpouseRetired", USWPrepMnNm.SpouseRetired)
    Call SetCustomItem("SpouseRetirementDate", USWBasicInfo.SPDateRetired)
    Call SetCustomItem("SpouseDeceased", USWPrepMnNm.SpouseDeceased)
    Call SetCustomItem("SpouseDOD", USWBasicInfo.SpDeath)
    Call SetCustomItem("SpouseWorkPhone", USWBasicInfo.SPWorkPhone)
    Call SetCustomItem("SpouseWorkExt", USWBasicInfo.SPWorkExt)
    Call SetCustomItem("SpouseCellPhone", USWBasicInfo.SPCellNumber)
    Call SetCustomItem("SpouseCellProvider", USWBasicInfo.SPSMSProvider)
    Call SetCustomItem("SpouseBestContactWork", USWBasicInfo.SPContactWork)
    Call SetCustomItem("SpouseBestContactCell", USWBasicInfo.SPContactCell)
    
    Call SetCustomItem("ClientStreet", USWBasicInfo.Street)
    Call SetCustomItem("ClientApt", USWBasicInfo.Apt)
    Call SetCustomItem("ClientCity", USWBasicInfo.City)
    Call SetCustomItem("ClientState", USWBasicInfo.StateAbb)
    Call SetCustomItem("ClientZipCode", USWBasicInfo.ZipCode)
    Call SetCustomItem("ClientChangeOfAddress", USWBasicInfo.AddChange)
    Call SetCustomItem("ClientNotes", USWPrepMnNm.Notes)
    Call SetCustomItem("ClientNames", USWBasicInfo.CombNames)
    Call SetCustomItem("NamesClient", USWBasicInfo.NamesComb)
    Call SetCustomItem("CoName", USWBasicInfo.CareofNameEntry)
    
    Call SetCustomItem("InvoiceNumber", USWPrepBInv.InvNum)
    Call SetCustomItem("InvoiceAmount", USWPrepBInv.AmtDAmt)

    Call SetCustomItem("ClientSubID", USWPrepMnNm.ActualSubID)
    Call SetCustomItem("ClientCountry", USWBasicInfo.ForeignCtry)
    Call SetCustomItem("ClientProvince", USWBasicInfo.ForeignProvince)
    Call SetCustomItem("ClientForeignZip", USWBasicInfo.ForeignPC)
    Call SetCustomItem("RTN", USF8888.Rtn1)
    Call SetCustomItem("AcctNum", USF8888.AcctNum1)
    Call SetCustomItem("Checking", USF8888.Checking1)
    Call SetCustomItem("Saving", USF8888.SaveAcct1)
    Call SetCustomItem("RTN2", USF8888.Rtn2)
    Call SetCustomItem("AcctNum2", USF8888.AcctNum2)
    Call SetCustomItem("Checking2", USF8888.Checking2)
    Call SetCustomItem("Saving2", USF8888.SaveAcct2)
    Call SetCustomItem("RTN3", USF8888.Rtn3)
    Call SetCustomItem("AcctNum3", USF8888.AcctNum3)
    Call SetCustomItem("Checking3", USF8888.Checking2)
    Call SetCustomItem("Saving3", USF8888.SaveAcct2)
    Call SetCustomItem("DirDeposit", USF8888.DirDep)
    
    Call SetCustomItem("FedEfiled", USFShared.FedEfiled)
    Call SetCustomItem("StateEfiled", USFShared.StateEfiled)
    
    Call SetCustomItem("FilingStatusSingle", USW1040Supp.Single)
    Call SetCustomItem("FilingStatusMFJ", USW1040Supp.Joint)
    Call SetCustomItem("FilingStatusMFS", USW1040Supp.MFS)
    Call SetCustomItem("FilingStatusHH", USW1040Supp.HOH)
    Call SetCustomItem("FilingStatusQW", USW1040Supp.Widow)
    
    Call SetCustomItem("MFSFName", USW1040Supp.MFSFirstPDF)
    Call SetCustomItem("MFSMName", USW1040Supp.MFSMIPDF)
    Call SetCustomItem("MFSLName", USW1040Supp.MFSLastPDF)
    Call SetCustomItem("HOHFName", USW1040Supp.HOHFirstPDF)
    Call SetCustomItem("HOHLName", USW1040Supp.HOHLastPDF)
    Call SetCustomItem("DependentFName", USWDependents.DepName)
    Call SetCustomItem("DependentLName", USWDependents.DepLast)
    Call SetCustomItem("DependentSSN", USWDependents.DepSSN)
    Call SetCustomItem("DependentRelationship", USWDependents.DepRel)
    Call SetCustomItem("PDFPriorYearAGI", USWEFWkSht2.PYAGIPDF)
    Call SetCustomItem("PriorYearPDFImport", USWSpouse.PYPDFImport)
    Call SetCustomItem("QuickStart", USWSpouse.QuickStart)
    Call SetCustomItem("SkipQuickStart", USWSpouse.QuickStartNo)
    
    Call SetCustomItem("AGI", USWRec.TotAGI)
    Call SetCustomItem("EIC", USF1040.Eic)
    Call SetCustomItem("ChildTax", USF8812.TotNonref)
    Call SetCustomItem("AddChildTax", USF8812.TotRef)
    Call SetCustomItem("Refund", USWBasicInfo.Refund)
    Call SetCustomItem("BalanceDue", USWBasicInfo.Owe)
    Call SetCustomItem("UnderpaymentPenalty", USWBasicInfo.Penalty)
    Call SetCustomItem("PriorYearInvoiceAmount", USWPrepBInv.PYAmtDAmt)
    Call SetCustomItem("AmountPaid", USWPrepBInv.AmtPdAmt)
    Call SetCustomItem("FilingStatusCount", USWPrepMnNm.FilingStatusCount)
    Call SetCustomItem("Print1040", USF1040.Print1040)
    Call SetCustomItem("Print1040SR", USF1040.Print1040SR)
    Call SetCustomItem("Print1040SS", USF1040SS.Print1040SS)
    Call SetCustomItem("Print1040NR", USF1040NR.Print1040)
    Call SetCustomItem("TPIDIsITIN", USF1040.TPIDIsITIN)
    
    Call SetCustomItem("PriorYearImport", USWSpouse.PYImport)
    Call SetCustomItem("ItemizedDeductions", USWRec.ItmDdn)
    Call SetCustomItem("HaveDepreciation", USWTaxpayer.PrintDispSum)
    Call SetCustomItem("CarryoverReport", USWPrepCarry.PrSumm)
    Call SetCustomItem("TaxpayerAge", USWRec.TPAge)
    Call SetCustomItem("SpouseAge", USWRec.SPAge)
    Call SetCustomItem("TaxBracket", USWPrepMnNm.TaxBracket)
    Call SetCustomItem("UsedCapitalGainsTaxRates", USSchD.UsedCGRates)
    Call SetCustomItem("SelfEmploymentClient", USWPrepMnNm.SEYes)
    Call SetCustomItem("TaxpayerSelfEmployment1", USSchSE.ANetEarn)
    Call SetCustomItem("TaxpayerSelfEmployment2", USSchSE.BNetEarn)
    Call SetCustomItem("SpouseSelfEmployment1", USSchSESpouse.ANetEarn)
    Call SetCustomItem("SpouseSelfEmployment2", USSchSESpouse.BNetEarn)
    Call SetCustomItem("EstimatedTaxApplied", USWEst.Applied)
    Call SetCustomItem("EstimatedTaxQtr1", USWPrepCLtr.Q1)
    Call SetCustomItem("EstimatedTaxQtr2", USWPrepCLtr.Q2)
    Call SetCustomItem("EstimatedTaxQtr3", USWPrepCLtr.Q3)
    Call SetCustomItem("EstimatedTaxQtr4", USWPrepCLtr.Q4)
    Call SetCustomItem("InvoiceDate", USWPrepBInv.DateDelivered)
    
    Call SetCustomItem("DonationAssistant", USWSchAPrint.CkDonation)
    Call SetCustomItem("FMVa", USF8283.FMV(0))
    Call SetCustomItem("FMVb", USF8283.FMV(1))
    Call SetCustomItem("FMVc", USF8283.FMV(2))
    Call SetCustomItem("FMVd", USF8283.FMV(3))
    Call SetCustomItem("FMVe", USF8283.FMV(4))
    
    'EF Manager stuff
    Call SetCustomItem("EFiledFinal", USWPrepMnNm.EFiledFinal)
    Call SetCustomItem("EFiledPreview", USWPrepMnNm.EFiledPreview)
    Call SetCustomItem("DateEFiled", USWPrepMnNm.DateEFiled)
    
    'Refund SnapShot Fields Used in High-Level Illustration By Engineers
    Call SetCustomItem("IncomeSnapShot", USWSnapShot.IncAmt)
    Call SetCustomItem("DedSnapShot", USWSnapShot.DedAmt)
    Call SetCustomItem("TaxIncSnapShot", USWSnapShot.TaxInc)
    Call SetCustomItem("TaxSnapShot", USWSnapShot.Tax)
    Call SetCustomItem("NonRefCredSnapShot", USWSnapShot.NonCredAmt)
    Call SetCustomItem("OthTaxSnapShot", USWSnapShot.OthTax)
    Call SetCustomItem("TotTaxSnapShot", USWSnapShot.TotTax)
    Call SetCustomItem("PaymentSnapShot", USWSnapShot.PayAmt)
    Call SetCustomItem("FedRefundSnapShot", USWSnapShot.RefundAmt)

    'For Preparer's EIN Information Transfer
    Call SetCustomItem("EIN_W2_WAGES", USDW2.Wages)
    Call SetCustomItem("EIN_W2_EIN", USDW2.EIN)
    Call SetCustomItem("EIN_W2_Name", USDW2.EmpName)
    Call SetCustomItem("EIN_W2_Address", USDW2.EmpAdd)
    Call SetCustomItem("EIN_W2_City", USDW2.EmpCity)
    Call SetCustomItem("EIN_W2_State", USDW2.EmpState)
    Call SetCustomItem("EIN_W2_Zip", USDW2.EmpZip)
    Call SetCustomItem("EIN_W2_ForeignCountry", USDW2.EmpForCtry)
    Call SetCustomItem("EIN_W2_ForeignProvince", USDW2.EmpForeignProvince)
    Call SetCustomItem("EIN_W2_ForeignPC", USDW2.EmpForeignPC)
    Call SetCustomItem("EIN_W2AS_WAGES", USDW2AS.Wages)
    Call SetCustomItem("EIN_W2AS_EIN", USDW2AS.EIN)
    Call SetCustomItem("EIN_W2AS_Name", USDW2AS.EmpName)
    Call SetCustomItem("EIN_W2AS_Address", USDW2AS.EmpAdd)
    Call SetCustomItem("EIN_W2AS_City", USDW2AS.EmpCity)
    Call SetCustomItem("EIN_W2AS_State", USDW2AS.EmpState)
    Call SetCustomItem("EIN_W2AS_Zip", USDW2AS.EmpZip)
    Call SetCustomItem("EIN_W2AS_ForeignCountry", USDW2AS.EmpForCtry)
    Call SetCustomItem("EIN_W2AS_ForeignProvince", USDW2AS.EmpForeignProvince)
    Call SetCustomItem("EIN_W2AS_ForeignPC", USDW2AS.EmpForeignPC)
    Call SetCustomItem("EIN_W2CM_WAGES", USDW2CM.Wages)
    Call SetCustomItem("EIN_W2CM_EIN", USDW2CM.EIN)
    Call SetCustomItem("EIN_W2CM_Name", USDW2CM.EmpName)
    Call SetCustomItem("EIN_W2CM_Address", USDW2CM.EmpAdd)
    Call SetCustomItem("EIN_W2CM_City", USDW2CM.EmpCity)
    Call SetCustomItem("EIN_W2CM_State", USDW2CM.EmpState)
    Call SetCustomItem("EIN_W2CM_Zip", USDW2CM.EmpZip)
    Call SetCustomItem("EIN_W2CM_ForeignCountry", USDW2CM.EmpForCtry)
    Call SetCustomItem("EIN_W2CM_ForeignProvince", USDW2CM.EmpForeignProvince)
    Call SetCustomItem("EIN_W2CM_ForeignPC", USDW2CM.EmpForeignPC)
    Call SetCustomItem("EIN_W2GU_WAGES", USDW2GU.Wages)
    Call SetCustomItem("EIN_W2GU_EIN", USDW2GU.EIN)
    Call SetCustomItem("EIN_W2GU_Name", USDW2GU.EmpName)
    Call SetCustomItem("EIN_W2GU_Address", USDW2GU.EmpAdd)
    Call SetCustomItem("EIN_W2GU_City", USDW2GU.EmpCity)
    Call SetCustomItem("EIN_W2GU_State", USDW2GU.EmpState)
    Call SetCustomItem("EIN_W2GU_Zip", USDW2GU.EmpZip)
    Call SetCustomItem("EIN_W2GU_ForeignCountry", USDW2GU.EmpForCtry)
    Call SetCustomItem("EIN_W2GU_ForeignProvince", USDW2GU.EmpForeignProvince)
    Call SetCustomItem("EIN_W2GU_ForeignPC", USDW2GU.EmpForeignPC)
    Call SetCustomItem("EIN_W2PR_WAGES", USDW2PR.Wages)
    Call SetCustomItem("EIN_W2PR_EIN", USDW2PR.EIN)
    Call SetCustomItem("EIN_W2PR_Name", USDW2PR.EmpName)
    Call SetCustomItem("EIN_W2PR_Address", USDW2PR.EmpAdd)
    Call SetCustomItem("EIN_W2PR_City", USDW2PR.EmpCity)
    Call SetCustomItem("EIN_W2PR_State", USDW2PR.EmpState)
    Call SetCustomItem("EIN_W2PR_Zip", USDW2PR.EmpZip)
    Call SetCustomItem("EIN_W2PR_ForeignCountry", USDW2PR.EmpForCtry)
    Call SetCustomItem("EIN_W2PR_ForeignProvince", USDW2PR.EmpForeignProvince)
    Call SetCustomItem("EIN_W2PR_ForeignPC", USDW2PR.EmpForeignPC)
    Call SetCustomItem("EIN_W2VI_WAGES", USDW2VI.Wages)
    Call SetCustomItem("EIN_W2VI_EIN", USDW2VI.EIN)
    Call SetCustomItem("EIN_W2VI_Name", USDW2VI.EmpName)
    Call SetCustomItem("EIN_W2VI_Address", USDW2VI.EmpAdd)
    Call SetCustomItem("EIN_W2VI_City", USDW2VI.EmpCity)
    Call SetCustomItem("EIN_W2VI_State", USDW2VI.EmpState)
    Call SetCustomItem("EIN_W2VI_Zip", USDW2VI.EmpZip)
    Call SetCustomItem("EIN_W2VI_ForeignCountry", USDW2VI.EmpForCtry)
    Call SetCustomItem("EIN_W2VI_ForeignProvince", USDW2VI.EmpForeignProvince)
    Call SetCustomItem("EIN_W2VI_ForeignPC", USDW2VI.EmpForeignPC)
    Call SetCustomItem("EIN_1099K_EIN", USD1099K.PayerEin)
    Call SetCustomItem("EIN_1099K_Name", USD1099K.PayerName)
    Call SetCustomItem("EIN_1099K_Address", USD1099K.PayerAdd)
    Call SetCustomItem("EIN_1099K_City", USD1099K.PayCity)
    Call SetCustomItem("EIN_1099K_State", USD1099K.PayState)
    Call SetCustomItem("EIN_1099K_Zip", USD1099K.PayZip)
    Call SetCustomItem("EIN_1099K_ForeignCountry", USD1099K.EmpForCtry)
    Call SetCustomItem("EIN_1099K_ForeignProvince", USD1099K.EmpForeignProvince)
    Call SetCustomItem("EIN_1099K_ForeignPC", USD1099K.EmpForeignPC)
    Call SetCustomItem("EIN_W2G_EIN", USDW2G.EIN)
    Call SetCustomItem("EIN_W2G_Name", USDW2G.EmpName)
    Call SetCustomItem("EIN_W2G_Address", USDW2G.EmpAdd)
    Call SetCustomItem("EIN_W2G_City", USDW2G.EmpCity)
    Call SetCustomItem("EIN_W2G_State", USDW2G.EmpState)
    Call SetCustomItem("EIN_W2G_Zip", USDW2G.EmpZip)
    Call SetCustomItem("EIN_W2G_ForeignCountry", USDW2G.EmpForCtry)
    Call SetCustomItem("EIN_W2G_ForeignProvince", USDW2G.EmpForeignProvince)
    Call SetCustomItem("EIN_W2G_ForeignPC", USDW2G.EmpForeignPC)
    Call SetCustomItem("EIN_1099R_EIN", USD1099R.IDNum)
    Call SetCustomItem("EIN_1099R_Name", USD1099R.PayerName)
    Call SetCustomItem("EIN_1099R_Address", USD1099R.PayerAdd1)
    Call SetCustomItem("EIN_1099R_City", USD1099R.PayerCity)
    Call SetCustomItem("EIN_1099R_State", USD1099R.PayerState)
    Call SetCustomItem("EIN_1099R_Zip", USD1099R.PayerZip)
    Call SetCustomItem("EIN_1099R_ForeignCountry", USD1099R.PayerForCtry)
    Call SetCustomItem("EIN_1099R_ForeignProvince", USD1099R.PayerForeignProvince)
    Call SetCustomItem("EIN_1099R_ForeignPC", USD1099R.PayerForeignPC)
    Call SetCustomItem("EIN_1099G_EIN", USWUnempl.TPPayerID)
    Call SetCustomItem("EIN_1099G_Name", USWUnempl.TPPayer)
    Call SetCustomItem("EIN_1099G_Address", USWUnempl.TPPayerAdd)
    Call SetCustomItem("EIN_1099G_City", USWUnempl.TPPayerCity)
    Call SetCustomItem("EIN_1099G_State", USWUnempl.TPPayerSt)
    Call SetCustomItem("EIN_1099G_Zip", USWUnempl.TPPayerZip)
    Call SetCustomItem("EIN_1099G_ForeignCountry", USWUnempl.PayForCtry)
    Call SetCustomItem("EIN_1099G_ForeignProvince", USWUnempl.PayForeignProvince)
    Call SetCustomItem("EIN_1099G_ForeignPC", USWUnempl.PayForeignPC)
    Call SetCustomItem("EIN_1098_EIN", USD1098.LenderFEIN)
    Call SetCustomItem("EIN_1098_Name", USD1098.LenderName)
    Call SetCustomItem("EIN_1098_Address", USD1098.LenderAdd)
    Call SetCustomItem("EIN_1098_City", USD1098.LenderCity)
    Call SetCustomItem("EIN_1098_State", USD1098.LenderSt)
    Call SetCustomItem("EIN_1098_Zip", USD1098.LenderZip)
    Call SetCustomItem("EIN_1098_ForeignCountry", USD1098.LenderForCtry)
    Call SetCustomItem("EIN_1098_ForeignProvince", USD1098.LenderForeignProvince)
    Call SetCustomItem("EIN_1098_ForeignPC", USD1098.LenderForeignPC)
    Call SetCustomItem("EIN_1099INT_EIN", USD1099INT.PayerEin)
    Call SetCustomItem("EIN_1099INT_Name", USD1099INT.PayerName)
    Call SetCustomItem("EIN_1099INT_Address", USD1099INT.PayerAdd)
    Call SetCustomItem("EIN_1099INT_City", USD1099INT.PayCity)
    Call SetCustomItem("EIN_1099INT_State", USD1099INT.PayerState)
    Call SetCustomItem("EIN_1099INT_Zip", USD1099INT.PayerZip)
    Call SetCustomItem("EIN_1099INT_ForeignCountry", USD1099INT.PayerForeignCtry)
    Call SetCustomItem("EIN_1099INT_ForeignProvince", USD1099INT.ForeignProvince)
    Call SetCustomItem("EIN_1099INT_ForeignPC", USD1099INT.ForeignPC)
    Call SetCustomItem("EIN_1099DIV_EIN", USD1099DIV.PayerEin)
    Call SetCustomItem("EIN_1099DIV_Name", USD1099DIV.PayerName)
    Call SetCustomItem("EIN_1099DIV_Address", USD1099DIV.PayerAdd)
    Call SetCustomItem("EIN_1099DIV_City", USD1099DIV.PayCity)
    Call SetCustomItem("EIN_1099DIV_State", USD1099DIV.PayerState)
    Call SetCustomItem("EIN_1099DIV_Zip", USD1099DIV.PayerZip)
    Call SetCustomItem("EIN_1099DIV_ForeignCountry", USD1099DIV.PayerForeignCtry)
    Call SetCustomItem("EIN_1099DIV_ForeignProvince", USD1099DIV.ForeignProvince)
    Call SetCustomItem("EIN_1099DIV_ForeignPC", USD1099DIV.ForeignPC)
    Call SetCustomItem("EIN_1099Q_EIN", USD1099Q.IDNum)
    Call SetCustomItem("EIN_1099Q_Name", USD1099Q.PayerName)
    Call SetCustomItem("EIN_1099Q_Address", USD1099Q.PayerAdd1)
    Call SetCustomItem("EIN_1099Q_City", USD1099Q.PayerCity)
    Call SetCustomItem("EIN_1099Q_State", USD1099Q.PayerState)
    Call SetCustomItem("EIN_1099Q_Zip", USD1099Q.PayerZip)
    Call SetCustomItem("EIN_1099SA_EIN", USD1099SA.IDNum)
    Call SetCustomItem("EIN_1099SA_Name", USD1099SA.PayerName)
    Call SetCustomItem("EIN_1099SA_Address", USD1099SA.PayerAdd1)
    Call SetCustomItem("EIN_1099SA_City", USD1099SA.PayerCity)
    Call SetCustomItem("EIN_1099SA_State", USD1099SA.PayerState)
    Call SetCustomItem("EIN_1099SA_Zip", USD1099SA.PayerZip)
    Call SetCustomItem("EIN_1099OID_EIN", USD1099OID.PayerEin)
    Call SetCustomItem("EIN_1099OID_Name", USD1099OID.PayerName)
    Call SetCustomItem("EIN_1099OID_Address", USD1099OID.PayerAdd)
    Call SetCustomItem("EIN_1099OID_City", USD1099OID.PayCity)
    Call SetCustomItem("EIN_1099OID_State", USD1099OID.PayerState)
    Call SetCustomItem("EIN_1099OID_Zip", USD1099OID.PayerZip)
    Call SetCustomItem("EIN_1099OID_ForeignCountry", USD1099OID.PayerForeignCtry)
    Call SetCustomItem("EIN_1099OID_ForeignProvince", USD1099OID.ForeignProvince)
    Call SetCustomItem("EIN_1099OID_ForeignPC", USD1099OID.ForeignPC)
    Call SetCustomItem("EIN_1099MISC_EIN", USD1099MISC.PayerEin)
    Call SetCustomItem("EIN_1099MISC_Name", USD1099MISC.PayerName)
    Call SetCustomItem("EIN_1099MISC_Address", USD1099MISC.PayerAdd)
    Call SetCustomItem("EIN_1099MISC_City", USD1099MISC.PayCity)
    Call SetCustomItem("EIN_1099MISC_State", USD1099MISC.PayState)
    Call SetCustomItem("EIN_1099MISC_Zip", USD1099MISC.PayZip)
    Call SetCustomItem("EIN_1099MISC_ForeignCountry", USD1099MISC.EmpForCtry)
    Call SetCustomItem("EIN_1099MISC_ForeignProvince", USD1099MISC.EmpForeignProvince)
    Call SetCustomItem("EIN_1099MISC_ForeignPC", USD1099MISC.EmpForeignPC)
    Call SetCustomItem("EIN_1099NEC_EIN", USD1099NEC.PayerEin)
    Call SetCustomItem("EIN_1099NEC_Name", USD1099NEC.PayerName)
    Call SetCustomItem("EIN_1099NEC_Address", USD1099NEC.payerAdd)
    Call SetCustomItem("EIN_1099NEC_City", USD1099NEC.PayCity)
    Call SetCustomItem("EIN_1099NEC_State", USD1099NEC.PayState)
    Call SetCustomItem("EIN_1099NEC_Zip", USD1099NEC.PayZip)
    Call SetCustomItem("EIN_1099NEC_ForeignCountry", USD1099NEC.EmpForCtry)
    Call SetCustomItem("EIN_1099NEC_ForeignProvince", USD1099NEC.EmpForeignProvince)
    Call SetCustomItem("EIN_1099NEC_ForeignPC", USD1099NEC.EmpForeignPC)
    Call SetCustomItem("EIN_1099C_EIN", USD1099C.CredID)
    Call SetCustomItem("EIN_1099C_Name", USD1099C.CredName)
    Call SetCustomItem("EIN_1099C_Address", USD1099C.CredAdd)
    Call SetCustomItem("EIN_1099C_CityStateZip", USD1099C.CredCity)
    Call SetCustomItem("EIN_1098T_EIN", USD1098T.PayerEin)
    Call SetCustomItem("EIN_1098T_Name", USD1098T.PayerName)
    Call SetCustomItem("EIN_1098T_Address", USD1098T.PayerAdd)
    Call SetCustomItem("EIN_1098T_City", USD1098T.PayerCity)
    Call SetCustomItem("EIN_1098T_State", USD1098T.PayerState)
    Call SetCustomItem("EIN_1098T_Zip", USD1098T.PayerZip)
    Call SetCustomItem("EIN_1098T_ForeignCountry", USD1098T.PayerForCtry)
    Call SetCustomItem("EIN_1098T_ForeignProvince", USD1098T.PayerForeignProvince)
    Call SetCustomItem("EIN_1098T_ForeignPC", USD1098T.PayerForeignPC)
    Call SetCustomItem("EIN_2439_EIN", USD2439.PayerEin)
    Call SetCustomItem("EIN_2439_Name", USD2439.PayerName)
    Call SetCustomItem("EIN_2439_Address", USD2439.PayerAdd)
    Call SetCustomItem("EIN_2439_City", USD2439.PayerCity)
    Call SetCustomItem("EIN_2439_State", USD2439.PayerState)
    Call SetCustomItem("EIN_2439_Zip", USD2439.PayerZip)
    Call SetCustomItem("EIN_2439_ForeignCountry", USD2439.PayerForCtry)
    Call SetCustomItem("EIN_2439_ForeignProvince", USD2439.PayerForeignProvince)
    Call SetCustomItem("EIN_2439_ForeignPC", USD2439.PayerForeignPC)
    Call SetCustomItem("EIN_PARTK1_EIN", USDPartK1.EIN)
    Call SetCustomItem("EIN_PARTK1_Name", USDPartK1.CoName)
    Call SetCustomItem("EIN_PARTK1_Address", USDPartK1.CoStreet)
    Call SetCustomItem("EIN_PARTK1_City", USDPartK1.CoCity2)
    Call SetCustomItem("EIN_PARTK1_State", USDPartK1.COSt)
    Call SetCustomItem("EIN_PARTK1_Zip", USDPartK1.CoZip)
    Call SetCustomItem("EIN_SCORPK1_EIN", USDSCorpK1.EIN)
    Call SetCustomItem("EIN_SCORPK1_Name", USDSCorpK1.CoName)
    Call SetCustomItem("EIN_SCORPK1_Address", USDSCorpK1.CoStreet)
    Call SetCustomItem("EIN_SCORPK1_City", USDSCorpK1.CoCity2)
    Call SetCustomItem("EIN_SCORPK1_State", USDSCorpK1.COSt)
    Call SetCustomItem("EIN_SCORPK1_Zip", USDSCorpK1.CoZip)
    Call SetCustomItem("EIN_ESTK1_EIN", USDEstK1.EIN)
    Call SetCustomItem("EIN_ESTK1_Name", USDEstK1.TrustName)
    Call SetCustomItem("EIN_ESTK1_CoName", USDEstK1.CoName)
    Call SetCustomItem("EIN_ESTK1_Address", USDEstK1.CoStreet)
    Call SetCustomItem("EIN_ESTK1_City", USDEstK1.CoCity2)
    Call SetCustomItem("EIN_ESTK1_State", USDEstK1.COSt)
    Call SetCustomItem("EIN_ESTK1_Zip", USDEstK1.CoZip)
    Call SetCustomItem("EIN_STUDENT_EIN0", USDStudent.SchoolID(0))
    Call SetCustomItem("EIN_STUDENT_Name0", USDStudent.SchoolName(0))
    Call SetCustomItem("EIN_STUDENT_Address0", USDStudent.SchoolAdd(0))
    Call SetCustomItem("EIN_STUDENT_City0", USDStudent.SchoolCity(0))
    Call SetCustomItem("EIN_STUDENT_State0", USDStudent.SchoolState(0))
    Call SetCustomItem("EIN_STUDENT_Zip0", USDStudent.SchoolZip(0))
    Call SetCustomItem("EIN_STUDENT_ForeignCountry0", USDStudent.SchoolCountry(0))
    Call SetCustomItem("EIN_STUDENT_ForeignProvince0", USDStudent.SchoolProv(0))
    Call SetCustomItem("EIN_STUDENT_ForeignPC0", USDStudent.SchoolPC(0))
    Call SetCustomItem("EIN_STUDENT_EIN1", USDStudent.SchoolID(1))
    Call SetCustomItem("EIN_STUDENT_Name1", USDStudent.SchoolName(1))
    Call SetCustomItem("EIN_STUDENT_Address1", USDStudent.SchoolAdd(1))
    Call SetCustomItem("EIN_STUDENT_City1", USDStudent.SchoolCity(1))
    Call SetCustomItem("EIN_STUDENT_State1", USDStudent.SchoolState(1))
    Call SetCustomItem("EIN_STUDENT_Zip1", USDStudent.SchoolZip(1))
    Call SetCustomItem("EIN_STUDENT_ForeignCountry1", USDStudent.SchoolCountry(1))
    Call SetCustomItem("EIN_STUDENT_ForeignProvince1", USDStudent.SchoolProv(1))
    Call SetCustomItem("EIN_STUDENT_ForeignPC1", USDStudent.SchoolPC(1))
    Call SetCustomItem("EIN_STUDENT_EIN2", USDStudent.SchoolID(2))
    Call SetCustomItem("EIN_STUDENT_Name2", USDStudent.SchoolName(2))
    Call SetCustomItem("EIN_STUDENT_Address2", USDStudent.SchoolAdd(2))
    Call SetCustomItem("EIN_STUDENT_City2", USDStudent.SchoolCity(2))
    Call SetCustomItem("EIN_STUDENT_State2", USDStudent.SchoolState(2))
    Call SetCustomItem("EIN_STUDENT_Zip2", USDStudent.SchoolZip(2))
    Call SetCustomItem("EIN_STUDENT_ForeignCountry2", USDStudent.SchoolCountry(2))
    Call SetCustomItem("EIN_STUDENT_ForeignProvince2", USDStudent.SchoolProv(2))
    Call SetCustomItem("EIN_STUDENT_ForeignPC2", USDStudent.SchoolPC(2))
    Call SetCustomItem("EIN_STUDENT_EIN3", USDStudent.SchoolID(3))
    Call SetCustomItem("EIN_STUDENT_Name3", USDStudent.SchoolName(3))
    Call SetCustomItem("EIN_STUDENT_Address3", USDStudent.SchoolAdd(3))
    Call SetCustomItem("EIN_STUDENT_City3", USDStudent.SchoolCity(3))
    Call SetCustomItem("EIN_STUDENT_State3", USDStudent.SchoolState(3))
    Call SetCustomItem("EIN_STUDENT_Zip3", USDStudent.SchoolZip(3))
    Call SetCustomItem("EIN_STUDENT_ForeignCountry3", USDStudent.SchoolCountry(3))
    Call SetCustomItem("EIN_STUDENT_ForeignProvince3", USDStudent.SchoolProv(3))
    Call SetCustomItem("EIN_STUDENT_ForeignPC3", USDStudent.SchoolPC(3))
    
    'Bank Fields for Pay for IRA Out of Refund
    Call SetCustomItem("IRABankName", USWBankAcct.BankName)
    Call SetCustomItem("IRARTN", USWBankAcct.RTN)
    Call SetCustomItem("IRAAcctNum", USWBankAcct.AcctNum)
    Call SetCustomItem("IRAChecking", USWBankAcct.Checking)
    Call SetCustomItem("IRAVerified", USWBankAcct.Verified)
    
    'Bank Fields for 3rd Party Import
    Call SetCustomItem("BankWSSource", USWBankAcct.Source)
    Call SetCustomItem("BankWSDoNotDelete", USWBankAcct.DoNotDelete)
   
    'Bank Product Stuff
    Call SetCustomItem("RAL", USWBasicInfo.BankProd)
    Call SetCustomItem("PrepBankProd", USWEFWksht.PPBank)
    Call SetCustomItem("RepublicOfferEA", USWRALApp.RepublicOfferEA)
    Call SetCustomItem("RepublicEAAmount", USWRALApp.PrintEAAmount)
    Call SetCustomItem("TPGOfferFCA", USWRALApp.TPGOfferEA)
    Call SetCustomItem("IsRepublic", USWBankProd.IsRepublic)
    Call SetCustomItem("IsRepublicPrep", USWRALApp.IsRepublicPrep)
    Call SetCustomItem("IsTPGPrep", USWRALApp.IsTPGPrep)
    Call SetCustomItem("RepublicPrep", USWRALApp.Republic)
    Call SetCustomItem("TPGPrep", USWRALApp.TPG)
    Call SetCustomItem("Republic_DebitCard", USWRALApp.ValidRepDC)
    Call SetCustomItem("Republic_ERC", USWRALApp.ValidRepERC)
    Call SetCustomItem("Republic_RET", USWRALApp.ValidRepDD)
    Call SetCustomItem("Republic_EasyAdv", USWRALApp.RepTakeEA)
    Call SetCustomItem("TPG_DebitCard", USWRALApp.ValidTPGDC)
    Call SetCustomItem("TPG_ERC", USWRALApp.ValidTPGERC)
    Call SetCustomItem("TPG_RET", USWRALApp.ValidTPGDD)
    Call SetCustomItem("TPG_FCA", USWRALApp.TPGTakeEA)
    Call SetCustomItem("StandAloneBankState", USWBankProd.StandAloneBankState)
    Call SetCustomItem("BankSkipCreditCard", USWBankProd.BankSkipCreditCard)
    Call SetCustomItem("AskStateRPT", USWBankProd.AskStateRPT)
    Call SetCustomItem("IsStateRPT", USWBankProd.IsStateRPT)
    Call SetCustomItem("DebitCard", USWBasicInfo.DebitCard)
    Call SetCustomItem("ConsumerNonCCPayment", USWBankProd.NoCreditCard)
    Call SetCustomItem("IncorrectTPSSN", USWRALApp.IncorrectSSN)
    Call SetCustomItem("IncorrectSPSSN", USWRALApp.IncorrectSpSSN)
    Call SetCustomItem("TPG_FCADebitCard", USWRALApp.ValidTPGDC)
    
    'TPG E-File Fields for Macros
    Call SetCustomItem("TPGAckDate", USWRALApp.TPGACKDate)
    Call SetCustomItem("TPGFCAAgreeDate", USWRALApp.TPGFCAAgreeDate)
    Call SetCustomItem("TPGFCAAppStart", USWRALApp.TPGFCAAppStart)
    Call SetCustomItem("TPGTaxReturnTs", USWRALApp.TPGTaxReturnTs)
    Call SetCustomItem("TPGTransmitterGUID", USWRALApp.TPGTransmitterGUID)
    Call SetCustomItem("TPGUniqueID", USWRALApp.TPGIN)
    Call SetCustomItem("TPGUniqueIDKey", USWRALApp.TPGUniqueIDKey)

    Call SetCustomItem("FedReturnPrice", USWBankProd.FedReturnPrice)
    Call SetCustomItem("StReturnPrice", USWBankProd.StReturnPrice)
    Call SetCustomItem("AuditPrice", USWBankProd.Text28)
    Call SetCustomItem("AssistedLBLPrice", USWBankProd.AssistedLBLPrice)
    Call SetCustomItem("AssistedTEHPrice", USWBankProd.AssistedTEHPrice)
    Call SetCustomItem("PYImportPrice", USWBankProd.PYImportPrice)
    Call SetCustomItem("SalesTax", USWBankProd.SalesTax)
    Call SetCustomItem("EFCPrice", USWBankProd.EFCWImp)
    Call SetCustomItem("TACPrice", USWBankProd.Edit7)
    Call SetCustomItem("PPPackageConsumer", USWEFWksht.PPBankConsumer)
    
    'Bank PreAck Stuff
    Call SetCustomItem("Republic_EasyAdvancePreAckElig", USWRALApp.PreAckElig)
    Call SetCustomItem("Republic_EasyAdvancePreAckDeclined", USWRALApp.IsPreAckDeclined)
    Call SetCustomItem("Republic_PreAckLockBankApp", USWRALApp.BankAppLocked)
    Call SetCustomItem("Republic_EasyAdvancePreAck", USWRALApp.PreAck)
    Call SetCustomItem("TPG_FastCashAdvancePreAckElig", USWRALApp.TPGPreAckElig)
    Call SetCustomItem("TPG_FastCashAdvancePreAckDeclined", USWRALApp.TPGIsPreAckDeclined)
    Call SetCustomItem("TPG_PreAckLockBankApp", USWRALApp.TPGBankAppLocked)
    Call SetCustomItem("TPG_FastCashAdvancePreAck", USWRALApp.TPGPreAck)
    Call SetCustomItem("TPG_AcceptCd", USWRALApp.TPGAcceptCd)
    
    'ClearedInvoiceFees needed to track free returns that add TAD, choose BP and then remove TAD on invoice
    Call SetCustomItem("ClearedInvoiceFees", USWBankProd.ClearedInvoiceFees)
    'ERO state needed for reporting purposes with transmitter fee charge
    Call SetCustomItem("EROState", USWBasicInfo.StateAbbERO)
    
    'Republic First Print/Last Print
    Call SetCustomItem("RepFPrepFee", USWRALApp.RepFPrepFee)
    Call SetCustomItem("RepLPrepFee", USWRALApp.RepLPrepFee)
    Call SetCustomItem("RepFTADFee", USWRALApp.RepFTADFee)
    Call SetCustomItem("RepLTADFee", USWRALApp.RepLTADFee)
    Call SetCustomItem("RepFEAFee", USWRALApp.RepFEAFee)
    Call SetCustomItem("RepLEAFee", USWRALApp.RepLEAFee)
    Call SetCustomItem("RepFSubType", USWRALApp.RepFSubType)
    Call SetCustomItem("RepLSubType", USWRALApp.RepLSubType)
    Call SetCustomItem("RepFTimeDate", USWRALApp.RepFTimeDate)
    Call SetCustomItem("RepLTimeDate", USWRALApp.RepLTimeDate)
    
    'TPG First Print/Last Print
    Call SetCustomItem("TPGFPrepFee", USWRALApp.TPGFPrepFee)
    Call SetCustomItem("TPGLPrepFee", USWRALApp.TPGLPrepFee)
    Call SetCustomItem("TPGFTADFee", USWRALApp.TPGFTADFee)
    Call SetCustomItem("TPGLTADFee", USWRALApp.TPGLTADFee)
    'Call SetCustomItem("TPGFEAFee", USWRALApp.TPGFEAFee)
    'Call SetCustomItem("TPGLEAFee", USWRALApp.TPGLEAFee)
    'Call SetCustomItem("TPGFSubType", USWRALApp.TPGFSubType)
    'Call SetCustomItem("TPGLSubType", USWRALApp.TPGLSubType)
    Call SetCustomItem("TPGFTimeDate", USWRALApp.TPGFTimeDate)
    Call SetCustomItem("TPGLTimeDate", USWRALApp.TPGLTimeDate)
    
    'CAPTURED BANK APP FIELDS - REPUBLIC PREP - PASSED IN BY ENGINEERS
    Call SetCustomItem("SavedRepBankFee", USWRALApp.SavedRepBankFee)
    Call SetCustomItem("SavedRepSubsequent", USWRALApp.SavedRepSubsequent)
    Call SetCustomItem("SavedRepTransFee", USWRALApp.SavedRepTransFee)
    Call SetCustomItem("SavedRepServBFee", USWRALApp.SavedRepServBFee)
    Call SetCustomItem("SavedRepTotRTFeesND", USWRALApp.SavedRepTotRTFeesND)
    Call SetCustomItem("SavedRepPrepFee", USWRALApp.SavedRepPrepFee)
    Call SetCustomItem("SavedEFRepTADFee", USWRALApp.SavedEFRepTADFee)
    Call SetCustomItem("SavedRepTotPrFeesND", USWRALApp.SavedRepTotPrFeesND)
    Call SetCustomItem("SavedRepTotPrFeesD", USWRALApp.SavedRepTotPrFeesD)
    Call SetCustomItem("SavedRepTotRTFees", USWRALApp.SavedRepTotRTFees)
    Call SetCustomItem("SavedRepTotFees", USWRALApp.SavedRepTotFees)
    Call SetCustomItem("SavedPrintEAAmount", USWRALApp.SavedPrintEAAmount)
    Call SetCustomItem("SavedEAMinRefund", USWRALApp.SavedEAMinRefund)
    Call SetCustomItem("SavedRepRTFeesPaidTo", USWRALApp.SavedRepRTFeesPaidTo)
    Call SetCustomItem("SavedRepTADFeePaidTo", USWRALApp.SavedRepTADFeePaidTo)
    Call SetCustomItem("SavedPrintRepFinCharge", USWRALApp.SavedPrintRepFinCharge)
    Call SetCustomItem("SavedPrintEAAPR", USWRALApp.SavedPrintEAAPR)

    'CAPTURED BANK APP FIELDS - REPUBLIC CONSUMER - PASSED IN BY ENGINEERS
    Call SetCustomItem("SavedFedReturnPrice", USWBankProd.SavedFedReturnPrice)
    Call SetCustomItem("SavedStateReturnPrice", USWBankProd.SavedStateReturnPrice)
    Call SetCustomItem("SavedAuditPrice", USWBankProd.SavedAuditPrice)
    Call SetCustomItem("SavedAssistedPriceLBL", USWBankProd.SavedAssistedPriceLBL)
    Call SetCustomItem("SavedAssistedPriceTEH", USWBankProd.SavedAssistedPriceTEH)
    Call SetCustomItem("SavedSalesTax", USWBankProd.SavedSalesTax)
    Call SetCustomItem("SavedRepConsumerFee", USWBankProd.SavedRepConsumerFee)
    Call SetCustomItem("SavedStateRTFee", USWBankProd.SavedStateRTFee)
    Call SetCustomItem("SavedEFCPrice", USWBankProd.SavedEFCPrice)
    Call SetCustomItem("SavedTACPrice", USWBankProd.Edit4)
    
    'CAPTURED BANK APP FIELDS - TPG PREP - PASSED IN BY ENGINEERS
    Call SetCustomItem("SavedTPGBankFee", USWRALApp.SavedTPGBankFee)
    Call SetCustomItem("SavedTPGSubsequentFee", USWRALApp.SavedTPGSubsequent)
    Call SetCustomItem("SavedTPGPrepFee", USWRALApp.SavedTPGPrepFee)
    Call SetCustomItem("SavedTPGTransFee", USWRALApp.SavedTPGTransFee)
    Call SetCustomItem("SavedEFTPGTADFee", USWRALApp.SavedEFTPGTADFee)
    Call SetCustomItem("SavedTPGTotFees", USWRALApp.SavedTPGTotFees)
    Call SetCustomItem("SavedTPGStRT", USWRALApp.Edit19)
    
    'Online tax stuff
    Call SetCustomItem("OLState", USFInterviewB.OLSTSelect)
    Call SetCustomItem("Step6Comp", USFInterviewA.Step6Comp)
    Call SetCustomItem("1040NRReturn", USWResidency.F1040NR)
    Call SetCustomItem("CASLConsent", USF1040.CASLConsent)
    
    'Marketing Pitches
    Call SetCustomItem("JtvsSepPitch", USFInterviewB.JtvsSepPitch)
    Call SetCustomItem("FAFSAPitch", USFInterviewB.FAFSAPitch)
    Call SetCustomItem("CapGainPitch", USFInterviewB.CapGainPitch)
    Call SetCustomItem("DeprPitch", USFInterviewB.DeprPitch)
    Call SetCustomItem("Step4Pitch", USFInterviewB.Step4Pitch)
    Call SetCustomItem("MilitaryOffer", USFInterviewB.MilitaryOffer)
    Call SetCustomItem("AuditType", USFShared.AuditType)
  
    'FFA Opt-In
    Call SetCustomItem("QnAOptIn", USWBasicInfo.FFAOptIn)
    Call SetCustomItem("RegOptIn", USWBasicInfo.FFARegOptIn)

    'FFA Tracking
    Call SetCustomItem("FFAAGI", USWRec.TotAGI)
    Call SetCustomItem("FFAAge", USWRec.TPAge)
    Call SetCustomItem("FFAEIC", USF1040.Eic)
    Call SetCustomItem("FFAMilitary", USFInterviewB.MilitaryEIN)

    'Extender Legislation of 2014 stuff
    Call SetCustomItem("HasExtender", USWEFWkSht2.HasExtender)
    Call SetCustomItem("PingReturns", USWEFWkSht2.PingReturns)
    Call SetCustomItem("ExtenderEdExp", USWEFWkSht2.HasEdExp)
    Call SetCustomItem("ExtenderTuitDdn", USWEFWkSht2.HasTuitDdn)
    Call SetCustomItem("ExtenderMedExp", USWEFWkSht2.HasMedExp)
    Call SetCustomItem("ExtenderSaleTax", USWEFWkSht2.HasGenSales)
    Call SetCustomItem("ExtenderSaleTaxEntered", USWEFWkSht2.HasGenSalesEntered)
    Call SetCustomItem("ExtenderQualMortPrem", USWEFWkSht2.HasQualMortPrem)
    Call SetCustomItem("Extender3800Ln16c", USWEFWkSht2.Has3800Ln16c)
    Call SetCustomItem("Extender3800Ln17b", USWEFWkSht2.Has3800Ln17b)
    Call SetCustomItem("Extender5074EdExp", USWEFWkSht2.Has5074EdExp)
    Call SetCustomItem("Extender5074TuitDdn", USWEFWkSht2.Has5074TuitDdn)
    Call SetCustomItem("Extender5695", USWEFWkSht2.Has5695)
    Call SetCustomItem("Extender5884", USWEFWkSht2.Has5884)
    Call SetCustomItem("Extender6478", USWEFWkSht2.Has6478)
    Call SetCustomItem("Extender6765", USWEFWkSht2.Has6765)
    Call SetCustomItem("Extender8689EdExp", USWEFWkSht2.Has8689EdExp)
    Call SetCustomItem("Extender8689TuitDdn", USWEFWkSht2.Has8689TuitDdn)
    Call SetCustomItem("Extender8820", USWEFWkSht2.Has8820)
    Call SetCustomItem("Extender8844", USWEFWkSht2.Has8844)
    Call SetCustomItem("Extender8845", USWEFWkSht2.Has8845)
    Call SetCustomItem("Extender8864", USWEFWkSht2.Has8864)
    Call SetCustomItem("Extender8874", USWEFWkSht2.Has8874)
    Call SetCustomItem("Extender8900", USWEFWkSht2.Has8900)
    Call SetCustomItem("Extender8908", USWEFWkSht2.Has8908)
    Call SetCustomItem("Extender8909", USWEFWkSht2.Has8909)
    Call SetCustomItem("Extender8923", USWEFWkSht2.Has8923)
    Call SetCustomItem("Extender8932", USWEFWkSht2.Has8932)
    Call SetCustomItem("ExtenderQCD", USWEFWkSht2.HasQCD)
    Call SetCustomItem("Extender3800", USWEFWkSht2.Has3800)
    Call SetCustomItem("Extender8834", USWEFWkSht2.Has8834)
    Call SetCustomItem("Extender8859", USWEFWkSht2.Has8859)
    Call SetCustomItem("Extender8910", USWEFWkSht2.Has8910)
    Call SetCustomItem("Extender8936", USWEFWkSht2.Has8936)
    Call SetCustomItem("Extender4136", USWEFWkSht2.Has4136)
    Call SetCustomItem("Extender4562", USWEFWkSht2.Has4562)
    Call SetCustomItem("Extender5074", USWEFWkSht2.Has5074)
    Call SetCustomItem("Extender5471", USWEFWkSht2.Has5471)
    Call SetCustomItem("Extender8396", USWEFWkSht2.Has8396)
    Call SetCustomItem("Extender8582", USWEFWkSht2.Has8582)
    Call SetCustomItem("Extender8839", USWEFWkSht2.Has8839)
    Call SetCustomItem("Extender8903", USWEFWkSht2.Has8903)
    Call SetCustomItem("Extender8911", USWEFWkSht2.Has8911)
    Call SetCustomItem("Extender8912", USWEFWkSht2.Has8912)
    Call SetCustomItem("Extender8863", USWEFWkSht2.Has8863)
    Call SetCustomItem("RebateCredit", USWRebateCr.Stop)
    
    'ACA API Call
    Call SetCustomItem("SLCSPremPrice", USD1095A.APISLCSP)
    Call SetCustomItem("LCBPremPrice", USD1095A.APILCBP)
    
    'Controlled Launch Fields
    Call SetCustomItem("ACA8962", USWEFWkSht2.Has8962)
    Call SetCustomItem("HasSchE", USWEFWkSht2.HasSchE)
    Call SetCustomItem("Has8867", USWEFWkSht2.Has8867)
    Call SetCustomItem("HasSchA", USWEFWkSht2.HasSchA)
    Call SetCustomItem("HasSchedule1", USF1040.PrintSch1)
    Call SetCustomItem("HasSchedule2", USF1040.PrintSch2)
    Call SetCustomItem("HasSchedule3", USF1040.PrintSch3)
    
    'Premium Tax Credit (ACA)
    Call SetCustomItem("ACA1095A", USWEFWkSht2.Has1095A)
    
    'FASTRACK BASIC INFO MAPPING
    '1040 Information
    Call SetCustomItem("MFSAllYr", USWBasicInfo.MFSAllYr)
    Call SetCustomItem("MFSItm", USWBasicInfo.MfsItm)
    Call SetCustomItem("TPForeignPhone", USWBasicInfo.ForeignPhone)
        
    ' Filing Status Information
    Call SetCustomItem("Single", USWSpouse.Single)
    Call SetCustomItem("Joint", USWSpouse.Joint)
    Call SetCustomItem("MFS", USWSpouse.MFS)
    Call SetCustomItem("HOH", USWSpouse.HOH)
    Call SetCustomItem("Widow", USWSpouse.Widow)
    
    Call SetCustomItem("SingleNR", USWSpouse.SingleNR)
    Call SetCustomItem("OthSingNR", USWSpouse.OthSingNR)
    Call SetCustomItem("MarriedNA", USWSpouse.MarriedNA)
    Call SetCustomItem("MarriedSK", USWSpouse.MarriedSK)
    Call SetCustomItem("OthMarried", USWSpouse.OthMarried)
    Call SetCustomItem("WidowNR", USWSpouse.WidowNR)
    
    'Dependent Information
    Call SetCustomItem("DepType", USWDependents.DepType)
    Call SetCustomItem("DepCitizen", USWDependents.DepCit)
    Call SetCustomItem("DepMoUS", USWDependents.NoMoLived)
    Call SetCustomItem("DepMoOut", USWDependents.MoLivedOut)
    Call SetCustomItem("DepDisable", USWDependents.Disable)
    Call SetCustomItem("DepIPPINYes", USWDependents.ShowIPPIN)
    Call SetCustomItem("DepIPPIN", USWDependents.IPPIN)
    
   
    'PDF IMPORT
    '1040 Information
    Call SetCustomItem("FilerBlind", USWBasicInfo.Blind)
    Call SetCustomItem("SpouseBlind", USWBasicInfo.SpBlind)
    Call SetCustomItem("Applied", USWEstPay.Applied)
    
    'Third Party Designee
    Call SetCustomItem("DesigneeName", USWBasicInfo.DesigneeName)
    Call SetCustomItem("DesigneePhone", USWBasicInfo.DesigneePhone)
    Call SetCustomItem("DesigneePINPDF", USWBasicInfo.DesigneePIN)
    Call SetCustomItem("DesigneeAuthY", USWBasicInfo.AuthY)
    
    'Bank Account Values
	Call SetCustomItem("BankName", USWBankAcct.BankName)
    Call SetCustomItem("BankAcct", USWBankAcct.AcctNum)
    Call SetCustomItem("BankRoute", USWBankAcct.RTN)
    Call SetCustomItem("BankChecking", USWBankAcct.Checking)
    Call SetCustomItem("BankSavings", USWBankAcct.Savings)
	Call SetCustomItem("BankVerified", USWBankAcct.Verified)
    Call SetCustomItem("BankAvail", USF8888.AvailRef1)
    
    'Prior Year EFile PIN
    Call SetCustomItem("FilerPin", USWEFWkSht2.PYTpPINPDF)
    Call SetCustomItem("SpousePin", USWEFWkSht2.PYSpPINPDF)
    
    'Form 2441 Values
    Call SetCustomItem("CPBusinessName", USW2441Prov.CoName)
    Call SetCustomItem("ProviderEIN", USW2441Prov.CoEIN)
    Call SetCustomItem("ProviderTaxExempt", USW2441Prov.TaxEx)
    Call SetCustomItem("ProviderFName", USW2441Prov.IndProvFirst)
    Call SetCustomItem("ProviderLName", USW2441Prov.IndProvLast)
    Call SetCustomItem("ProviderSSN", USW2441Prov.IndSSN)
    Call SetCustomItem("ProviderAddress", USW2441Prov.StreetAdd)
    Call SetCustomItem("ProviderCity", USW2441Prov.City)
    Call SetCustomItem("ProviderState", USW2441Prov.State)
    Call SetCustomItem("ProviderZipCode", USW2441Prov.Zip)
    Call SetCustomItem("EarnedIncome", USW2441Prior.ImportTPEI)
    Call SetCustomItem("EarnedIncomeSp", USW2441Prior.ImportSPEI)
    Call SetCustomItem("MinimumIncome", USW2441Prior.UsedPrior)
    Call SetCustomItem("ExcludedBenefits", USW2441Prior.DCBExcl)
    Call SetCustomItem("TotalQualExp", USW2441Prior.PaidPrior)
    
    'Schedule A
    Call SetCustomItem("OtherTaxDesc", USSchA.OtherTaxType)
	Call SetCustomItem("SFMName", USSchA.SfmTxtA)
    Call SetCustomItem("SFMSSN", USSchA.SfmTxtC)
    Call SetCustomItem("SFMEIN", USSchA.SfmTxtEIN)
    Call SetCustomItem("SFMAddress", USSchA.SfmTxtB)
    Call SetCustomItem("SFMCity", USSchA.SfmTxtCity)
	Call SetCustomItem("SFMState", USSchA.SfmTxtSt)
    Call SetCustomItem("SFMZip", USSchA.SfmTxtZip)
    Call SetCustomItem("SFMForeignCtry", USSchA.ForeignCtry)
    Call SetCustomItem("SFMForeignProv", USSchA.ForeignProvince)
    Call SetCustomItem("SFMForeignPostal", USSchA.ForeignPC)
    
    'Schedule C
    Call SetCustomItem("PrincipalBusiness", USSchC.BusProf)
    Call SetCustomItem("BusinessName", USSchC.BusName)
    Call SetCustomItem("BusinessAddr", USSchC.Add1)
    Call SetCustomItem("BusinessCity", USSchC.BusCity)
    Call SetCustomItem("BusinessState", USSchC.BusSt)
    Call SetCustomItem("BusinessZip", USSchC.BusZip)
    Call SetCustomItem("BusinessCode", USSchC.BusCode)
    Call SetCustomItem("BusinessEIN", USSchC.EIN)
    Call SetCustomItem("BusCashAcct", USSchC.Cash)
    Call SetCustomItem("BusAccrualAcct", USSchC.Accrual)
    Call SetCustomItem("BusOtherAcct", USSchC.Other)
    Call SetCustomItem("BusOtherAcctDesc", USSchC.OtherText)
    Call SetCustomItem("BusCostInv", USSchC.COSt)
    Call SetCustomItem("BusLCMInv", USSchC.LCM)
    Call SetCustomItem("BusOtherInv", USSchC.OtherInv)
    Call SetCustomItem("BeginInv", USSchC.BegInv)
    Call SetCustomItem("OtherExpenseA", USSchC.Exp1)
    Call SetCustomItem("OtherExpenseB", USSchC.Exp2)
    Call SetCustomItem("OtherExpenseC", USSchC.Exp3)
    Call SetCustomItem("OtherExpenseD", USSchC.Exp4)
    Call SetCustomItem("OtherExpenseE", USSchC.Exp5)
    Call SetCustomItem("OtherExpenseF", USSchC.Exp6)
    Call SetCustomItem("OtherExpenseG", USSchC.Exp7)
    Call SetCustomItem("OtherExpenseH", USSchC.Exp8)
    Call SetCustomItem("OtherExpenseI", USSchC.Exp9)
    Call SetCustomItem("OtherExpenseA", USSchC.Exp1)
    Call SetCustomItem("IsSpouse", USSchC.Spouse)
    Call SetCustomItem("IsFiler", USSchC.Taxpayer)
    Call SetCustomItem("IsJoint", USSchC.Joint)
    Call SetCustomItem("OwnerSSN", USSchC.SSN)
    Call SetCustomItem("AllAtRisk", USSchC.AtRisk)
    Call SetCustomItem("SomeAtRisk", USSchC.NoRisk)
    Call SetCustomItem("SomeRisk", USSchC.PYNoRisk)
    Call SetCustomItem("HomeOfficeExp", USSchC.PYSchC8829)
    Call SetCustomItem("GrossIncome", USSchC.PYSchCIncome)
    
    'Schedule F
    Call SetCustomItem("PrincipalProduct", USSchF.PrinProd)
    Call SetCustomItem("AgCode", USSchF.AgCode)
    Call SetCustomItem("FarmCashAcct", USSchF.Cash)
    Call SetCustomItem("FarmAccrualAcct", USSchF.Accrual)
    Call SetCustomItem("FarmEIN", USSchF.EmpID)
    Call SetCustomItem("FarmOtherExpenseA", USSchF.OthExpA)
    Call SetCustomItem("FarmOtherExpenseB", USSchF.OthExpB)
    Call SetCustomItem("FarmOtherExpenseC", USSchF.OthExpC)
    Call SetCustomItem("FarmOtherExpenseD", USSchF.OthExpD)
    Call SetCustomItem("FarmOtherExpenseE", USSchF.OthExpE)
    Call SetCustomItem("IsFarmSpouse", USSchF.Spouse)
    Call SetCustomItem("IsFarmFiler", USSchF.Taxpayer)
    Call SetCustomItem("IsFarmJoint", USSchF.Joint)
    Call SetCustomItem("FarmOwnerSSN", USSchF.SSN)
    Call SetCustomItem("FarmAllAtRisk", USSchF.AllRisk)
    Call SetCustomItem("FarmSomeAtRisk", USSchF.SomeRisk)
    Call SetCustomItem("BegInvent", USSchF.BegInvent)
    Call SetCustomItem("NetIncomeF", USSchF.PYNetInc)
    Call SetCustomItem("GrossIncomeF", USSchF.PYSchCIncome)
    
    'Schedule E
    Call SetCustomItem("PropertyDesc", USSchEP1.Add1)
    Call SetCustomItem("PropertyAddr", USSchEP1.PropAdd)
    Call SetCustomItem("PropertyCity", USSchEP1.PropCity)
    Call SetCustomItem("PropertyState", USSchEP1.PropSt)
    Call SetCustomItem("PropertyZip", USSchEP1.PropZip)
    Call SetCustomItem("PropForeignProv", USSchEP1.PropProv)
    Call SetCustomItem("PropForeignCtry", USSchEP1.PropCountry)
    Call SetCustomItem("PropForeignPostal", USSchEP1.PropPC)
    Call SetCustomItem("IsSpouseProperty", USSchEP1.Spouse)
    Call SetCustomItem("IsFilerProperty", USSchEP1.Taxpayer)
    Call SetCustomItem("IsJointProperty", USSchEP1.Joint)
    Call SetCustomItem("PropertySSN", USSchEP1.SSN)
    Call SetCustomItem("PropertyType", USSchEP1.PropType)
    Call SetCustomItem("PropTypeOther", USSchEP1.PropDesc)
    Call SetCustomItem("Rent", USSchEP1.PYRent)
    Call SetCustomItem("Royalty", USSchEP1.PYRoyalty)
    Call SetCustomItem("Advertising", USSchEP1.PYAdv)
    Call SetCustomItem("AutoTravel", USSchEP1.PYAuto)
    Call SetCustomItem("Cleaning", USSchEP1.PYClean)
    Call SetCustomItem("Commission", USSchEP1.PYComm)
    Call SetCustomItem("Insurance", USSchEP1.PYIns)
    Call SetCustomItem("Legal", USSchEP1.PYLegal)
    Call SetCustomItem("Management", USSchEP1.PYMgmt)
    Call SetCustomItem("MortgageInterest", USSchEP1.PYMortInt)
    Call SetCustomItem("OtherInterest", USSchEP1.PYOthInt)
    Call SetCustomItem("Repairs", USSchEP1.PYRepair)
    Call SetCustomItem("Supplies", USSchEP1.PYSupplies)
    Call SetCustomItem("Taxes", USSchEP1.PYTaxes)
    Call SetCustomItem("Utilities", USSchEP1.PYUtil)
    
    'Schedule D
    Call SetCustomItem("CapLoss", USWCapLCO.CLCOLN2)
    Call SetCustomItem("NetSTCapLoss", USWCapLCO.CLCOLN5)
    Call SetCustomItem("NetLTCapGain", USWCapLCO.CLCOLN6)
    Call SetCustomItem("NetLTCapLoss", USWCapLCO.CLCOLN9)
    Call SetCustomItem("NetSTCapGain", USWCapLCO.CLCOLN10)
    Call SetCustomItem("1040Line41", USWCapLCO.CLCOLN1)
    
    'Form 2210
    Call SetCustomItem("PYAGI", USF2210.PYAGI)
    Call SetCustomItem("PDFPriorYearTax", USF2210.PYTaxImport)
    
    'Form 4835
    Call SetCustomItem("EIN", USF4835.EIN)
    Call SetCustomItem("ActivePartY", USF4835.ActiveY)
    Call SetCustomItem("ActivePartN", USF4835.ActiveN)
    Call SetCustomItem("OtherExpDesc1", USF4835.OthExpA)
    Call SetCustomItem("OtherExpDesc2", USF4835.OthExpB)
    Call SetCustomItem("OtherExpDesc3", USF4835.OthExpC)
    Call SetCustomItem("OtherExpDesc4", USF4835.OthExpD)
    Call SetCustomItem("OtherExpDesc5", USF4835.OthExpE)
    Call SetCustomItem("OtherExpDesc6", USF4835.OthExpF)
    Call SetCustomItem("OtherExpDesc7", USF4835.OthExpG)
    Call SetCustomItem("OtherExpAmt1", USF4835.PYOthAmtA)
    Call SetCustomItem("OtherExpAmt2", USF4835.PYOthAmtB)
    Call SetCustomItem("OtherExpAmt3", USF4835.PYOthAmtC)
    Call SetCustomItem("OtherExpAmt4", USF4835.PYOthAmtD)
    Call SetCustomItem("OtherExpAmt5", USF4835.PYOthAmtE)
    Call SetCustomItem("OtherExpAmt6", USF4835.PYOthAmtF)
    Call SetCustomItem("OtherExpAmt7", USF4835.PYOthAmtG)
    Call SetCustomItem("CarTruck", USF4835.PYTrkExp)
    Call SetCustomItem("Chemical", USF4835.PYChem)
    Call SetCustomItem("Conservation", USF4835.PYConsv)
    Call SetCustomItem("CustomHire", USF4835.PYCustExp)
    Call SetCustomItem("EmployeeBenefit", USF4835.PYEmplBen)
    Call SetCustomItem("Feed", USF4835.PYFeed)
    Call SetCustomItem("Fertilizer", USF4835.PYFert)
    Call SetCustomItem("Freight", USF4835.PYFrght)
    Call SetCustomItem("Gasoline", USF4835.PYFuel)
    Call SetCustomItem("Insurance", USF4835.PYInsur)
    Call SetCustomItem("MortgageInt", USF4835.PYMortInt)
    Call SetCustomItem("OtherInt", USF4835.PYOthInt)
    Call SetCustomItem("LaborHired", USF4835.PYLabor)
    Call SetCustomItem("PensionProfit", USF4835.PYPension)
    Call SetCustomItem("RentLeaseVehicle", USF4835.PYMachRent)
    Call SetCustomItem("RentLeaseOther", USF4835.PYOthRent)
    Call SetCustomItem("Repair", USF4835.PYRepair)
    Call SetCustomItem("Seed", USF4835.PYSeed)
    Call SetCustomItem("Storage", USF4835.PYStorage)
    Call SetCustomItem("Supplies", USF4835.PYSupplies)
    Call SetCustomItem("OwnerTp", USF4835.Taxpayer)
    Call SetCustomItem("OwnerSp", USF4835.Spouse)
    Call SetCustomItem("OwnerJt", USF4835.Joint)
    Call SetCustomItem("Taxes", USF4835.PYTaxes)
    Call SetCustomItem("Utilities", USF4835.PYUtil)
    Call SetCustomItem("Veterinary", USF4835.PYVet)
    Call SetCustomItem("IncomeProduction", USF4835.PYLvstkSale)
    Call SetCustomItem("TotalCoopDists", USF4835.PYCoop)
    Call SetCustomItem("AgriculturalPayments", USF4835.PYAgProg)
    Call SetCustomItem("CCCLoansElect", USF4835.PYCCCElec)
    Call SetCustomItem("CCCLoansForfeited", USF4835.PYCCCLoan)
    Call SetCustomItem("CropInsurance", USF4835.PYCropIns)
    Call SetCustomItem("OtherIncome", USF4835.PYOthInc)
    Call SetCustomItem("NetFarmRentalIncome", USF4835.PYNetInc)
    Call SetCustomItem("SomeRisk", USF4835.SomeRisk)
    
    'Form 4952
    Call SetCustomItem("InvIntExpCarryFwd", USF4952.PYCF)
    
    'Form 5329
    Call SetCustomItem("ExcessTradContrTax", USF5329.PYExConTax)
    Call SetCustomItem("ExcessTradContr", USF5329.PYTotExCon)
    Call SetCustomItem("ExcessRothContrTax", USF5329.PYRothTax)
    Call SetCustomItem("ExcessRothContr", USF5329.PYRothTotExCon)
    Call SetCustomItem("ExcessCoverdellContrTax", USF5329.PYEdTax)
    Call SetCustomItem("ExcessCoverdellContr", USF5329.PYEdTotExCon)
    Call SetCustomItem("ExcessMSAContrTax", USF5329.PYMSATax)
    Call SetCustomItem("ExcessMSAContr", USF5329.PYMSATotExCon)
    Call SetCustomItem("ExcessHSAContrTax", USF5329.PYHSATax)
    Call SetCustomItem("ExcessHSAContr", USF5329.PYHSATotExCon)
    Call SetCustomItem("ExcessTradContrTax2", USF5329Spouse.PYExConTax)
    Call SetCustomItem("ExcessTradContr2", USF5329Spouse.PYTotExCon)
    Call SetCustomItem("ExcessRothContrTax2", USF5329Spouse.PYRothTax)
    Call SetCustomItem("ExcessRothContr2", USF5329Spouse.PYRothTotExCon)
    Call SetCustomItem("ExcessCoverdellContrTax2", USF5329Spouse.PYEdTax)
    Call SetCustomItem("ExcessCoverdellContr2", USF5329Spouse.PYEdTotExCon)
    Call SetCustomItem("ExcessMSAContrTax2", USF5329Spouse.PYMSATax)
    Call SetCustomItem("ExcessMSAContr2", USF5329Spouse.PYMSATotExCon)
    Call SetCustomItem("ExcessHSAContrTax2", USF5329Spouse.PYHSATax)
    Call SetCustomItem("ExcessHSAContr2", USF5329Spouse.PYHSATotExCon)
    
    'Form 5695
    Call SetCustomItem("CreditCarryFwd", USF5695.PYCO)
    Call SetCustomItem("CreditUsed", USF5695.CredPY)
    Call SetCustomItem("Windows", USF5695.WindowsPY)
    
    'Form 8606
    Call SetCustomItem("TotBasis", USF8606.BegBasis)
    Call SetCustomItem("TotBasis2", USF8606Spouse.BegBasis)
    
    'Form 8801
    Call SetCustomItem("8801FilingStatusSingle", USF8801.Single)
    Call SetCustomItem("8801FilingStatusMFJ", USF8801.MFJ)
    Call SetCustomItem("8801FilingStatusMFS", USF8801.MFS)
    Call SetCustomItem("8801FilingStatusHOH", USF8801.HOH)
    Call SetCustomItem("8801FilingStatusQW", USF8801.QW)
    Call SetCustomItem("TaxInc", USF8801.PYTaxInc)
    Call SetCustomItem("StdItmDedAmt", USF8801.PYStdItm)
    Call SetCustomItem("SchDBox", USF8801.CapGainDist)
    Call SetCustomItem("CapGain", USF8801.F1040L13)
    Call SetCustomItem("QualDiv", USF8801.F1040L9b)
    Call SetCustomItem("NRFilingStatusSingle", USF8801.OthSing)
    Call SetCustomItem("NRFilingStatusMarried", USF8801.OthMarried)
    Call SetCustomItem("NRFilingStatusQW", USF8801.Widow)
    Call SetCustomItem("NRTaxInc", USF8801.NPYTaxInc)
    Call SetCustomItem("NRSchDBox", USF8801.CapGainDistNR)
    Call SetCustomItem("NRQualDiv", USF8801.F1040L9bNR)
    Call SetCustomItem("ItemizedDed", USF8801.F6251L1)
    Call SetCustomItem("Taxes", USF8801.PYTaxes)
    Call SetCustomItem("TaxRefund", USF8801.PYF6251L7)
    Call SetCustomItem("InvestIntExp", USF8801.InvInt)
    Call SetCustomItem("Depletion", USF8801.Depletion)
    Call SetCustomItem("NOL", USF8801.F6251L11)
    Call SetCustomItem("TEI", USF8801.PrivActBonds)
    Call SetCustomItem("Sec1202", USF8801.Sec1202)
    Call SetCustomItem("RegTax", USF8801.F6251L34)
    Call SetCustomItem("AMT", USF8801.F6251L35)
    Call SetCustomItem("CredCarryfwd", USF8801.PYMTCredCF)
    Call SetCustomItem("CredUsed", USF8801.PYCredUsed)
    Call SetCustomItem("TotLTGain", USF8801.SchDL16)
    Call SetCustomItem("TotGain", USF8801.SchDL17)
    Call SetCustomItem("Sec1250", USF8801.SchDL19)
    
    'Form 8829
    Call SetCustomItem("SqFtBusiness", USF8829.L1)
    Call SetCustomItem("SqFtHome", USF8829.L2)
    Call SetCustomItem("HomeBasis", USF8829.L35)
    Call SetCustomItem("LandValue", USF8829.L36)

    'Prior Year Comparison
    Call SetCustomItem("PYWages", USWPriorYr.TWages)
    Call SetCustomItem("PYTaxableInterest", USWPriorYr.TInt)
    Call SetCustomItem("PYTaxExemptInterest", USWPriorYr.TTEInt)
    Call SetCustomItem("PYOrdinaryDividends", USWPriorYr.TDiv)
    Call SetCustomItem("PYIRADist", USWPriorYr.TIRAInc)
    Call SetCustomItem("PYPenDist", USWPriorYr.TPen)
    Call SetCustomItem("PYSocialSecurityBenefits", USWPriorYr.TSSB)
    Call SetCustomItem("PYTaxableStateRefund", USWPriorYr.TStRef)
    Call SetCustomItem("PYAlimonyRec", USWPriorYr.TAlimony)
    Call SetCustomItem("PYBusiness", USWPriorYr.TBusiness)
    Call SetCustomItem("PYCapitalGains", USWPriorYr.TCapGain)
    Call SetCustomItem("PYOtherGains", USWPriorYr.TOthGain)
    Call SetCustomItem("PYRent", USWPriorYr.TRent)
    Call SetCustomItem("PYFarm", USWPriorYr.TFarm)
    Call SetCustomItem("PYUnemployment", USWPriorYr.TUnem)
    Call SetCustomItem("PYOtherIncome", USWPriorYr.TOthInc)
    Call SetCustomItem("PYAdjustIncome", USWPriorYr.TAdj)
    Call SetCustomItem("PYCharitableCont", USWPriorYr.TCharCont)
    Call SetCustomItem("PYMedicalDeduction", USWPriorYr.TMed)
    Call SetCustomItem("PYTaxDeduction", USWPriorYr.TTaxes)
    Call SetCustomItem("PYInterestDeduction", USWPriorYr.TIntExp)
    Call SetCustomItem("PYCharityDeduction", USWPriorYr.TCont)
    Call SetCustomItem("PYCasualtyDeduction", USWPriorYr.TCas)
    Call SetCustomItem("PYOtherDeduction", USWPriorYr.TOthMisc)
    Call SetCustomItem("PYQualifiedBusDeduction", USWPriorYr.TQBID)
    Call SetCustomItem("PYAMT", USWPriorYr.TAMT)
    Call SetCustomItem("PYExcessAdvPTC", USWPriorYr.TRepayPTC)
    Call SetCustomItem("PYChildTaxCredit", USWPriorYr.Tchild)
    Call SetCustomItem("PYForeignTaxCredit", USWPriorYr.TFor)
    Call SetCustomItem("PYDepCareCredit", USWPriorYr.T2441)
    Call SetCustomItem("PYEducationCredit", USWPriorYr.TEdu)
    Call SetCustomItem("PYRetirementSavingCredit", USWPriorYr.TRet)
    Call SetCustomItem("PYFedWH", USWPriorYr.TWH)
    Call SetCustomItem("PYEIC", USWPriorYr.Teic)
    Call SetCustomItem("PYAddCTC", USWPriorYr.Tadchild)
    Call SetCustomItem("PYRefEdCredit", USWPriorYr.TRefEduc)
    Call SetCustomItem("PYRecoveryRebateCredit", USWPriorYr.TRebateCr)
    Call SetCustomItem("PYEstimatedTaxPayment", USWPriorYr.TEst)
    Call SetCustomItem("PYNetPTC", USWPriorYr.TNPTC)
    Call SetCustomItem("PYExtensionPayment", USWPriorYr.TExt)
    Call SetCustomItem("PYExcessSocialSec", USWPriorYr.TSS)
    Call SetCustomItem("PYFuelTaxCredit", USWPriorYr.TFuelTax)
    Call SetCustomItem("PYOtherPmtTaxAmt", USWPriorYr.TOtherp)
    Call SetCustomItem("PYTaxPenalty", USWPriorYr.TPenalty)
    Call SetCustomItem("PYDOPR", USWPriorYr.PYDOPR)
    Call SetCustomItem("PYStdOrItmDeduction", USWPriorYr.PYDed)
    Call SetCustomItem("PYTax", USWPriorYr.PYTax)
    Call SetCustomItem("PYResidentialEnergyCredit", USWPriorYr.PYResEnergy)
    Call SetCustomItem("PYOtherCredit", USWPriorYr.PYOthCr)
    Call SetCustomItem("PYSelfEmpTax", USWPriorYr.PYSE)
    Call SetCustomItem("PYTipTax", USWPriorYr.PYTip)
    Call SetCustomItem("PYRetirementPenaltyTaxdValue", USWPriorYr.PYPenTax)
    Call SetCustomItem("PYHouseholdEmpTax", USWPriorYr.PYHTax)
    Call SetCustomItem("PYRepayHomebuyer", USWPriorYr.PYHomeBuyTax)
    Call SetCustomItem("PYOtherTax", USWPriorYr.PYOthTax)
    Call SetCustomItem("PYTotalItemizedDeductions", USWPriorYr.PyItm)
    Call SetCustomItem("PYHealthCovTaxCredit", USWPriorYr.PY8885)
    Call SetCustomItem("PYOtherPmtTaxAmt2", USWPriorYr.PYOthPay)
    
    'Additional Dependents
    Call SetCustomItem("AddDepFName", USWDependents.DepName)
    Call SetCustomItem("AddDepLName", USWDependents.DepLast)
    Call SetCustomItem("AddDepSSN", USWDependents.DepSSN)
    Call SetCustomItem("AddDepRel", USWDependents.DepRel)
    
    'Quick Convert
    Call SetCustomItem("DepDOB", USWDependents.DepDOB)
    
    'Show Refund Delay Information - Step 6 and EF Status Emails
    Call SetCustomItem("RefundDelay", USWEFWksht.AllRefundDelay)
    
    'Correction Center
    Call SetCustomItem("USDW2_EFTrigger", USDW2.EFTrigger)
    Call SetCustomItem("USDW2G_EFTrigger", USDW2G.EFTrigger)
    Call SetCustomItem("USD1099R_EFTrigger", USD1099R.Prn1099R)
    Call SetCustomItem("USWDEPENDENTS_EFTrigger", USWDependents.DepQual)
    
    'PDF Attachments
    Call SetCustomItem("AllowedAttachments", USWEFWkSht2.AllowedAtt)
    Call SetCustomItem("RequiredAttachments", USWEFWkSht2.RequiredAtt)
    Call SetCustomItem("CurrentAttachments", USWEFWkSht2.CurrentAtt)
    Call SetCustomItem("PDFAutoAttachments", USWEFWkSht2.PDFAutoAtt)
    
    'State Refund Document 1099-G - User Delete State Refund - Used with USD1099GStRef Create Conditions
    
    Call SetCustomItem("ALUserDeleteStRef", USZALF40.UserDeleteStRef)
    Call SetCustomItem("ARUserDeleteStRef", USZAR1000.UserDeleteStRef)
    Call SetCustomItem("AZUserDeleteStRef", USZAZF140.UserDeleteStRef)
    Call SetCustomItem("CAUserDeleteStRef", USZCA540.UserDeleteStRef)
    Call SetCustomItem("COUserDeleteStRef", USZCOF104.UserDeleteStRef)
    Call SetCustomItem("CTUserDeleteStRef", USZCTF1040.UserDeleteStRef)
    Call SetCustomItem("DCUserDeleteStRef", USZDCD40.UserDeleteStRef)
    Call SetCustomItem("DEUserDeleteStRef", USZDE200.UserDeleteStRef)
    Call SetCustomItem("GAUserDeleteStRef", USZGA500.UserDeleteStRef)
    Call SetCustomItem("HIUserDeleteStRef", USZHIN11.UserDeleteStRef)
    Call SetCustomItem("IAUserDeleteStRef", USZIA1040.UserDeleteStRef)
    Call SetCustomItem("IDUserDeleteStRef", USZID40.UserDeleteStRef)
    Call SetCustomItem("ILUserDeleteStRef", USZIL1040.UserDeleteStRef)
    Call SetCustomItem("INUserDeleteStRef", USZIN40.UserDeleteStRef)
    Call SetCustomItem("KSUserDeleteStRef", USZKSF401.UserDeleteStRef)
    Call SetCustomItem("KYUserDeleteStRef", USZKYF740.UserDeleteStRef)
    Call SetCustomItem("LAUserDeleteStRef", USZLAF540.UserDeleteStRef)
    Call SetCustomItem("MAUserDeleteStRef", USZMAF1.UserDeleteStRef)
    Call SetCustomItem("MDUserDeleteStRef", USZMD502.UserDeleteStRef)
    Call SetCustomItem("MEUserDeleteStRef", USZME1040.UserDeleteStRef)
    Call SetCustomItem("MIUserDeleteStRef", USZMIF1040.UserDeleteStRef)
    Call SetCustomItem("MNUserDeleteStRef", USZMN1040.UserDeleteStRef)
    Call SetCustomItem("MOUserDeleteStRef", USZMO1040.UserDeleteStRef)
    Call SetCustomItem("MSUserDeleteStRef", USZMS105.UserDeleteStRef)
    Call SetCustomItem("MTUserDeleteStRef", USZMTF2.UserDeleteStRef)
    Call SetCustomItem("NCUserDeleteStRef", USZNCD400.UserDeleteStRef)
    Call SetCustomItem("NDUserDeleteStRef", USZND37S.UserDeleteStRef)
    Call SetCustomItem("NEUserDeleteStRef", USZNE1040.UserDeleteStRef)
    Call SetCustomItem("NHUserDeleteStRef", USZNHBTSUM.UserDeleteStRef)
    Call SetCustomItem("NJUserDeleteStRef", USZNJ1040.UserDeleteStRef)
    Call SetCustomItem("NMUserDeleteStRef", USZNMFPIT1.UserDeleteStRef)
    Call SetCustomItem("NYUserDeleteStRef", USZNYIT201.UserDeleteStRef)
    Call SetCustomItem("OHUserDeleteStRef", USZOH1040.UserDeleteStRef)
    Call SetCustomItem("OKUserDeleteStRef", USZOK511.UserDeleteStRef)
    Call SetCustomItem("ORUserDeleteStRef", USZORF40.UserDeleteStRef)
    Call SetCustomItem("PAUserDeleteStRef", USZPAF40.UserDeleteStRef)
    Call SetCustomItem("RIUserDeleteStRef", USZRI1040.UserDeleteStRef)
    Call SetCustomItem("SCUserDeleteStRef", USZSC1040.UserDeleteStRef)
    Call SetCustomItem("UTUserDeleteStRef", USZUT1040.UserDeleteStRef)
    Call SetCustomItem("VAUserDeleteStRef", USZva760.UserDeleteStRef)
    Call SetCustomItem("VTUserDeleteStRef", USZVT111.UserDeleteStRef)
    Call SetCustomItem("WIUserDeleteStRef", USZWIF1.UserDeleteStRef)
    Call SetCustomItem("WVUserDeleteStRef", USZWVF140.UserDeleteStRef)
    
    'K-1 Import Information
    Call SetCustomItem("K1Import", USWTaxpayer.K1ImportY)
    
    'Republic/TPG Bank Record State
    Call SetCustomItem("BankRecordState", USWRALApp.BankRecordState)
    Call SetCustomItem("TPGBankRecordState", USWRALApp.TPGBankRecordState)
    
    'AmEx Prepaid Card Information for API
    Call SetCustomItem("DCFirstName", USWDebitCard.FirstName)
    Call SetCustomItem("DCLastName", USWDebitCard.LastName)
    Call SetCustomItem("DCDOB", USWDebitCard.DOB)
    Call SetCustomItem("DCSSN", USWDebitCard.SSN)
    Call SetCustomItem("DCStreet", USWDebitCard.Address)
    Call SetCustomItem("DCCity", USWDebitCard.City)
    Call SetCustomItem("DCState", USWDebitCard.State)
    Call SetCustomItem("DCZip", USWDebitCard.Zip)
    Call SetCustomItem("DCCountry", USWDebitCard.Country)
    Call SetCustomItem("DCEmail", USWDebitCard.Email)
    Call SetCustomItem("DCPhone", USWDebitCard.HomePhone)
    Call SetCustomItem("DCExistedCardNo", USWDebitCard.ExistCardLast4)
    Call SetCustomItem("DCAmExID", USWDebitCard.AmExID)
    Call SetCustomItem("DCISDL", USWDebitCard.ISDL)
    Call SetCustomItem("DCIDNumber", USWDebitCard.IDNumber)
    Call SetCustomItem("DCIssue", USWDebitCard.Issue)
    Call SetCustomItem("DCExistingNeedInfo", USWDebitCard.Extra2)
    Call SetCustomItem("DCSOLID", USWDebitCard.SOLID)
    
    'AmEx Prepaid Card Information KBA Questions
    Call SetCustomItem("AmexReferenceNumber", USWDebitCard.AmexReferenceNumber)
    Call SetCustomItem("AmexRequestId", USWDebitCard.AmexRequestId)
    Call SetCustomItem("AmexTransactionId", USWDebitCard.AmexTransactionId)    
    Call SetCustomItem("KBALocationRef", USWDebitCard.KBALocationRef)
    Call SetCustomItem("QuestionSetId", USWDebitCard.QuestionSetId)
    Call SetCustomItem("KBAQuestID1", USWDebitCard.KBAQuestID(0))
    Call SetCustomItem("KBAQuestionText1", USWDebitCard.KBAQuestionText(0))
    Call SetCustomItem("KBAAnswerID1", USWDebitCard.KBAAnswerID(0))
    Call SetCustomItem("KBAAnswerText1", USWDebitCard.KBAAnswerText(0))
    Call SetCustomItem("KBASelectedAnswerID1", USWDebitCard.KBASelectedAnswerID(0))
    Call SetCustomItem("KBAQuestID2", USWDebitCard.KBAQuestID(1))
    Call SetCustomItem("KBAQuestionText2", USWDebitCard.KBAQuestionText(1))
    Call SetCustomItem("KBAAnswerID2", USWDebitCard.KBAAnswerID(1))
    Call SetCustomItem("KBAAnswerText2", USWDebitCard.KBAAnswerText(1))
    Call SetCustomItem("KBASelectedAnswerID2", USWDebitCard.KBASelectedAnswerID(1))
    Call SetCustomItem("KBAQuestID3", USWDebitCard.KBAQuestID(2))
    Call SetCustomItem("KBAQuestionText3", USWDebitCard.KBAQuestionText(2))
    Call SetCustomItem("KBAAnswerID3", USWDebitCard.KBAAnswerID(2))
    Call SetCustomItem("KBAAnswerText3", USWDebitCard.KBAAnswerText(2))
    Call SetCustomItem("KBASelectedAnswerID3", USWDebitCard.KBASelectedAnswerID(2))
    Call SetCustomItem("KBAQuestID4", USWDebitCard.KBAQuestID(3))
    Call SetCustomItem("KBAQuestionText4", USWDebitCard.KBAQuestionText(3))
    Call SetCustomItem("KBAAnswerID4", USWDebitCard.KBAAnswerID(3))
    Call SetCustomItem("KBAAnswerText4", USWDebitCard.KBAAnswerText(3))
    Call SetCustomItem("KBASelectedAnswerID4", USWDebitCard.KBASelectedAnswerID(3))
    Call SetCustomItem("KBAQuestID5", USWDebitCard.KBAQuestID(4))
    Call SetCustomItem("KBAQuestionText5", USWDebitCard.KBAQuestionText(4))
    Call SetCustomItem("KBAAnswerID5", USWDebitCard.KBAAnswerID(4))
    Call SetCustomItem("KBAAnswerText5", USWDebitCard.KBAAnswerText(4))
    Call SetCustomItem("KBASelectedAnswerID5", USWDebitCard.KBASelectedAnswerID(4))
    Call SetCustomItem("KBAQuestID6", USWDebitCard.KBAQuestID(5))
    Call SetCustomItem("KBAQuestionText6", USWDebitCard.KBAQuestionText(5))
    Call SetCustomItem("KBAAnswerID6", USWDebitCard.KBAAnswerID(5))
    Call SetCustomItem("KBAAnswerText6", USWDebitCard.KBAAnswerText(5))
    Call SetCustomItem("KBASelectedAnswerID6", USWDebitCard.KBASelectedAnswerID(5))
    Call SetCustomItem("KBAQuestID7", USWDebitCard.KBAQuestID(6))
    Call SetCustomItem("KBAQuestionText7", USWDebitCard.KBAQuestionText(6))
    Call SetCustomItem("KBAAnswerID7", USWDebitCard.KBAAnswerID(6))
    Call SetCustomItem("KBAAnswerText7", USWDebitCard.KBAAnswerText(6))
    Call SetCustomItem("KBASelectedAnswerID7", USWDebitCard.KBASelectedAnswerID(6))
    Call SetCustomItem("KBAQuestID8", USWDebitCard.KBAQuestID(7))
    Call SetCustomItem("KBAQuestionText8", USWDebitCard.KBAQuestionText(7))
    Call SetCustomItem("KBAAnswerID8", USWDebitCard.KBAAnswerID(7))
    Call SetCustomItem("KBAAnswerText8", USWDebitCard.KBAAnswerText(7))
    Call SetCustomItem("KBASelectedAnswerID8", USWDebitCard.KBASelectedAnswerID(7))
    Call SetCustomItem("KBAQuestID9", USWDebitCard.KBAQuestID(8))
    Call SetCustomItem("KBAQuestionText9", USWDebitCard.KBAQuestionText(8))
    Call SetCustomItem("KBAAnswerID9", USWDebitCard.KBAAnswerID(8))
    Call SetCustomItem("KBAAnswerText9", USWDebitCard.KBAAnswerText(8))
    Call SetCustomItem("KBASelectedAnswerID9", USWDebitCard.KBASelectedAnswerID(8))
    Call SetCustomItem("KBAQuestID10", USWDebitCard.KBAQuestID(9))
    Call SetCustomItem("KBAQuestionText10", USWDebitCard.KBAQuestionText(9))
    Call SetCustomItem("KBAAnswerID10", USWDebitCard.KBAAnswerID(9))
    Call SetCustomItem("KBAAnswerText10", USWDebitCard.KBAAnswerText(9))
    Call SetCustomItem("KBASelectedAnswerID10", USWDebitCard.KBASelectedAnswerID(9))

    'AmEx Prepaid Card Results Information
    Call SetCustomItem("DCDefault", USWDebitCard.DCDefault)
    Call SetCustomItem("DCExisting", USWDebitCard.DCExisting)
    Call SetCustomItem("DCExistingQual", USWDebitCard.DCExistingQual)
    Call SetCustomItem("DCExistingFail", USWDebitCard.DCExistingFail)
    Call SetCustomItem("DCNotQual", USWDebitCard.DCNotQual)
    Call SetCustomItem("DCQual", USWDebitCard.DCQual)
    Call SetCustomItem("DCNeedKBA", USWDebitCard.DCNeedKBA)
    Call SetCustomItem("DCGenError", USWDebitCard.DCGenError)
    Call SetCustomItem("DCConnectError", USWDebitCard.DCConnectError)
    Call SetCustomItem("DCErrorText", USWDebitCard.DCErrorText)
    Call SetCustomItem("DebitCardRTN", USWDebitCard.RTN)
    Call SetCustomItem("DebitCardAcctNum", USWDebitCard.AcctNum)
    
    'AmEx Prepaid Card Discount
    Call SetCustomItem("TookDebitCardOffer", USWBankProd.TookDebitCardOffer)
    Call SetCustomItem("DiscAmExY", USWDebitCard.DiscAmExY)
    Call SetCustomItem("DiscAmExN", USWDebitCard.DiscAmExN)
    
    'AmEx Prepaid Card Qualify Information - Used if IRS Rejects
    Call SetCustomItem("DCQualSSN", USWDebitCard.DCQualSSN)
    Call SetCustomItem("DCQualName", USWDebitCard.DCQualName)
    Call SetCustomItem("DCQualDOB", USWDebitCard.DCQualDOB)
    
    'AmEx Marketing Flow Fields
    Call SetCustomItem("OfferBAmExY", USWDebitCard.OfferBAmExY)
    Call SetCustomItem("OfferBAmExN", USWDebitCard.OfferBAmExN)
    Call SetCustomItem("OfferCAmExY", USWDebitCard.OfferCAmExY)
    Call SetCustomItem("OfferCAmExN", USWDebitCard.OfferCAmExN)
    Call SetCustomItem("MarketingFlow", USWDebitCard.MarketingCk)
    
    'VPS Credit Card Information - Used by Both 1040 and 4868
    Call SetCustomItem("VPSTaxYr", USWEFWksht.VPSTaxYr)
    Call SetCustomItem("VPSType", USWEFWksht.VPSType)
    Call SetCustomItem("VPSFirstName", USWEFWksht.VPSFirstName)
    Call SetCustomItem("VPSLastName", USWEFWksht.VPSLastName)
    Call SetCustomItem("VPSSSN", USWEFWksht.VPSSSN)
    Call SetCustomItem("VPSStreet", USWEFWksht.VPSAddress)
    Call SetCustomItem("VPSCity", USWEFWksht.VPSCity)
    Call SetCustomItem("VPSState", USWEFWksht.VPSState)
    Call SetCustomItem("VPSZip", USWEFWksht.VPSZip)
    Call SetCustomItem("VPSPhone", USWEFWksht.VPSHomePhone)
    Call SetCustomItem("VPSEmail", USWEFWksht.VPSEmail)
    Call SetCustomItem("VPSCC_Number", USWEFWksht.VPSCCNumber)
    Call SetCustomItem("VPSCC_CCVNumber", USWEFWksht.VPSCCCVV)
    Call SetCustomItem("VPSCC_Exp", USWEFWksht.VPSCCCombExp)
    'VPS Credit Card Information - 1040 Only
    Call SetCustomItem("VPSCCPayAmt", USWEFWksht.VPSCCPayAmt)
    Call SetCustomItem("VPSCCPayConvFee", USWEFWksht.VPSCCPayConvFee)
    Call SetCustomItem("VPSTransID", USWEFWksht.VPSTransID)
    Call SetCustomItem("VPSRequestID", USWEFWksht.VPSRequestID)
    Call SetCustomItem("VPSPaymentApproved", USWEFWksht.VPSApproved)
    Call SetCustomItem("VPSPaymentFailed", USWEFWksht.VPSFailed)
    Call SetCustomItem("VPS1040ErrorText", USWEFWksht.VPSErrorText)
    'VPS Credit Card Information - 4868 Only
    Call SetCustomItem("VPSCCPayAmt4868", USWEFWksht.VPSCCPayAmt4868)
    Call SetCustomItem("VPSCCPayConvFee4868", USWEFWksht.VPSCCPayConvFee4868)
    Call SetCustomItem("VPSTransID4868", USWEFWksht.VPSTransID4868)
    Call SetCustomItem("VPSRequestID4868", USWEFWksht.VPSRequestID4868)
    Call SetCustomItem("VPSPaymentApproved4868", USWEFWksht.VPSApproved4868)
    Call SetCustomItem("VPSPaymentFailed4868", USWEFWksht.VPSFailed4868)
    Call SetCustomItem("VPS4868ErrorText", USWEFWksht.VPSErrorText4868)
    
    'VPS Credit Card Information - Auth
    Call SetCustomItem("AuthVPSCC_Number", USWEFWksht.AuthVPSCCNumber)
    Call SetCustomItem("AuthVPSCC_CCVNumber", USWEFWksht.AuthVPSCCCCVNumber)
    Call SetCustomItem("AuthVPSCC_Exp", USWEFWksht.AuthVPSCCExp)
    Call SetCustomItem("AuthVPSCCPayAmt", USWEFWksht.AuthVPSCCPayAmt)
    Call SetCustomItem("AuthVPSCCPayAmt4868", USWEFWksht.AuthVPSCCPayAmt4868)
    
    'Protection Plus Information - Prep Audit
    Call SetCustomItem("PPRegAPIConnectError", USWEFWksht.PPRegAPIConnectError)
    Call SetCustomItem("ProtectPlusReg", USWEFWksht.PrepRegPP)
    Call SetCustomItem("ProtectPlusEFIN", USWPrepMnNm.EROEFIN)
    Call SetCustomItem("ProtectPlusPackage", USWEFWksht.PPBank)
    Call SetCustomItem("ProtectPlusFName", USWBasicInfo.FirstName)
    Call SetCustomItem("ProtectPlusLName", USWBasicInfo.LastName)
    Call SetCustomItem("ProtectPlusAddress", USWBasicInfo.Street)
    Call SetCustomItem("ProtectPlusCity", USWBasicInfo.City)
    Call SetCustomItem("ProtectPlusState", USWBasicInfo.StateAbb)
    Call SetCustomItem("ProtectPlusZip", USWBasicInfo.ZipCode)
    Call SetCustomItem("ProtectPlusSSN", USWBasicInfo.SSN)
    
    'Protection Plus Enroll Prep API
    Call SetCustomItem("ProtectPlusPrepName", USWEFWksht.PPPrepName)
    Call SetCustomItem("ProtectPlusPrepCompany", USWEFWksht.PPPrepCompany)
    Call SetCustomItem("ProtectPlusPrepEFIN", USWBasicInfo.EROEFIN)
    Call SetCustomItem("ProtectPlusPrepContact", USWEFWksht.PPPrepName)
    Call SetCustomItem("ProtectPlusPrepPhone", USWEFWksht.PPPrepPhone)
    Call SetCustomItem("ProtectPlusPrepStreet", USWEFWksht.PPPrepStreet)
    Call SetCustomItem("ProtectPlusPrepCity", USWEFWksht.PPPrepCity)
    Call SetCustomItem("ProtectPlusPrepState", USWEFWksht.PPPrepState)
    Call SetCustomItem("ProtectPlusPrepZip", USWEFWksht.PPPrepZip)
    Call SetCustomItem("ProtectPlusPrepEmail", USWBasicInfo.Prepemail)
    Call SetCustomItem("ProtectPlusPrepRegQual", USWEFWksht.PPPrepRegQual)
    Call SetCustomItem("ProtectPlusPrepRegFail", USWEFWksht.PPPrepRegFail)
    
    'Invoice Paths
    Call SetCustomItem("FilingStepInvoice", USWEFWksht.FilingStep)
    Call SetCustomItem("PayNowInvoice", USWEFWksht.PayNow)
    Call SetCustomItem("PDFFormsViewInvoice", USWEFWksht.PDFFormsView)
    
    'W-2 EIN Database
    Call SetCustomItem("W2EINLookUp", USDW2.Ein)
    
    'Total Number of Dependents
    Call SetCustomItem("TotDependents", USWAddDep.GrandTotDeps)
    
    'Real Time Alerts
    Call SetCustomItem("EFRealTimeAlerts", USWEFWkSht2.RTA1040)
    Call SetCustomItem("1040SSEFRealTimeAlerts", USWEFWkSht2.RTA1040SS)
    Call SetCustomItem("1040NREFRealTimeAlerts", USWEFWkSht2.RTA1040NR)

End Sub

Public Function FS() As Long
    If GetBool(USWResidency.F1040NR) = False Then
        If GetBool(USF1040.Single) = True Then
            FS = 1
        ElseIf GetBool(USF1040.Joint) = True Then
            FS = 2
        ElseIf GetBool(USF1040.MFS) = True Then
            FS = 3
        ElseIf GetBool(USF1040.HOH) = True Then
            FS = 4
        Else
            FS = 5
        End If
    Else
    'These FS numbers correspond with the 1040 (1-5), not the 1040NR (1-6)
        If GetBool(USF1040NR.Single) = True Then
            FS = 1
        ElseIf GetBool(USF1040NR.MarriedNA) = True Then
            FS = 3
        Else
            FS = 5
        End If
    End If
      
End Function

Public Function MargRate(Stat As Integer, Inc As Currency) As Double
'Updated 9/24/2021

If Stat = 1 Then
    If Inc < 9951@ Then
        MargRate = 0.1
    ElseIf Inc < 40526@ Then
        MargRate = 0.12
    ElseIf Inc < 86376@ Then
        MargRate = 0.22
    ElseIf Inc < 164926@ Then
        MargRate = 0.24
    ElseIf Inc < 209426@ Then
        MargRate = 0.32
    ElseIf Inc < 523601@ Then
        MargRate = 0.35
    Else
        MargRate = 0.37
    End If
ElseIf Stat = 2 Or Stat = 5 Then
    If Inc < 19901@ Then
        MargRate = 0.1
    ElseIf Inc < 81051@ Then
        MargRate = 0.12
    ElseIf Inc < 172751@ Then
        MargRate = 0.22
    ElseIf Inc < 329851@ Then
        MargRate = 0.24
    ElseIf Inc < 418851@ Then
        MargRate = 0.32
    ElseIf Inc < 628301@ Then
        MargRate = 0.35
    Else
        MargRate = 0.37
    End If
ElseIf Stat = 3 Then
    If Inc < 9951@ Then
        MargRate = 0.1
    ElseIf Inc < 40526@ Then
        MargRate = 0.12
    ElseIf Inc < 86376@ Then
        MargRate = 0.22
    ElseIf Inc < 164926@ Then
        MargRate = 0.24
    ElseIf Inc < 209426@ Then
        MargRate = 0.32
    ElseIf Inc < 314152@ Then
        MargRate = 0.35
    Else
        MargRate = 0.37
    End If
ElseIf Stat = 4 Then
    If Inc < 14201@ Then
        MargRate = 0.1
    ElseIf Inc < 54201@ Then
        MargRate = 0.12
    ElseIf Inc < 86351@ Then
        MargRate = 0.22
    ElseIf Inc < 164901@ Then
        MargRate = 0.24
    ElseIf Inc < 209401@ Then
        MargRate = 0.32
    ElseIf Inc < 523601@ Then
        MargRate = 0.35
    Else
        MargRate = 0.37
    End If
Else
    MargRate = 0
End If

End Function

Public Function MargRateNY(Stat As Integer, Inc As Currency) As Double
'Updated 11.22.21
If Stat = 1 Then
    If Inc < 10276@ Then
        MargRateNY = 0.1
    ElseIf Inc < 41776@ Then
        MargRateNY = 0.12
    ElseIf Inc < 89076@ Then
        MargRateNY = 0.22
    ElseIf Inc < 170051@ Then
        MargRateNY = 0.24
    ElseIf Inc < 215951@ Then
        MargRateNY = 0.32
    ElseIf Inc < 539901@ Then
        MargRateNY = 0.35
    Else
        MargRateNY = 0.37
    End If
ElseIf Stat = 2 Or Stat = 5 Then
    If Inc < 20551@ Then
        MargRateNY = 0.1
    ElseIf Inc < 83551@ Then
        MargRateNY = 0.12
    ElseIf Inc < 178151@ Then
        MargRateNY = 0.22
    ElseIf Inc < 340101@ Then
        MargRateNY = 0.24
    ElseIf Inc < 431901@ Then
        MargRateNY = 0.32
    ElseIf Inc < 647851@ Then
        MargRateNY = 0.35
    Else
        MargRateNY = 0.37
    End If
ElseIf Stat = 3 Then
    If Inc < 10276@ Then
        MargRateNY = 0.1
    ElseIf Inc < 41776@ Then
        MargRateNY = 0.12
    ElseIf Inc < 89076@ Then
        MargRateNY = 0.22
    ElseIf Inc < 170051@ Then
        MargRateNY = 0.24
    ElseIf Inc < 215951@ Then
        MargRateNY = 0.32
    ElseIf Inc < 323926@ Then
        MargRateNY = 0.35
    Else
        MargRateNY = 0.37
    End If
ElseIf Stat = 4 Then
    If Inc < 14651@ Then
        MargRateNY = 0.1
    ElseIf Inc < 55901@ Then
        MargRateNY = 0.12
    ElseIf Inc < 89051@ Then
        MargRateNY = 0.22
    ElseIf Inc < 170051@ Then
        MargRateNY = 0.24
    ElseIf Inc < 215951@ Then
        MargRateNY = 0.32
    ElseIf Inc < 539901@ Then
        MargRateNY = 0.35
    Else
        MargRateNY = 0.37
    End If
Else
    MargRateNY = 0
End If

End Function

Public Function SingleTaxNY2(Inc As Currency) As Currency
' updated for 2021 - estimated with 1.02 multiplier
    If Inc < 10476@ Then
        SingleTaxNY2 = Round(CCur(CDbl(Inc) * 0.1))
    ElseIf Inc < 42601@ Then
        SingleTaxNY2 = Round(CCur(CDbl((Inc - 10475@)) * 0.12) + 1047.5@)
    ElseIf Inc < 90851@ Then
        SingleTaxNY2 = Round(CCur(CDbl((Inc - 42600@)) * 0.22) + 4902.5@)
    ElseIf Inc < 173451@ Then
        SingleTaxNY2 = Round(CCur(CDbl((Inc - 90850@)) * 0.24) + 15517.5@)
    ElseIf Inc < 220271@ Then
        SingleTaxNY2 = Round(CCur(CDbl((Inc - 173450@)) * 0.32) + 35341.5@)
    ElseIf Inc < 550701@ Then
        SingleTaxNY2 = Round(CCur(CDbl((Inc - 220270@)) * 0.35) + 50324@)
    Else
        SingleTaxNY2 = Round(CCur(CDbl((Inc - 550700@)) * 0.37) + 165974.5@)
    End If
End Function

Public Function SingleTaxNY(Inc As Currency) As Currency
' updated for 2021 from Bloomberg 2022 Projected Tax Rates document and Rev. Proc. 2021-45
    If Inc < 10276@ Then
        SingleTaxNY = Round(CCur(CDbl(Inc) * 0.1))
    ElseIf Inc < 41776@ Then
        SingleTaxNY = Round(CCur(CDbl((Inc - 10275@)) * 0.12) + 1027.5@)
    ElseIf Inc < 89076@ Then
        SingleTaxNY = Round(CCur(CDbl((Inc - 41775@)) * 0.22) + 4807.5@)
    ElseIf Inc < 170051@ Then
        SingleTaxNY = Round(CCur(CDbl((Inc - 89075@)) * 0.24) + 15213.5@)
    ElseIf Inc < 215951@ Then
        SingleTaxNY = Round(CCur(CDbl((Inc - 170050@)) * 0.32) + 34647.5@)
    ElseIf Inc < 539901@ Then
        SingleTaxNY = Round(CCur(CDbl((Inc - 215950@)) * 0.35) + 49335.5@)
    Else
        SingleTaxNY = Round(CCur(CDbl((Inc - 539900@)) * 0.37) + 162718@)
    End If
End Function

Public Function SingleTax(Inc As Currency) As Currency
'Updated for 2021
    If Inc < 9951@ Then
        SingleTax = Round(CCur(CDbl(Inc) * 0.1))
    ElseIf Inc < 40526@ Then
        SingleTax = Round(CCur(CDbl((Inc - 9950@)) * 0.12) + 995@)
    ElseIf Inc < 86376@ Then
        SingleTax = Round(CCur(CDbl((Inc - 40525@)) * 0.22) + 4664@)
    ElseIf Inc < 164926@ Then
        SingleTax = Round(CCur(CDbl((Inc - 86375@)) * 0.24) + 14751@)
    ElseIf Inc < 209426@ Then
        SingleTax = Round(CCur(CDbl((Inc - 164925@)) * 0.32) + 33603@)
    ElseIf Inc < 523601@ Then
        SingleTax = Round(CCur(CDbl((Inc - 209425@)) * 0.35) + 47843@)
    Else
        SingleTax = Round(CCur(CDbl((Inc - 523600@)) * 0.37) + 157804.25@)
    End If
End Function

Public Function SingleTaxPY(Inc As Currency) As Currency
'Updated for 2021 - TY20
    If Inc < 9876@ Then
        SingleTaxPY = Round(CCur(CDbl(Inc) * 0.1))
    ElseIf Inc < 40126@ Then
        SingleTaxPY = Round(CCur(CDbl((Inc - 9875@)) * 0.12) + 987.5@)
    ElseIf Inc < 85526@ Then
        SingleTaxPY = Round(CCur(CDbl((Inc - 40125@)) * 0.22) + 4617.5@)
    ElseIf Inc < 163301@ Then
        SingleTaxPY = Round(CCur(CDbl((Inc - 85525@)) * 0.24) + 14605.5@)
    ElseIf Inc < 207351@ Then
        SingleTaxPY = Round(CCur(CDbl((Inc - 163300@)) * 0.32) + 33271.5@)
    ElseIf Inc < 518401@ Then
        SingleTaxPY = Round(CCur(CDbl((Inc - 207350@)) * 0.35) + 47367.5@)
    Else
        SingleTaxPY = Round(CCur(CDbl((Inc - 518400@)) * 0.37) + 156235@)
    End If
End Function

Public Function SingleTaxPY2(Inc As Currency) As Currency
'Updated for 2021 - TY19
    If Inc < 9701@ Then
        SingleTaxPY2 = Round(CCur(CDbl(Inc) * 0.1))
    ElseIf Inc < 39476@ Then
        SingleTaxPY2 = Round(CCur(CDbl((Inc - 9700@)) * 0.12) + 970@)
    ElseIf Inc < 84201@ Then
        SingleTaxPY2 = Round(CCur(CDbl((Inc - 39475@)) * 0.22) + 4543@)
    ElseIf Inc < 160726@ Then
        SingleTaxPY2 = Round(CCur(CDbl((Inc - 84200@)) * 0.24) + 14382.5@)
    ElseIf Inc < 204101@ Then
        SingleTaxPY2 = Round(CCur(CDbl((Inc - 160725@)) * 0.32) + 32748.5@)
    ElseIf Inc < 510301@ Then
        SingleTaxPY2 = Round(CCur(CDbl((Inc - 204100@)) * 0.35) + 46628.5@)
    Else
        SingleTaxPY2 = Round(CCur(CDbl((Inc - 510300@)) * 0.37) + 153798.5@)
    End If
End Function

Public Function SingleTaxPY3(Inc As Currency) As Currency
'Updated for 2021 - TY18
    If Inc < 9526@ Then
        SingleTaxPY3 = Round(CCur(CDbl(Inc) * 0.1))
    ElseIf Inc < 38701@ Then
        SingleTaxPY3 = Round(CCur(CDbl((Inc - 9525@)) * 0.12) + 952.5@)
    ElseIf Inc < 82501@ Then
        SingleTaxPY3 = Round(CCur(CDbl((Inc - 38700@)) * 0.22) + 4453.5@)
    ElseIf Inc < 157501@ Then
        SingleTaxPY3 = Round(CCur(CDbl((Inc - 82500@)) * 0.24) + 14089.5@)
    ElseIf Inc < 200001@ Then
        SingleTaxPY3 = Round(CCur(CDbl((Inc - 157500@)) * 0.32) + 32089.5@)
    ElseIf Inc < 500001@ Then
        SingleTaxPY3 = Round(CCur(CDbl((Inc - 200000@)) * 0.35) + 45689.5@)
    Else
        SingleTaxPY3 = Round(CCur(CDbl((Inc - 500000@)) * 0.37) + 150689.5@)
    End If
End Function

Public Function JointTaxNY2(Inc As Currency) As Currency
' updated for 2021 - TY23 estimated with 1.02 multiplier
    If Inc < 20976@ Then
        JointTaxNY2 = Round(CCur(CDbl(Inc) * 0.1))
    ElseIf Inc < 85226@ Then
        JointTaxNY2 = Round(CCur(CDbl((Inc - 20975@)) * 0.12) + 2097.5@)
    ElseIf Inc < 181726@ Then
        JointTaxNY2 = Round(CCur(CDbl((Inc - 85225@)) * 0.22) + 9807.5@)
    ElseIf Inc < 346901@ Then
        JointTaxNY2 = Round(CCur(CDbl((Inc - 181725@)) * 0.24) + 31037.5@)
    ElseIf Inc < 440551@ Then
        JointTaxNY2 = Round(CCur(CDbl((Inc - 346900@)) * 0.32) + 70679.5@)
    ElseIf Inc < 660801@ Then
        JointTaxNY2 = Round(CCur(CDbl((Inc - 440550@)) * 0.35) + 100647.5@)
    Else
        JointTaxNY2 = Round(CCur(CDbl((Inc - 660800@)) * 0.37) + 177735@)
    End If
End Function

Public Function JointTaxNY(Inc As Currency) As Currency
' updated for 2021 - TY22 from Bloomberg 2022 Projected Tax Rates document and Rev. Proc. 2021-45
    If Inc < 20551@ Then
        JointTaxNY = Round(CCur(CDbl(Inc) * 0.1))
    ElseIf Inc < 83551@ Then
        JointTaxNY = Round(CCur(CDbl((Inc - 20550@)) * 0.12) + 2055@)
    ElseIf Inc < 178151@ Then
        JointTaxNY = Round(CCur(CDbl((Inc - 83550@)) * 0.22) + 9615@)
    ElseIf Inc < 340101@ Then
        JointTaxNY = Round(CCur(CDbl((Inc - 178150@)) * 0.24) + 30427@)
    ElseIf Inc < 431901@ Then
        JointTaxNY = Round(CCur(CDbl((Inc - 340100@)) * 0.32) + 69295@)
    ElseIf Inc < 647851@ Then
        JointTaxNY = Round(CCur(CDbl((Inc - 431900@)) * 0.35) + 98671@)
    Else
        JointTaxNY = Round(CCur(CDbl((Inc - 647850@)) * 0.37) + 174253.5@)
    End If
End Function

Public Function JointTax(Inc As Currency) As Currency
'Updated for 2021
    If Inc < 19901@ Then
        JointTax = Round(CCur(CDbl(Inc) * 0.1))
    ElseIf Inc < 81051@ Then
        JointTax = Round(CCur(CDbl((Inc - 19900@)) * 0.12) + 1990@)
    ElseIf Inc < 172751@ Then
        JointTax = Round(CCur(CDbl((Inc - 81050@)) * 0.22) + 9328@)
    ElseIf Inc < 329851@ Then
        JointTax = Round(CCur(CDbl((Inc - 172750@)) * 0.24) + 29502@)
    ElseIf Inc < 418851@ Then
        JointTax = Round(CCur(CDbl((Inc - 329850@)) * 0.32) + 67206@)
    ElseIf Inc < 628301@ Then
        JointTax = Round(CCur(CDbl((Inc - 418850@)) * 0.35) + 95686@)
    Else
        JointTax = Round(CCur(CDbl((Inc - 628300@)) * 0.37) + 168993.5@)
    End If
End Function

Public Function JointTaxPY(Inc As Currency) As Currency
'Updated for 2021 - TY20
    If Inc < 19751@ Then
        JointTaxPY = Round(CCur(CDbl(Inc) * 0.1))
    ElseIf Inc < 80251@ Then
        JointTaxPY = Round(CCur(CDbl((Inc - 19750@)) * 0.12) + 1975@)
    ElseIf Inc < 171051@ Then
        JointTaxPY = Round(CCur(CDbl((Inc - 80250@)) * 0.22) + 9235@)
    ElseIf Inc < 326601@ Then
        JointTaxPY = Round(CCur(CDbl((Inc - 171050@)) * 0.24) + 29211@)
    ElseIf Inc < 414701@ Then
        JointTaxPY = Round(CCur(CDbl((Inc - 326600@)) * 0.32) + 66543@)
    ElseIf Inc < 622051@ Then
        JointTaxPY = Round(CCur(CDbl((Inc - 414700@)) * 0.35) + 94735@)
    Else
        JointTaxPY = Round(CCur(CDbl((Inc - 622050@)) * 0.37) + 167307.5@)
    End If
End Function

Public Function JointTaxPY2(Inc As Currency) As Currency
'Updated for 2021 - TY19
    If Inc < 19401@ Then
        JointTaxPY2 = Round(CCur(CDbl(Inc) * 0.1))
    ElseIf Inc < 78951@ Then
        JointTaxPY2 = Round(CCur(CDbl((Inc - 19400@)) * 0.12) + 1940@)
    ElseIf Inc < 168401@ Then
        JointTaxPY2 = Round(CCur(CDbl((Inc - 78950@)) * 0.22) + 9086@)
    ElseIf Inc < 321451@ Then
        JointTaxPY2 = Round(CCur(CDbl((Inc - 168400@)) * 0.24) + 28765@)
    ElseIf Inc < 408201@ Then
        JointTaxPY2 = Round(CCur(CDbl((Inc - 321450@)) * 0.32) + 65497@)
    ElseIf Inc < 612351@ Then
        JointTaxPY2 = Round(CCur(CDbl((Inc - 408200@)) * 0.35) + 93257@)
    Else
        JointTaxPY2 = Round(CCur(CDbl((Inc - 612350@)) * 0.37) + 164709.5@)
    End If
End Function

Public Function JointTaxPY3(Inc As Currency) As Currency
'Updated for 2021 - TY18
    If Inc < 19051@ Then
        JointTaxPY3 = Round(CCur(CDbl(Inc) * 0.1))
    ElseIf Inc < 77401@ Then
        JointTaxPY3 = Round(CCur(CDbl((Inc - 19050@)) * 0.12) + 1905@)
    ElseIf Inc < 165001@ Then
        JointTaxPY3 = Round(CCur(CDbl((Inc - 77400@)) * 0.22) + 8907@)
    ElseIf Inc < 315001@ Then
        JointTaxPY3 = Round(CCur(CDbl((Inc - 165000@)) * 0.24) + 28179@)
    ElseIf Inc < 400001@ Then
        JointTaxPY3 = Round(CCur(CDbl((Inc - 315000@)) * 0.32) + 64179@)
    ElseIf Inc < 600001@ Then
        JointTaxPY3 = Round(CCur(CDbl((Inc - 400000@)) * 0.35) + 91379@)
    Else
        JointTaxPY3 = Round(CCur(CDbl((Inc - 600000@)) * 0.37) + 161379@)
    End If
End Function

Public Function MFSTaxNY2(Inc As Currency) As Currency
' updated for 2021 - TY23 estimated with 1.02 multiplier
    If Inc < 10501@ Then
        MFSTaxNY2 = Round(CCur(CDbl(Inc) * 0.1))
    ElseIf Inc < 42626@ Then
        MFSTaxNY2 = Round(CCur(CDbl((Inc - 10500@)) * 0.12) + 1050@)
    ElseIf Inc < 90876@ Then
        MFSTaxNY2 = Round(CCur(CDbl((Inc - 42625@)) * 0.22) + 4905@)
    ElseIf Inc < 173476@ Then
        MFSTaxNY2 = Round(CCur(CDbl((Inc - 90875@)) * 0.24) + 15520@)
    ElseIf Inc < 220276@ Then
        MFSTaxNY2 = Round(CCur(CDbl((Inc - 173475@)) * 0.32) + 35344@)
    ElseIf Inc < 330426@ Then
        MFSTaxNY2 = Round(CCur(CDbl((Inc - 220275@)) * 0.35) + 50320@)
    Else
        MFSTaxNY2 = Round(CCur(CDbl((Inc - 330425@)) * 0.37) + 88872.5@)
    End If
End Function

Public Function MFSTaxNY(Inc As Currency) As Currency
'Updated for TY21 based off Rev. Proc. 2021-45
    If Inc < 10276@ Then
        MFSTaxNY = Round(CCur(CDbl(Inc) * 0.1))
    ElseIf Inc < 41776@ Then
        MFSTaxNY = Round(CCur(CDbl((Inc - 10275@)) * 0.12) + 1027.5@)
    ElseIf Inc < 89076@ Then
        MFSTaxNY = Round(CCur(CDbl((Inc - 41775@)) * 0.22) + 4807.5@)
    ElseIf Inc < 170051@ Then
        MFSTaxNY = Round(CCur(CDbl((Inc - 89075@)) * 0.24) + 15213.5@)
    ElseIf Inc < 215951@ Then
        MFSTaxNY = Round(CCur(CDbl((Inc - 170050@)) * 0.32) + 34647.5@)
    ElseIf Inc < 323926@ Then
        MFSTaxNY = Round(CCur(CDbl((Inc - 215950@)) * 0.35) + 49335.5@)
    Else
        MFSTaxNY = Round(CCur(CDbl((Inc - 323925@)) * 0.37) + 87126.75@)
    End If
End Function

Public Function MFSTax(Inc As Currency) As Currency
'Updated for 2021
    If Inc < 9951@ Then
        MFSTax = Round(CCur(CDbl(Inc) * 0.1))
    ElseIf Inc < 40526@ Then
        MFSTax = Round(CCur(CDbl((Inc - 9950@)) * 0.12) + 995@)
    ElseIf Inc < 86376@ Then
        MFSTax = Round(CCur(CDbl((Inc - 40525@)) * 0.22) + 4664@)
    ElseIf Inc < 164926@ Then
        MFSTax = Round(CCur(CDbl((Inc - 86375@)) * 0.24) + 14751@)
    ElseIf Inc < 209426@ Then
        MFSTax = Round(CCur(CDbl((Inc - 164925@)) * 0.32) + 33603@)
    ElseIf Inc < 314151@ Then
        MFSTax = Round(CCur(CDbl((Inc - 209425@)) * 0.35) + 47843@)
    Else
        MFSTax = Round(CCur(CDbl((Inc - 314150@)) * 0.37) + 84496.75@)
    End If
End Function

Public Function MFSTaxPY(Inc As Currency) As Currency
'Updated for 2021 - TY20
    If Inc < 9876@ Then
        MFSTaxPY = Round(CCur(CDbl(Inc) * 0.1))
    ElseIf Inc < 40126@ Then
        MFSTaxPY = Round(CCur(CDbl((Inc - 9875@)) * 0.12) + 987.5@)
    ElseIf Inc < 85526@ Then
        MFSTaxPY = Round(CCur(CDbl((Inc - 40125@)) * 0.22) + 4617.5@)
    ElseIf Inc < 163301@ Then
        MFSTaxPY = Round(CCur(CDbl((Inc - 85525@)) * 0.24) + 14605.5@)
    ElseIf Inc < 207351@ Then
        MFSTaxPY = Round(CCur(CDbl((Inc - 163300@)) * 0.32) + 33271.5@)
    ElseIf Inc < 311026@ Then
        MFSTaxPY = Round(CCur(CDbl((Inc - 207350@)) * 0.35) + 47367.5@)
    Else
        MFSTaxPY = Round(CCur(CDbl((Inc - 311025@)) * 0.37) + 83653.75@)
    End If
End Function

Public Function MFSTaxPY2(Inc As Currency) As Currency
'Updated for 2021 - TY19
    If Inc < 9701@ Then
        MFSTaxPY2 = Round(CCur(CDbl(Inc) * 0.1))
    ElseIf Inc < 39476@ Then
        MFSTaxPY2 = Round(CCur(CDbl((Inc - 9700@)) * 0.12) + 970@)
    ElseIf Inc < 84201@ Then
        MFSTaxPY2 = Round(CCur(CDbl((Inc - 39475@)) * 0.22) + 4543@)
    ElseIf Inc < 160726@ Then
        MFSTaxPY2 = Round(CCur(CDbl((Inc - 84200@)) * 0.24) + 14382.5@)
    ElseIf Inc < 204101@ Then
        MFSTaxPY2 = Round(CCur(CDbl((Inc - 160725@)) * 0.32) + 32748.5@)
    ElseIf Inc < 306176@ Then
        MFSTaxPY2 = Round(CCur(CDbl((Inc - 204100@)) * 0.35) + 46628.5@)
    Else
        MFSTaxPY2 = Round(CCur(CDbl((Inc - 306175@)) * 0.37) + 82354.75@)
    End If
End Function

Public Function MFSTaxPY3(Inc As Currency) As Currency
'Updated for 2021 - TY18
    If Inc < 9526@ Then
        MFSTaxPY3 = Round(CCur(CDbl(Inc) * 0.1))
    ElseIf Inc < 38701@ Then
        MFSTaxPY3 = Round(CCur(CDbl((Inc - 9525@)) * 0.12) + 952.5@)
    ElseIf Inc < 82501@ Then
        MFSTaxPY3 = Round(CCur(CDbl((Inc - 38700@)) * 0.22) + 4453.5@)
    ElseIf Inc < 157501@ Then
        MFSTaxPY3 = Round(CCur(CDbl((Inc - 82500@)) * 0.24) + 14089.5@)
    ElseIf Inc < 200001@ Then
        MFSTaxPY3 = Round(CCur(CDbl((Inc - 157500@)) * 0.32) + 32089.5@)
    ElseIf Inc < 300001@ Then
        MFSTaxPY3 = Round(CCur(CDbl((Inc - 200000@)) * 0.35) + 45689.5@)
    Else
        MFSTaxPY3 = Round(CCur(CDbl((Inc - 300000@)) * 0.37) + 80689.5@)
    End If
End Function

Public Function HOHTaxNY2(Inc As Currency) As Currency
' updated for 2021 - TY23 estimated with 1.02 multiplier
    If Inc < 14951@ Then
        HOHTaxNY2 = Round(CCur(CDbl(Inc) * 0.1))
    ElseIf Inc < 57026@ Then
        HOHTaxNY2 = Round(CCur(CDbl((Inc - 14950@)) * 0.12) + 1495@)
    ElseIf Inc < 90826@ Then
        HOHTaxNY2 = Round(CCur(CDbl((Inc - 57025@)) * 0.22) + 6544@)
    ElseIf Inc < 173451@ Then
        HOHTaxNY2 = Round(CCur(CDbl((Inc - 90825@)) * 0.24) + 13980@)
    ElseIf Inc < 220276@ Then
        HOHTaxNY2 = Round(CCur(CDbl((Inc - 173450@)) * 0.32) + 33810@)
    ElseIf Inc < 550701@ Then
        HOHTaxNY2 = Round(CCur(CDbl((Inc - 220275@)) * 0.35) + 48794@)
    Else
        HOHTaxNY2 = Round(CCur(CDbl((Inc - 550700@)) * 0.37) + 164443@)
    End If
End Function

Public Function HOHTaxNY(Inc As Currency) As Currency
' updated for 2021 - TY22 from Bloomberg 2022 Projected Tax Rates document
    If Inc < 14651@ Then
        HOHTaxNY = Round(CCur(CDbl(Inc) * 0.1))
    ElseIf Inc < 55901@ Then
        HOHTaxNY = Round(CCur(CDbl((Inc - 14650@)) * 0.12) + 1465@)
    ElseIf Inc < 89051@ Then
        HOHTaxNY = Round(CCur(CDbl((Inc - 55900@)) * 0.22) + 6415@)
    ElseIf Inc < 170051@ Then
        HOHTaxNY = Round(CCur(CDbl((Inc - 89050@)) * 0.24) + 13708@)
    ElseIf Inc < 215951@ Then
        HOHTaxNY = Round(CCur(CDbl((Inc - 170050@)) * 0.32) + 33148@)
    ElseIf Inc < 539901@ Then
        HOHTaxNY = Round(CCur(CDbl((Inc - 215950@)) * 0.35) + 47836@)
    Else
        HOHTaxNY = Round(CCur(CDbl((Inc - 539900@)) * 0.37) + 161218.5@)
    End If
End Function

Public Function HOHTax(Inc As Currency) As Currency
'Updated for 2021
    If Inc < 14201@ Then
        HOHTax = Round(CCur(CDbl(Inc) * 0.1))
    ElseIf Inc < 54201@ Then
        HOHTax = Round(CCur(CDbl((Inc - 14200@)) * 0.12) + 1420@)
    ElseIf Inc < 86351@ Then
        HOHTax = Round(CCur(CDbl((Inc - 54200@)) * 0.22) + 6220@)
    ElseIf Inc < 164901@ Then
        HOHTax = Round(CCur(CDbl((Inc - 86350@)) * 0.24) + 13293@)
    ElseIf Inc < 209401@ Then
        HOHTax = Round(CCur(CDbl((Inc - 164900@)) * 0.32) + 32145@)
    ElseIf Inc < 523601@ Then
        HOHTax = Round(CCur(CDbl((Inc - 209400@)) * 0.35) + 46385@)
    Else
        HOHTax = Round(CCur(CDbl((Inc - 523600@)) * 0.37) + 156355@)
    End If
End Function

Public Function HOHTaxPY(Inc As Currency) As Currency
'Updated for 2021 - TY20
    If Inc < 14101@ Then
        HOHTaxPY = Round(CCur(CDbl(Inc) * 0.1))
    ElseIf Inc < 53701@ Then
        HOHTaxPY = Round(CCur(CDbl((Inc - 14100@)) * 0.12) + 1410@)
    ElseIf Inc < 85501@ Then
        HOHTaxPY = Round(CCur(CDbl((Inc - 53700@)) * 0.22) + 6162@)
    ElseIf Inc < 163301@ Then
        HOHTaxPY = Round(CCur(CDbl((Inc - 85500@)) * 0.24) + 13158@)
    ElseIf Inc < 207351@ Then
        HOHTaxPY = Round(CCur(CDbl((Inc - 163300@)) * 0.32) + 31830@)
    ElseIf Inc < 518401@ Then
        HOHTaxPY = Round(CCur(CDbl((Inc - 207350@)) * 0.35) + 45926@)
    Else
        HOHTaxPY = Round(CCur(CDbl((Inc - 518400@)) * 0.37) + 154793.5@)
    End If
End Function

Public Function HOHTaxPY2(Inc As Currency) As Currency
'Updated for 2021 - TY19
    If Inc < 13851@ Then
        HOHTaxPY2 = Round(CCur(CDbl(Inc) * 0.1))
    ElseIf Inc < 52851@ Then
        HOHTaxPY2 = Round(CCur(CDbl((Inc - 13850@)) * 0.12) + 1385@)
    ElseIf Inc < 84201@ Then
        HOHTaxPY2 = Round(CCur(CDbl((Inc - 52850@)) * 0.22) + 6065@)
    ElseIf Inc < 160701@ Then
        HOHTaxPY2 = Round(CCur(CDbl((Inc - 84200@)) * 0.24) + 12962@)
    ElseIf Inc < 204101@ Then
        HOHTaxPY2 = Round(CCur(CDbl((Inc - 160700@)) * 0.32) + 31322@)
    ElseIf Inc < 510301@ Then
        HOHTaxPY2 = Round(CCur(CDbl((Inc - 204100@)) * 0.35) + 45210@)
    Else
        HOHTaxPY2 = Round(CCur(CDbl((Inc - 510300@)) * 0.37) + 152380@)
    End If
End Function

Public Function HOHTaxPY3(Inc As Currency) As Currency
'Updated for 2021 - TY18
    If Inc < 13601@ Then
        HOHTaxPY3 = Round(CCur(CDbl(Inc) * 0.1))
    ElseIf Inc < 51801@ Then
        HOHTaxPY3 = Round(CCur(CDbl((Inc - 13600@)) * 0.12) + 1360@)
    ElseIf Inc < 82501@ Then
        HOHTaxPY3 = Round(CCur(CDbl((Inc - 51800@)) * 0.22) + 5944@)
    ElseIf Inc < 157501@ Then
        HOHTaxPY3 = Round(CCur(CDbl((Inc - 82500@)) * 0.24) + 12698@)
    ElseIf Inc < 200001@ Then
        HOHTaxPY3 = Round(CCur(CDbl((Inc - 157500@)) * 0.32) + 30698@)
    ElseIf Inc < 500001@ Then
        HOHTaxPY3 = Round(CCur(CDbl((Inc - 200000@)) * 0.35) + 44298@)
    Else
        HOHTaxPY3 = Round(CCur(CDbl((Inc - 500000@)) * 0.37) + 149298@)
    End If
End Function

Public Function EICNoChild(Amount As Currency) As Currency
    'Updated for 2021 - 9.23.21
    If Amount >= 21430@ Then
        ReturnVal = 0
    ElseIf Amount >= 21400@ Then
        ReturnVal = 2@
    ElseIf Amount >= 9800@ And Amount < 11650@ Then
        ReturnVal = 1502@
    Else
        Dim MidInt As Long
        Dim Mid As Currency
        Dim Credit As Currency
        Dim Phase As Currency
        Dim PhaseOut As Currency
        
        If Amount > 0 Then
            MidInt = CLng(Amount / 50@)
            Mid = (CCur(MidInt) * 50@) + 25@
        Else
            Mid = 0
        End If

        Credit = MinValue(CDollar(CDbl(Mid) * 0.153), 1502@)
        Phase = MaxValue(0, Mid - 11613@)
        PhaseOut = CDollar(CDbl(Phase) * 0.153)
        ReturnVal = MaxValue(0, Credit - PhaseOut)
    End If
End Function

Public Function EICMNoChild(Amount As Currency) As Currency
    'Updated for 2021 - 9.23.21
    If Amount >= 27380@ Then
        ReturnVal = 0
    ElseIf Amount >= 27350@ Then
        ReturnVal = 2@
    ElseIf Amount >= 9800@ And Amount < 17600@ Then
        ReturnVal = 1502@
    Else
        Dim MidInt As Long
        Dim Mid As Currency
        Dim Credit As Currency
        Dim Phase As Currency
        Dim PhaseOut As Currency
        
        If Amount > 0 Then
            MidInt = CLng(Amount / 50@)
            Mid = (CCur(MidInt) * 50@) + 25@
        Else
            Mid = 0
        End If

        Credit = MinValue(CDollar(CDbl(Mid) * 0.153), 1502@)
        Phase = MaxValue(0, Mid - 17563@)
        PhaseOut = CDollar(CDbl(Phase) * 0.153)
        ReturnVal = MaxValue(0, Credit - PhaseOut)
    End If
End Function

Public Function EICOneChild(Amount As Currency) As Currency
'Updated for 2021 - 9.23.21
    If Amount >= 42158@ Then
        ReturnVal = 0
    ElseIf Amount >= 42150@ Then
        ReturnVal = 1@
    ElseIf Amount >= 10600@ And Amount < 19550@ Then
        ReturnVal = 3618@
    Else
        Dim MidInt As Long
        Dim Mid As Currency
        Dim Credit As Currency
        Dim Phase As Currency
        Dim PhaseOut As Currency
        
        If Amount > 0 Then
            MidInt = CLng(Amount / 50@)
            Mid = (CCur(MidInt) * 50@) + 25@
        Else
            Mid = 0
        End If
    
        Credit = MinValue(CDollar(CDbl(Mid) * 0.34), 3618@)
        Phase = MaxValue(0, Mid - 19517.5@)
    
        If Mid < 19550@ Then
            PhaseOut = 0
        Else
            PhaseOut = CDollar(CDbl(Phase) * 0.1598)
        End If
    
        ReturnVal = MaxValue(0, Credit - PhaseOut)
    End If
End Function

Public Function EICMOneChild(Amount As Currency) As Currency
'Updated for 2021 - 9.23.21
    If Amount >= 48108@ Then
        ReturnVal = 0
    ElseIf Amount >= 48100@ Then
        ReturnVal = 1@
    ElseIf Amount >= 10600@ And Amount < 25500@ Then
        ReturnVal = 3618@
    Else
        Dim MidInt As Long
        Dim Mid As Currency
        Dim Credit As Currency
        Dim Phase As Currency
        Dim PhaseOut As Currency
        
        If Amount > 0 Then
            MidInt = CLng(Amount / 50@)
            Mid = (CCur(MidInt) * 50@) + 25@
        Else
            Mid = 0
        End If
    
        Credit = MinValue(CDollar(CDbl(Mid) * 0.34), 3618@)
        Phase = MaxValue(0, Mid - 25467.5@)
    
        If Mid < 25500@ Then
            PhaseOut = 0
        Else
            PhaseOut = CDollar(CDbl(Phase) * 0.1598)
        End If
    
        ReturnVal = MaxValue(0, Credit - PhaseOut)
    End If
End Function

Public Function EICTwoChild(Amount As Currency) As Currency
'Updated for 2021 - 9.23.21
    If Amount >= 47915@ Then
        ReturnVal = 0
    ElseIf Amount >= 47900@ Then
        ReturnVal = 2@
    ElseIf Amount >= 14950@ And Amount < 19550@ Then
        ReturnVal = 5980@
    Else
        Dim MidInt As Long
        Dim Mid As Currency
        Dim Credit As Currency
        Dim Phase As Currency
        Dim PhaseOut As Currency
        
        If Amount > 0 Then
            MidInt = CLng(Amount / 50@)
            Mid = (CCur(MidInt) * 50@) + 25@
        Else
            Mid = 0
        End If
    
        Credit = MinValue(CDollar(CDbl(Mid) * 0.4), 5980@)
        Phase = MaxValue(0, Mid - 19520@)
    
        If Mid < 19550@ Then
            PhaseOut = 0
        Else
            PhaseOut = CDollar(CDbl(Phase) * 0.2106)
        End If
    
        ReturnVal = MaxValue(0, Credit - PhaseOut)
    End If
End Function

Public Function EICMTwoChild(Amount As Currency) As Currency
'Updated for 2021 - 9.23.21
    If Amount >= 53865@ Then
        ReturnVal = 0
    ElseIf Amount >= 53850@ Then
        ReturnVal = 2@
    ElseIf Amount >= 14950@ And Amount < 25500@ Then
        ReturnVal = 5980@
    Else
        Dim MidInt As Long
        Dim Mid As Currency
        Dim Credit As Currency
        Dim Phase As Currency
        Dim PhaseOut As Currency
        
        If Amount > 0 Then
            MidInt = CLng(Amount / 50@)
            Mid = (CCur(MidInt) * 50@) + 25@
        Else
            Mid = 0
        End If
    
        Credit = MinValue(CDollar(CDbl(Mid) * 0.4), 5980@)
        Phase = MaxValue(0, Mid - 25470@)
    
        If Mid < 25500@ Then
            PhaseOut = 0
        Else
            PhaseOut = CDollar(CDbl(Phase) * 0.2106)
        End If
    
        ReturnVal = MaxValue(0, Credit - PhaseOut)
    End If
End Function

Public Function EICThreeChild(Amount As Currency) As Currency
'Updated for 2021 - 9.23.21
    If Amount >= 51464@ Then
        ReturnVal = 0
    ElseIf Amount >= 51450@ Then
        ReturnVal = 2@
    ElseIf Amount >= 14950@ And Amount < 19550@ Then
        ReturnVal = 6728@
    Else
        Dim MidInt As Long
        Dim Mid As Currency
        Dim Credit As Currency
        Dim Phase As Currency
        Dim PhaseOut As Currency
        
        If Amount > 0 Then
            MidInt = CLng(Amount / 50@)
            Mid = (CCur(MidInt) * 50@) + 25@
        Else
            Mid = 0
        End If
    
        Credit = MinValue(CDollar(CDbl(Mid) * 0.45), 6728@)
        Phase = MaxValue(0, Mid - 19517.6@)
    
        If Mid < 19550@ Then
            PhaseOut = 0
        Else
            PhaseOut = CDollar(CDbl(Phase) * 0.2106)
        End If
    
        ReturnVal = MaxValue(0, Credit - PhaseOut)
    End If
End Function

Public Function EICMThreeChild(Amount As Currency) As Currency
'Updated for 2021 - 9.23.21
    If Amount >= 57414@ Then
        ReturnVal = 0
    ElseIf Amount >= 57400@ Then
        ReturnVal = 2@
    ElseIf Amount >= 14950@ And Amount < 25500@ Then
        ReturnVal = 6728@
    Else
        Dim MidInt As Long
        Dim Mid As Currency
        Dim Credit As Currency
        Dim Phase As Currency
        Dim PhaseOut As Currency
        
        If Amount > 0 Then
            MidInt = CLng(Amount / 50@)
            Mid = (CCur(MidInt) * 50@) + 25@
        Else
            Mid = 0
        End If
    
        Credit = MinValue(CDollar(CDbl(Mid) * 0.45), 6728@)
        Phase = MaxValue(0, Mid - 25467.6@)
    
        If Mid < 25500@ Then
            PhaseOut = 0
        Else
            PhaseOut = CDollar(CDbl(Phase) * 0.2106)
        End If
    
        ReturnVal = MaxValue(0, Credit - PhaseOut)
    End If
End Function

Public Function EICNoChildNY(Amount As Currency) As Currency
'Updated for 2022 - 10.11.21
    If Amount >= 16480@ Then
        ReturnVal = 0
    ElseIf Amount >= 7320@ And Amount < 9160@ Then
        ReturnVal = 560@
    Else
        Dim MidInt As Long
        Dim Mid As Currency
        Dim Credit As Currency
        Dim Phase As Currency
        Dim PhaseOut As Currency
        
        If Amount > 0 Then
            MidInt = CLng(Amount / 50@)
            Mid = (CCur(MidInt) * 50@) + 25@
        Else
            Mid = 0
        End If

        Credit = MinValue(CDollar(CDbl(Mid) * 0.0765), 560@)
        Phase = MaxValue(0, Mid - 9160@)
        PhaseOut = CDollar(CDbl(Phase) * 0.0765)
        ReturnVal = MaxValue(0, Credit - PhaseOut)
    End If
End Function

Public Function EICMNoChildNY(Amount As Currency) As Currency
'Updated for 2022 - 10.11.21
    If Amount >= 22610@ Then
        ReturnVal = 0
    ElseIf Amount >= 7320@ And Amount < 15290@ Then
        ReturnVal = 560@
    Else
        Dim MidInt As Long
        Dim Mid As Currency
        Dim Credit As Currency
        Dim Phase As Currency
        Dim PhaseOut As Currency
        
        If Amount > 0 Then
            MidInt = CLng(Amount / 50@)
            Mid = (CCur(MidInt) * 50@) + 25@
        Else
            Mid = 0
        End If

        Credit = MinValue(CDollar(CDbl(Mid) * 0.0765), 560@)
        Phase = MaxValue(0, Mid - 15290@)
        PhaseOut = CDollar(CDbl(Phase) * 0.0765)
        ReturnVal = MaxValue(0, Credit - PhaseOut)
    End If
End Function

Public Function EICOneChildNY(Amount As Currency) As Currency
'Updated for 2022 - 10.11.21
    If Amount >= 43492@ Then
        ReturnVal = 0
    ElseIf Amount >= 10980@ And Amount < 20130@ Then
        ReturnVal = 3733@
    Else
        Dim MidInt As Long
        Dim Mid As Currency
        Dim Credit As Currency
        Dim Phase As Currency
        Dim PhaseOut As Currency
        
        If Amount > 0 Then
            MidInt = CLng(Amount / 50@)
            Mid = (CCur(MidInt) * 50@) + 25@
        Else
            Mid = 0
        End If
    
        Credit = MinValue(CDollar(CDbl(Mid) * 0.34), 3733@)
        Phase = MaxValue(0, Mid - 20130@)
    
        If Mid < 20130@ Then
            PhaseOut = 0
        Else
            PhaseOut = CDollar(CDbl(Phase) * 0.1598)
        End If
    
        ReturnVal = MaxValue(0, Credit - PhaseOut)
    End If
End Function

Public Function EICMOneChildNY(Amount As Currency) As Currency
'Updated for 2022 - 10.11.21
    If Amount >= 49622@ Then
        ReturnVal = 0
    ElseIf Amount >= 10980@ And Amount < 26260@ Then
        ReturnVal = 3733@
    Else
        Dim MidInt As Long
        Dim Mid As Currency
        Dim Credit As Currency
        Dim Phase As Currency
        Dim PhaseOut As Currency
        
        If Amount > 0 Then
            MidInt = CLng(Amount / 50@)
            Mid = (CCur(MidInt) * 50@) + 25@
        Else
            Mid = 0
        End If
    
        Credit = MinValue(CDollar(CDbl(Mid) * 0.34), 3733@)
        Phase = MaxValue(0, Mid - 26260@)
    
        If Mid < 26260@ Then
            PhaseOut = 0
        Else
            PhaseOut = CDollar(CDbl(Phase) * 0.1598)
        End If
    
        ReturnVal = MaxValue(0, Credit - PhaseOut)
    End If
End Function

Public Function EICTwoChildNY(Amount As Currency) As Currency
'Updated for 2022 - 10.11.21
    If Amount >= 49399@ Then
        ReturnVal = 0
    ElseIf Amount >= 15410@ And Amount < 20130@ Then
        ReturnVal = 6164@
    Else
        Dim MidInt As Long
        Dim Mid As Currency
        Dim Credit As Currency
        Dim Phase As Currency
        Dim PhaseOut As Currency
        
        If Amount > 0 Then
            MidInt = CLng(Amount / 50@)
            Mid = (CCur(MidInt) * 50@) + 25@
        Else
            Mid = 0
        End If
    
        Credit = MinValue(CDollar(CDbl(Mid) * 0.4), 6164@)
        Phase = MaxValue(0, Mid - 20130@)
    
        If Mid < 20130@ Then
            PhaseOut = 0
        Else
            PhaseOut = CDollar(CDbl(Phase) * 0.2106)
        End If
    
        ReturnVal = MaxValue(0, Credit - PhaseOut)
    End If
End Function

Public Function EICMTwoChildNY(Amount As Currency) As Currency
'Updated for 2022 - 10.11.21
    If Amount >= 55529@ Then
        ReturnVal = 0
    ElseIf Amount >= 15410@ And Amount < 26260@ Then
        ReturnVal = 6164@
    Else
        Dim MidInt As Long
        Dim Mid As Currency
        Dim Credit As Currency
        Dim Phase As Currency
        Dim PhaseOut As Currency
        
        If Amount > 0 Then
            MidInt = CLng(Amount / 50@)
            Mid = (CCur(MidInt) * 50@) + 25@
        Else
            Mid = 0
        End If
    
        Credit = MinValue(CDollar(CDbl(Mid) * 0.4), 6164@)
        Phase = MaxValue(0, Mid - 26260@)
    
        If Mid < 26260@ Then
            PhaseOut = 0
        Else
            PhaseOut = CDollar(CDbl(Phase) * 0.2106)
        End If
    
        ReturnVal = MaxValue(0, Credit - PhaseOut)
    End If
End Function

Public Function EICThreeChildNY(Amount As Currency) As Currency
'Updated for 2022 - 10.11.21
    If Amount >= 53057@ Then
        ReturnVal = 0
    ElseIf Amount >= 15410@ And Amount < 20130@ Then
        ReturnVal = 6935@
    Else
        Dim MidInt As Long
        Dim Mid As Currency
        Dim Credit As Currency
        Dim Phase As Currency
        Dim PhaseOut As Currency
        
        If Amount > 0 Then
            MidInt = CLng(Amount / 50@)
            Mid = (CCur(MidInt) * 50@) + 25@
        Else
            Mid = 0
        End If
    
        Credit = MinValue(CDollar(CDbl(Mid) * 0.45), 6935@)
        Phase = MaxValue(0, Mid - 20130@)
    
        If Mid < 19520@ Then
            PhaseOut = 0
        Else
            PhaseOut = CDollar(CDbl(Phase) * 0.2106)
        End If
    
        ReturnVal = MaxValue(0, Credit - PhaseOut)
    End If
End Function

Public Function EICMThreeChildNY(Amount As Currency) As Currency
'Updated for 2022 - 10.11.21
    If Amount >= 59187@ Then
        ReturnVal = 0
    ElseIf Amount >= 15410@ And Amount < 26260@ Then
        ReturnVal = 6935@
    Else
        Dim MidInt As Long
        Dim Mid As Currency
        Dim Credit As Currency
        Dim Phase As Currency
        Dim PhaseOut As Currency
        
        If Amount > 0 Then
            MidInt = CLng(Amount / 50@)
            Mid = (CCur(MidInt) * 50@) + 25@
        Else
            Mid = 0
        End If
    
        Credit = MinValue(CDollar(CDbl(Mid) * 0.45), 6935@)
        Phase = MaxValue(0, Mid - 26260@)
    
        If Mid < 26260@ Then
            PhaseOut = 0
        Else
            PhaseOut = CDollar(CDbl(Phase) * 0.2106)
        End If
    
        ReturnVal = MaxValue(0, Credit - PhaseOut)
    End If
End Function

Public Function LuxLim(YrInSrv As Integer, CY As Integer, PreTCJA As Integer) As Currency
'Updated for 2021
   If YrInSrv = 1986 Then
        If CY = 1 Then
                LuxLim = 3200@
            Else
                LuxLim = 4800@
        End If
    ElseIf YrInSrv = 1987 Then
            If CY = 1 Then
                LuxLim = 2560@
            ElseIf CY = 2 Then
                LuxLim = 4100@
            ElseIf CY = 3 Then
                LuxLim = 2450@
            Else
                LuxLim = 1475@
            End If
  ElseIf YrInSrv = 1988 Then
            If CY = 1 Then
                LuxLim = 2560@
            ElseIf CY = 2 Then
                LuxLim = 4100@
            ElseIf CY = 3 Then
                LuxLim = 2450@
            Else
                LuxLim = 1475@
            End If
  ElseIf YrInSrv = 1989 Then
            If CY = 1 Then
                LuxLim = 2660@
            ElseIf CY = 2 Then
                LuxLim = 4200@
            ElseIf CY = 3 Then
                LuxLim = 2550@
            Else
                LuxLim = 1475@
            End If
    ElseIf YrInSrv = 1990 Then
            If CY = 1 Then
                LuxLim = 2660@
            ElseIf CY = 2 Then
                LuxLim = 4200@
            ElseIf CY = 3 Then
                LuxLim = 2550@
            Else
                LuxLim = 1475@
            End If
    ElseIf YrInSrv = 1991 Then
            If CY = 1 Then
                LuxLim = 2660@
            ElseIf CY = 2 Then
                LuxLim = 4300@
            ElseIf CY = 3 Then
                LuxLim = 2550@
            Else
                LuxLim = 1575@
            End If
    ElseIf YrInSrv = 1992 Then
            If CY = 1 Then
                LuxLim = 2760@
            ElseIf CY = 2 Then
                LuxLim = 4400@
            ElseIf CY = 3 Then
                LuxLim = 2650@
            Else
                LuxLim = 1575@
            End If
    ElseIf YrInSrv = 1993 Then
            If CY = 1 Then
                LuxLim = 2860@
            ElseIf CY = 2 Then
                LuxLim = 4600@
            ElseIf CY = 3 Then
                LuxLim = 2750@
            Else
                LuxLim = 1675@
            End If
    ElseIf YrInSrv = 1994 Then
            If CY = 1 Then
                LuxLim = 2960@
            ElseIf CY = 2 Then
                LuxLim = 4700@
            ElseIf CY = 3 Then
                LuxLim = 2850@
            Else
                LuxLim = 1675@
            End If
    ElseIf YrInSrv = 1995 Then
            If CY = 1 Then
                LuxLim = 3060@
            ElseIf CY = 2 Then
                LuxLim = 4900@
            ElseIf CY = 3 Then
                LuxLim = 2950@
            Else
                LuxLim = 1775@
            End If
    ElseIf YrInSrv = 1996 Then
            If CY = 1 Then
                LuxLim = 3060@
            ElseIf CY = 2 Then
                LuxLim = 4900@
            ElseIf CY = 3 Then
                LuxLim = 2950@
            Else
                LuxLim = 1775@
            End If
    ElseIf YrInSrv = 1997 Then
            If CY = 1 Then
                LuxLim = 3160@
            ElseIf CY = 2 Then
                LuxLim = 5000@
            ElseIf CY = 3 Then
                LuxLim = 3050@
            Else
                LuxLim = 1775@
            End If
    ElseIf YrInSrv = 1998 Then
            If CY = 1 Then
                LuxLim = 3160@
            ElseIf CY = 2 Then
                LuxLim = 5000@
            ElseIf CY = 3 Then
                LuxLim = 2950@
            Else
                LuxLim = 1775@
            End If
    ElseIf YrInSrv = 1999 Then
            If CY = 1 Then
                LuxLim = 3060@
            ElseIf CY = 2 Then
                LuxLim = 5000@
            ElseIf CY = 3 Then
                LuxLim = 2950@
            Else
                LuxLim = 1775@
            End If
    ElseIf YrInSrv = 2000 Then
            If CY = 1 Then
                LuxLim = 3060@
            ElseIf CY = 2 Then
                LuxLim = 4900@
            ElseIf CY = 3 Then
                LuxLim = 2950@
            Else
                LuxLim = 1775@
            End If
      ElseIf YrInSrv = 2001 Then
            If CY = 1 Then
                LuxLim = 3060@
            ElseIf CY = 2 Then
                LuxLim = 4900@
            ElseIf CY = 3 Then
                LuxLim = 2950@
            Else
                LuxLim = 1775@
            End If
            
    ElseIf YrInSrv = 2002 Then
            If CY = 1 Then
                LuxLim = 3060@
            ElseIf CY = 2 Then
                LuxLim = 4900@
            ElseIf CY = 3 Then
                LuxLim = 2950@
            Else
                LuxLim = 1775@
            End If
    ElseIf YrInSrv = 2003 Then
            If CY = 1 Then
                LuxLim = 3060@
            ElseIf CY = 2 Then
                LuxLim = 4900@
            ElseIf CY = 3 Then
                LuxLim = 2950@
            Else
                LuxLim = 1775@
            End If
    ElseIf YrInSrv = 2004 Then
            If CY = 1 Then
                LuxLim = 2960@
            ElseIf CY = 2 Then
                LuxLim = 4800@
            ElseIf CY = 3 Then
                LuxLim = 2850@
            Else
                LuxLim = 1675@
            End If
    ElseIf YrInSrv = 2005 Then
            If CY = 1 Then
                LuxLim = 2960@
            ElseIf CY = 2 Then
                LuxLim = 4700@
            ElseIf CY = 3 Then
                LuxLim = 2850@
            Else
                LuxLim = 1675@
            End If
    ElseIf YrInSrv = 2006 Then
            If CY = 1 Then
                LuxLim = 2960@
            ElseIf CY = 2 Then
                LuxLim = 4800@
            ElseIf CY = 3 Then
                LuxLim = 2850@
            Else
                LuxLim = 1775@
            End If
    ElseIf YrInSrv = 2007 Then
            If CY = 1 Then
                LuxLim = 3060@
            ElseIf CY = 2 Then
                LuxLim = 4900@
            ElseIf CY = 3 Then
                LuxLim = 2850@
            Else
                LuxLim = 1775@
            End If
    ElseIf YrInSrv = 2008 Then
            If CY = 1 Then
                LuxLim = 2960@
            ElseIf CY = 2 Then
                LuxLim = 4800@
            ElseIf CY = 3 Then
                LuxLim = 2850@
            Else
                LuxLim = 1775@
            End If
    ElseIf YrInSrv = 2009 Then
            If CY = 1 Then
                LuxLim = 2960@
            ElseIf CY = 2 Then
                LuxLim = 4800@
            ElseIf CY = 3 Then
                LuxLim = 2850@
            Else
                LuxLim = 1775@
            End If
    ElseIf YrInSrv = 2010 Then
            If CY = 1 Then
                LuxLim = 3060@
            ElseIf CY = 2 Then
                LuxLim = 4900@
            ElseIf CY = 3 Then
                LuxLim = 2950@
            Else
                LuxLim = 1775@
            End If
    ElseIf YrInSrv = 2011 Then
            If CY = 1 Then
                LuxLim = 3060@
            ElseIf CY = 2 Then
                LuxLim = 4900@
            ElseIf CY = 3 Then
                LuxLim = 2950@
            Else
                LuxLim = 1775@
            End If
    ElseIf YrInSrv = 2012 Then
            If CY = 1 Then
                LuxLim = 3160@
            ElseIf CY = 2 Then
                LuxLim = 5100@
            ElseIf CY = 3 Then
                LuxLim = 3050@
            Else
                LuxLim = 1875@
            End If
    ElseIf YrInSrv = 2013 Then
            If CY = 1 Then
                LuxLim = 3160@
            ElseIf CY = 2 Then
                LuxLim = 5100@
            ElseIf CY = 3 Then
                LuxLim = 3050@
            Else
                LuxLim = 1875@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2023 Then
            If CY = 1 Then
                LuxLim = 11160@
            ElseIf CY = 2 Then
                LuxLim = 5100@
            ElseIf CY = 3 Then
                LuxLim = 3050@
            Else
                LuxLim = 1875@
            End If
    ElseIf YrInSrv = 2014 Then
            If CY = 1 Then
                LuxLim = 3160@
            ElseIf CY = 2 Then
                LuxLim = 5100@
            ElseIf CY = 3 Then
                LuxLim = 3050@
            Else
                LuxLim = 1875@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2024 Then
            If CY = 1 Then
                LuxLim = 11160@
            ElseIf CY = 2 Then
                LuxLim = 5100@
            ElseIf CY = 3 Then
                LuxLim = 3050@
            Else
                LuxLim = 1875@
            End If
    ElseIf YrInSrv = 2015 Then
            If CY = 1 Then
                LuxLim = 3160@
            ElseIf CY = 2 Then
                LuxLim = 5100@
            ElseIf CY = 3 Then
                LuxLim = 3050@
            Else
                LuxLim = 1875@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2025 Then
            If CY = 1 Then
                LuxLim = 11160@
            ElseIf CY = 2 Then
                LuxLim = 5100@
            ElseIf CY = 3 Then
                LuxLim = 3050@
            Else
                LuxLim = 1875@
            End If
    ElseIf YrInSrv = 2016 Then
            If CY = 1 Then
                LuxLim = 3160@
            ElseIf CY = 2 Then
                LuxLim = 5100@
            ElseIf CY = 3 Then
                LuxLim = 3050@
            Else
                LuxLim = 1875@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2026 Then
            If CY = 1 Then
                LuxLim = 11160@
            ElseIf CY = 2 Then
                LuxLim = 5100@
            ElseIf CY = 3 Then
                LuxLim = 3050@
            Else
                LuxLim = 1875@
            End If
    ElseIf YrInSrv = 2017 Then
            If CY = 1 Then
                LuxLim = 3160@
            ElseIf CY = 2 Then
                LuxLim = 5100@
            ElseIf CY = 3 Then
                LuxLim = 3050@
            Else
                LuxLim = 1875@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2027 Then
            If CY = 1 Then
                LuxLim = 11160@
            ElseIf CY = 2 Then
                LuxLim = 5100@
            ElseIf CY = 3 Then
                LuxLim = 3050@
            Else
                LuxLim = 1875@
            End If
    ElseIf YrInSrv = 2018 And PreTCJA = 1 Then
            If CY = 1 Then
                LuxLim = 10000@
            ElseIf CY = 2 Then
                LuxLim = 16000@
            ElseIf CY = 3 Then
                LuxLim = 9600@
            Else
                LuxLim = 5760@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2028 And PreTCJA = 1 Then
            If CY = 1 Then
                LuxLim = 16400@
            ElseIf CY = 2 Then
                LuxLim = 16000@
            ElseIf CY = 3 Then
                LuxLim = 9600@
            Else
                LuxLim = 5760@
            End If
    ElseIf YrInSrv = 2018 And PreTCJA = 0 Then
            If CY = 1 Then
                LuxLim = 10000@
            ElseIf CY = 2 Then
                LuxLim = 16000@
            ElseIf CY = 3 Then
                LuxLim = 9600@
            Else
                LuxLim = 5760@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2028 And PreTCJA = 0 Then
            If CY = 1 Then
                LuxLim = 18000@
            ElseIf CY = 2 Then
                LuxLim = 16000@
            ElseIf CY = 3 Then
                LuxLim = 9600@
            Else
                LuxLim = 5760@
            End If
    ElseIf YrInSrv = 2019 And PreTCJA = 1 Then
            If CY = 1 Then
                LuxLim = 10100@
            ElseIf CY = 2 Then
                LuxLim = 16100@
            ElseIf CY = 3 Then
                LuxLim = 9700@
            Else
                LuxLim = 5760@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2029 And PreTCJA = 1 Then
            If CY = 1 Then
                LuxLim = 14900@
            ElseIf CY = 2 Then
                LuxLim = 16100@
            ElseIf CY = 3 Then
                LuxLim = 9700@
            Else
                LuxLim = 5760@
            End If
    ElseIf YrInSrv = 2019 And PreTCJA = 0 Then
            If CY = 1 Then
                LuxLim = 10100@
            ElseIf CY = 2 Then
                LuxLim = 16100@
            ElseIf CY = 3 Then
                LuxLim = 9700@
            Else
                LuxLim = 5760@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2029 And PreTCJA = 0 Then
            If CY = 1 Then
                LuxLim = 18100@
            ElseIf CY = 2 Then
                LuxLim = 16100@
            ElseIf CY = 3 Then
                LuxLim = 9700@
            Else
                LuxLim = 5760@
            End If
    ElseIf YrInSrv = 2020 And PreTCJA = 1 Then
            If CY = 1 Then
                LuxLim = 10100@
            ElseIf CY = 2 Then
                LuxLim = 16100@
            ElseIf CY = 3 Then
                LuxLim = 9700@
            Else
                LuxLim = 5760@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2030 And PreTCJA = 1 Then
            If CY = 1 Then
                LuxLim = 18100@
            ElseIf CY = 2 Then
                LuxLim = 16100@
            ElseIf CY = 3 Then
                LuxLim = 9700@
            Else
                LuxLim = 5760@
            End If
    ElseIf YrInSrv = 2020 And PreTCJA = 0 Then
            If CY = 1 Then
                LuxLim = 10100@
            ElseIf CY = 2 Then
                LuxLim = 16100@
            ElseIf CY = 3 Then
                LuxLim = 9700@
            Else
                LuxLim = 5760@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2030 And PreTCJA = 0 Then
            If CY = 1 Then
                LuxLim = 18100@
            ElseIf CY = 2 Then
                LuxLim = 16100@
            ElseIf CY = 3 Then
                LuxLim = 9700@
            Else
                LuxLim = 5760@
            End If
    ElseIf YrInSrv = 2021 Then
            If CY = 1 Then
                LuxLim = 10200@
            ElseIf CY = 2 Then
                LuxLim = 16400@
            ElseIf CY = 3 Then
                LuxLim = 9800@
            Else
                LuxLim = 5860@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2031 Then
            If CY = 1 Then
                LuxLim = 18200@
            ElseIf CY = 2 Then
                LuxLim = 16400@
            ElseIf CY = 3 Then
                LuxLim = 9800@
            Else
                LuxLim = 5860@
            End If
    Else
        LuxLim = 0
    End If
End Function

Public Function LuxLimState(YrInSrv As Integer, CY As Integer) As Currency
'Updated for 2021
'States thats are different than federal- California, Iowa and Minnesota
'Created because of TCJA and states not comforming
   If YrInSrv = 1986 Then
        If CY = 1 Then
                LuxLimState = 3200@
            Else
                LuxLimState = 4800@
        End If
    ElseIf YrInSrv = 1987 Then
            If CY = 1 Then
                    LuxLimState = 2560@
            ElseIf CY = 2 Then
                    LuxLimState = 4100@
            ElseIf CY = 3 Then
                    LuxLimState = 2450@
            Else
                    LuxLimState = 1475@
            End If
  ElseIf YrInSrv = 1988 Then
            If CY = 1 Then
                    LuxLimState = 2560@
            ElseIf CY = 2 Then
                    LuxLimState = 4100@
            ElseIf CY = 3 Then
                    LuxLimState = 2450@
            Else
                    LuxLimState = 1475@
            End If
  ElseIf YrInSrv = 1989 Then
            If CY = 1 Then
                    LuxLimState = 2660@
            ElseIf CY = 2 Then
                    LuxLimState = 4200@
            ElseIf CY = 3 Then
                    LuxLimState = 2550@
            Else
                    LuxLimState = 1475@
            End If
    ElseIf YrInSrv = 1990 Then
            If CY = 1 Then
                    LuxLimState = 2660@
            ElseIf CY = 2 Then
                    LuxLimState = 4200@
            ElseIf CY = 3 Then
                    LuxLimState = 2550@
            Else
                LuxLimState = 1475@
            End If
    ElseIf YrInSrv = 1991 Then
            If CY = 1 Then
                    LuxLimState = 2660@
            ElseIf CY = 2 Then
                    LuxLimState = 4300@
            ElseIf CY = 3 Then
                    LuxLimState = 2550@
            Else
                    LuxLimState = 1575@
            End If
    ElseIf YrInSrv = 1992 Then
            If CY = 1 Then
                    LuxLimState = 2760@
            ElseIf CY = 2 Then
                    LuxLimState = 4400@
            ElseIf CY = 3 Then
                    LuxLimState = 2650@
            Else
                    LuxLimState = 1575@
            End If
    ElseIf YrInSrv = 1993 Then
            If CY = 1 Then
                    LuxLimState = 2860@
            ElseIf CY = 2 Then
                    LuxLimState = 4600@
            ElseIf CY = 3 Then
                    LuxLimState = 2750@
            Else
                    LuxLimState = 1675@
            End If
    ElseIf YrInSrv = 1994 Then
            If CY = 1 Then
                    LuxLimState = 2960@
            ElseIf CY = 2 Then
                    LuxLimState = 4700@
            ElseIf CY = 3 Then
                    LuxLimState = 2850@
            Else
                    LuxLimState = 1675@
            End If
    ElseIf YrInSrv = 1995 Then
            If CY = 1 Then
                    LuxLimState = 3060@
            ElseIf CY = 2 Then
                    LuxLimState = 4900@
            ElseIf CY = 3 Then
                    LuxLimState = 2950@
            Else
                    LuxLimState = 1775@
            End If
    ElseIf YrInSrv = 1996 Then
            If CY = 1 Then
                    LuxLimState = 3060@
            ElseIf CY = 2 Then
                    LuxLimState = 4900@
            ElseIf CY = 3 Then
                    LuxLimState = 2950@
            Else
                    LuxLimState = 1775@
            End If
    ElseIf YrInSrv = 1997 Then
            If CY = 1 Then
                    LuxLimState = 3160@
            ElseIf CY = 2 Then
                    LuxLimState = 5000@
            ElseIf CY = 3 Then
                    LuxLimState = 3050@
            Else
                    LuxLimState = 1775@
            End If
    ElseIf YrInSrv = 1998 Then
            If CY = 1 Then
                    LuxLimState = 3160@
            ElseIf CY = 2 Then
                    LuxLimState = 5000@
            ElseIf CY = 3 Then
                    LuxLimState = 2950@
            Else
                    LuxLimState = 1775@
            End If
    ElseIf YrInSrv = 1999 Then
            If CY = 1 Then
                    LuxLimState = 3060@
            ElseIf CY = 2 Then
                    LuxLimState = 5000@
            ElseIf CY = 3 Then
                    LuxLimState = 2950@
            Else
                    LuxLimState = 1775@
            End If
    ElseIf YrInSrv = 2000 Then
            If CY = 1 Then
                    LuxLimState = 3060@
            ElseIf CY = 2 Then
                    LuxLimState = 4900@
            ElseIf CY = 3 Then
                    LuxLimState = 2950@
            Else
                    LuxLimState = 1775@
            End If
      ElseIf YrInSrv = 2001 Then
            If CY = 1 Then
                    LuxLimState = 3060@
            ElseIf CY = 2 Then
                    LuxLimState = 4900@
            ElseIf CY = 3 Then
                    LuxLimState = 2950@
            Else
                    LuxLimState = 1775@
            End If
    ElseIf YrInSrv = 2002 Then
            If CY = 1 Then
                    LuxLimState = 3060@
            ElseIf CY = 2 Then
                    LuxLimState = 4900@
            ElseIf CY = 3 Then
                    LuxLimState = 2950@
            Else
                    LuxLimState = 1775@
            End If
    ElseIf YrInSrv = 2003 Then
            If CY = 1 Then
                    LuxLimState = 3060@
            ElseIf CY = 2 Then
                    LuxLimState = 4900@
            ElseIf CY = 3 Then
                    LuxLimState = 2950@
            Else
                    LuxLimState = 1775@
            End If
    ElseIf YrInSrv = 2004 Then
            If CY = 1 Then
                    LuxLimState = 2960@
            ElseIf CY = 2 Then
                    LuxLimState = 4800@
            ElseIf CY = 3 Then
                    LuxLimState = 2850@
            Else
                    LuxLimState = 1675@
            End If
    ElseIf YrInSrv = 2005 Then
            If CY = 1 Then
                    LuxLimState = 2960@
            ElseIf CY = 2 Then
                    LuxLimState = 4700@
            ElseIf CY = 3 Then
                    LuxLimState = 2850@
            Else
                    LuxLimState = 1675@
            End If
    ElseIf YrInSrv = 2006 Then
            If CY = 1 Then
                    LuxLimState = 2960@
            ElseIf CY = 2 Then
                    LuxLimState = 4800@
            ElseIf CY = 3 Then
                    LuxLimState = 2850@
            Else
                    LuxLimState = 1775@
            End If
    ElseIf YrInSrv = 2007 Then
            If CY = 1 Then
                    LuxLimState = 3060@
            ElseIf CY = 2 Then
                    LuxLimState = 4900@
            ElseIf CY = 3 Then
                    LuxLimState = 2850@
            Else
                    LuxLimState = 1775@
            End If
    ElseIf YrInSrv = 2008 Then
            If CY = 1 Then
                    LuxLimState = 2960@
            ElseIf CY = 2 Then
                    LuxLimState = 4800@
            ElseIf CY = 3 Then
                    LuxLimState = 2850@
            Else
                    LuxLimState = 1775@
            End If
      ElseIf YrInSrv = 2009 Then
            If CY = 1 Then
                    LuxLimState = 2960@
            ElseIf CY = 2 Then
                    LuxLimState = 4800@
            ElseIf CY = 3 Then
                    LuxLimState = 2850@
            Else
                    LuxLimState = 1775@
            End If
    ElseIf YrInSrv = 2010 Then
            If CY = 1 Then
                    LuxLimState = 3060@
            ElseIf CY = 2 Then
                    LuxLimState = 4900@
            ElseIf CY = 3 Then
                    LuxLimState = 2950@
            Else
                    LuxLimState = 1775@
            End If
     ElseIf YrInSrv = 2011 Then
            If CY = 1 Then
                    LuxLimState = 3060@
            ElseIf CY = 2 Then
                    LuxLimState = 4900@
            ElseIf CY = 3 Then
                    LuxLimState = 2950@
            Else
                    LuxLimState = 1775@
            End If
    ElseIf YrInSrv = 2012 Then
            If CY = 1 Then
                    LuxLimState = 3160@
            ElseIf CY = 2 Then
                    LuxLimState = 5100@
            ElseIf CY = 3 Then
                    LuxLimState = 3050@
            Else
                    LuxLimState = 1875@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2022 Then
            If CY = 1 Then
                    LuxLimState = 11160@
            ElseIf CY = 2 Then
                    LuxLimState = 5100@
            ElseIf CY = 3 Then
                    LuxLimState = 3050@
            Else
                    LuxLimState = 1875@
            End If
    ElseIf YrInSrv = 2013 Then
            If CY = 1 Then
                    LuxLimState = 3160@
            ElseIf CY = 2 Then
                    LuxLimState = 5100@
            ElseIf CY = 3 Then
                    LuxLimState = 3050@
            Else
                    LuxLimState = 1875@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2023 Then
            If CY = 1 Then
                    LuxLimState = 11160@
            ElseIf CY = 2 Then
                    LuxLimState = 5100@
            ElseIf CY = 3 Then
                    LuxLimState = 3050@
            Else
                    LuxLimState = 1875@
            End If
    ElseIf YrInSrv = 2014 Then
            If CY = 1 Then
                    LuxLimState = 3160@
            ElseIf CY = 2 Then
                    LuxLimState = 5100@
            ElseIf CY = 3 Then
                    LuxLimState = 3050@
            Else
                    LuxLimState = 1875@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2024 Then
            If CY = 1 Then
                    LuxLimState = 11160@
            ElseIf CY = 2 Then
                    LuxLimState = 5100@
            ElseIf CY = 3 Then
                    LuxLimState = 3050@
            Else
                    LuxLimState = 1875@
            End If
    ElseIf YrInSrv = 2015 Then
            If CY = 1 Then
                    LuxLimState = 3160@
            ElseIf CY = 2 Then
                    LuxLimState = 5100@
            ElseIf CY = 3 Then
                    LuxLimState = 3050@
            Else
                    LuxLimState = 1875@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2025 Then
            If CY = 1 Then
                    LuxLimState = 11160@
            ElseIf CY = 2 Then
                    LuxLimState = 5100@
            ElseIf CY = 3 Then
                    LuxLimState = 3050@
            Else
                    LuxLimState = 1875@
            End If
    ElseIf YrInSrv = 2016 Then
            If CY = 1 Then
                    LuxLimState = 3160@
            ElseIf CY = 2 Then
                    LuxLimState = 5100@
            ElseIf CY = 3 Then
                    LuxLimState = 3050@
            Else
                    LuxLimState = 1875@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2026 Then
            If CY = 1 Then
                    LuxLimState = 11160@
            ElseIf CY = 2 Then
                    LuxLimState = 5100@
            ElseIf CY = 3 Then
                    LuxLimState = 3050@
            Else
                    LuxLimState = 1875@
            End If
    ElseIf YrInSrv = 2017 Then
            If CY = 1 Then
                    LuxLimState = 3160@
            ElseIf CY = 2 Then
                    LuxLimState = 5100@
            ElseIf CY = 3 Then
                    LuxLimState = 3050@
            Else
                    LuxLimState = 1875@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2027 Then
            If CY = 1 Then
                    LuxLimState = 11160@
            ElseIf CY = 2 Then
                    LuxLimState = 5100@
            ElseIf CY = 3 Then
                    LuxLimState = 3050@
            Else
                    LuxLimState = 1875@
            End If
    ElseIf YrInSrv = 2018 Then
            If CY = 1 Then
                LuxLimState = 3160@
            ElseIf CY = 2 Then
                LuxLimState = 5000@
            ElseIf CY = 3 Then
                LuxLimState = 2950@
            Else
                LuxLimState = 1775@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2028 Then
            If CY = 1 Then
                LuxLimState = 9560@
            ElseIf CY = 2 Then
                LuxLimState = 5000@
            ElseIf CY = 3 Then
                LuxLimState = 2950@
            Else
                LuxLimState = 1775@
            End If
    ElseIf YrInSrv = 2019 Then
            If CY = 1 Then
                LuxLimState = 3258@
            ElseIf CY = 2 Then
                LuxLimState = 5155@
            ElseIf CY = 3 Then
                LuxLimState = 3041@
            Else
                LuxLimState = 1830@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2029 Then
            If CY = 1 Then
                LuxLimState = 9560@
            ElseIf CY = 2 Then
                LuxLimState = 5000@
            ElseIf CY = 3 Then
                LuxLimState = 2950@
            Else
                LuxLimState = 1775@
            End If
    ElseIf YrInSrv = 2020 Then
            If CY = 1 Then
                LuxLimState = 3304@
            ElseIf CY = 2 Then
                LuxLimState = 5227@
            ElseIf CY = 3 Then
                LuxLimState = 3084@
            Else
                LuxLimState = 1856@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2030 Then
            If CY = 1 Then
                LuxLimState = 9560@
            ElseIf CY = 2 Then
                LuxLimState = 5000@
            ElseIf CY = 3 Then
                LuxLimState = 2950@
            Else
                LuxLimState = 1775@
            End If
    ElseIf YrInSrv = 2021 Then
            If CY = 1 Then
                LuxLimState = 3304@
            ElseIf CY = 2 Then
                LuxLimState = 5227@
            ElseIf CY = 3 Then
                LuxLimState = 3084@
            Else
                LuxLimState = 1856@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2031 Then
            If CY = 1 Then
                LuxLimState = 9560@
            ElseIf CY = 2 Then
                LuxLimState = 5000@
            ElseIf CY = 3 Then
                LuxLimState = 2950@
            Else
                LuxLimState = 1775@
            End If
    Else
        LuxLimState = 0
    End If
End Function

Public Function LuxLimState2(YrInSrv As Integer, CY As Integer) As Currency
'Updated for 2021
'States thats are different than federal- California, Iowa and Minnesota
'Created because of TCJA and states not comforming
   If YrInSrv = 1986 Then
        If CY = 1 Then
                LuxLimState2 = 3200@
            Else
                LuxLimState2 = 4800@
        End If
    ElseIf YrInSrv = 1987 Then
            If CY = 1 Then
                    LuxLimState2 = 2560@
            ElseIf CY = 2 Then
                    LuxLimState2 = 4100@
            ElseIf CY = 3 Then
                    LuxLimState2 = 2450@
            Else
                    LuxLimState2 = 1475@
            End If
  ElseIf YrInSrv = 1988 Then
            If CY = 1 Then
                    LuxLimState2 = 2560@
            ElseIf CY = 2 Then
                    LuxLimState2 = 4100@
            ElseIf CY = 3 Then
                    LuxLimState2 = 2450@
            Else
                    LuxLimState2 = 1475@
            End If
  ElseIf YrInSrv = 1989 Then
            If CY = 1 Then
                    LuxLimState2 = 2660@
            ElseIf CY = 2 Then
                    LuxLimState2 = 4200@
            ElseIf CY = 3 Then
                    LuxLimState2 = 2550@
            Else
                    LuxLimState2 = 1475@
            End If
    ElseIf YrInSrv = 1990 Then
            If CY = 1 Then
                    LuxLimState2 = 2660@
            ElseIf CY = 2 Then
                    LuxLimState2 = 4200@
            ElseIf CY = 3 Then
                    LuxLimState2 = 2550@
            Else
                LuxLimState2 = 1475@
            End If
    ElseIf YrInSrv = 1991 Then
            If CY = 1 Then
                    LuxLimState2 = 2660@
            ElseIf CY = 2 Then
                    LuxLimState2 = 4300@
            ElseIf CY = 3 Then
                    LuxLimState2 = 2550@
            Else
                    LuxLimState2 = 1575@
            End If
    ElseIf YrInSrv = 1992 Then
            If CY = 1 Then
                    LuxLimState2 = 2760@
            ElseIf CY = 2 Then
                    LuxLimState2 = 4400@
            ElseIf CY = 3 Then
                    LuxLimState2 = 2650@
            Else
                    LuxLimState2 = 1575@
            End If
    ElseIf YrInSrv = 1993 Then
            If CY = 1 Then
                    LuxLimState2 = 2860@
            ElseIf CY = 2 Then
                    LuxLimState2 = 4600@
            ElseIf CY = 3 Then
                    LuxLimState2 = 2750@
            Else
                    LuxLimState2 = 1675@
            End If
    ElseIf YrInSrv = 1994 Then
            If CY = 1 Then
                    LuxLimState2 = 2960@
            ElseIf CY = 2 Then
                    LuxLimState2 = 4700@
            ElseIf CY = 3 Then
                    LuxLimState2 = 2850@
            Else
                    LuxLimState2 = 1675@
            End If
    ElseIf YrInSrv = 1995 Then
            If CY = 1 Then
                    LuxLimState2 = 3060@
            ElseIf CY = 2 Then
                    LuxLimState2 = 4900@
            ElseIf CY = 3 Then
                    LuxLimState2 = 2950@
            Else
                    LuxLimState2 = 1775@
            End If
    ElseIf YrInSrv = 1996 Then
            If CY = 1 Then
                    LuxLimState2 = 3060@
            ElseIf CY = 2 Then
                    LuxLimState2 = 4900@
            ElseIf CY = 3 Then
                    LuxLimState2 = 2950@
            Else
                    LuxLimState2 = 1775@
            End If
    ElseIf YrInSrv = 1997 Then
            If CY = 1 Then
                    LuxLimState2 = 3160@
            ElseIf CY = 2 Then
                    LuxLimState2 = 5000@
            ElseIf CY = 3 Then
                    LuxLimState2 = 3050@
            Else
                    LuxLimState2 = 1775@
            End If
    ElseIf YrInSrv = 1998 Then
            If CY = 1 Then
                    LuxLimState2 = 3160@
            ElseIf CY = 2 Then
                    LuxLimState2 = 5000@
            ElseIf CY = 3 Then
                    LuxLimState2 = 2950@
            Else
                    LuxLimState2 = 1775@
            End If
    ElseIf YrInSrv = 1999 Then
            If CY = 1 Then
                    LuxLimState2 = 3060@
            ElseIf CY = 2 Then
                    LuxLimState2 = 5000@
            ElseIf CY = 3 Then
                    LuxLimState2 = 2950@
            Else
                    LuxLimState2 = 1775@
            End If
    ElseIf YrInSrv = 2000 Then
            If CY = 1 Then
                    LuxLimState2 = 3060@
            ElseIf CY = 2 Then
                    LuxLimState2 = 4900@
            ElseIf CY = 3 Then
                    LuxLimState2 = 2950@
            Else
                    LuxLimState2 = 1775@
            End If
      ElseIf YrInSrv = 2001 Then
            If CY = 1 Then
                    LuxLimState2 = 3060@
            ElseIf CY = 2 Then
                    LuxLimState2 = 4900@
            ElseIf CY = 3 Then
                    LuxLimState2 = 2950@
            Else
                    LuxLimState2 = 1775@
            End If
    ElseIf YrInSrv = 2002 Then
            If CY = 1 Then
                    LuxLimState2 = 3060@
            ElseIf CY = 2 Then
                    LuxLimState2 = 4900@
            ElseIf CY = 3 Then
                    LuxLimState2 = 2950@
            Else
                    LuxLimState2 = 1775@
            End If
    ElseIf YrInSrv = 2003 Then
            If CY = 1 Then
                    LuxLimState2 = 3060@
            ElseIf CY = 2 Then
                    LuxLimState2 = 4900@
            ElseIf CY = 3 Then
                    LuxLimState2 = 2950@
            Else
                    LuxLimState2 = 1775@
            End If
    ElseIf YrInSrv = 2004 Then
            If CY = 1 Then
                    LuxLimState2 = 2960@
            ElseIf CY = 2 Then
                    LuxLimState2 = 4800@
            ElseIf CY = 3 Then
                    LuxLimState2 = 2850@
            Else
                    LuxLimState2 = 1675@
            End If
    ElseIf YrInSrv = 2005 Then
            If CY = 1 Then
                    LuxLimState2 = 2960@
            ElseIf CY = 2 Then
                    LuxLimState2 = 4700@
            ElseIf CY = 3 Then
                    LuxLimState2 = 2850@
            Else
                    LuxLimState2 = 1675@
            End If
    ElseIf YrInSrv = 2006 Then
            If CY = 1 Then
                    LuxLimState2 = 2960@
            ElseIf CY = 2 Then
                    LuxLimState2 = 4800@
            ElseIf CY = 3 Then
                    LuxLimState2 = 2850@
            Else
                    LuxLimState2 = 1775@
            End If
    ElseIf YrInSrv = 2007 Then
            If CY = 1 Then
                    LuxLimState2 = 3060@
            ElseIf CY = 2 Then
                    LuxLimState2 = 4900@
            ElseIf CY = 3 Then
                    LuxLimState2 = 2850@
            Else
                    LuxLimState2 = 1775@
            End If
    ElseIf YrInSrv = 2008 Then
            If CY = 1 Then
                    LuxLimState2 = 2960@
            ElseIf CY = 2 Then
                    LuxLimState2 = 4800@
            ElseIf CY = 3 Then
                    LuxLimState2 = 2850@
            Else
                    LuxLimState2 = 1775@
            End If
      ElseIf YrInSrv = 2009 Then
            If CY = 1 Then
                    LuxLimState2 = 2960@
            ElseIf CY = 2 Then
                    LuxLimState2 = 4800@
            ElseIf CY = 3 Then
                    LuxLimState2 = 2850@
            Else
                    LuxLimState2 = 1775@
            End If
    ElseIf YrInSrv = 2010 Then
            If CY = 1 Then
                    LuxLimState2 = 3060@
            ElseIf CY = 2 Then
                    LuxLimState2 = 4900@
            ElseIf CY = 3 Then
                    LuxLimState2 = 2950@
            Else
                    LuxLimState2 = 1775@
            End If
     ElseIf YrInSrv = 2011 Then
            If CY = 1 Then
                    LuxLimState2 = 3060@
            ElseIf CY = 2 Then
                    LuxLimState2 = 4900@
            ElseIf CY = 3 Then
                    LuxLimState2 = 2950@
            Else
                    LuxLimState2 = 1775@
            End If
    ElseIf YrInSrv = 2012 Then
            If CY = 1 Then
                    LuxLimState2 = 3160@
            ElseIf CY = 2 Then
                    LuxLimState2 = 5100@
            ElseIf CY = 3 Then
                    LuxLimState2 = 3050@
            Else
                    LuxLimState2 = 1875@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2022 Then
            If CY = 1 Then
                    LuxLimState2 = 11160@
            ElseIf CY = 2 Then
                    LuxLimState2 = 5100@
            ElseIf CY = 3 Then
                    LuxLimState2 = 3050@
            Else
                    LuxLimState2 = 1875@
            End If
    ElseIf YrInSrv = 2013 Then
            If CY = 1 Then
                    LuxLimState2 = 3160@
            ElseIf CY = 2 Then
                    LuxLimState2 = 5100@
            ElseIf CY = 3 Then
                    LuxLimState2 = 3050@
            Else
                    LuxLimState2 = 1875@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2023 Then
            If CY = 1 Then
                    LuxLimState2 = 11160@
            ElseIf CY = 2 Then
                    LuxLimState2 = 5100@
            ElseIf CY = 3 Then
                    LuxLimState2 = 3050@
            Else
                    LuxLimState2 = 1875@
            End If
    ElseIf YrInSrv = 2014 Then
            If CY = 1 Then
                    LuxLimState2 = 3160@
            ElseIf CY = 2 Then
                    LuxLimState2 = 5100@
            ElseIf CY = 3 Then
                    LuxLimState2 = 3050@
            Else
                    LuxLimState2 = 1875@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2024 Then
            If CY = 1 Then
                    LuxLimState2 = 11160@
            ElseIf CY = 2 Then
                    LuxLimState2 = 5100@
            ElseIf CY = 3 Then
                    LuxLimState2 = 3050@
            Else
                    LuxLimState2 = 1875@
            End If
    ElseIf YrInSrv = 2015 Then
            If CY = 1 Then
                    LuxLimState2 = 3160@
            ElseIf CY = 2 Then
                    LuxLimState2 = 5100@
            ElseIf CY = 3 Then
                    LuxLimState2 = 3050@
            Else
                    LuxLimState2 = 1875@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2025 Then
            If CY = 1 Then
                    LuxLimState2 = 11160@
            ElseIf CY = 2 Then
                    LuxLimState2 = 5100@
            ElseIf CY = 3 Then
                    LuxLimState2 = 3050@
            Else
                    LuxLimState2 = 1875@
            End If
    ElseIf YrInSrv = 2016 Then
            If CY = 1 Then
                    LuxLimState2 = 3160@
            ElseIf CY = 2 Then
                    LuxLimState2 = 5100@
            ElseIf CY = 3 Then
                    LuxLimState2 = 3050@
            Else
                    LuxLimState2 = 1875@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2026 Then
            If CY = 1 Then
                    LuxLimState2 = 11160@
            ElseIf CY = 2 Then
                    LuxLimState2 = 5100@
            ElseIf CY = 3 Then
                    LuxLimState2 = 3050@
            Else
                    LuxLimState2 = 1875@
            End If
    ElseIf YrInSrv = 2017 Then
            If CY = 1 Then
                    LuxLimState2 = 3160@
            ElseIf CY = 2 Then
                    LuxLimState2 = 5100@
            ElseIf CY = 3 Then
                    LuxLimState2 = 3050@
            Else
                    LuxLimState2 = 1875@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2027 Then
            If CY = 1 Then
                    LuxLimState2 = 11160@
            ElseIf CY = 2 Then
                    LuxLimState2 = 5100@
            ElseIf CY = 3 Then
                    LuxLimState2 = 3050@
            Else
                    LuxLimState2 = 1875@
            End If
    ElseIf YrInSrv = 2018 Then
            If CY = 1 Then
                LuxLimState2 = 3160@
            ElseIf CY = 2 Then
                LuxLimState2 = 5000@
            ElseIf CY = 3 Then
                LuxLimState2 = 2950@
            Else
                LuxLimState2 = 1775@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2028 Then
            If CY = 1 Then
                LuxLimState2 = 9560@
            ElseIf CY = 2 Then
                LuxLimState2 = 5000@
            ElseIf CY = 3 Then
                LuxLimState2 = 2950@
            Else
                LuxLimState2 = 1775@
            End If
    ElseIf YrInSrv = 2019 Then
            If CY = 1 Then
                LuxLimState2 = 3258@
            ElseIf CY = 2 Then
                LuxLimState2 = 5155@
            ElseIf CY = 3 Then
                LuxLimState2 = 3041@
            Else
                LuxLimState2 = 1830@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2029 Then
            If CY = 1 Then
                LuxLimState2 = 9560@
            ElseIf CY = 2 Then
                LuxLimState2 = 5000@
            ElseIf CY = 3 Then
                LuxLimState2 = 2950@
            Else
                LuxLimState2 = 1775@
            End If
    ElseIf YrInSrv = 2020 Then
            If CY = 1 Then
                LuxLimState2 = 3304@
            ElseIf CY = 2 Then
                LuxLimState2 = 5227@
            ElseIf CY = 3 Then
                LuxLimState2 = 3084@
            Else
                LuxLimState2 = 1856@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2030 Then
            If CY = 1 Then
                LuxLimState2 = 9560@
            ElseIf CY = 2 Then
                LuxLimState2 = 5000@
            ElseIf CY = 3 Then
                LuxLimState2 = 2950@
            Else
                LuxLimState2 = 1775@
            End If
    ElseIf YrInSrv = 2021 Then
            If CY = 1 Then
                LuxLimState2 = 3160@
            ElseIf CY = 2 Then
                LuxLimState2 = 5100@
            ElseIf CY = 3 Then
                LuxLimState2 = 3050@
            Else
                LuxLimState2 = 1875@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2031 Then
            If CY = 1 Then
                LuxLimState2 = 9560@
            ElseIf CY = 2 Then
                LuxLimState2 = 5000@
            ElseIf CY = 3 Then
                LuxLimState2 = 2950@
            Else
                LuxLimState2 = 1775@
            End If
    Else
        LuxLimState2 = 0
    End If
End Function

Public Function LuxLimTruck(YrInSrv As Integer, CY As Integer, PreTCJA As Integer) As Currency
'Updated for 2021
    If YrInSrv = 2003 Then
            If CY = 1 Then
                LuxLimTruck = 3360@
            ElseIf CY = 2 Then
                LuxLimTruck = 5400@
            ElseIf CY = 3 Then
                LuxLimTruck = 3250@
            Else
                LuxLimTruck = 1975@
            End If
    ElseIf YrInSrv = 2004 Then
            If CY = 1 Then
                LuxLimTruck = 3260@
            ElseIf CY = 2 Then
                LuxLimTruck = 5300@
            ElseIf CY = 3 Then
                LuxLimTruck = 3150@
            Else
                LuxLimTruck = 1875@
            End If
    ElseIf YrInSrv = 2005 Then
            If CY = 1 Then
                LuxLimTruck = 3260@
            ElseIf CY = 2 Then
                LuxLimTruck = 5200@
            ElseIf CY = 3 Then
                LuxLimTruck = 3150@
            Else
                LuxLimTruck = 1875@
            End If
    ElseIf YrInSrv = 2006 Then
            If CY = 1 Then
                LuxLimTruck = 3260@
            ElseIf CY = 2 Then
                LuxLimTruck = 5200@
            ElseIf CY = 3 Then
                LuxLimTruck = 3150@
            Else
                LuxLimTruck = 1875@
            End If
    ElseIf YrInSrv = 2007 Then
            If CY = 1 Then
                LuxLimTruck = 3260@
            ElseIf CY = 2 Then
                LuxLimTruck = 5200@
            ElseIf CY = 3 Then
                LuxLimTruck = 3050@
            Else
                LuxLimTruck = 1875@
            End If
    ElseIf YrInSrv = 2008 Then
            If CY = 1 Then
                LuxLimTruck = 3160@
            ElseIf CY = 2 Then
                LuxLimTruck = 5100@
            ElseIf CY = 3 Then
                LuxLimTruck = 3050@
            Else
                LuxLimTruck = 1875@
            End If
    ElseIf YrInSrv = 2009 Then
            If CY = 1 Then
                LuxLimTruck = 3060@
            ElseIf CY = 2 Then
                LuxLimTruck = 4900@
            ElseIf CY = 3 Then
                LuxLimTruck = 2950@
            Else
                LuxLimTruck = 1775@
            End If
    ElseIf YrInSrv = 2010 Then
            If CY = 1 Then
                LuxLimTruck = 3160@
            ElseIf CY = 2 Then
                LuxLimTruck = 5100@
            ElseIf CY = 3 Then
                LuxLimTruck = 3050@
            Else
                LuxLimTruck = 1875@
            End If
    ElseIf YrInSrv = 2011 Then
            If CY = 1 Then
                LuxLimTruck = 3260@
            ElseIf CY = 2 Then
                LuxLimTruck = 5200@
            ElseIf CY = 3 Then
                LuxLimTruck = 3150@
            Else
                LuxLimTruck = 1875@
            End If
    ElseIf YrInSrv = 2012 Then
            If CY = 1 Then
                LuxLimTruck = 3360@
            ElseIf CY = 2 Then
                LuxLimTruck = 5300@
            ElseIf CY = 3 Then
                LuxLimTruck = 3150@
            Else
                LuxLimTruck = 1875@
            End If
    ElseIf YrInSrv = 2013 Then
            If CY = 1 Then
                LuxLimTruck = 3360@
            ElseIf CY = 2 Then
                LuxLimTruck = 5400@
            ElseIf CY = 3 Then
                LuxLimTruck = 3250@
            Else
                LuxLimTruck = 1975@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2023 Then
            If CY = 1 Then
                LuxLimTruck = 11360@
            ElseIf CY = 2 Then
                LuxLimTruck = 5400@
            ElseIf CY = 3 Then
                LuxLimTruck = 3250@
            Else
                LuxLimTruck = 1975@
            End If
    ElseIf YrInSrv = 2014 Then
            If CY = 1 Then
                LuxLimTruck = 3460@
            ElseIf CY = 2 Then
                LuxLimTruck = 5500@
            ElseIf CY = 3 Then
                LuxLimTruck = 3350@
            Else
                LuxLimTruck = 1975@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2024 Then
            If CY = 1 Then
                LuxLimTruck = 11460@
            ElseIf CY = 2 Then
                LuxLimTruck = 5500@
            ElseIf CY = 3 Then
                LuxLimTruck = 3350@
            Else
                LuxLimTruck = 1975@
            End If
    ElseIf YrInSrv = 2015 Then
            If CY = 1 Then
                LuxLimTruck = 3460@
            ElseIf CY = 2 Then
                LuxLimTruck = 5600@
            ElseIf CY = 3 Then
                LuxLimTruck = 3350@
            Else
                LuxLimTruck = 1975@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2025 Then
            If CY = 1 Then
                LuxLimTruck = 11460@
            ElseIf CY = 2 Then
                LuxLimTruck = 5600@
            ElseIf CY = 3 Then
                LuxLimTruck = 3350@
            Else
                LuxLimTruck = 1975@
            End If
    ElseIf YrInSrv = 2016 Then
            If CY = 1 Then
                LuxLimTruck = 3560@
            ElseIf CY = 2 Then
                LuxLimTruck = 5700@
            ElseIf CY = 3 Then
                LuxLimTruck = 3350@
            Else
                LuxLimTruck = 2075@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2026 Then
            If CY = 1 Then
                LuxLimTruck = 11560@
            ElseIf CY = 2 Then
                LuxLimTruck = 5700@
            ElseIf CY = 3 Then
                LuxLimTruck = 3350@
            Else
                LuxLimTruck = 2075@
            End If
    ElseIf YrInSrv = 2017 Then
            If CY = 1 Then
                LuxLimTruck = 3560@
            ElseIf CY = 2 Then
                LuxLimTruck = 5700@
            ElseIf CY = 3 Then
                LuxLimTruck = 3450@
            Else
                LuxLimTruck = 2075@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2027 Then
            If CY = 1 Then
                LuxLimTruck = 11560@
            ElseIf CY = 2 Then
                LuxLimTruck = 5700@
            ElseIf CY = 3 Then
                LuxLimTruck = 3450@
            Else
                LuxLimTruck = 2075@
            End If
    ElseIf YrInSrv = 2018 And PreTCJA = 1 Then
            If CY = 1 Then
                LuxLimTruck = 10000@
            ElseIf CY = 2 Then
                LuxLimTruck = 16000@
            ElseIf CY = 3 Then
                LuxLimTruck = 9600@
            Else
                LuxLimTruck = 5760@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2028 And PreTCJA = 1 Then
            If CY = 1 Then
                LuxLimTruck = 16400@
            ElseIf CY = 2 Then
                LuxLimTruck = 16000@
            ElseIf CY = 3 Then
                LuxLimTruck = 9600@
            Else
                LuxLimTruck = 5760@
            End If
    ElseIf YrInSrv = 2018 And PreTCJA = 0 Then
            If CY = 1 Then
                LuxLimTruck = 10000@
            ElseIf CY = 2 Then
                LuxLimTruck = 16000@
            ElseIf CY = 3 Then
                LuxLimTruck = 9600@
            Else
                LuxLimTruck = 5760@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2028 And PreTCJA = 0 Then
            If CY = 1 Then
                LuxLimTruck = 18000@
            ElseIf CY = 2 Then
                LuxLimTruck = 16000@
            ElseIf CY = 3 Then
                LuxLimTruck = 9600@
            Else
                LuxLimTruck = 5760@
            End If
    ElseIf YrInSrv = 2019 And PreTCJA = 1 Then
            If CY = 1 Then
                LuxLimTruck = 10100@
            ElseIf CY = 2 Then
                LuxLimTruck = 16100@
            ElseIf CY = 3 Then
                LuxLimTruck = 9700@
            Else
                LuxLimTruck = 5760@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2029 And PreTCJA = 1 Then
            If CY = 1 Then
                LuxLimTruck = 14900@
            ElseIf CY = 2 Then
                LuxLimTruck = 16100@
            ElseIf CY = 3 Then
                LuxLimTruck = 9700@
            Else
                LuxLimTruck = 5760@
            End If
    ElseIf YrInSrv = 2019 And PreTCJA = 0 Then
            If CY = 1 Then
                LuxLimTruck = 10100@
            ElseIf CY = 2 Then
                LuxLimTruck = 16100@
            ElseIf CY = 3 Then
                LuxLimTruck = 9700@
            Else
                LuxLimTruck = 5760@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2029 And PreTCJA = 0 Then
            If CY = 1 Then
                LuxLimTruck = 18100@
            ElseIf CY = 2 Then
                LuxLimTruck = 16100@
            ElseIf CY = 3 Then
                LuxLimTruck = 9700@
            Else
                LuxLimTruck = 5760@
            End If
    ElseIf YrInSrv = 2020 And PreTCJA = 1 Then
            If CY = 1 Then
                LuxLimTruck = 10100@
            ElseIf CY = 2 Then
                LuxLimTruck = 16100@
            ElseIf CY = 3 Then
                LuxLimTruck = 9700@
            Else
                LuxLimTruck = 5760@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2030 And PreTCJA = 1 Then
            If CY = 1 Then
                LuxLimTruck = 14900@
            ElseIf CY = 2 Then
                LuxLimTruck = 16100@
            ElseIf CY = 3 Then
                LuxLimTruck = 9700@
            Else
                LuxLimTruck = 5760@
            End If
    ElseIf YrInSrv = 2020 And PreTCJA = 0 Then
            If CY = 1 Then
                LuxLimTruck = 10100@
            ElseIf CY = 2 Then
                LuxLimTruck = 16100@
            ElseIf CY = 3 Then
                LuxLimTruck = 9700@
            Else
                LuxLimTruck = 5760@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2030 And PreTCJA = 0 Then
            If CY = 1 Then
                LuxLimTruck = 18100@
            ElseIf CY = 2 Then
                LuxLimTruck = 16100@
            ElseIf CY = 3 Then
                LuxLimTruck = 9700@
            Else
                LuxLimTruck = 5760@
            End If
    ElseIf YrInSrv = 2021 Then
            If CY = 1 Then
                LuxLimTruck = 10200@
            ElseIf CY = 2 Then
                LuxLimTruck = 16400@
            ElseIf CY = 3 Then
                LuxLimTruck = 9800@
            Else
                LuxLimTruck = 5860@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2031 Then
            If CY = 1 Then
                LuxLimTruck = 18200@
            ElseIf CY = 2 Then
                LuxLimTruck = 16400@
            ElseIf CY = 3 Then
                LuxLimTruck = 9800@
            Else
                LuxLimTruck = 5860@
            End If
    Else
        LuxLimTruck = 0
    End If
End Function

Public Function LuxLimTruckState(YrInSrv As Integer, CY As Integer) As Currency
'Updated for 2021
'States thats are different than federal- California, Iowa and Minnesota
'Created because of TCJA and states not comforming
    If YrInSrv = 2003 Then
            If CY = 1 Then
                    LuxLimTruckState = 3360@
            ElseIf CY = 2 Then
                    LuxLimTruckState = 5400@
            ElseIf CY = 3 Then
                    LuxLimTruckState = 3250@
            Else
                    LuxLimTruckState = 1975@
            End If
    
    ElseIf YrInSrv = 2004 Then
            If CY = 1 Then
                    LuxLimTruckState = 3260@
            ElseIf CY = 2 Then
                    LuxLimTruckState = 5300@
            ElseIf CY = 3 Then
                    LuxLimTruckState = 3150@
            Else
                    LuxLimTruckState = 1875@
            End If
    
    ElseIf YrInSrv = 2005 Then
            If CY = 1 Then
                    LuxLimTruckState = 3260@
            ElseIf CY = 2 Then
                    LuxLimTruckState = 5200@
            ElseIf CY = 3 Then
                    LuxLimTruckState = 3150@
            Else
                    LuxLimTruckState = 1875@
            End If
            
    ElseIf YrInSrv = 2006 Then
            If CY = 1 Then
                    LuxLimTruckState = 3260@
            ElseIf CY = 2 Then
                    LuxLimTruckState = 5200@
            ElseIf CY = 3 Then
                    LuxLimTruckState = 3150@
            Else
                    LuxLimTruckState = 1875@
            End If
    
    ElseIf YrInSrv = 2007 Then
            If CY = 1 Then
                    LuxLimTruckState = 3260@
            ElseIf CY = 2 Then
                    LuxLimTruckState = 5200@
            ElseIf CY = 3 Then
                    LuxLimTruckState = 3050@
            Else
                    LuxLimTruckState = 1875@
            End If
    ElseIf YrInSrv = 2008 Then
            If CY = 1 Then
                    LuxLimTruckState = 3160@
            ElseIf CY = 2 Then
                    LuxLimTruckState = 5100@
            ElseIf CY = 3 Then
                    LuxLimTruckState = 3050@
            Else
                    LuxLimTruckState = 1875@
            End If
     ElseIf YrInSrv = 2009 Then
            If CY = 1 Then
                    LuxLimTruckState = 3060@
            ElseIf CY = 2 Then
                    LuxLimTruckState = 4900@
            ElseIf CY = 3 Then
                    LuxLimTruckState = 3050@
            Else
                    LuxLimTruckState = 1775@
            End If
    ElseIf YrInSrv = 2010 Then
            If CY = 1 Then
                    LuxLimTruckState = 3160@
            ElseIf CY = 2 Then
                    LuxLimTruckState = 5100@
            ElseIf CY = 3 Then
                    LuxLimTruckState = 3050@
            Else
                    LuxLimTruckState = 1875@
            End If
    ElseIf YrInSrv = 2011 Then
            If CY = 1 Then
                    LuxLimTruckState = 3260@
            ElseIf CY = 2 Then
                    LuxLimTruckState = 5200@
            ElseIf CY = 3 Then
                    LuxLimTruckState = 3150@
            Else
                    LuxLimTruckState = 1875@
            End If
    ElseIf YrInSrv = 2012 Then
            If CY = 1 Then
                    LuxLimTruckState = 3360@
            ElseIf CY = 2 Then
                    LuxLimTruckState = 5300@
            ElseIf CY = 3 Then
                    LuxLimTruckState = 3150@
            Else
                    LuxLimTruckState = 1875@
            End If
    ElseIf YrInSrv = 2013 Then
            If CY = 1 Then
                    LuxLimTruckState = 3360@
            ElseIf CY = 2 Then
                    LuxLimTruckState = 5400@
            ElseIf CY = 3 Then
                    LuxLimTruckState = 3250@
            Else
                    LuxLimTruckState = 1975@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2023 Then
            If CY = 1 Then
                    LuxLimTruckState = 11360@
            ElseIf CY = 2 Then
                    LuxLimTruckState = 5400@
            ElseIf CY = 3 Then
                    LuxLimTruckState = 3250@
            Else
                    LuxLimTruckState = 1975@
            End If
    ElseIf YrInSrv = 2014 Then
            If CY = 1 Then
                    LuxLimTruckState = 3460@
            ElseIf CY = 2 Then
                    LuxLimTruckState = 5500@
            ElseIf CY = 3 Then
                    LuxLimTruckState = 3350@
            Else
                    LuxLimTruckState = 1975@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2024 Then
            If CY = 1 Then
                    LuxLimTruckState = 11460@
            ElseIf CY = 2 Then
                    LuxLimTruckState = 5500@
            ElseIf CY = 3 Then
                    LuxLimTruckState = 3350@
            Else
                    LuxLimTruckState = 1975@
            End If
    ElseIf YrInSrv = 2015 Then
            If CY = 1 Then
                    LuxLimTruckState = 3460@
            ElseIf CY = 2 Then
                    LuxLimTruckState = 5600@
            ElseIf CY = 3 Then
                    LuxLimTruckState = 3350@
            Else
                    LuxLimTruckState = 1975@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2025 Then
            If CY = 1 Then
                    LuxLimTruckState = 11460@
            ElseIf CY = 2 Then
                    LuxLimTruckState = 5600@
            ElseIf CY = 3 Then
                    LuxLimTruckState = 3350@
            Else
                    LuxLimTruckState = 1975@
            End If
    ElseIf YrInSrv = 2016 Then
            If CY = 1 Then
                    LuxLimTruckState = 3560@
            ElseIf CY = 2 Then
                    LuxLimTruckState = 5700@
            ElseIf CY = 3 Then
                    LuxLimTruckState = 3350@
            Else
                    LuxLimTruckState = 2075@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2026 Then
            If CY = 1 Then
                    LuxLimTruckState = 11560@
            ElseIf CY = 2 Then
                    LuxLimTruckState = 5700@
            ElseIf CY = 3 Then
                    LuxLimTruckState = 3350@
            Else
                    LuxLimTruckState = 2075@
            End If
    ElseIf YrInSrv = 2017 Then
            If CY = 1 Then
                    LuxLimTruckState = 3560@
            ElseIf CY = 2 Then
                    LuxLimTruckState = 5700@
            ElseIf CY = 3 Then
                    LuxLimTruckState = 3450@
            Else
                    LuxLimTruckState = 2075@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2027 Then
            If CY = 1 Then
                    LuxLimTruckState = 11560@
            ElseIf CY = 2 Then
                    LuxLimTruckState = 5700@
            ElseIf CY = 3 Then
                    LuxLimTruckState = 3450@
            Else
                    LuxLimTruckState = 2075@
            End If
    ElseIf YrInSrv = 2018 Then
            If CY = 1 Then
                LuxLimTruckState = 3560@
            ElseIf CY = 2 Then
                LuxLimTruckState = 5700@
            ElseIf CY = 3 Then
                LuxLimTruckState = 3350@
            Else
                LuxLimTruckState = 2075@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2028 Then
            If CY = 1 Then
                LuxLimTruckState = 9960@
            ElseIf CY = 2 Then
                LuxLimTruckState = 5700@
            ElseIf CY = 3 Then
                LuxLimTruckState = 3350@
            Else
                LuxLimTruckState = 2075@
            End If
    ElseIf YrInSrv = 2019 Then
            If CY = 1 Then
                LuxLimTruckState = 3670@
            ElseIf CY = 2 Then
                LuxLimTruckState = 5877@
            ElseIf CY = 3 Then
                LuxLimTruckState = 3454@
            Else
                LuxLimTruckState = 2139@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2029 Then
            If CY = 1 Then
                LuxLimTruckState = 9960@
            ElseIf CY = 2 Then
                LuxLimTruckState = 5700@
            ElseIf CY = 3 Then
                LuxLimTruckState = 3350@
            Else
                LuxLimTruckState = 2075@
            End If
    ElseIf YrInSrv = 2020 Then
            If CY = 1 Then
                LuxLimTruckState = 3721@
            ElseIf CY = 2 Then
                LuxLimTruckState = 5959@
            ElseIf CY = 3 Then
                LuxLimTruckState = 3502@
            Else
                LuxLimTruckState = 2169@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2030 Then
            If CY = 1 Then
                LuxLimTruckState = 9960@
            ElseIf CY = 2 Then
                LuxLimTruckState = 5700@
            ElseIf CY = 3 Then
                LuxLimTruckState = 3350@
            Else
                LuxLimTruckState = 2075@
            End If
    ElseIf YrInSrv = 2021 Then
            If CY = 1 Then
                LuxLimTruckState = 3721@
            ElseIf CY = 2 Then
                LuxLimTruckState = 5959@
            ElseIf CY = 3 Then
                LuxLimTruckState = 3502@
            Else
                LuxLimTruckState = 2169@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2031 Then
            If CY = 1 Then
                LuxLimTruckState = 9960@
            ElseIf CY = 2 Then
                LuxLimTruckState = 5700@
            ElseIf CY = 3 Then
                LuxLimTruckState = 3350@
            Else
                LuxLimTruckState = 2075@
            End If
    Else
        LuxLimTruckState = 0
    End If
End Function

Public Function LuxLimTruckState2(YrInSrv As Integer, CY As Integer) As Currency
'Updated for 2021
'States thats are different than federal- California, Iowa and Minnesota
'Created because of TCJA and states not comforming
    If YrInSrv = 2003 Then
            If CY = 1 Then
                    LuxLimTruckState2 = 3360@
            ElseIf CY = 2 Then
                    LuxLimTruckState2 = 5400@
            ElseIf CY = 3 Then
                    LuxLimTruckState2 = 3250@
            Else
                    LuxLimTruckState2 = 1975@
            End If
    
    ElseIf YrInSrv = 2004 Then
            If CY = 1 Then
                    LuxLimTruckState2 = 3260@
            ElseIf CY = 2 Then
                    LuxLimTruckState2 = 5300@
            ElseIf CY = 3 Then
                    LuxLimTruckState2 = 3150@
            Else
                    LuxLimTruckState2 = 1875@
            End If
    
    ElseIf YrInSrv = 2005 Then
            If CY = 1 Then
                    LuxLimTruckState2 = 3260@
            ElseIf CY = 2 Then
                    LuxLimTruckState2 = 5200@
            ElseIf CY = 3 Then
                    LuxLimTruckState2 = 3150@
            Else
                    LuxLimTruckState2 = 1875@
            End If
            
    ElseIf YrInSrv = 2006 Then
            If CY = 1 Then
                    LuxLimTruckState2 = 3260@
            ElseIf CY = 2 Then
                    LuxLimTruckState2 = 5200@
            ElseIf CY = 3 Then
                    LuxLimTruckState2 = 3150@
            Else
                    LuxLimTruckState2 = 1875@
            End If
    
    ElseIf YrInSrv = 2007 Then
            If CY = 1 Then
                    LuxLimTruckState2 = 3260@
            ElseIf CY = 2 Then
                    LuxLimTruckState2 = 5200@
            ElseIf CY = 3 Then
                    LuxLimTruckState2 = 3050@
            Else
                    LuxLimTruckState2 = 1875@
            End If
    ElseIf YrInSrv = 2008 Then
            If CY = 1 Then
                    LuxLimTruckState2 = 3160@
            ElseIf CY = 2 Then
                    LuxLimTruckState2 = 5100@
            ElseIf CY = 3 Then
                    LuxLimTruckState2 = 3050@
            Else
                    LuxLimTruckState2 = 1875@
            End If
     ElseIf YrInSrv = 2009 Then
            If CY = 1 Then
                    LuxLimTruckState2 = 3060@
            ElseIf CY = 2 Then
                    LuxLimTruckState2 = 4900@
            ElseIf CY = 3 Then
                    LuxLimTruckState2 = 3050@
            Else
                    LuxLimTruckState2 = 1775@
            End If
    ElseIf YrInSrv = 2010 Then
            If CY = 1 Then
                    LuxLimTruckState2 = 3160@
            ElseIf CY = 2 Then
                    LuxLimTruckState2 = 5100@
            ElseIf CY = 3 Then
                    LuxLimTruckState2 = 3050@
            Else
                    LuxLimTruckState2 = 1875@
            End If
    ElseIf YrInSrv = 2011 Then
            If CY = 1 Then
                    LuxLimTruckState2 = 3260@
            ElseIf CY = 2 Then
                    LuxLimTruckState2 = 5200@
            ElseIf CY = 3 Then
                    LuxLimTruckState2 = 3150@
            Else
                    LuxLimTruckState2 = 1875@
            End If
    ElseIf YrInSrv = 2012 Then
            If CY = 1 Then
                    LuxLimTruckState2 = 3360@
            ElseIf CY = 2 Then
                    LuxLimTruckState2 = 5300@
            ElseIf CY = 3 Then
                    LuxLimTruckState2 = 3150@
            Else
                    LuxLimTruckState2 = 1875@
            End If
    ElseIf YrInSrv = 2013 Then
            If CY = 1 Then
                    LuxLimTruckState2 = 3360@
            ElseIf CY = 2 Then
                    LuxLimTruckState2 = 5400@
            ElseIf CY = 3 Then
                    LuxLimTruckState2 = 3250@
            Else
                    LuxLimTruckState2 = 1975@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2023 Then
            If CY = 1 Then
                    LuxLimTruckState2 = 11360@
            ElseIf CY = 2 Then
                    LuxLimTruckState2 = 5400@
            ElseIf CY = 3 Then
                    LuxLimTruckState2 = 3250@
            Else
                    LuxLimTruckState2 = 1975@
            End If
    ElseIf YrInSrv = 2014 Then
            If CY = 1 Then
                    LuxLimTruckState2 = 3460@
            ElseIf CY = 2 Then
                    LuxLimTruckState2 = 5500@
            ElseIf CY = 3 Then
                    LuxLimTruckState2 = 3350@
            Else
                    LuxLimTruckState2 = 1975@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2024 Then
            If CY = 1 Then
                    LuxLimTruckState2 = 11460@
            ElseIf CY = 2 Then
                    LuxLimTruckState2 = 5500@
            ElseIf CY = 3 Then
                    LuxLimTruckState2 = 3350@
            Else
                    LuxLimTruckState2 = 1975@
            End If
    ElseIf YrInSrv = 2015 Then
            If CY = 1 Then
                    LuxLimTruckState2 = 3460@
            ElseIf CY = 2 Then
                    LuxLimTruckState2 = 5600@
            ElseIf CY = 3 Then
                    LuxLimTruckState2 = 3350@
            Else
                    LuxLimTruckState2 = 1975@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2025 Then
            If CY = 1 Then
                    LuxLimTruckState2 = 11460@
            ElseIf CY = 2 Then
                    LuxLimTruckState2 = 5600@
            ElseIf CY = 3 Then
                    LuxLimTruckState2 = 3350@
            Else
                    LuxLimTruckState2 = 1975@
            End If
    ElseIf YrInSrv = 2016 Then
            If CY = 1 Then
                    LuxLimTruckState2 = 3560@
            ElseIf CY = 2 Then
                    LuxLimTruckState2 = 5700@
            ElseIf CY = 3 Then
                    LuxLimTruckState2 = 3350@
            Else
                    LuxLimTruckState2 = 2075@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2026 Then
            If CY = 1 Then
                    LuxLimTruckState2 = 11560@
            ElseIf CY = 2 Then
                    LuxLimTruckState2 = 5700@
            ElseIf CY = 3 Then
                    LuxLimTruckState2 = 3350@
            Else
                    LuxLimTruckState2 = 2075@
            End If
    ElseIf YrInSrv = 2017 Then
            If CY = 1 Then
                    LuxLimTruckState2 = 3560@
            ElseIf CY = 2 Then
                    LuxLimTruckState2 = 5700@
            ElseIf CY = 3 Then
                    LuxLimTruckState2 = 3450@
            Else
                    LuxLimTruckState2 = 2075@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2027 Then
            If CY = 1 Then
                    LuxLimTruckState2 = 11560@
            ElseIf CY = 2 Then
                    LuxLimTruckState2 = 5700@
            ElseIf CY = 3 Then
                    LuxLimTruckState2 = 3450@
            Else
                    LuxLimTruckState2 = 2075@
            End If
    ElseIf YrInSrv = 2018 Then
            If CY = 1 Then
                LuxLimTruckState2 = 3560@
            ElseIf CY = 2 Then
                LuxLimTruckState2 = 5700@
            ElseIf CY = 3 Then
                LuxLimTruckState2 = 3350@
            Else
                LuxLimTruckState2 = 2075@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2028 Then
            If CY = 1 Then
                LuxLimTruckState2 = 9960@
            ElseIf CY = 2 Then
                LuxLimTruckState2 = 5700@
            ElseIf CY = 3 Then
                LuxLimTruckState2 = 3350@
            Else
                LuxLimTruckState2 = 2075@
            End If
    ElseIf YrInSrv = 2019 Then
            If CY = 1 Then
                LuxLimTruckState2 = 3670@
            ElseIf CY = 2 Then
                LuxLimTruckState2 = 5877@
            ElseIf CY = 3 Then
                LuxLimTruckState2 = 3454@
            Else
                LuxLimTruckState2 = 2139@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2029 Then
            If CY = 1 Then
                LuxLimTruckState2 = 9960@
            ElseIf CY = 2 Then
                LuxLimTruckState2 = 5700@
            ElseIf CY = 3 Then
                LuxLimTruckState2 = 3350@
            Else
                LuxLimTruckState2 = 2075@
            End If
    ElseIf YrInSrv = 2020 Then
            If CY = 1 Then
                LuxLimTruckState2 = 3721@
            ElseIf CY = 2 Then
                LuxLimTruckState2 = 5959@
            ElseIf CY = 3 Then
                LuxLimTruckState2 = 3502@
            Else
                LuxLimTruckState2 = 2169@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2030 Then
            If CY = 1 Then
                LuxLimTruckState2 = 9960@
            ElseIf CY = 2 Then
                LuxLimTruckState2 = 5700@
            ElseIf CY = 3 Then
                LuxLimTruckState2 = 3350@
            Else
                LuxLimTruckState2 = 2075@
            End If
    ElseIf YrInSrv = 2021 Then
            If CY = 1 Then
                LuxLimTruckState2 = 3560@
            ElseIf CY = 2 Then
                LuxLimTruckState2 = 5800@
            ElseIf CY = 3 Then
                LuxLimTruckState2 = 3450@
            Else
                LuxLimTruckState2 = 2075@
            End If
    'bonus + 10
    ElseIf YrInSrv = 2031 Then
            If CY = 1 Then
                LuxLimTruckState2 = 9960@
            ElseIf CY = 2 Then
                LuxLimTruckState2 = 5700@
            ElseIf CY = 3 Then
                LuxLimTruckState2 = 3350@
            Else
                LuxLimTruckState2 = 2075@
            End If
    Else
        LuxLimTruckState2 = 0
    End If
End Function

Public Function VehStraightLine(OrigBal As Double, OrigLife As Double, FYConv As Double, SigDig As Integer, YrIn As Integer, YrsB4 As Integer, BusUse As Double, Listed179 As Currency, BonusY As Long, PreTCJA As Integer) As Currency
    Dim Digits As Integer
    Dim DeprCalc As Currency
    Dim Mos As Double
    Dim count As Integer
    Dim Total As Double
    Dim Limit As Currency
    Dim Mid As Currency
    Dim DeprBal As Double
    Dim Total1 As Double
        
    Mos = (OrigLife * 12#)
    DeprBal = OrigBal - CDbl(Listed179)
    count = 0
    Total = 0
    Total1 = 0

    If SigDig = 4 Then
        Digits = 10000
    Else
        Digits = 100000
    End If
    
    Do While count < (YrsB4 + 1)
        count = count + 1
        
        If count = 1 And Mos > 0 Then
            DeprCalc = CDollar(Round((((DeprBal) / Mos) * FYConv) * Digits) / Digits)
            Mos = Mos - FYConv
        ElseIf count = 6 And (DeprBal - Total) > 0 And Mos > 0 Then
            DeprCalc = CDollar(Round((((DeprBal - Total) / Mos) * (12# - FYConv)) * Digits) / Digits)
            Mos = 0
        ElseIf (DeprBal - Total) > 0 And Mos > 0 Then
            DeprCalc = CDollar(Round((((DeprBal - Total) / Mos) * 12#) * Digits) / Digits)
            Mos = Mos - 12#
        Else
            DeprCalc = 0
        End If
        
        If DeprCalc = 0 Then
            Mid = MaxValue(0, CDollar(DeprBal - Total1))
        Else
            Mid = DeprCalc
        End If
        
        If count = 1 Then
            If BonusY = 1 Then
                Limit = MinValue(LuxLim(YrIn + 10, count, PreTCJA) - Listed179, Mid)
            Else
                Limit = MinValue(LuxLim(YrIn, count, PreTCJA) - Listed179, Mid)
            End If
        Else
            If BonusY = 1 Then
                Limit = MinValue(LuxLim(YrIn + 10, count, PreTCJA), Mid)
            Else
                Limit = MinValue(LuxLim(YrIn, count, PreTCJA), Mid)
            End If
        End If
        
        'to correct calc after depr life
        If DeprCalc = 0 Then
            Total = Total + CDbl(Limit)
            Total1 = Total1 + CDbl(Limit)
        Else
            Total = Total + CDbl(DeprCalc)
            Total1 = Total1 + CDbl(MinValue(Limit, DeprCalc))
        End If
    Loop
    
    VehStraightLine = Limit
End Function

Public Function VehStraightLineDR(OrigBal As Double, OrigLife As Double, FYConv As Double, SigDig As Integer, YrIn As Integer, YrsB4 As Integer, BusUse As Double, Listed179 As Currency, BonusYes As Long, PreTCJA As Integer) As Currency
    Dim Digits As Integer
    Dim DeprCalc As Currency
    Dim Mos As Double
    Dim count As Integer
    Dim Total As Double
    Dim Total1 As Double
    Dim Limit As Currency
    Dim Mid As Currency
    Dim DeprBal As Double
        
    Mos = (OrigLife * 12#)
    DeprBal = OrigBal - CDbl(Listed179)
    count = 0
    Total = 0
    Total1 = 0

    If SigDig = 4 Then
        Digits = 10000
    Else
        Digits = 100000
    End If
    
    Do While count < (YrsB4 + 1)
        count = count + 1
        
        If count = 1 And Mos > 0 Then
            DeprCalc = CDollar(Round((((DeprBal) / Mos) * FYConv) * Digits) / Digits)
            Mos = Mos - FYConv
        ElseIf count = 6 And (DeprBal - Total) > 0 And Mos > 0 Then
            DeprCalc = CDollar(Round((((DeprBal - Total) / Mos) * (12# - FYConv)) * Digits) / Digits)
            Mos = 0
        ElseIf (DeprBal - Total) > 0 And Mos > 0 Then
            DeprCalc = CDollar(Round((((DeprBal - Total) / Mos) * 12#) * Digits) / Digits)
            Mos = Mos - 12#
        Else
            DeprCalc = 0
        End If
        
        If DeprCalc = 0 Then
            Mid = MaxValue(0, CDollar(DeprBal - Total1))
        Else
            Mid = DeprCalc
        End If
        
        If count = 1 Then
            If BonusYes = 1 Then
                Limit = MinValue(LuxLim(YrIn + 10, count, PreTCJA) - Listed179, Mid)
            Else
                Limit = MinValue(LuxLim(YrIn, count, PreTCJA) - Listed179, Mid)
            End If
        Else
            If BonusYes = 1 Then
                Limit = MinValue(LuxLim(YrIn + 10, count, PreTCJA), Mid)
            Else
                Limit = MinValue(LuxLim(YrIn, count, PreTCJA), Mid)
            End If
        End If
        
        'to correct calc after depr life
        If DeprCalc = 0 Then
            Total = Total + CDbl(Limit)
            Total1 = Total1 + CDbl(Limit)
        Else
            Total = Total + CDbl(DeprCalc)
            Total1 = Total1 + CDbl(MinValue(Limit, DeprCalc))
        End If
    Loop
    
    VehStraightLineDR = Limit
End Function


Public Function VehStraightLineTruck(OrigBal As Double, OrigLife As Double, FYConv As Double, SigDig As Integer, YrIn As Integer, YrsB4 As Integer, BusUse As Double, Listed179 As Currency, BonusY As Long, PreTCJA As Integer) As Currency
    Dim Digits As Integer
    Dim DeprCalc As Currency
    Dim Mos As Double
    Dim count As Integer
    Dim Total As Double
    Dim Total1 As Double
    Dim Limit As Currency
    Dim Mid As Currency
    Dim DeprBal As Double
        
    Mos = (OrigLife * 12#)
    DeprBal = OrigBal - CDbl(Listed179)
    count = 0
    Total = 0
    Total1 = 0

    If SigDig = 4 Then
        Digits = 10000
    Else
        Digits = 100000
    End If
    
    Do While count < (YrsB4 + 1)
        count = count + 1
        
        If count = 1 And Mos > 0 Then
            DeprCalc = CDollar(Round((((DeprBal) / Mos) * FYConv) * Digits) / Digits)
            Mos = Mos - FYConv
        ElseIf count = 6 And (DeprBal - Total) > 0 And Mos > 0 Then
            DeprCalc = CDollar(Round((((DeprBal - Total) / Mos) * (12# - FYConv)) * Digits) / Digits)
            Mos = 0
        ElseIf (DeprBal - Total) > 0 And Mos > 0 Then
            DeprCalc = CDollar(Round((((DeprBal - Total) / Mos) * 12#) * Digits) / Digits)
            Mos = Mos - 12#
        Else
            DeprCalc = 0
        End If
        
        If DeprCalc = 0 Then
            Mid = MaxValue(0, CDollar(DeprBal - Total1))
        Else
            Mid = DeprCalc
        End If
        
        If count = 1 Then
            If BonusY = 1 Then
                Limit = MinValue(LuxLimTruck(YrIn + 10, count, PreTCJA) - Listed179, Mid)
            Else
                Limit = MinValue(LuxLimTruck(YrIn, count, PreTCJA) - Listed179, Mid)
            End If
        Else
            If BonusY = 1 Then
                Limit = MinValue(LuxLimTruck(YrIn + 10, count, PreTCJA), Mid)
            Else
                Limit = MinValue(LuxLimTruck(YrIn, count, PreTCJA), Mid)
            End If
        End If
        
        'to correct calc after depr life
        If DeprCalc = 0 Then
            Total = Total + CDbl(Limit)
            Total1 = Total1 + CDbl(Limit)
        Else
            Total = Total + CDbl(DeprCalc)
            Total1 = Total1 + CDbl(MinValue(Limit, DeprCalc))
        End If
    Loop
    
    VehStraightLineTruck = Limit
End Function

Public Function VehStraightLineTruckDR(OrigBal As Double, OrigLife As Double, FYConv As Double, SigDig As Integer, YrIn As Integer, YrsB4 As Integer, BusUse As Double, Listed179 As Currency, BonusYes As Long, PreTCJA As Integer) As Currency
    Dim Digits As Integer
    Dim DeprCalc As Currency
    Dim Mos As Double
    Dim count As Integer
    Dim Total As Double
    Dim Total1 As Double
    Dim Limit As Currency
    Dim Mid As Currency
    Dim DeprBal As Double
        
    Mos = (OrigLife * 12#)
    DeprBal = OrigBal - CDbl(Listed179)
    count = 0
    Total = 0
    Total1 = 0

    If SigDig = 4 Then
        Digits = 10000
    Else
        Digits = 100000
    End If
    
    Do While count < (YrsB4 + 1)
        count = count + 1
        
        If count = 1 And Mos > 0 Then
            DeprCalc = CDollar(Round((((DeprBal) / Mos) * FYConv) * Digits) / Digits)
            Mos = Mos - FYConv
        ElseIf count = 6 And (DeprBal - Total) > 0 And Mos > 0 Then
            DeprCalc = CDollar(Round((((DeprBal - Total) / Mos) * (12# - FYConv)) * Digits) / Digits)
            Mos = 0
        ElseIf (DeprBal - Total) > 0 And Mos > 0 Then
            DeprCalc = CDollar(Round((((DeprBal - Total) / Mos) * 12#) * Digits) / Digits)
            Mos = Mos - 12#
        Else
            DeprCalc = 0
        End If
        
        If DeprCalc = 0 Then
            Mid = MaxValue(0, CDollar(DeprBal - Total1))
        Else
            Mid = DeprCalc
        End If
        
        If count = 1 Then
            If BonusYes = 1 Then
                Limit = MinValue(LuxLimTruck(YrIn + 10, count, PreTCJA) - Listed179, Mid)
            Else
                Limit = MinValue(LuxLimTruck(YrIn, count, PreTCJA) - Listed179, Mid)
            End If
        Else
            If BonusYes = 1 Then
                Limit = MinValue(LuxLimTruck(YrIn + 10, count, PreTCJA), Mid)
            Else
                Limit = MinValue(LuxLimTruck(YrIn, count, PreTCJA), Mid)
            End If
        End If
        
        'to correct calc after depr life
        If DeprCalc = 0 Then
            Total = Total + CDbl(Limit)
            Total1 = Total1 + CDbl(Limit)
        Else
            Total = Total + CDbl(DeprCalc)
            Total1 = Total1 + CDbl(MinValue(Limit, DeprCalc))
        End If
    Loop
    
    VehStraightLineTruckDR = Limit
End Function

Public Function VehDecBal(DecBalRate As Double, OrigBal As Double, Life As Double, FYConv As Double, YearsB4 As Integer, YrIn As Integer, BusUse As Double, Listed179 As Currency, BonusY As Long, PreTCJA As Integer) As Currency
    Dim MoRate As Double
    Dim Mos As Double
    Dim DB As Currency
    Dim SL As Currency
    Dim CumDBRate As Double
    Dim count As Integer
    Dim Mid As Currency
    Dim Limit As Currency
    Dim Limit2 As Currency
    Dim Limit3 As Currency
    Dim SLRate As Double
    Dim Rate As Double
    Dim CumDepr As Currency
    Dim RemBal As Currency
    Dim CumDepr2 As Currency
        
    CumDBRate = 0
    Mos = Life * 12#
    SL = 0
    DB = 0
    count = 0
    CumDepr = 0
    CumDepr2 = 0
    RemBal = MaxValue(0, CCur(OrigBal) - Listed179)

    If Life = 0 Then
        MoRate = 0
    Else
        MoRate = DecBalRate / Mos
    End If
    
    Do While count < (YearsB4 + 1)
        If count = 0 And Mos > 0 Then
            Rate = (Round((MoRate * FYConv) * 10000#) / 10000#)
            DB = CDollar(CDbl(RemBal) * Rate)
            SLRate = Round(((1 / Mos) * FYConv) * 10000#) / 10000#
            SL = CDollar(CDbl(RemBal) * SLRate)
            Mos = Mos - FYConv
        ElseIf count = 5 Then
            Rate = Round((1 - CumDBRate) * (MoRate * (12# - FYConv)) * 10000#) / 10000#
            DB = CDollar(CDbl(RemBal) * Rate)
            If (1# - CumDBRate) > 0 And Mos <> 0 Then
                SLRate = Round((((1 - CumDBRate) / Mos) * (12# - FYConv)) * 10000#) / 10000#
                SL = CDollar(CDbl(RemBal) * SLRate)
            Else
                SL = 0
                SLRate = 0
            End If
        Else
            Rate = Round((1 - CumDBRate) * (MoRate * 12#) * 10000#) / 10000#
            DB = CDollar(CDbl(RemBal) * Rate)
            If (1# - CumDBRate) > 0 And Mos <> 0 Then
                SLRate = Round((((1 - CumDBRate) / Mos) * 12#) * 10000#) / 10000#
                SL = CDollar(CDbl(RemBal) * SLRate)
                Mos = Mos - 12#
            Else
                SL = 0
                SLRate = 0
            End If
        End If
        
        count = count + 1
        
        If DB > SL Then
            Limit2 = DB
            CumDBRate = CumDBRate + Rate
        Else
            Limit2 = SL
            CumDBRate = CumDBRate + SLRate
        End If
        
        If count = 6 Then
            Mid = MaxValue(0, RemBal - CumDepr2)
            If BonusY = 1 Then
                Limit3 = MinValue(LuxLim(YrIn + 10, count, PreTCJA), Mid)
                CumDepr = CumDepr + Limit3
                Limit = MinValue(LuxLim(YrIn + 10, count, PreTCJA), Limit2)
            Else
                Limit3 = MinValue(LuxLim(YrIn, count, PreTCJA), Mid)
                CumDepr = CumDepr + Limit3
                Limit = MinValue(LuxLim(YrIn, count, PreTCJA), Limit2)
            End If
        ElseIf count > Life Then
            Mid = MaxValue(0, RemBal - CumDepr)
            If BonusY = 1 Then
                Limit3 = MinValue(LuxLim(YrIn + 10, count, PreTCJA), Mid)
                CumDepr = CumDepr + Limit3
            Else
                Limit3 = MinValue(LuxLim(YrIn, count, PreTCJA), Mid)
                CumDepr = CumDepr + Limit3
            End If
        Else
            Mid = MaxValue(0, CDollar(OrigBal) - CumDepr)
            If BonusY = 1 Then
                Limit = MinValue(LuxLim(YrIn + 10, count, PreTCJA), Mid)
            Else
                Limit = MinValue(LuxLim(YrIn, count, PreTCJA), Mid)
            End If
            If count = 1 Then
                Limit3 = MinValue(Limit, Limit2 + Listed179)
                CumDepr = CumDepr + MaxValue(0, Limit3 - Listed179)
                CumDepr2 = CumDepr2 + Limit2
            Else
                Limit3 = MinValue(Limit, Limit2)
                CumDepr = CumDepr + Limit3
                CumDepr2 = CumDepr2 + Limit2
            End If
        End If
            
        Loop
        
    VehDecBal = Limit3
    
    End Function
    
Public Function VehDecBalDR(DecBalRate As Double, OrigBal As Double, Life As Double, FYConv As Double, YearsB4 As Integer, YrIn As Integer, BusUse As Double, Listed179 As Currency, BonusYes As Long, PreTCJA As Integer) As Currency
    Dim MoRate As Double
    Dim Mos As Double
    Dim DB As Currency
    Dim SL As Currency
    Dim CumDBRate As Double
    Dim count As Integer
    Dim Mid As Currency
    Dim Limit As Currency
    Dim Limit2 As Currency
    Dim Limit3 As Currency
    Dim SLRate As Double
    Dim Rate As Double
    Dim CumDepr As Currency
    Dim RemBal As Currency
    Dim CumDepr2 As Currency
    
    CumDBRate = 0
    Mos = Life * 12#
    SL = 0
    DB = 0
    count = 0
    CumDepr = 0
    CumDepr2 = 0
    RemBal = MaxValue(0, CCur(OrigBal) - Listed179)

    If Life = 0 Then
        MoRate = 0
    Else
        MoRate = DecBalRate / Mos
    End If
    
    Do While count < (YearsB4 + 1)
        If count = 0 And Mos > 0 Then
            Rate = (Round((MoRate * FYConv) * 10000#) / 10000#)
            DB = CDollar(CDbl(RemBal) * Rate)
            SLRate = Round(((1 / Mos) * FYConv) * 10000#) / 10000#
            SL = CDollar(CDbl(RemBal) * SLRate)
            Mos = Mos - FYConv
        ElseIf count = 5 Then
            Rate = Round((1 - CumDBRate) * (MoRate * (12# - FYConv)) * 10000#) / 10000#
            DB = CDollar(CDbl(RemBal) * Rate)
            If (1# - CumDBRate) > 0 And Mos <> 0 Then
                SLRate = Round((((1 - CumDBRate) / Mos) * (12# - FYConv)) * 10000#) / 10000#
                SL = CDollar(CDbl(RemBal) * SLRate)
            Else
                SL = 0
                SLRate = 0
            End If
        Else
            Rate = Round((1 - CumDBRate) * (MoRate * 12#) * 10000#) / 10000#
            DB = CDollar(CDbl(RemBal) * Rate)
            If (1# - CumDBRate) > 0 And Mos <> 0 Then
                SLRate = Round((((1 - CumDBRate) / Mos) * 12#) * 10000#) / 10000#
                SL = CDollar(CDbl(RemBal) * SLRate)
                Mos = Mos - 12#
            Else
                SL = 0
                SLRate = 0
            End If
        End If
        
        count = count + 1
        
        If DB > SL Then
            Limit2 = DB
            CumDBRate = CumDBRate + Rate
        Else
            Limit2 = SL
            CumDBRate = CumDBRate + SLRate
        End If
        
        If count = 6 Then
            Mid = MaxValue(0, RemBal - CumDepr2)
            If BonusYes = 1 Then
                Limit3 = MinValue(LuxLim(YrIn + 10, count, PreTCJA), Mid)
                CumDepr = CumDepr + Limit3
                Limit = MinValue(LuxLim(YrIn + 10, count, PreTCJA), Limit2)
            Else
                Limit3 = MinValue(LuxLim(YrIn, count, PreTCJA), Mid)
                CumDepr = CumDepr + Limit3
                Limit = MinValue(LuxLim(YrIn, count, PreTCJA), Limit2)
            End If
        ElseIf count > Life Then
            Mid = MaxValue(0, RemBal - CumDepr)
            If BonusYes = 1 Then
                Limit3 = MinValue(LuxLim(YrIn + 10, count, PreTCJA), Mid)
                CumDepr = CumDepr + Limit3
            Else
                Limit3 = MinValue(LuxLim(YrIn, count, PreTCJA), Mid)
                CumDepr = CumDepr + Limit3
            End If
        Else
            Mid = MaxValue(0, CDollar(OrigBal) - CumDepr)
            If BonusYes = 1 Then
                Limit = MinValue(LuxLim(YrIn + 10, count, PreTCJA), Mid)
            Else
                Limit = MinValue(LuxLim(YrIn, count, PreTCJA), Mid)
            End If
            
            If count = 1 Then
                Limit3 = MinValue(Limit, Limit2 + Listed179)
                CumDepr = CumDepr + MaxValue(0, Limit3 - Listed179)
                CumDepr2 = CumDepr2 + Limit2
            Else
                Limit3 = MinValue(Limit, Limit2)
                CumDepr = CumDepr + Limit3
                CumDepr2 = CumDepr2 + Limit2
            End If
            
        End If
            
        Loop
        
    VehDecBalDR = Limit3
    
    End Function

Public Function VehDecBalTruck(DecBalRate As Double, OrigBal As Double, Life As Double, FYConv As Double, YearsB4 As Integer, YrIn As Integer, BusUse As Double, Listed179 As Currency, BonusY As Long, PreTCJA As Integer) As Currency
    Dim MoRate As Double
    Dim Mos As Double
    Dim DB As Currency
    Dim SL As Currency
    Dim CumDBRate As Double
    Dim count As Integer
    Dim Mid As Currency
    Dim Limit As Currency
    Dim Limit2 As Currency
    Dim Limit3 As Currency
    Dim SLRate As Double
    Dim Rate As Double
    Dim CumDepr As Currency
    Dim RemBal As Currency
    Dim CumDepr2 As Currency
    
    CumDBRate = 0
    Mos = Life * 12#
    SL = 0
    DB = 0
    count = 0
    CumDepr = 0
    CumDepr2 = 0
    RemBal = MaxValue(0, CCur(OrigBal) - Listed179)

    If Life = 0 Then
        MoRate = 0
    Else
        MoRate = DecBalRate / Mos
    End If
    
    Do While count < (YearsB4 + 1)
        If count = 0 And Mos > 0 Then
            Rate = (Round((MoRate * FYConv) * 10000#) / 10000#)
            DB = CDollar(CDbl(RemBal) * Rate)
            SLRate = Round(((1 / Mos) * FYConv) * 10000#) / 10000#
            SL = CDollar(CDbl(RemBal) * SLRate)
            Mos = Mos - FYConv
        ElseIf count = 5 Then
            Rate = Round((1 - CumDBRate) * (MoRate * (12# - FYConv)) * 10000#) / 10000#
            DB = CDollar(CDbl(RemBal) * Rate)
            If (1# - CumDBRate) > 0 And Mos <> 0 Then
                SLRate = Round((((1 - CumDBRate) / Mos) * (12# - FYConv)) * 10000#) / 10000#
                SL = CDollar(CDbl(RemBal) * SLRate)
            Else
                SL = 0
                SLRate = 0
            End If
        Else
            Rate = Round((1 - CumDBRate) * (MoRate * 12#) * 10000#) / 10000#
            DB = CDollar(CDbl(RemBal) * Rate)
            If (1# - CumDBRate) > 0 And Mos <> 0 Then
                SLRate = Round((((1 - CumDBRate) / Mos) * 12#) * 10000#) / 10000#
                SL = CDollar(CDbl(RemBal) * SLRate)
                Mos = Mos - 12#
            Else
                SL = 0
                SLRate = 0
            End If
        End If
        
        count = count + 1
        
        If DB > SL Then
            Limit2 = DB
            CumDBRate = CumDBRate + Rate
        Else
            Limit2 = SL
            CumDBRate = CumDBRate + SLRate
        End If
        
        If count = 6 Then
            Mid = MaxValue(0, RemBal - CumDepr2)
            If BonusY = 1 Then
                Limit3 = MinValue(LuxLimTruck(YrIn + 10, count, PreTCJA), Mid)
                CumDepr = CumDepr + Limit3
                Limit = MinValue(LuxLimTruck(YrIn + 10, count, PreTCJA), Limit2)
            Else
                Limit3 = MinValue(LuxLimTruck(YrIn, count, PreTCJA), Mid)
                CumDepr = CumDepr + Limit3
                Limit = MinValue(LuxLimTruck(YrIn, count, PreTCJA), Limit2)
            End If
        ElseIf count > Life Then
            Mid = MaxValue(0, RemBal - CumDepr)
            If BonusY = 1 Then
                Limit3 = MinValue(LuxLimTruck(YrIn + 10, count, PreTCJA), Mid)
                CumDepr = CumDepr + Limit3
            Else
                Limit3 = MinValue(LuxLimTruck(YrIn, count, PreTCJA), Mid)
                CumDepr = CumDepr + Limit3
            End If
        Else
            Mid = MaxValue(0, CDollar(OrigBal) - CumDepr)
            If BonusY = 1 Then
                Limit = MinValue(LuxLimTruck(YrIn + 10, count, PreTCJA), Mid)
            Else
                Limit = MinValue(LuxLimTruck(YrIn, count, PreTCJA), Mid)
            End If
            If count = 1 Then
                Limit3 = MinValue(Limit, Limit2 + Listed179)
                CumDepr = CumDepr + MaxValue(0, Limit3 - Listed179)
                CumDepr2 = CumDepr2 + Limit2
            Else
                Limit3 = MinValue(Limit, Limit2)
                CumDepr = CumDepr + Limit3
                CumDepr2 = CumDepr2 + Limit2
            End If
            
        End If
            
        Loop
        
    VehDecBalTruck = Limit3
    
    End Function
    
Public Function VehDecBalTruckDR(DecBalRate As Double, OrigBal As Double, Life As Double, FYConv As Double, YearsB4 As Integer, YrIn As Integer, BusUse As Double, Listed179 As Currency, BonusYes As Long, PreTCJA As Integer) As Currency
    Dim MoRate As Double
    Dim Mos As Double
    Dim DB As Currency
    Dim SL As Currency
    Dim CumDBRate As Double
    Dim count As Integer
    Dim Mid As Currency
    Dim Limit As Currency
    Dim Limit2 As Currency
    Dim Limit3 As Currency
    Dim SLRate As Double
    Dim Rate As Double
    Dim CumDepr As Currency
    Dim RemBal As Currency
    Dim CumDepr2 As Currency
    
    CumDBRate = 0
    Mos = Life * 12#
    SL = 0
    DB = 0
    count = 0
    CumDepr = 0
    CumDepr2 = 0
    RemBal = MaxValue(0, CCur(OrigBal) - Listed179)

    If Life = 0 Then
        MoRate = 0
    Else
        MoRate = DecBalRate / Mos
    End If
    
    Do While count < (YearsB4 + 1)
        If count = 0 And Mos > 0 Then
            Rate = (Round((MoRate * FYConv) * 10000#) / 10000#)
            DB = CDollar(CDbl(RemBal) * Rate)
            SLRate = Round(((1 / Mos) * FYConv) * 10000#) / 10000#
            SL = CDollar(CDbl(RemBal) * SLRate)
            Mos = Mos - FYConv
        ElseIf count = 5 Then
            Rate = Round((1 - CumDBRate) * (MoRate * (12# - FYConv)) * 10000#) / 10000#
            DB = CDollar(CDbl(RemBal) * Rate)
            If (1# - CumDBRate) > 0 And Mos <> 0 Then
                SLRate = Round((((1 - CumDBRate) / Mos) * (12# - FYConv)) * 10000#) / 10000#
                SL = CDollar(CDbl(RemBal) * SLRate)
            Else
                SL = 0
                SLRate = 0
            End If
        Else
            Rate = Round((1 - CumDBRate) * (MoRate * 12#) * 10000#) / 10000#
            DB = CDollar(CDbl(RemBal) * Rate)
            If (1# - CumDBRate) > 0 And Mos <> 0 Then
                SLRate = Round((((1 - CumDBRate) / Mos) * 12#) * 10000#) / 10000#
                SL = CDollar(CDbl(RemBal) * SLRate)
                Mos = Mos - 12#
            Else
                SL = 0
                SLRate = 0
            End If
        End If
        
        count = count + 1
        
        If DB > SL Then
            Limit2 = DB
            CumDBRate = CumDBRate + Rate
        Else
            Limit2 = SL
            CumDBRate = CumDBRate + SLRate
        End If
        
        If count = 6 Then
            Mid = MaxValue(0, RemBal - CumDepr2)
            If BonusYes = 1 Then
                Limit3 = MinValue(LuxLimTruck(YrIn + 10, count, PreTCJA), Mid)
                CumDepr = CumDepr + Limit3
                Limit = MinValue(LuxLimTruck(YrIn + 10, count, PreTCJA), Limit2)
            Else
                Limit3 = MinValue(LuxLimTruck(YrIn, count, PreTCJA), Mid)
                CumDepr = CumDepr + Limit3
                Limit = MinValue(LuxLimTruck(YrIn, count, PreTCJA), Limit2)
            End If
        ElseIf count > Life Then
            Mid = MaxValue(0, RemBal - CumDepr)
            
            If BonusYes = 1 Then
                Limit3 = MinValue(LuxLimTruck(YrIn + 10, count, PreTCJA), Mid)
                CumDepr = CumDepr + Limit3
            Else
                Limit3 = MinValue(LuxLimTruck(YrIn, count, PreTCJA), Mid)
                CumDepr = CumDepr + Limit3
            End If
        Else
            Mid = MaxValue(0, CDollar(OrigBal) - CumDepr)
            If BonusYes = 1 Then
                Limit = MinValue(LuxLimTruck(YrIn + 10, count, PreTCJA), Mid)
            Else
                Limit = MinValue(LuxLimTruck(YrIn, count, PreTCJA), Mid)
            End If
            
            If count = 1 Then
                Limit3 = MinValue(Limit, Limit2 + Listed179)
                CumDepr = CumDepr + MaxValue(0, Limit3 - Listed179)
                CumDepr2 = CumDepr2 + Limit2
            Else
                Limit3 = MinValue(Limit, Limit2)
                CumDepr = CumDepr + Limit3
                CumDepr2 = CumDepr2 + Limit2
            End If
            
        End If
            
        Loop
        
    VehDecBalTruckDR = Limit3
    
End Function

Public Function StraightLine(RBal As Double, RLife As Double, MoCY As Double, Prior As Double, PriorEntry As Currency, SigDig As Integer) As Currency
    Dim Digits As Integer
    
    If SigDig = 4 Then
        Digits = 10000
    Else
        Digits = 100000
    End If
    
    If RLife = 0 Then
        StraightLine = 0
    ElseIf PriorEntry = 0 And Prior > 1 Then
        StraightLine = 0
    ElseIf PriorEntry = 0 Then
        StraightLine = CDollar((Round((((1 - Prior) / RLife) * MoCY) * Digits) / Digits) * RBal)
    Else
        StraightLine = CDollar((RBal / RLife) * MoCY)
    End If
End Function

Public Function StraightLineAmort(RBal As Double, RLife As Double, MoCY As Double, Prior As Double, PriorEntry As Currency) As Currency
    Dim Digits As Integer
    
    Digits = 100000
    
    If RLife = 0 Then
        StraightLineAmort = 0
    ElseIf PriorEntry = 0 And Prior > 1 Then
        StraightLineAmort = 0
    ElseIf PriorEntry = 0 Then
        StraightLineAmort = CDollar((((((1 - Prior) / RLife) * MoCY) * Digits) / Digits) * RBal)
    Else
        StraightLineAmort = CDollar((RBal / RLife) * MoCY)
    End If
End Function

Public Function DecBal(DecBalRate As Double, RBal As Double, RLife As Double, Life As Double, FYConv As Double, MoCY As Double, Prior As Integer, YearsB4 As Integer) As Currency
    Dim MoRate As Double
    Dim Mos As Double
    Dim DB As Double
    Dim SL As Double
    Dim Total As Double
    Dim count As Integer
    
    If Life = 0 Then
        MoRate = 0
    Else
        MoRate = DecBalRate / (Life * 12#)
    End If
    Mos = Life * 12#
    SL = 0
    
    If Prior = 0 Then
        Total = Round((MoRate * FYConv) * 10000#) / 10000#
        DB = Total
        count = 1
        Mos = Mos - FYConv
        Do While count < (YearsB4 + 1)
            DB = Round((1 - Total) * (MoRate * 12#) * 10000#) / 10000#
            If Mos = 0 Then
                SL = 0
            ElseIf Mos < 12# Then
                SL = (1 - Total)
            Else
                SL = Round((((1 - Total) / Mos) * 12#) * 10000#) / 10000#
            End If
            Total = Total + MaxValue(DB, SL)
            count = count + 1
            Mos = Mos - 12#
        Loop
        DecBal = CDollar(MaxValue(DB, SL) * RBal)
    ElseIf RLife = 0 Then
        DecBal = 0
    Else
        DB = Round((MoRate * RBal * 12#) * 10000#) / 10000#
        SL = Round(((RBal / RLife) * MoCY) * 10000#) / 10000#
        DecBal = CDollar(MaxValue(DB, SL))
    End If
    
    'CDollar((Rate * MoCY) * RBal)
End Function
Public Function SL39(MO As Integer, Yr As Integer) As Double
    Dim Rate As Double
    
    If Yr = 1 Then
        Select Case MO
            Case 1
                Rate = 0.02461
            Case 2
                Rate = 0.02247
            Case 3
                Rate = 0.02033
            Case 4
                Rate = 0.01819
            Case 5
                Rate = 0.01605
            Case 6
                Rate = 0.01391
            Case 7
                Rate = 0.01177
            Case 8
                Rate = 0.00963
            Case 9
                Rate = 0.00749
            Case 10
                Rate = 0.00535
            Case 11
                Rate = 0.00321
            Case Else
                Rate = 0.00107
            End Select
    ElseIf Yr = 40 Then
        Select Case MO
            Case 1
                Rate = 0.00107
            Case 2
                Rate = 0.00321
            Case 3
                Rate = 0.00535
            Case 4
                Rate = 0.00749
            Case 5
                Rate = 0.00963
            Case 6
                Rate = 0.01177
            Case 7
                Rate = 0.01391
            Case 8
                Rate = 0.01605
            Case 9
                Rate = 0.01819
            Case 10
                Rate = 0.02033
            Case 11
                Rate = 0.02247
            Case Else
                Rate = 0.02461
            End Select
    Else
        Rate = 0.02564
    End If
    
    
    ReturnVal = Rate
   
End Function

Public Function Veh200DB(DPIS As Date) As Double
    If DPIS > MakeDate(9, 30, YearNumber) Then
        Veh200DB = 5#
    ElseIf DPIS > MakeDate(12, 31, YearNumber - 1) Then
        Veh200DB = 20#
    ElseIf DPIS > MakeDate(9, 30, YearNumber - 1) Then
        Veh200DB = 38#
    ElseIf DPIS > MakeDate(12, 31, YearNumber - 2) Then
        Veh200DB = 32#
    ElseIf DPIS > MakeDate(9, 30, YearNumber - 2) Then
        Veh200DB = 22.8
    ElseIf DPIS > MakeDate(12, 31, YearNumber - 3) Then
        Veh200DB = 19.2
    ElseIf DPIS > MakeDate(9, 30, YearNumber - 3) Then
        Veh200DB = 13.68
    ElseIf DPIS > MakeDate(12, 31, YearNumber - 4) Then
        Veh200DB = 11.52
    ElseIf DPIS > MakeDate(9, 30, YearNumber - 4) Then
        Veh200DB = 10.94
    ElseIf DPIS > MakeDate(12, 31, YearNumber - 5) Then
        Veh200DB = 11.52
    ElseIf DPIS > MakeDate(9, 30, YearNumber - 5) Then
        Veh200DB = 9.58
    ElseIf DPIS > MakeDate(12, 31, YearNumber - 6) Then
        Veh200DB = 5.76
    Else
        Veh200DB = 0
    End If

End Function

Public Function Veh150Db(DPIS As Date) As Double
    If DPIS > MakeDate(9, 30, YearNumber) Then
        Veh150Db = 3.75
    ElseIf DPIS > MakeDate(12, 31, YearNumber - 1) Then
        Veh150Db = 15#
    ElseIf DPIS > MakeDate(9, 30, YearNumber - 1) Then
        Veh150Db = 28.88
    ElseIf DPIS > MakeDate(12, 31, YearNumber - 2) Then
        Veh150Db = 25.5
    ElseIf DPIS > MakeDate(9, 30, YearNumber - 2) Then
        Veh150Db = 20.21
    ElseIf DPIS > MakeDate(12, 31, YearNumber - 3) Then
        Veh150Db = 17.85
    ElseIf DPIS > MakeDate(9, 30, YearNumber - 3) Then
        Veh150Db = 16.4
    ElseIf DPIS > MakeDate(12, 31, YearNumber - 4) Then
        Veh150Db = 16.66
    ElseIf DPIS > MakeDate(9, 30, YearNumber - 4) Then
        Veh150Db = 16.41
    ElseIf DPIS > MakeDate(12, 31, YearNumber - 5) Then
        Veh150Db = 16.66
    ElseIf DPIS > MakeDate(9, 30, YearNumber - 5) Then
        Veh150Db = 14.35
    ElseIf DPIS > MakeDate(12, 31, YearNumber - 6) Then
        Veh150Db = 8.33
    Else
        Veh150Db = 0
    End If

End Function

Public Function VehSL(DPIS As Date) As Double
    If DPIS > MakeDate(9, 30, YearNumber) Then
        VehSL = 2.5
    ElseIf DPIS > MakeDate(12, 31, YearNumber - 1) Then
        VehSL = 10#
    ElseIf DPIS > MakeDate(12, 31, YearNumber - 5) Then
        VehSL = 20#
    ElseIf DPIS > MakeDate(9, 30, YearNumber - 5) Then
        VehSL = 17.5
    ElseIf DPIS > MakeDate(12, 31, YearNumber - 6) Then
        VehSL = 10#
    Else
        VehSL = 0
    End If

End Function

Public Function Mock50Rate(YearsB4 As Integer, Life As Double, FYConv As Double, DecBalRate As Double) As Double
' BELOW COMPUTES THE PERCENTAGE FOR STAIGHT LINE ASSETS
    Dim Total1 As Double
    Dim count1 As Integer
    Dim Mos1 As Double
    Dim SigDig As Double
    Dim SLinePercent As Double

    SigDig = 10000#
    Mos1 = Life * 12#
    
    If Mos1 = 0 Then
        SLinePercent = 0
    ElseIf YearsB4 > 0 Then
        Total1 = (Round(((1# / Mos1) * FYConv) * SigDig) / SigDig)
        count1 = 1
        Mos1 = Mos1 - FYConv
        Do While count1 < YearsB4 And Mos1 > 0
           Total1 = Total1 + (Round((((1# - Total1) / Mos1) * 12#) * SigDig) / SigDig)
           count1 = count1 + 1
           Mos1 = Mos1 - 12
        Loop
        SLinePercent = MinValue(Total1, 1#)
    Else
        SLinePercent = 0
    End If

' BELOW COMPUTE THE PERCENTAGE FOR DECLINING BALANCE ASSETS
    Dim MoRate As Double
    Dim Mos2 As Double
    Dim DB As Double
    Dim SL As Double
    Dim Total2 As Double
    Dim count2 As Integer
    Dim DBalPercent As Double
    
    
    If Life = 0 Then
        MoRate = 0
    Else
        MoRate = DecBalRate / (Life * 12#)
    End If
    Mos2 = Life * 12#
    SL = 0
    
    If YearsB4 > 0 Then
        Total2 = Round((MoRate * FYConv) * 10000#) / 10000#
        DB = Total2
        count2 = 1
        Mos2 = Mos2 - FYConv
        Do While count2 < (YearsB4)
            DB = Round((1 - Total2) * (MoRate * 12#) * 10000#) / 10000#
            If Mos2 = 0 Then
                SL = 0
            ElseIf Mos2 < 12# Then
                SL = (1 - Total2)
            Else
                SL = Round((((1 - Total2) / Mos2) * 12#) * 10000#) / 10000#
            End If
            Total2 = Total2 + MaxValue(DB, SL)
            count2 = count2 + 1
            Mos2 = Mos2 - 12#
        Loop
        DBalPercent = Total2
    End If
    
    If DecBalRate > 0 Then
        Mock50Rate = DBalPercent
    Else
        Mock50Rate = SLinePercent
    End If

End Function

'updated for 2018 W-4 - Notice 1036
Public Function SingleWK(Inc As Currency) As Currency
    If Inc > 9687@ Then
        SingleWK = Round(CCur(CDbl((Inc - 9687@)) * 0.37) + 2898.1@)
    ElseIf Inc > 3917@ Then
        SingleWK = Round(CCur(CDbl((Inc - 3917@)) * 0.35) + 878.6@)
    ElseIf Inc > 3100@ Then
        SingleWK = Round(CCur(CDbl((Inc - 3100@)) * 0.32) + 617.16@)
    ElseIf Inc > 1658@ Then
        SingleWK = Round(CCur(CDbl((Inc - 1658@)) * 0.24) + 271.08@)
    ElseIf Inc > 815@ Then
        SingleWK = Round(CCur(CDbl(Inc - 815@) * 0.22) + 85.62@)
    ElseIf Inc > 254@ Then
        SingleWK = Round(CCur(CDbl(Inc - 254@) * 0.12) + 18.3@)
    ElseIf Inc > 71@ Then
        SingleWK = Round(CCur(CDbl(Inc - 71@) * 0.1))
    Else
        SingleWK = 0
    End If
End Function

'updated for 2018 W-4 - Notice 1036
Public Function MarriedWK(Inc As Currency) As Currency
    If Inc > 11761@ Then
        MarriedWK = Round(CCur(CDbl((Inc - 11761@)) * 0.37) + 3103.57@)
    ElseIf Inc > 7914@ Then
        MarriedWK = Round(CCur(CDbl((Inc - 7914@)) * 0.35) + 1757.12@)
    ElseIf Inc > 6280@ Then
        MarriedWK = Round(CCur(CDbl((Inc - 6280@)) * 0.32) + 1234.24@)
    ElseIf Inc > 3395@ Then
        MarriedWK = Round(CCur(CDbl((Inc - 3395@)) * 0.24) + 541.84@)
    ElseIf Inc > 1711@ Then
        MarriedWK = Round(CCur(CDbl((Inc - 1711@)) * 0.22) + 171.36@)
    ElseIf Inc > 588@ Then
        MarriedWK = Round(CCur(CDbl(Inc - 588@) * 0.12) + 36.6@)
    ElseIf Inc > 222@ Then
        MarriedWK = Round(CCur(CDbl(Inc - 222@) * 0.1))
    Else
        MarriedWK = 0
    End If
End Function

'updated for 2018 W-4 - Notice 1036
Public Function SingleBWK(Inc As Currency) As Currency
    If Inc > 19373@ Then
        SingleBWK = Round(CCur(CDbl((Inc - 19373@)) * 0.37) + 5795.72@)
    ElseIf Inc > 7835@ Then
        SingleBWK = Round(CCur(CDbl((Inc - 7835@)) * 0.35) + 1757.42@)
    ElseIf Inc > 6200@ Then
        SingleBWK = Round(CCur(CDbl((Inc - 6200@)) * 0.32) + 1234.22@)
    ElseIf Inc > 3315@ Then
        SingleBWK = Round(CCur(CDbl((Inc - 3315@)) * 0.24) + 541.82@)
    ElseIf Inc > 1631@ Then
        SingleBWK = Round(CCur(CDbl((Inc - 1631@)) * 0.22) + 171.34@)
    ElseIf Inc > 509@ Then
        SingleBWK = Round(CCur(CDbl((Inc - 509@)) * 0.12) + 36.7@)
    ElseIf Inc > 142@ Then
        SingleBWK = Round(CCur(CDbl(Inc - 142@) * 0.1))
    Else
        SingleBWK = 0
    End If
End Function

'updated for 2018 W-4 - Notice 1036
Public Function MarriedBWK(Inc As Currency) As Currency
    If Inc > 23521@ Then
        MarriedBWK = Round(CCur(CDbl((Inc - 23521@)) * 0.37) + 6206.84@)
    ElseIf Inc > 15829@ Then
        MarriedBWK = Round(CCur(CDbl((Inc - 15829@)) * 0.35) + 3514.64@)
    ElseIf Inc > 12560@ Then
        MarriedBWK = Round(CCur(CDbl((Inc - 12560@)) * 0.32) + 2468.56@)
    ElseIf Inc > 6790@ Then
        MarriedBWK = Round(CCur(CDbl((Inc - 6790@)) * 0.24) + 1083.76@)
    ElseIf Inc > 3421@ Then
        MarriedBWK = Round(CCur(CDbl((Inc - 3421@)) * 0.22) + 342.58@)
    ElseIf Inc > 1177@ Then
        MarriedBWK = Round(CCur(CDbl((Inc - 1177@)) * 0.12) + 73.3@)
    ElseIf Inc > 444@ Then
        MarriedBWK = Round(CCur(CDbl(Inc - 444@) * 0.1))
    Else
        MarriedBWK = 0
    End If
End Function

'updated for 2018 W-4 - Notice 1036
Public Function SingleSMO(Inc As Currency) As Currency
    If Inc > 20988@ Then
        SingleSMO = Round(CCur(CDbl((Inc - 20988@)) * 0.37) + 6278.84@)
    ElseIf Inc > 8488@ Then
        SingleSMO = Round(CCur(CDbl((Inc - 8488@)) * 0.35) + 1903.84@)
    ElseIf Inc > 6717@ Then
        SingleSMO = Round(CCur(CDbl((Inc - 6717@)) * 0.32) + 1337.12@)
    ElseIf Inc > 3592@ Then
        SingleSMO = Round(CCur(CDbl((Inc - 3592@)) * 0.24) + 587.12@)
    ElseIf Inc > 1767@ Then
        SingleSMO = Round(CCur(CDbl((Inc - 1767@)) * 0.22) + 185.62@)
    ElseIf Inc > 551@ Then
        SingleSMO = Round(CCur(CDbl((Inc - 551@)) * 0.12) + 39.7@)
    ElseIf Inc > 154@ Then
        SingleSMO = Round(CCur(CDbl(Inc - 154@) * 0.1))
    Else
        SingleSMO = 0
    End If
End Function

'updated for 2018 W-4 - Notice 1036
Public Function MarriedSMO(Inc As Currency) As Currency
    If Inc > 25481@ Then
        MarriedSMO = Round(CCur(CDbl((Inc - 25481@)) * 0.37) + 6724.11@)
    ElseIf Inc > 17148@ Then
        MarriedSMO = Round(CCur(CDbl((Inc - 17148@)) * 0.35) + 3807.56@)
    ElseIf Inc > 13606@ Then
        MarriedSMO = Round(CCur(CDbl((Inc - 13606@)) * 0.32) + 2674.12@)
    ElseIf Inc > 7356@ Then
        MarriedSMO = Round(CCur(CDbl((Inc - 7356@)) * 0.24) + 1174.12@)
    ElseIf Inc > 3706@ Then
        MarriedSMO = Round(CCur(CDbl((Inc - 3706@)) * 0.22) + 371.12@)
    ElseIf Inc > 1275@ Then
        MarriedSMO = Round(CCur(CDbl((Inc - 1275@)) * 0.12) + 79.4@)
    ElseIf Inc > 481@ Then
        MarriedSMO = Round(CCur(CDbl(Inc - 481@) * 0.1))
    Else
        MarriedSMO = 0
    End If
End Function

'updated for 2018 W-4 - Notice 1036
Public Function SingleMO(Inc As Currency) As Currency
    If Inc > 41975@ Then
        SingleMO = Round(CCur(CDbl((Inc - 41975@)) * 0.37) + 12557.56@)
    ElseIf Inc > 16975@ Then
        SingleMO = Round(CCur(CDbl((Inc - 16975@)) * 0.35) + 3807.56@)
    ElseIf Inc > 13433@ Then
        SingleMO = Round(CCur(CDbl((Inc - 13433@)) * 0.32) + 2674.12@)
    ElseIf Inc > 7183@ Then
        SingleMO = Round(CCur(CDbl((Inc - 7183@)) * 0.24) + 1174.12@)
    ElseIf Inc > 3533@ Then
        SingleMO = Round(CCur(CDbl((Inc - 3533@)) * 0.22) + 371.12@)
    ElseIf Inc > 1102@ Then
        SingleMO = Round(CCur(CDbl((Inc - 1102@)) * 0.12) + 79.4@)
    ElseIf Inc > 308@ Then
        SingleMO = Round(CCur(CDbl(Inc - 308@) * 0.1))
    Else
        SingleMO = 0
    End If
End Function

'updated for 2018 W-4 - Notice 1036
Public Function MarriedMO(Inc As Currency) As Currency
    If Inc > 50963@ Then
        MarriedMO = Round(CCur(CDbl((Inc - 50963@)) * 0.37) + 13448.27@)
    ElseIf Inc > 34296@ Then
        MarriedMO = Round(CCur(CDbl((Inc - 34296@)) * 0.35) + 7614.82@)
    ElseIf Inc > 27213@ Then
        MarriedMO = Round(CCur(CDbl((Inc - 27213@)) * 0.32) + 5348.26@)
    ElseIf Inc > 14713@ Then
        MarriedMO = Round(CCur(CDbl((Inc - 14713@)) * 0.24) + 2348.26@)
    ElseIf Inc > 7413@ Then
        MarriedMO = Round(CCur(CDbl((Inc - 7413@)) * 0.22) + 742.26@)
    ElseIf Inc > 2550@ Then
        MarriedMO = Round(CCur(CDbl((Inc - 2550@)) * 0.12) + 158.7@)
    ElseIf Inc > 963@ Then
        MarriedMO = Round(CCur(CDbl(Inc - 963@) * 0.1))
    Else
        MarriedMO = 0
    End If
End Function

Public Function CASglMFSTax(Inc As Currency) As Currency
'Updated for 2021 AO 10.4.21
    If Inc <= 9325@ Then
        CASglMFSTax = Round(CCur(CDbl(Inc) * 0.01))
    ElseIf Inc <= 22107@ Then
        CASglMFSTax = Round(CCur(CDbl((Inc - 9325@)) * 0.02) + 93.25@)
    ElseIf Inc <= 34892@ Then
        CASglMFSTax = Round(CCur(CDbl((Inc - 22107@)) * 0.04) + 348.89@)
    ElseIf Inc <= 48435@ Then
        CASglMFSTax = Round(CCur(CDbl((Inc - 34892@)) * 0.06) + 860.29@)
    ElseIf Inc <= 61214@ Then
        CASglMFSTax = Round(CCur(CDbl((Inc - 48435@)) * 0.08) + 1672.87@)
    ElseIf Inc <= 312686@ Then
        CASglMFSTax = Round(CCur(CDbl((Inc - 61214@)) * 0.093) + 2695.19@)
    ElseIf Inc <= 375221@ Then
        CASglMFSTax = Round(CCur(CDbl((Inc - 312686@)) * 0.103) + 26082.09@)
    ElseIf Inc <= 625369@ Then
        CASglMFSTax = Round(CCur(CDbl((Inc - 375221@)) * 0.113) + 32523.20@)
    Else
        CASglMFSTax = Round(CCur(CDbl((Inc - 625369@)) * 0.123) + 60789.92@)
    End If
End Function

Public Function CAJtQWTax(Inc As Currency) As Currency
'Updated for 2021 AO 10.4.21
    If Inc <= 18650@ Then
        CAJtQWTax = Round(CCur(CDbl(Inc) * 0.01))
    ElseIf Inc <= 44214@ Then
        CAJtQWTax = Round(CCur(CDbl((Inc - 18650@)) * 0.02) + 186.50@)
    ElseIf Inc <= 69784@ Then
        CAJtQWTax = Round(CCur(CDbl((Inc - 44214@)) * 0.04) + 697.78@)
    ElseIf Inc <= 96870@ Then
        CAJtQWTax = Round(CCur(CDbl((Inc - 69784@)) * 0.06) + 1720.58@)
    ElseIf Inc <= 122428@ Then
        CAJtQWTax = Round(CCur(CDbl((Inc - 96870@)) * 0.08) + 3345.74@)
    ElseIf Inc <= 625372@ Then
        CAJtQWTax = Round(CCur(CDbl((Inc - 122428@)) * 0.093) + 5390.38@)
    ElseIf Inc <= 750442@ Then
        CAJtQWTax = Round(CCur(CDbl((Inc - 625372@)) * 0.103) + 52164.17@)
    ElseIf Inc <= 1250738@ Then
        CAJtQWTax = Round(CCur(CDbl((Inc - 750442@)) * 0.113) + 65046.38@)
    Else
        CAJtQWTax = Round(CCur(CDbl((Inc - 1250738@)) * 0.123) + 121579.83@)
    End If
End Function

Public Function CAHOHTax(Inc As Currency) As Currency
'Updated for 2021 AO 10.4.21
    If Inc <= 18663@ Then
        CAHOHTax = Round(CCur(CDbl(Inc) * 0.01))
    ElseIf Inc <= 44217@ Then
        CAHOHTax = Round(CCur(CDbl((Inc - 18663@)) * 0.02) + 186.63@)
    ElseIf Inc <= 56999@ Then
        CAHOHTax = Round(CCur(CDbl((Inc - 44217@)) * 0.04) + 697.71@)
    ElseIf Inc <= 70542@ Then
        CAHOHTax = Round(CCur(CDbl((Inc - 56999@)) * 0.06) + 1208.99@)
    ElseIf Inc <= 83324@ Then
        CAHOHTax = Round(CCur(CDbl((Inc - 70542@)) * 0.08) + 2021.57@)
    ElseIf Inc <= 425251@ Then
        CAHOHTax = Round(CCur(CDbl((Inc - 83324@)) * 0.093) + 3044.13@)
    ElseIf Inc <= 510303@ Then
        CAHOHTax = Round(CCur(CDbl((Inc - 425251@)) * 0.103) + 34843.34@)
    ElseIf Inc <= 850503@ Then
        CAHOHTax = Round(CCur(CDbl((Inc - 510303@)) * 0.113) + 43603.70@)
    Else
        CAHOHTax = Round(CCur(CDbl((Inc - 850503@)) * 0.123) + 82046.30@)
    End If
End Function

Public Function MESingleTax(Inc As Currency) As Currency
'Updated for 2020 - AO 9.21.20
    If Inc < 22200@ Then
        MESingleTax = Round(CCur(CDbl(Inc) * 0.058))
    ElseIf Inc < 52600@ Then
        MESingleTax = Round(CCur(CDbl((Inc - 22200@)) * 0.0675) + 1288@)
    Else
        MESingleTax = Round(CCur(CDbl((Inc - 52600@)) * 0.0715) + 3340@)
    End If
End Function

Public Function MEJointTax(Inc As Currency) As Currency
'Updated for 2020 - AO 9.21.20
    If Inc < 44450@ Then
        MEJointTax = Round(CCur(CDbl(Inc) * 0.058))
    ElseIf Inc < 105200@ Then
        MEJointTax = Round(CCur(CDbl((Inc - 44450@)) * 0.0675) + 2578@)
    Else
        MEJointTax = Round(CCur(CDbl((Inc - 105200@)) * 0.0715) + 6679@)
    End If
End Function

Public Function MEHOHTax(Inc As Currency) As Currency
'Updated for 2020 - AO 9.21.20
    If Inc < 33300@ Then
        MEHOHTax = Round(CCur(CDbl(Inc) * 0.058))
    ElseIf Inc < 78900@ Then
        MEHOHTax = Round(CCur(CDbl((Inc - 33300@)) * 0.0675) + 1931@)
    Else
        MEHOHTax = Round(CCur(CDbl((Inc - 78900@)) * 0.0715) + 5009@)
    End If
End Function

Public Function DETaxRateSch(Inc As Currency) As Currency
'Delaware Tax Planner - updated for 2017 per DE Estimates Worksheet
    If Inc < 2000@ Then
        DETaxRateSch = Round(CCur(CDbl(Inc) * 0#))
    ElseIf Inc < 5001@ Then
        DETaxRateSch = Round(CCur(CDbl(Inc - 2000@) * 0.022))
    ElseIf Inc < 10001@ Then
        DETaxRateSch = Round(CCur(CDbl((Inc - 5000@)) * 0.039) + 66@)
    ElseIf Inc < 20001@ Then
        DETaxRateSch = Round(CCur(CDbl((Inc - 10000@)) * 0.048) + 261@)
    ElseIf Inc < 25001@ Then
        DETaxRateSch = Round(CCur(CDbl((Inc - 20000@)) * 0.052) + 741@)
    ElseIf Inc < 60000@ Then
        DETaxRateSch = Round(CCur(CDbl((Inc - 25000@)) * 0.0555) + 1001@)
    Else
        DETaxRateSch = Round(CCur(CDbl((Inc - 60000@)) * 0.066) + 2943.5@)
    End If
End Function

Public Function GASingleTax(Inc As Currency) As Currency
    If Inc < 750@ Then
        GASingleTax = Round(CCur(CDbl(Inc) * 0.01))
    ElseIf Inc < 2250@ Then
        GASingleTax = Round(CCur(CDbl((Inc - 750@)) * 0.02) + 8@)
    ElseIf Inc < 3750@ Then
        GASingleTax = Round(CCur(CDbl((Inc - 2250@)) * 0.03) + 38@)
    ElseIf Inc < 5250@ Then
        GASingleTax = Round(CCur(CDbl((Inc - 3750@)) * 0.04) + 83@)
    ElseIf Inc < 7000@ Then
        GASingleTax = Round(CCur(CDbl((Inc - 5250@)) * 0.05) + 143@)
    Else
        GASingleTax = Round(CCur(CDbl((Inc - 7000@)) * 0.0575) + 230@)
    End If
    
End Function

Public Function GAJointTax(Inc As Currency) As Currency
    If Inc < 1000@ Then
        GAJointTax = Round(CCur(CDbl(Inc) * 0.01))
    ElseIf Inc < 3000@ Then
        GAJointTax = Round(CCur(CDbl((Inc - 1000@)) * 0.02) + 10@)
    ElseIf Inc < 5000@ Then
        GAJointTax = Round(CCur(CDbl((Inc - 3000@)) * 0.03) + 50@)
    ElseIf Inc < 7000@ Then
        GAJointTax = Round(CCur(CDbl((Inc - 5000@)) * 0.04) + 110@)
    ElseIf Inc < 10000@ Then
        GAJointTax = Round(CCur(CDbl((Inc - 7000@)) * 0.05) + 190@)
    Else
        GAJointTax = Round(CCur(CDbl((Inc - 10000@)) * 0.0575) + 340@)
    End If
    
End Function

Public Function GAMFSTax(Inc As Currency) As Currency
    If Inc < 500@ Then
        GAMFSTax = Round(CCur(CDbl(Inc) * 0.01))
    ElseIf Inc < 1500@ Then
        GAMFSTax = Round(CCur(CDbl((Inc - 500@)) * 0.02) + 5@)
    ElseIf Inc < 2500@ Then
        GAMFSTax = Round(CCur(CDbl((Inc - 1500@)) * 0.03) + 25@)
    ElseIf Inc < 3500@ Then
        GAMFSTax = Round(CCur(CDbl((Inc - 2500@)) * 0.04) + 55@)
    ElseIf Inc < 5000@ Then
        GAMFSTax = Round(CCur(CDbl((Inc - 3500@)) * 0.05) + 95@)
    Else
        GAMFSTax = Round(CCur(CDbl((Inc - 5000@)) * 0.0575) + 170@)
    End If
        
End Function

Public Function HISingleEstTax(Inc As Currency) As Currency
'2018 Hawaii Tax Planner - Based on 2018 Tax Rate Schedules in N-1
    If Inc < 2401@ Then
        HISingleEstTax = Round(CCur(CDbl(Inc) * 0.014))
    ElseIf Inc < 4801@ Then
        HISingleEstTax = Round(CCur(CDbl((Inc - 2400@)) * 0.032) + 34@)
    ElseIf Inc < 9601@ Then
        HISingleEstTax = Round(CCur(CDbl((Inc - 4800@)) * 0.055) + 110@)
    ElseIf Inc < 14401@ Then
        HISingleEstTax = Round(CCur(CDbl((Inc - 9600@)) * 0.064) + 374@)
    ElseIf Inc < 19201@ Then
        HISingleEstTax = Round(CCur(CDbl((Inc - 14400@)) * 0.068) + 682@)
    ElseIf Inc < 24001@ Then
        HISingleEstTax = Round(CCur(CDbl((Inc - 19200@)) * 0.072) + 1008@)
    ElseIf Inc < 36001@ Then
        HISingleEstTax = Round(CCur(CDbl((Inc - 24000@)) * 0.076) + 1354@)
    ElseIf Inc < 48001@ Then
        HISingleEstTax = Round(CCur(CDbl((Inc - 36000@)) * 0.079) + 2266@)
    ElseIf Inc < 150001@ Then
        HISingleEstTax = Round(CCur(CDbl((Inc - 48000@)) * 0.0825) + 3214@)
    ElseIf Inc < 175001@ Then
        HISingleEstTax = Round(CCur(CDbl((Inc - 150000@)) * 0.09) + 11629@)
    ElseIf Inc < 200001@ Then
        HISingleEstTax = Round(CCur(CDbl((Inc - 175000@)) * 0.10) + 13879@)
    Else
        HISingleEstTax = Round(CCur(CDbl((Inc - 200000@)) * 0.11) + 16379@)
    End If
End Function

Public Function HIJointEstTax(Inc As Currency) As Currency
'2018 Hawaii Tax Planner - Based on 2018 Tax Rate Schedules in N-1
    If Inc < 4801@ Then
        HIJointEstTax = Round(CCur(CDbl(Inc) * 0.014))
    ElseIf Inc < 9601@ Then
        HIJointEstTax = Round(CCur(CDbl((Inc - 4800@)) * 0.032) + 67@)
    ElseIf Inc < 19201@ Then
        HIJointEstTax = Round(CCur(CDbl((Inc - 9600@)) * 0.055) + 221@)
    ElseIf Inc < 28801@ Then
        HIJointEstTax = Round(CCur(CDbl((Inc - 19200@)) * 0.064) + 749@)
    ElseIf Inc < 38401@ Then
        HIJointEstTax = Round(CCur(CDbl((Inc - 28800@)) * 0.068) + 1363@)
    ElseIf Inc < 48001@ Then
        HIJointEstTax = Round(CCur(CDbl((Inc - 38400@)) * 0.072) + 2016@)
    ElseIf Inc < 72001@ Then
        HIJointEstTax = Round(CCur(CDbl((Inc - 48000@)) * 0.076) + 2707@)
    ElseIf Inc < 96001@ Then
        HIJointEstTax = Round(CCur(CDbl((Inc - 72000@)) * 0.079) + 4531@)
    ElseIf Inc < 300001@ Then
        HIJointEstTax = Round(CCur(CDbl((Inc - 96000@)) * 0.0825) + 6427@)
    ElseIf Inc < 350001@ Then
        HIJointEstTax = Round(CCur(CDbl((Inc - 300000@)) * 0.09) + 23257@)
    ElseIf Inc < 400001@ Then
        HIJointEstTax = Round(CCur(CDbl((Inc - 350000@)) * 0.10) + 27757@)
    Else
        HIJointEstTax = Round(CCur(CDbl((Inc - 400000@)) * 0.11) + 32757@)
    End If
End Function

Public Function HIHOHEstTax(Inc As Currency) As Currency
'2018 Hawaii Tax Planner - Based on 2018 Tax Rate Schedules in N-1
    If Inc < 3601@ Then
        HIHOHEstTax = Round(CCur(CDbl(Inc) * 0.014))
    ElseIf Inc < 7201@ Then
        HIHOHEstTax = Round(CCur(CDbl((Inc - 3600@)) * 0.032) + 50@)
    ElseIf Inc < 14401@ Then
        HIHOHEstTax = Round(CCur(CDbl((Inc - 7200@)) * 0.055) + 166@)
    ElseIf Inc < 21601@ Then
        HIHOHEstTax = Round(CCur(CDbl((Inc - 14400@)) * 0.064) + 562@)
    ElseIf Inc < 28801@ Then
        HIHOHEstTax = Round(CCur(CDbl((Inc - 21600@)) * 0.068) + 1022@)
    ElseIf Inc < 36001@ Then
        HIHOHEstTax = Round(CCur(CDbl((Inc - 28800@)) * 0.072) + 1512@)
    ElseIf Inc < 54001@ Then
        HIHOHEstTax = Round(CCur(CDbl((Inc - 36000@)) * 0.076) + 2030@)
    ElseIf Inc < 72001@ Then
        HIHOHEstTax = Round(CCur(CDbl((Inc - 54000@)) * 0.079) + 3398@)
    ElseIf Inc < 225001@ Then
        HIHOHEstTax = Round(CCur(CDbl((Inc - 72000@)) * 0.0825) + 4820@)
    ElseIf Inc < 262501@ Then
        HIHOHEstTax = Round(CCur(CDbl((Inc - 225000@)) * 0.09) + 17443@)
    ElseIf Inc < 300001@ Then
        HIHOHEstTax = Round(CCur(CDbl((Inc - 262500@)) * 0.10) + 20818@)
    Else
        HIHOHEstTax = Round(CCur(CDbl((Inc - 300000@)) * 0.11) + 24568@)
    End If
End Function

'USZLAF540
Public Function LASingleTax(Inc As Currency) As Currency
    Dim Exemption2 As Currency
    Dim Tax As Currency
    Dim Tax2 As Currency
    Dim Tax4 As Currency
    Dim Tax6 As Currency
    Dim TaxOver As Currency
    
    Exemption2 = GetCurrency(USZLAF540.Exemption2)
    
    Tax2 = MaxValue(0, CCur(CDbl((MinValue(12500@, Inc) - Exemption2)) * 0.02))
    Tax4 = MaxValue(0, CCur(CDbl((MinValue(50000@, Inc) - 12500@)) * 0.04))
    Tax6 = MaxValue(0, CCur(CDbl((MinValue(50875@, Inc) - 50000@)) * 0.06))
        
    TaxOver = MaxValue(0, CCur(CDbl((Inc - 51000@)) * 0.06))
        
    Tax = Round(Tax2 + Tax4 + Tax6)
    
    LASingleTax = Round(Tax + TaxOver)
    
End Function
'USZLAF540
Public Function LAMFJTax(Inc As Currency) As Currency
    Dim Exemption2 As Currency
    Dim Tax As Currency
    Dim Tax2 As Currency
    Dim Tax4 As Currency
    Dim Tax6 As Currency
    Dim TaxOver As Currency
    
    Exemption2 = GetCurrency(USZLAF540.Exemption2)
    
    Tax2 = MaxValue(0, CCur(CDbl((MinValue(25000@, Inc) - Exemption2)) * 0.02))
    Tax4 = MaxValue(0, CCur(CDbl((MinValue(100000@, Inc) - 25000@)) * 0.04))
    Tax6 = MaxValue(0, CCur(CDbl((MinValue(100875@, Inc) - 100000@)) * 0.06))
        
    TaxOver = MaxValue(0, CCur(CDbl((Inc - 101000@)) * 0.06))
        
    Tax = Round(Tax2 + Tax4 + Tax6)
    
    LAMFJTax = Round(Tax + TaxOver)
    
End Function
'USZLAF540
Public Function LAHOHTax(Inc As Currency) As Currency
    Dim Exemption2 As Currency
    Dim Exemption4 As Currency
    Dim Tax As Currency
    Dim Tax2 As Currency
    Dim Tax4 As Currency
    Dim Tax6 As Currency
    Dim TaxOver As Currency
    
    Exemption2 = GetCurrency(USZLAF540.Exemption2)
    Exemption4 = GetCurrency(USZLAF540.Exemption4)

    Tax2 = MaxValue(0, CCur(CDbl((MinValue(12500@, Inc) - Exemption2)) * 0.02))
    Tax4 = MaxValue(0, CCur(CDbl((MinValue(50000@, Inc) - 12500@) - Exemption4) * 0.04))
    Tax6 = MaxValue(0, CCur(CDbl((MinValue(50875@, Inc) - 50000@)) * 0.06))
        
    TaxOver = MaxValue(0, CCur(CDbl((Inc - 51000@)) * 0.06))
           
    Tax = Round(Tax2 + Tax4 + Tax6)

    LAHOHTax = Round(Tax + TaxOver)
End Function

'USZNE1040 - updated for 2020 10/5/20
Public Function NESglTax(Inc As Currency) As Currency
    If Inc < 3291@ Then
        NESglTax = CCur(CDbl(Inc) * 0.0246)
    ElseIf Inc < 19701@ Then
        NESglTax = CCur(CDbl((Inc - 3290@)) * 0.0351) + 80.93@
    ElseIf Inc < 31751@ Then
        NESglTax = CCur(CDbl((Inc - 19700@)) * 0.0501) + 656.92@
    Else
        NESglTax = CCur(CDbl((Inc - 31750@)) * 0.0684) + 1260.6@
    End If
End Function

'USZNE1040 - updated for 2020 10/5/20
Public Function NEMFJTax(Inc As Currency) As Currency
    If Inc < 6571@ Then
        NEMFJTax = CCur(CDbl(Inc) * 0.0246)
    ElseIf Inc < 39411@ Then
        NEMFJTax = CCur(CDbl((Inc - 6570@)) * 0.0351) + 161.62@
    ElseIf Inc < 63501@ Then
        NEMFJTax = CCur(CDbl((Inc - 39410@)) * 0.0501) + 1314.30@
    Else
        NEMFJTax = CCur(CDbl((Inc - 63500@)) * 0.0684) + 2521.21@
    End If
End Function

'USZNE1040 - updated for 2020 10/5/20
Public Function NEMFSTax(Inc As Currency) As Currency
    If Inc < 3291@ Then
        NEMFSTax = CCur(CDbl(Inc) * 0.0246)
    ElseIf Inc < 19701@ Then
        NEMFSTax = CCur(CDbl((Inc - 3290@)) * 0.0351) + 80.93@
    ElseIf Inc < 31751@ Then
        NEMFSTax = CCur(CDbl((Inc - 19700@)) * 0.0501) + 656.92@
    Else
        NEMFSTax = CCur(CDbl((Inc - 31750@)) * 0.0684) + 1260.63@
    End If
End Function

'USZNE1040 - updated for 2020 10/5/20
Public Function NEHOHTax(Inc As Currency) As Currency
    If Inc < 6131@ Then
        NEHOHTax = CCur(CDbl(Inc) * 0.0246)
    ElseIf Inc < 31531@ Then
        NEHOHTax = CCur(CDbl((Inc - 6130@)) * 0.0351) + 150.80@
    ElseIf Inc < 47081@ Then
        NEHOHTax = CCur(CDbl((Inc - 31530@)) * 0.0501) + 1042.34@
    Else
        NEHOHTax = CCur(CDbl((Inc - 47080@)) * 0.0684) + 1821.40@
    End If
End Function


Public Function MNMFJTax(Inc As Currency) As Currency
'updated 10/8/21 per 2021 estimate tax rate

    If Inc <= 39810@ Then
        MNMFJTax = (CDollar(CDbl(Inc) * 0.0535))
    ElseIf Inc <= 158140@ Then
        MNMFJTax = CDollar((CDbl((Inc - 39810@)) * 0.0680) + 2129.84@)
    ElseIf Inc <= 276200@ Then
        MNMFJTax = CDollar((CDbl((Inc - 158140@)) * 0.0785) + 10176.28@)
    Else
        MNMFJTax = CDollar((CDbl((Inc - 276200@)) * 0.0985) + 19443.99@)
    End If
End Function

Public Function MNHOHTax(Inc As Currency) As Currency
'updated 10/8/21 per 2021 estimate tax rate

    If Inc <= 33520@ Then
        MNHOHTax = CDollar(CDbl(Inc) * 0.0535)
    ElseIf Inc <= 134700@ Then
        MNHOHTax = CDollar((CDbl((Inc - 33520@)) * 0.0680) + 1793.32@)
    ElseIf Inc <= 220730@ Then
        MNHOHTax = CDollar((CDbl((Inc - 134700@)) * 0.0785) + 8673.56@)
    Else
        MNHOHTax = CDollar((CDbl((Inc - 220730@)) * 0.0985) + 15426.92@)
    End If
End Function

Public Function MNSglTax(Inc As Currency) As Currency
'updated 10/8/21 per 2021 estimate tax rate

    If Inc <= 27230@ Then
        MNSglTax = CDollar(CDbl(Inc) * 0.0535)
    ElseIf Inc <= 89440@ Then
        MNSglTax = CDollar((CDbl((Inc - 27230@)) * 0.0680) + 1456.81@)
    ElseIf Inc <= 166040@ Then
        MNSglTax = CDollar((CDbl((Inc - 89440@)) * 0.0785) + 5687.09@)
    Else
        MNSglTax = CDollar((CDbl((Inc - 166040@)) * 0.0985) + 11700.19@)
    End If
End Function

Public Function MNMFSTax(Inc As Currency) As Currency
'updated 10/8/21 per 2021 estimate tax rate
    
    If Inc <= 19905@ Then
        MNMFSTax = CDollar(CDbl(Inc) * 0.0535)
    ElseIf Inc <= 79070@ Then
        MNMFSTax = CDollar((CDbl((Inc - 19905@)) * 0.0680) + 1064.92@)
    ElseIf Inc <= 138100@ Then
        MNMFSTax = CDollar((CDbl((Inc - 79070@)) * 0.0785) + 5088.14@)
    Else
        MNMFSTax = CDollar((CDbl((Inc - 138100@)) * 0.0985) + 9721.99@)
    End If
End Function

Public Function MOTaxRt(Inc As Currency) As Currency
'USZMO1040 - updated for 2020
    If Inc < 1073@ Then
        MOTaxRt = Round(CCur(CDbl(Inc) * 0.015))
    ElseIf Inc < 2146@ Then
        MOTaxRt = Round(CCur(CDbl((Inc - 1073@)) * 0.02) + 16@)
    ElseIf Inc < 3219@ Then
        MOTaxRt = Round(CCur(CDbl((Inc - 2146@)) * 0.025) + 37@)
    ElseIf Inc < 4292@ Then
        MOTaxRt = Round(CCur(CDbl((Inc - 3219@)) * 0.03) + 64@)
    ElseIf Inc < 5365@ Then
        MOTaxRt = Round(CCur(CDbl((Inc - 4292@)) * 0.035) + 96@)
    ElseIf Inc < 6438@ Then
        MOTaxRt = Round(CCur(CDbl((Inc - 5365@)) * 0.04) + 134@)
    ElseIf Inc < 7511@ Then
        MOTaxRt = Round(CCur(CDbl((Inc - 6438@)) * 0.045) + 177@)
    ElseIf Inc < 8584@ Then
        MOTaxRt = Round(CCur(CDbl((Inc - 7511@)) * 0.05) + 225@)
    Else
        MOTaxRt = Round(CCur(CDbl((Inc - 8584@)) * 0.054) + 279@)
    End If
    
End Function

Public Function NDSingleTax(Inc As Currency) As Currency
'Updated on 10/5/2021
    If Inc <= 40525@ Then
        NDSingleTax = Round(CCur(CDbl(Inc) * 0.0110))
    ElseIf Inc <= 98100@ Then
        NDSingleTax = Round(CCur(CDbl((Inc - 40525@)) * 0.0204) + 445.78@)
    ElseIf Inc <= 204675@ Then
        NDSingleTax = Round(CCur(CDbl((Inc - 98100@)) * 0.0227) + 1620.31@)
    ElseIf Inc <= 445000@ Then
        NDSingleTax = Round(CCur(CDbl((Inc - 204675@)) * 0.0264) + 4039.56@)
    Else
        NDSingleTax = Round(CCur(CDbl((Inc - 445000@)) * 0.0290) + 10384.14@)
    End If
End Function

Public Function NDJointTax(Inc As Currency) As Currency
'Updated on 10/5/2021
    If Inc <= 67700@ Then
        NDJointTax = Round(CCur(CDbl(Inc) * 0.0110))
    ElseIf Inc <= 163550@ Then
        NDJointTax = Round(CCur(CDbl((Inc - 67700@)) * 0.0204) + 744.70@)
    ElseIf Inc <= 249150@ Then
        NDJointTax = Round(CCur(CDbl((Inc - 163550@)) * 0.0227) + 2700.04@)
    ElseIf Inc <= 445000@ Then
        NDJointTax = Round(CCur(CDbl((Inc - 249150@)) * 0.0264) + 4643.16@)
    Else
        NDJointTax = Round(CCur(CDbl((Inc - 445000@)) * 0.0290) + 9813.60@)
    End If
End Function

Public Function NDMFSTax(Inc As Currency) As Currency
'Updated on 10/5/2021
    If Inc <= 33850@ Then
        NDMFSTax = Round(CCur(CDbl(Inc) * 0.0110))
    ElseIf Inc <= 81775@ Then
        NDMFSTax = Round(CCur(CDbl((Inc - 33850@)) * 0.0204) + 372.35@)
    ElseIf Inc <= 124575@ Then
        NDMFSTax = Round(CCur(CDbl((Inc - 81775@)) * 0.0227) + 1350.02@)
    ElseIf Inc <= 222500@ Then
        NDMFSTax = Round(CCur(CDbl((Inc - 124575@)) * 0.0264) + 2321.58@)
    Else
        NDMFSTax = Round(CCur(CDbl((Inc - 222500@)) * 0.0290) + 4906.80@)
    End If
End Function

Public Function NDHOHTax(Inc As Currency) As Currency
'Updated on 10/5/2021
    If Inc <= 54300@ Then
        NDHOHTax = Round(CCur(CDbl(Inc) * 0.0110))
    ElseIf Inc <= 140200@ Then
        NDHOHTax = Round(CCur(CDbl((Inc - 54300@)) * 0.0204) + 597.30@)
    ElseIf Inc <= 226950@ Then
        NDHOHTax = Round(CCur(CDbl((Inc - 140200@)) * 0.0227) + 2349.66@)
    ElseIf Inc <= 445000@ Then
        NDHOHTax = Round(CCur(CDbl((Inc - 226950@)) * 0.0264) + 4318.89@)
    Else
        NDHOHTax = Round(CCur(CDbl((Inc - 445000@)) * 0.0290) + 10075.41@)
    End If
End Function
Public Function NMMFSRate(Inc As Currency) As Currency
'USZNMFPIT1 - no change for 2020
    If Inc < 4001@ Then
        NMMFSRate = Round(CCur(CDbl(Inc) * 0.017))
    ElseIf Inc < 8001@ Then
        NMMFSRate = Round(CCur(CDbl((Inc - 4000@)) * 0.032) + 68@)
    ElseIf Inc < 12001@ Then
        NMMFSRate = Round(CCur(CDbl((Inc - 8000@)) * 0.047) + 196@)
    ElseIf Inc < 96001@ Then
        NMMFSRate = Round(CCur(CDbl((Inc - 12000@)) * 0.049) + 384@)
    Else
         NMMFSRate = Round(CCur(CDbl((Inc - 96000@)) * 0.049) + 4498@)
    End If
End Function
Public Function NMMFJQWRate(Inc As Currency) As Currency
'USZNMFPIT1 - no change for 2020
    If Inc < 8001@ Then
        NMMFJQWRate = Round(CCur(CDbl(Inc) * 0.017))
    ElseIf Inc < 16001@ Then
        NMMFJQWRate = Round(CCur(CDbl((Inc - 8000@)) * 0.032) + 136@)
    ElseIf Inc < 24001@ Then
        NMMFJQWRate = Round(CCur(CDbl((Inc - 16000@)) * 0.047) + 392@)
    ElseIf Inc < 96001@ Then
        NMMFJQWRate = Round(CCur(CDbl((Inc - 24000@)) * 0.049) + 768@)
    Else
         NMMFJQWRate = Round(CCur(CDbl((Inc - 96000@)) * 0.049) + 4294@)
    End If
End Function
Public Function NMSglRate(Inc As Currency) As Currency
'USZNMFPIT1 - no change for 2020
    If Inc < 5501@ Then
        NMSglRate = Round(CCur(CDbl(Inc) * 0.017))
    ElseIf Inc < 11001@ Then
        NMSglRate = Round(CCur(CDbl((Inc - 5500@)) * 0.032) + 93.5@)
    ElseIf Inc < 16001@ Then
        NMSglRate = Round(CCur(CDbl((Inc - 11000@)) * 0.047) + 269.5@)
    ElseIf Inc < 96001@ Then
        NMSglRate = Round(CCur(CDbl((Inc - 16000@)) * 0.049) + 504.5@)
    Else
         NMSglRate = Round(CCur(CDbl((Inc - 96000@)) * 0.049) + 4422@)
    End If
End Function

Public Function NMHOHRate(Inc As Currency) As Currency
'USZNMFPIT1 - no change for 2020
    If Inc < 8001@ Then
        NMHOHRate = Round(CCur(CDbl(Inc) * 0.017))
    ElseIf Inc < 16001@ Then
        NMHOHRate = Round(CCur(CDbl((Inc - 8000@)) * 0.032) + 136@)
    ElseIf Inc < 24001@ Then
        NMHOHRate = Round(CCur(CDbl((Inc - 16000@)) * 0.047) + 392@)
    ElseIf Inc < 96001@ Then
        NMHOHRate = Round(CCur(CDbl((Inc - 24000@)) * 0.049) + 768@)
    Else
         NMHOHRate = Round(CCur(CDbl((Inc - 96000@)) * 0.049) + 4294@)
    End If
End Function

Public Function NYSingTax(TaxInc As Currency) As Currency
   'updated for 2021 - per IT-201 draft instructions NYSingTax
   
    If TaxInc < 13@ Then
        NYSingTax = 0@
    ElseIf TaxInc < 25@ Then
        NYSingTax = 1@
    ElseIf TaxInc < 50@ Then
        NYSingTax = 2@
    ElseIf TaxInc < 8501@ Then
        NYSingTax = CDollar(TaxInc * 0.04)
    ElseIf TaxInc < 11701@ Then
        NYSingTax = CDollar(CDbl(TaxInc - 8500@) * 0.045) + 340@
    ElseIf TaxInc < 13901@ Then
        NYSingTax = CDollar(CDbl(TaxInc - 11700@) * 0.0525) + 484@
    ElseIf TaxInc < 21401@ Then
        NYSingTax = CDollar(CDbl(TaxInc - 13900@) * 0.059) + 600@
    ElseIf TaxInc < 80651@ Then
        NYSingTax = CDollar(CDbl(TaxInc - 21400@) * 0.0597) + 1042@
    ElseIf TaxInc < 215401@ Then
        NYSingTax = CDollar(CDbl(TaxInc - 80650@) * 0.0633) + 4579@
    ElseIf TaxInc < 1077551@ Then
        NYSingTax = CDollar(CDbl(TaxInc - 215400@) * 0.0685) + 13109@
    ElseIf TaxInc < 5000001@ Then
        NYSingTax = CDollar(CDbl(TaxInc - 1077550@) * 0.0965) + 72166@
    ElseIf TaxInc < 25000001@ Then
        NYSingTax = CDollar(CDbl(TaxInc - 5000000@) * 0.103) + 450683@
    Else
        NYSingTax = CDollar(CDbl(TaxInc - 25000000@) * 0.109) + 2510683@
    End If
    
End Function

Public Function NYHOHTax(TaxInc As Currency) As Currency
'updated for 2021 - per IT-201 draft instructions
   
    If TaxInc < 13@ Then
        NYHOHTax = 0@
    ElseIf TaxInc < 25@ Then
        NYHOHTax = 1@
    ElseIf TaxInc < 50@ Then
        NYHOHTax = 2@
    ElseIf TaxInc < 12801@ Then
        NYHOHTax = CDollar(CDbl(TaxInc) * 0.04)
    ElseIf TaxInc < 17651@ Then
        NYHOHTax = CDollar(CDbl(TaxInc - 12800@) * 0.045) + 512@
    ElseIf TaxInc < 20901@ Then
        NYHOHTax = CDollar(CDbl(TaxInc - 17650@) * 0.0525) + 730@
    ElseIf TaxInc < 32201@ Then
        NYHOHTax = CDollar(CDbl(TaxInc - 20900@) * 0.059) + 901@
    ElseIf TaxInc < 107651@ Then
        NYHOHTax = CDollar(CDbl(TaxInc - 32200@) * 0.0597) + 1568@
    ElseIf TaxInc < 269301@ Then
        NYHOHTax = CDollar(CDbl(TaxInc - 107650@) * 0.0633) + 6072@
    ElseIf TaxInc < 1616451@ Then
        NYHOHTax = CDollar(CDbl(TaxInc - 269300@) * 0.0685) + 16304@
    ElseIf TaxInc < 5000001@ Then
        NYHOHTax = CDollar(CDbl(TaxInc - 1616450@) * 0.0965) + 108584@
    ElseIf TaxInc < 25000001@ Then
        NYHOHTax = CDollar(CDbl(TaxInc - 5000000@) * 0.103) + 435097@
    Else
        NYHOHTax = CDollar(CDbl(TaxInc - 25000000@) * 0.109) + 2495097@
    End If
       
End Function

Public Function NYMFJTax(TaxInc As Currency) As Currency
   'updated for 2021 - per IT-201 draft instructions
   
    If TaxInc < 13@ Then
        NYMFJTax = 0@
    ElseIf TaxInc < 25@ Then
        NYMFJTax = 1@
    ElseIf TaxInc < 50@ Then
        NYMFJTax = 2@
    ElseIf TaxInc < 17151@ Then
        NYMFJTax = CDollar(CDbl(TaxInc) * 0.04)
    ElseIf TaxInc < 23601@ Then
        NYMFJTax = CDollar(CDbl(TaxInc - 17150@) * 0.045) + 686@
    ElseIf TaxInc < 27901@ Then
        NYMFJTax = CDollar(CDbl(TaxInc - 23600@) * 0.0525) + 976@
    ElseIf TaxInc < 43001@ Then
        NYMFJTax = CDollar(CDbl(TaxInc - 27900@) * 0.059) + 1202@
    ElseIf TaxInc < 161551@ Then
        NYMFJTax = CDollar(CDbl(TaxInc - 43000@) * 0.0597) + 2093@
    ElseIf TaxInc < 323201@ Then
        NYMFJTax = CDollar(CDbl(TaxInc - 161550@) * 0.0633) + 9170@
    ElseIf TaxInc < 2155351@ Then
        NYMFJTax = CDollar(CDbl(TaxInc - 323200@) * 0.0685) + 19403@
    ElseIf TaxInc < 5000001@ Then
        NYMFJTax = CDollar(CDbl(TaxInc - 2155350@) * 0.0965) + 144905@
    ElseIf TaxInc < 25000001@ Then
        NYMFJTax = CDollar(CDbl(TaxInc - 5000000@) * 0.103) + 419414@
    Else
        NYMFJTax = CDollar(CDbl(TaxInc - 25000000@) * 0.109) + 2479414@
    End If
       
End Function

'USZOK511 - no change for 2021
Public Function OKSingleTax1(Inc As Currency) As Currency
    
    If Inc < 1001@ Then
        OKSingleTax1 = Round(CCur(CDbl(Inc) * 0.005))
    ElseIf Inc < 2501@ Then
        OKSingleTax1 = Round(CCur(CDbl((Inc - 1000@)) * 0.01) + 5@)
    ElseIf Inc < 3751@ Then
        OKSingleTax1 = Round(CCur(CDbl((Inc - 2500@)) * 0.02) + 20@)
    ElseIf Inc < 4901@ Then
        OKSingleTax1 = Round(CCur(CDbl((Inc - 3750@)) * 0.03) + 45@)
    ElseIf Inc < 7201@ Then
        OKSingleTax1 = Round(CCur(CDbl((Inc - 4900@)) * 0.04) + 79.5@)
    Else
        OKSingleTax1 = Round(CCur(CDbl((Inc - 7200@)) * 0.05) + 171.5@)
    End If
    
End Function

'USZOK511 - no change for 2021
Public Function OKJointTax1(Inc As Currency) As Currency
    
    If Inc < 2001@ Then
        OKJointTax1 = Round(CCur(CDbl(Inc) * 0.005))
    ElseIf Inc < 5001@ Then
        OKJointTax1 = Round(CCur(CDbl((Inc - 2000@)) * 0.01) + 10@)
    ElseIf Inc < 7501@ Then
        OKJointTax1 = Round(CCur(CDbl((Inc - 5000@)) * 0.02) + 40@)
    ElseIf Inc < 9801@ Then
        OKJointTax1 = Round(CCur(CDbl((Inc - 7500@)) * 0.03) + 90@)
    ElseIf Inc < 12201@ Then
        OKJointTax1 = Round(CCur(CDbl((Inc - 9800@)) * 0.04) + 159@)
    Else
        OKJointTax1 = Round(CCur(CDbl((Inc - 12200@)) * 0.05) + 255@)
    End If
    
End Function

'Updated 9.28.21
Public Function ORSingleTax(Inc As Currency) As Currency
    If Inc < 3650@ Then
        ORSingleTax = Round(CCur(CDbl(Inc) * 0.0475))
    ElseIf Inc < 9200@ Then
        ORSingleTax = Round(CCur(CDbl((Inc - 3650@)) * 0.0675) + 173@)
    ElseIf Inc < 125000@ Then
        ORSingleTax = Round(CCur(CDbl((Inc - 9200@)) * 0.0875) + 548@)
    Else
        ORSingleTax = Round(CCur(CDbl((Inc - 125000@)) * 0.099) + 10681@)
    End If
End Function

'Updated 9.28.21
Public Function ORMFJTax(Inc As Currency) As Currency
    If Inc < 7300@ Then
        ORMFJTax = Round(CCur(CDbl(Inc) * 0.0475))
    ElseIf Inc < 18400@ Then
        ORMFJTax = Round(CCur(CDbl((Inc - 7300@)) * 0.0675) + 347@)
    ElseIf Inc < 250000@ Then
        ORMFJTax = Round(CCur(CDbl((Inc - 18400@)) * 0.0875) + 1096@)
    Else
        ORMFJTax = Round(CCur(CDbl((Inc - 250000@)) * 0.099) + 21361@)
    End If
End Function

Public Function OHEstTax(Inc As Currency) As Currency
'Updated 9.15.21
    If Inc < 22150@ Then
        OHEstTax = 0@
    ElseIf Inc < 44250@ Then
        OHEstTax = Round(CCur(CDbl((Inc - 22150@)) * 0.0285) + 316.18@)
    ElseIf Inc < 88450@ Then
        OHEstTax = Round(CCur(CDbl((Inc - 44250@)) * 0.03326) + 946.03@)
    ElseIf Inc < 110650@ Then
        OHEstTax = Round(CCur(CDbl((Inc - 88450@)) * 0.03802) + 2416.12@)
    ElseIf Inc < 221300@ Then
        OHEstTax = Round(CCur(CDbl((Inc - 110650@)) * 0.04413) + 3260.16@)
    Else
        OHEstTax = Round(CCur(CDbl((Inc - 221300@)) * 0.04797) + 8143.14@)
    End If
End Function

Public Function VATaxTable(Inc As Currency) As Currency
'Updated for 2020 10/11/21 - MM
    Dim Temp As Integer
    Dim Temp2 As Currency
    Dim Temp3 As Long
    
    If Inc < 3025@ Then
        VATaxTable = Round(CCur(CDbl(Inc) * 0.02))
    ElseIf Inc < 5017@ Then
        VATaxTable = Round(CCur(CDbl((Inc - 3000@)) * 0.03) + 60.01@)
    ElseIf Inc < 17001@ Then
        Temp = CLng(CDbl((Inc - 5000@)) * 0.0005)
        Temp3 = (CLng(CDbl(Temp) / 2) * 2 + 1) * 100
        VATaxTable = CCur(Temp3) + 120@
    ElseIf Inc < 64965@ Then
        Temp2 = CLng((CDbl(Inc - 17000@) * 0.000575) + 0.0275)
        VATaxTable = CCur((CLng(CDbl(Temp2) / 2) * 2 + 1) * 100) + 720@
    Else
        VATaxTable = Round(CCur(CDbl((Inc - 17000@)) * 0.0575) + 720@)
    End If
End Function

Public Function VAEstTaxTable(Inc As Currency) As Currency
'Updated for 2021 10/11/21 - MM
    If Inc < 3001@ Then
        VAEstTaxTable = Round(CCur(CDbl(Inc) * 0.02))
    ElseIf Inc < 5001@ Then
        VAEstTaxTable = Round(CCur(CDbl((Inc - 3000@)) * 0.03) + 60@)
    ElseIf Inc < 17001@ Then
        VAEstTaxTable = Round(CCur(CDbl((Inc - 5000@)) * 0.05) + 120@)
    Else
        VAEstTaxTable = Round(CCur(CDbl((Inc - 17000@)) * 0.0575) + 720@)
    End If
End Function
Public Function FSVT() As Long
'Vermont Planning Page
    If GetBool(USZVT111.Single1) = True Then
        FSVT = 1
    ElseIf GetBool(USZVT111.MFJ1) = True Then
        FSVT = 2
    ElseIf GetBool(USZVT111.MFS1) = True Then
        FSVT = 3
    ElseIf GetBool(USZVT111.HOH1) = True Then
        FSVT = 4
    ElseIf GetBool(USZVT111.Widow1) = True Then
        FSVT = 5
    ElseIf GetBool(USZVT111.CUMFJ1) = True Then
        FSVT = 6
    Else
        FSVT = 7
    End If
End Function

Public Function VTHOHTax(Inc As Currency) As Currency
'Based on preliminary rates from IN-114
'updated 10/3/19

    If Inc < 100@ Then
        VTHOHTax = 0@
    ElseIf Inc < 200@ Then
        VTHOHTax = 5@
    ElseIf Inc <= 53100@ Then
        VTHOHTax = Round(CCur(CDbl(Inc) * 0.0335))
    ElseIf Inc <= 137050@ Then
        VTHOHTax = Round(CCur(CDbl((Inc - 53100@)) * 0.066) + 1779@)
    ElseIf Inc <= 221950@ Then
        VTHOHTax = Round(CCur(CDbl((Inc - 137050@)) * 0.076) + 7320@)
    Else
        VTHOHTax = Round(CCur(CDbl((Inc - 221950@)) * 0.0875) + 13772@)
    End If
    
End Function

Public Function VTJointTax(Inc As Currency) As Currency
'Based on preliminary rates from IN-114
'updated 10/3/19

    If Inc < 100@ Then
        VTJointTax = 0@
    ElseIf Inc < 200@ Then
        VTJointTax = 5@
    ElseIf Inc <= 66150@ Then
        VTJointTax = Round(CCur(CDbl(Inc) * 0.0335))
    ElseIf Inc <= 159950@ Then
        VTJointTax = Round(CCur(CDbl((Inc - 66150@)) * 0.066) + 2216@)
    ElseIf Inc <= 243750@ Then
        VTJointTax = Round(CCur(CDbl((Inc - 159950@)) * 0.076) + 8407@)
    Else
        VTJointTax = Round(CCur(CDbl((Inc - 243750@)) * 0.0875) + 14776@)
    End If

End Function

Public Function VTMFSTax(Inc As Currency) As Currency
'Based on preliminary rates from IN-114
'updated 10/3/19

    If Inc < 100@ Then
        VTMFSTax = 0@
    ElseIf Inc < 200@ Then
        VTMFSTax = 5@
    ElseIf Inc <= 33075@ Then
        VTMFSTax = Round(CCur(CDbl(Inc) * 0.0335))
    ElseIf Inc <= 79975@ Then
        VTMFSTax = Round(CCur(CDbl((Inc - 33075@)) * 0.066) + 1108@)
    ElseIf Inc <= 121875@ Then
        VTMFSTax = Round(CCur(CDbl((Inc - 79975@)) * 0.076) + 4203@)
    Else
        VTMFSTax = Round(CCur(CDbl((Inc - 121875@)) * 0.0875) + 7388@)
    End If

End Function

Public Function VTSingleTax(Inc As Currency) As Currency
'Based on preliminary rates from IN-114
'updated 8/6/2018

    If Inc < 100@ Then
        VTSingleTax = 0@
    ElseIf Inc < 200@ Then
        VTSingleTax = 5@
    ElseIf Inc <= 39600@ Then
        VTSingleTax = Round(CCur(CDbl(Inc) * 0.0335))
    ElseIf Inc <= 96000@ Then
        VTSingleTax = Round(CCur(CDbl((Inc - 39600@)) * 0.066) + 1327@)
    ElseIf Inc <= 200200@ Then
        VTSingleTax = Round(CCur(CDbl((Inc - 96000@)) * 0.076) + 5049@)
    Else
        VTSingleTax = Round(CCur(CDbl((Inc - 200200@)) * 0.0875) + 12968@)
    End If

End Function

Public Function ARTaxRateSch(Inc As Currency) As Currency
    If Inc <= 4299@ Then
        ARTaxRateSch = Round(CCur(CDbl(Inc) * 0.009))
    ElseIf Inc <= 8399@ Then
        ARTaxRateSch = Round(CCur(CDbl(Inc) * 0.024) - 64.49@)
    ElseIf Inc <= 12699@ Then
        ARTaxRateSch = Round(CCur(CDbl(Inc) * 0.034) - 148.48@)
    ElseIf Inc <= 21099@ Then
        ARTaxRateSch = Round(CCur(CDbl(Inc) * 0.044) - 275.47@)
    ElseIf Inc <= 35299@ Then
        ARTaxRateSch = Round(CCur(CDbl(Inc) * 0.06) - 596.25@)
    ElseIf Inc < 50000@ Then
        ARTaxRateSch = Round(CCur(CDbl(Inc) * 0.07) - 949.24@)
    Else
        ARTaxRateSch = Round(CCur(CDbl((Inc - 49999@)) * 0.07) + 2547@)
    End If
End Function

Public Function IDSglMFS(Inc As Currency) As Currency
 'Idaho Individual Income Tax Rate Schedule updated 09/30/2021 based on HB 380
    
    If Inc < 1000@ Then
        IDSglMFS = CDollar(CDbl(Inc) * 0.01)
    ElseIf Inc < 3000@ Then
        IDSglMFS = Round(CCur(CDbl((Inc - 1000@)) * 0.031) + 10@)
    ElseIf Inc < 4000@ Then
        IDSglMFS = Round(CCur(CDbl((Inc - 3000@)) * 0.045) + 72@)
    ElseIf Inc < 5000@ Then
        IDSglMFS = Round(CCur(CDbl((Inc - 4000@)) * 0.055) + 117@)
    ElseIf Inc < 100000@ Then
        IDSglMFS = Round(CCur(CDbl((Inc - 5000@)) * 0.065) + 172@)
    Else
        IDSglMFS = Round(CCur(CDbl((Inc - 100000@)) * 0.065) + 6347@)
    End If
End Function
Public Function IDHHMFJQW(Inc As Currency) As Currency
 'Idaho Individual Income Tax Rate Schedule updated 09/30/2021 based on HB 380

    If Inc < 2000@ Then
        IDHHMFJQW = CDollar(CDbl(Inc) * 0.01)
    ElseIf Inc < 6000@ Then
        IDHHMFJQW = Round(CCur(CDbl((Inc - 2000@)) * 0.031) + 20@)
    ElseIf Inc < 8000@ Then
        IDHHMFJQW = Round(CCur(CDbl((Inc - 6000@)) * 0.045) + 144@)
    ElseIf Inc < 10000@ Then
        IDHHMFJQW = Round(CCur(CDbl((Inc - 8000@)) * 0.055) + 234@)
    ElseIf Inc < 100000@ Then
        IDHHMFJQW = Round(CCur(CDbl((Inc - 10000@)) * 0.065) + 344@)
    Else
        IDHHMFJQW = Round(CCur(CDbl((Inc - 100000@)) * 0.065) + 6194@)
    End If
End Function

Public Function NJSglMFSTax(Inc As Currency) As Currency
    'New Jersey Planning Page
    'Updated for 2020 - AO 9.22.20
    If Inc < 20001@ Then
        NJSglMFSTax = CDollar((CDbl(Inc) * 0.014))
    ElseIf Inc < 35001@ Then
        NJSglMFSTax = CDollar((CDbl(Inc) * 0.0175) - 7000)
    ElseIf Inc < 40001@ Then
        NJSglMFSTax = CDollar((CDbl(Inc) * 0.035) - 68250)
    ElseIf Inc < 75001@ Then
        NJSglMFSTax = CDollar((CDbl(Inc) * 0.05525) - 149250)
    ElseIf Inc < 500001@ Then
        NJSglMFSTax = CDollar((CDbl(Inc) * 0.0637) - 212625)
    ElseIf Inc < 5000001@ Then
        NJSglMFSTax = CDollar((CDbl(Inc) * 0.0897) - 1512625)
    Else
        NJSglMFSTax = CDollar((CDbl(Inc) * 0.1075) - 10412625)
    End If
End Function

Public Function NJMFJTax(Inc As Currency) As Currency
    'New Jersey Planning Page
    'Updated for 2020 - AO 9.22.20
    If Inc < 20001@ Then
        NJMFJTax = CDollar((CDbl(Inc) * 0.014))
    ElseIf Inc < 50001@ Then
        NJMFJTax = CDollar((CDbl(Inc) * 0.0175) - 7000)
    ElseIf Inc < 70001@ Then
        NJMFJTax = CDollar((CDbl(Inc) * 0.0245) - 42000)
    ElseIf Inc < 80001@ Then
        NJMFJTax = CDollar((CDbl(Inc) * 0.035) - 115450)
    ElseIf Inc < 150001@ Then
        NJMFJTax = CDollar((CDbl(Inc) * 0.05525) - 277500)
    ElseIf Inc < 500001@ Then
        NJMFJTax = CDollar((CDbl(Inc) * 0.0637) - 404250)
    ElseIf Inc < 5000001@ Then
        NJMFJTax = CDollar((CDbl(Inc) * 0.0897) - 1704250)
    Else
        NJMFJTax = CDollar((CDbl(Inc) * 0.1075) - 10604250)
    End If
End Function

Public Function NJMFJTaxTbl(Inc As Currency) As Currency
    'New Jersey Planning Page
    'Updated for 2020 - AO 9.22.20
    Dim Drop As Integer
    
    If Inc < 20001@ Then
        NJMFJTaxTbl = CDollar((CDbl(Inc) * 0.014))
    ElseIf Inc < 50001@ Then
        NJMFJTaxTbl = CDollar((CDbl(Inc) * 0.0175) - 7000)
    ElseIf Inc < 70001@ Then
        NJMFJTaxTbl = CDollar((CDbl(Inc) * 0.0245) - 42000)
    ElseIf Inc < 80001@ Then
        Drop = CLng(((CDbl(Inc) * 0.035) - 115450) / 100)
        NJMFJTaxTbl = CCur(Drop * 100)
    ElseIf Inc < 150001@ Then
        NJMFJTaxTbl = CDollar((CDbl(Inc) * 0.05525) - 277500)
    ElseIf Inc < 500001@ Then
        NJMFJTaxTbl = CDollar((CDbl(Inc) * 0.0637) - 404250)
    ElseIf Inc < 5000001@ Then
        NJMFJTaxTbl = CDollar((CDbl(Inc) * 0.0897) - 1704250)
    Else
        NJMFJTaxTbl = CDollar((CDbl(Inc) * 0.1075) - 10604250)
    End If
End Function

Public Function WFCNoChild(Inc As Currency) As Currency
'For MN Planning Page--Working Family Credit (EIC)
'updated per 2021 finals 12/20/21
'use WFC-NoChild.xls
    If Inc < 7300@ Then
        WFCNoChild = CDollar(CDbl(Inc) * 0.039)
    'ElseIf Inc < 7300@ Then
    '    WFCNoChild = 283@
    ElseIf Inc < 9000@ Then
        WFCNoChild = 286@
    ElseIf Inc < 23200@ Then
        WFCNoChild = MinValue(286@, CDollar(286@ - CDbl((Inc - 8950@)) * 0.02))
    Else
        WFCNoChild = 0
    End If

End Function

Public Function WFCNoChildMFJ(Inc As Currency) As Currency
'updated per 2021 finals 12/20/21
'use WFC-NoChild.xls
     If Inc < 7300@ Then
        WFCNoChildMFJ = CDollar(CDbl(Inc) * 0.039)
    'ElseIf Inc < 7300@ Then
    '    WFCNoChildMFJ = 283@
    ElseIf Inc < 15000@ Then
        WFCNoChildMFJ = 286@
    ElseIf Inc < 29200@ Then
        WFCNoChildMFJ = MinValue(286@, CDollar(286@ - CDbl((Inc - 14950@)) * 0.02))
    Else
        WFCNoChildMFJ = 0
    End If

End Function

Public Function WFCOneChild(Inc As Currency) As Currency
'For MN Planning Page--Working Family Credit (EIC)
'updated per 2021 finals 12/20/21
    If Inc < 12270@ Then
        WFCOneChild = CDollar(CDbl(Inc) * 0.0935)
    ElseIf Inc < 12300@ Then
        WFCOneChild = 1145@
    ElseIf Inc < 23400@ Then
        WFCOneChild = 1147@
    ElseIf Inc < 42500@ Then
        WFCOneChild = MinValue(1147@, CDollar(1147@ - CDbl((Inc - 23380@)) * 0.06))
    Else
        WFCOneChild = 0
    End If
    
End Function

Public Function WFCOneChildMFJ(Inc As Currency) As Currency
'updated per 2021 finals 12/20/21
' use WFC-OneChild.xls
    If Inc < 12270@ Then
        WFCOneChildMFJ = CDollar(CDbl(Inc) * 0.0935)
    ElseIf Inc < 12300@ Then
        WFCOneChildMFJ = 1145@
    ElseIf Inc < 29400@ Then
        WFCOneChildMFJ = 1147@
    ElseIf Inc < 48500@ Then
        WFCOneChildMFJ = MinValue(1147@, CDollar(1147@ - CDbl((Inc - 29380@)) * 0.06))
    Else
        WFCOneChildMFJ = 0
    End If

End Function

Public Function WFCTwoChild(Inc As Currency) As Currency
'For MN Planning Page--Working Family Credit (EIC)
'updated per 2021 finals 12/20/21
    If Inc < 20050@ Then
        WFCTwoChild = CDollar(CDbl(Inc) * 0.11)
    ElseIf Inc < 20100@ Then
        WFCTwoChild = 2206@
    ElseIf Inc < 27700@ Then
        WFCTwoChild = 2213@
    ElseIf Inc < 48800@ Then
        WFCTwoChild = MinValue(2213@, CDollar(2213.15@ - CDbl((Inc - 27720@)) * 0.105))
    Else
        WFCTwoChild = 0
    End If
    
End Function

Public Function WFCTwoChildMFJ(Inc As Currency) As Currency
'updated per 2021 finals 12/20/21
' use WFC-TwoChild.xls
     If Inc < 20050@ Then
        WFCTwoChildMFJ = CDollar(CDbl(Inc) * 0.11)
    ElseIf Inc < 20100@ Then
        WFCTwoChildMFJ = 2206@
    ElseIf Inc < 33700@ Then
        WFCTwoChildMFJ = 2213@
    ElseIf Inc < 54800@ Then
        WFCTwoChildMFJ = MinValue(2213@, CDollar(2213.15@ - CDbl((Inc - 33720@)) * 0.105))
    Else
        WFCTwoChildMFJ = 0
     End If
     
End Function

Public Function WFCThreeChild(Inc As Currency) As Currency
'updated per 2021 finals 12/20/21
' use WFC-ThreeChild.xls

    If Inc < 20450@ Then
        WFCThreeChild = CDollar(CDbl(Inc) * 0.125)
    ElseIf Inc < 20500@ Then
        WFCThreeChild = 2556@
    ElseIf Inc < 28000@ Then
        WFCThreeChild = 2566@
    ElseIf Inc < 52500@ Then
        WFCThreeChild = MinValue(2566@, CDollar(2566.1@ - CDbl((Inc - 28030@)) * 0.105))
    Else
        WFCThreeChild = 0
    End If

End Function

Public Function WFCThreeChildMFJ(Inc As Currency) As Currency
'updated per 2021 finals 12/20/21
' use WFC-ThreeChild.xls
    If Inc < 20450@ Then
        WFCThreeChildMFJ = CDollar(CDbl(Inc) * 0.125)
    ElseIf Inc < 20500@ Then
        WFCThreeChildMFJ = 2556@
    ElseIf Inc < 34000@ Then
        WFCThreeChildMFJ = 2566@
    ElseIf Inc < 58500@ Then
        WFCThreeChildMFJ = MinValue(2566@, CDollar(2566.1@ - CDbl((Inc - 34030@)) * 0.105))
    Else
        WFCThreeChildMFJ = 0
    End If
    
End Function

Public Function MTTax(Inc As Currency) As Currency
    If Inc < 3000@ Then
        MTTax = Round(CCur(CDbl(Inc) * 0.01))
    ElseIf Inc < 5200@ Then
        MTTax = Round(CCur(CDbl(Inc) * 0.02) - 31@)
    ElseIf Inc < 8000@ Then
        MTTax = Round(CCur(CDbl(Inc) * 0.03) - 85@)
    ElseIf Inc < 10800@ Then
        MTTax = Round(CCur(CDbl(Inc) * 0.04) - 167@)
    ElseIf Inc < 13900@ Then
        MTTax = Round(CCur(CDbl(Inc) * 0.05) - 278@)
    ElseIf Inc < 17900@ Then
        MTTax = Round(CCur(CDbl(Inc) * 0.06) - 421@)
    Else
        MTTax = Round(CCur(CDbl(Inc) * 0.069) - 587@)
    End If
        
End Function
Private Sub SetPickLists()
' For IN Planning Page - no change 2008
    Call SetListItems("CountyList", "County Code", "Adams|01", "Allen|02", "Bartholomew|03", "Benton|04", "Blackford|05", "Boone|06", "Brown|07", "Carroll|08", "Cass|09", "Clark|10", "Clay|11", "Clinton|12", "Crawford|13",  _
    "Daviess|14", "Dearborn|15", "Decatur|16", "DeKalb|17", "Delaware|18", "Dubois|19", "Elkhart|20", "Fayette|21", "Floyd|22", "Fountain|23", "Franklin|24", "Fulton|25", "Gibson|26", "Grant|27", "Greene|28", "Hamilton|29",  _
    "Hancock|30", "Harrison|31", "Hendricks|32", "Henry|33", "Howard|34", "Huntington|35", "Jackson|36", "Jasper|37", "Jay|38", "Jefferson|39", "Jennings|40", "Johnson|41", "Knox|42", "Kosciusko|43", "LaGrange|44", "Lake|45",  _
    "LaPorte|46", "Lawrence|47", "Madison|48", "Marion|49", "Marshall|50", "Martin|51", "Miami|52", "Monroe|53", "Montgomery|54", "Morgan|55", "Newton|56", "Noble|57", "Ohio (county)|58", "Orange|59", "Owen|60", "Parke|61", "Perry|62",  _
    "Pike|63", "Porter|64", "Posey|65", "Pulaski|66", "Putnam|67", "Randolph|68", "Ripley|69", "Rush|70", "St. Joseph|71", "Scott|72", "Shelby|73", "Spencer|74", "Starke|75", "Steuben|76", "Sullivan|77", "Switzerland|78",  _
    "Tippecanoe|79", "Tipton|80", "Union|81", "Vanderburgh|82", "Vermillion|83", "Vigo|84", "Wabash|85", "Warren|86", "Warrick|87", "Washington|88", "Wayne|89", "Wells|90", "White|91", "Whitley|92", "Illinois|94",  _
    "Kentucky|95", "Michigan|96", "Ohio (state)|97", "Pennsylvania|98", "Wisconsin|99", "Out-of-State|00", "None| ")
    
End Sub

Public Function CountyRate(CCode As Long) As Double
Dim Rate As Double
    
    Select Case CCode
        Case  1
            Rate = 0.01624
        Case  2
            Rate = 0.0148
        Case  3
            Rate = 0.0175
        Case  4
            Rate = 0.0179
        Case  5
            Rate = 0.015
        Case  6
            Rate = 0.015
        Case  7
            Rate = 0.025234
        Case  8
            Rate = 0.022733
        Case  9
            Rate = 0.026
        Case  10
            Rate = 0.02
        Case  11
            Rate = 0.02275
        Case  12
            Rate = 0.023
        Case  13
            Rate = 0.01
        Case  14
            Rate = 0.015
        Case  15
            Rate = 0.012
        Case  16
            Rate = 0.0235
        Case  17
            Rate = 0.0213
        Case  18
            Rate = 0.015
        Case  19
            Rate = 0.0105
        Case  20
            Rate = 0.02
        Case  21
            Rate = 0.0242
        Case  22
            Rate = 0.0135
        Case  23
            Rate = 0.021
        Case  24
            Rate = 0.015
        Case  25
            Rate = 0.0238
        Case  26
            Rate = 0.007
        Case  27
            Rate = 0.0255
        Case  28
            Rate = 0.018
        Case  29
            Rate = 0.01
        Case  30
            Rate = 0.0179
        Case  31
            Rate = 0.01
        Case  32
            Rate = 0.0155
        Case  33
            Rate = 0.015
        Case  34
            Rate = 0.0175
        Case  35
            Rate = 0.0195
        Case  36
            Rate = 0.021
        Case  37
            Rate = 0.02864
        Case  38
            Rate = 0.0245
        Case  39
            Rate = 0.0035
        Case  40
            Rate = 0.0315
        Case  41
            Rate = 0.0105
        Case  42
            Rate = 0.01
        Case  43
            Rate = 0.01
        Case  44
            Rate = 0.0165
        Case  45
            Rate = 0.015
        Case  46
            Rate = 0.0095
        Case  47
            Rate = 0.0175
        Case  48
            Rate = 0.0175
        Case  49
            Rate = 0.0202
        Case  50
            Rate = 0.0125
        Case  51
            Rate = 0.0175
        Case  52
            Rate = 0.0254
        Case  53
            Rate = 0.01345
        Case  54
            Rate = 0.023
        Case  55
            Rate = 0.0272
        Case  56
            Rate = 0.01
        Case  57
            Rate = 0.0175
        Case  58
            Rate = 0.013125
        Case  59
            Rate = 0.0175
        Case  60
            Rate = 0.01325
        Case  61
            Rate = 0.0265
        Case  62
            Rate = 0.0181
        Case  63
            Rate = 0.0075
        Case  64
            Rate = 0.005
        Case  65
            Rate = 0.0125
        Case  66
            Rate = 0.0338
        Case  67
            Rate = 0.02025
        Case  68
            Rate = 0.0225
        Case  69
            Rate = 0.0138
        Case  70
            Rate = 0.021
        Case  71
            Rate = 0.0175
        Case  72
            Rate = 0.0216
        Case  73
            Rate = 0.015
        Case  74
            Rate = 0.008
        Case  75
            Rate = 0.0171
        Case  76
            Rate = 0.0179
        Case  77
            Rate = 0.00875
        Case  78
            Rate = 0.01
        Case  79
            Rate = 0.011
        Case  80
            Rate = 0.026
        Case  81
            Rate = 0.0175
        Case  82
            Rate = 0.012
        Case  83
            Rate = 0.015
        Case  84
            Rate = 0.02
        Case  85
            Rate = 0.029
        Case  86
            Rate = 0.0212
        Case  87
            Rate = 0.005
        Case  88
            Rate = 0.02
        Case  89
            Rate = 0.015
        Case  90
            Rate = 0.021
        Case  91
            Rate = 0.0232
        Case  92
            Rate = 0.015329
        Case  94
            Rate = 0#
        Case  95
            Rate = 0#
        Case  96
            Rate = 0#
        Case  97
            Rate = 0#
        Case  98
            Rate = 0#
        Case  99
            Rate = 0#
        Case Else
            Rate = 0#
    End Select
    
    ReturnVal = Rate
End Function


Public Function BondsList1_SetDynaList()
    Call SetListTitle("BondsList1")
    
    Dim BondAmount As Currency
    Dim count As Integer
    
    BondAmount = 0
    count = 1
    
    Do While count <= GetNumber(USF8888.BondMult1)
        BondAmount = BondAmount + 50@
        Call SetListItem(CStr(BondAmount), CStr(BondAmount))
        count = count + 1
    Loop
        
End Function

Public Function EasyAdvanceAmountSel_SetDynaList()
    Call SetListTitle("EasyAdvanceAmountSel")
    
    Dim RemainingRefund As Currency
    Dim EasyAdvanceAmount1 As Currency
    Dim EasyAdvanceAmount2 As Currency
    Dim EasyAdvanceAmount3 As Currency
    Dim EasyAdvanceAmount4 As Currency
    Dim EasyAdvanceAmount5 As Currency
    Dim EasyAdvanceAmount6 As Currency
    Dim EasyAdvanceAmount7 As Currency
    
    RemainingRefund = GetCurrency(USWRALApp.RepRemRefundEA)
    EasyAdvanceAmount1 = 500@
    EasyAdvanceAmount2 = 1000@
    EasyAdvanceAmount3 = 1500@
    EasyAdvanceAmount4 = 2000@
    EasyAdvanceAmount5 = 3000@
    EasyAdvanceAmount6 = 4500@
    EasyAdvanceAmount7 = 6000@

    If GetString(USWRALApp.RepublicOfferEA) = "P" Then
        If RemainingRefund >= 7000@ Then
            Call SetListItem(CStr(EasyAdvanceAmount1), CStr(EasyAdvanceAmount1))
            Call SetListItem(CStr(EasyAdvanceAmount2), CStr(EasyAdvanceAmount2))
            Call SetListItem(CStr(EasyAdvanceAmount3), CStr(EasyAdvanceAmount3))
            Call SetListItem(CStr(EasyAdvanceAmount4), CStr(EasyAdvanceAmount4))
            Call SetListItem(CStr(EasyAdvanceAmount5), CStr(EasyAdvanceAmount5))
            Call SetListItem(CStr(EasyAdvanceAmount6), CStr(EasyAdvanceAmount6))
            Call SetListItem(CStr(EasyAdvanceAmount7), CStr(EasyAdvanceAmount7))
        ElseIf RemainingRefund >= 5500@ Then
            Call SetListItem(CStr(EasyAdvanceAmount1), CStr(EasyAdvanceAmount1))
            Call SetListItem(CStr(EasyAdvanceAmount2), CStr(EasyAdvanceAmount2))
            Call SetListItem(CStr(EasyAdvanceAmount3), CStr(EasyAdvanceAmount3))
            Call SetListItem(CStr(EasyAdvanceAmount4), CStr(EasyAdvanceAmount4))
            Call SetListItem(CStr(EasyAdvanceAmount5), CStr(EasyAdvanceAmount5))
            Call SetListItem(CStr(EasyAdvanceAmount6), CStr(EasyAdvanceAmount6))
        ElseIf RemainingRefund >= 4000@ Then
            Call SetListItem(CStr(EasyAdvanceAmount1), CStr(EasyAdvanceAmount1))
            Call SetListItem(CStr(EasyAdvanceAmount2), CStr(EasyAdvanceAmount2))
            Call SetListItem(CStr(EasyAdvanceAmount3), CStr(EasyAdvanceAmount3))
            Call SetListItem(CStr(EasyAdvanceAmount4), CStr(EasyAdvanceAmount4))
            Call SetListItem(CStr(EasyAdvanceAmount5), CStr(EasyAdvanceAmount5))
        ElseIf RemainingRefund >= 3000@ Then
            Call SetListItem(CStr(EasyAdvanceAmount1), CStr(EasyAdvanceAmount1))
            Call SetListItem(CStr(EasyAdvanceAmount2), CStr(EasyAdvanceAmount2))
            Call SetListItem(CStr(EasyAdvanceAmount3), CStr(EasyAdvanceAmount3))
            Call SetListItem(CStr(EasyAdvanceAmount4), CStr(EasyAdvanceAmount4))
        ElseIf RemainingRefund >= 2000@ Then
            Call SetListItem(CStr(EasyAdvanceAmount1), CStr(EasyAdvanceAmount1))
            Call SetListItem(CStr(EasyAdvanceAmount2), CStr(EasyAdvanceAmount2))
            Call SetListItem(CStr(EasyAdvanceAmount3), CStr(EasyAdvanceAmount3))        
        ElseIf RemainingRefund >= 500@ Then
            Call SetListItem(CStr(EasyAdvanceAmount1), CStr(EasyAdvanceAmount1))
        Else
            Call SetListItem("0", "0")
        End If
    ElseIf GetString(USWRALApp.RepublicOfferEA) = "B" Or GetString(USWRALApp.RepublicOfferEA) = "D" Or GetString(USWRALApp.RepublicOfferEA) = "S" Then
        If RemainingRefund >= 4000@ Then
            Call SetListItem(CStr(EasyAdvanceAmount1), CStr(EasyAdvanceAmount1))
            Call SetListItem(CStr(EasyAdvanceAmount2), CStr(EasyAdvanceAmount2))
            Call SetListItem(CStr(EasyAdvanceAmount3), CStr(EasyAdvanceAmount3))
            Call SetListItem(CStr(EasyAdvanceAmount4), CStr(EasyAdvanceAmount4))
            Call SetListItem(CStr(EasyAdvanceAmount5), CStr(EasyAdvanceAmount5))
        ElseIf RemainingRefund >= 3000@ Then
            Call SetListItem(CStr(EasyAdvanceAmount1), CStr(EasyAdvanceAmount1))
            Call SetListItem(CStr(EasyAdvanceAmount2), CStr(EasyAdvanceAmount2))
            Call SetListItem(CStr(EasyAdvanceAmount3), CStr(EasyAdvanceAmount3))
            Call SetListItem(CStr(EasyAdvanceAmount4), CStr(EasyAdvanceAmount4))
        ElseIf RemainingRefund >= 2000@ Then
            Call SetListItem(CStr(EasyAdvanceAmount1), CStr(EasyAdvanceAmount1))
            Call SetListItem(CStr(EasyAdvanceAmount2), CStr(EasyAdvanceAmount2))
            Call SetListItem(CStr(EasyAdvanceAmount3), CStr(EasyAdvanceAmount3))        
        ElseIf RemainingRefund >= 500@ Then
            Call SetListItem(CStr(EasyAdvanceAmount1), CStr(EasyAdvanceAmount1))
        Else
            Call SetListItem("0", "0")
        End If
    Else
        If RemainingRefund >= 3000@ Then
            Call SetListItem(CStr(EasyAdvanceAmount1), CStr(EasyAdvanceAmount1))
            Call SetListItem(CStr(EasyAdvanceAmount2), CStr(EasyAdvanceAmount2))
            Call SetListItem(CStr(EasyAdvanceAmount3), CStr(EasyAdvanceAmount3))
            Call SetListItem(CStr(EasyAdvanceAmount4), CStr(EasyAdvanceAmount4))
        ElseIf RemainingRefund >= 2000@ Then
            Call SetListItem(CStr(EasyAdvanceAmount1), CStr(EasyAdvanceAmount1))
            Call SetListItem(CStr(EasyAdvanceAmount2), CStr(EasyAdvanceAmount2))
            Call SetListItem(CStr(EasyAdvanceAmount3), CStr(EasyAdvanceAmount3))        
        ElseIf RemainingRefund >= 500@ Then
            Call SetListItem(CStr(EasyAdvanceAmount1), CStr(EasyAdvanceAmount1))
        Else
            Call SetListItem("0", "0")
        End If
    End If
        
End Function

Public Function DebitCardAnswers_SetDynaList()
    Dim strChoices As String
    Dim strTemp As String
    Dim count As Integer
    Call SetListTitle("DebitCardAnswers")
    
    count = 1
    strChoices = GetString(USWDebitCard.KBAAnswerText(Index))
    Do While True
        strTemp = GetParam(strChoices, count, "|")
        If strTemp = "" Then
            Exit Do
        End If
        count = count + 1
        Call SetListItem(strTemp)
    Loop
    
End Function

Public Function DebitCardAnswerIDs_SetDynaList()
    Dim strChoices As String
    Dim strTemp As String
    Dim count As Integer
    Call SetListTitle("DebitCardAnswerIDs")
    
    count = 1
    strChoices = GetString(USWDebitCard.KBAAnswerID(Index))
    Do While True
        strTemp = GetParam(strChoices, count, "|")
        If strTemp = "" Then
            Exit Do
        End If
        count = count + 1
        Call SetListItem(strTemp)
    Loop
    
End Function

Private Sub CredRedState_SetList()
'Updated for 2021
    ListTitle = "CredRedState"
   'ListItem = "AL - Alabama|AL"
   'ListItem = "AK - Alaska|AK"
   'ListItem = "AZ - Arizona|AZ"
   'ListItem = "AR - Arkansas|AR"
   'ListItem = "CA - California|CA"
   'ListItem = "CO - Colorado|CO"
   'ListItem = "CT - Connecticut|CT"
   'ListItem = "DE - Delaware|DE"
   'ListItem = "DC - District of Columbia|DC"
   'ListItem = "FL - Florida|FL"
   'ListItem = "GA - Georgia|GA"
   'ListItem = "HI - Hawaii|HI"
   'ListItem = "ID - Idaho|ID"
   'ListItem = "IL - Illinois|IL"
   'ListItem = "IN - Indiana|IN"
   'ListItem = "IA - Iowa|IA"
   'ListItem = "KS - Kansas|KS"
   'ListItem = "KY - Kentucky|KY"
   'ListItem = "LA - Louisiana|LA"
   'ListItem = "ME - Maine|ME"
   'ListItem = "MD - Maryland|MD"
   'ListItem = "MA - Massachusetts|MA"
   'ListItem = "MI - Michigan|MI"
   'ListItem = "MN - Minnesota|MN"
   'ListItem = "MS - Mississippi|MS"
   'ListItem = "MO - Missouri|MO"
   'ListItem = "MT - Montana|MT"
   'ListItem = "NE - Nebraska|NE"
   'ListItem = "NV - Nevada|NV"
   'ListItem = "NH - New Hampshire|NH"
   'ListItem = "NJ - New Jersey|NJ"
   'ListItem = "NM - New Mexico|NM"
   'ListItem = "NY - New York|NY"
   'ListItem = "NC - North Carolina|NC"
   'ListItem = "ND - North Dakota|ND"
   'ListItem = "OH - Ohio|OH"
   'ListItem = "OK - Oklahoma|OK"
   'ListItem = "OR - Oregon|OR"
   'ListItem = "PA - Pennsylvania|PA"
   'ListItem = "RI - Rhode Island|RI"
   'ListItem = "SC - South Carolina|SC"
   'ListItem = "SD - South Dakota|SD"
   'ListItem = "TN - Tennessee|TN"
   'ListItem = "TX - Texas|TX"
   'ListItem = "UT - Utah|UT"
   'ListItem = "VT - Vermont|VT"
   'ListItem = "VA - Virginia|VA"
   'ListItem = "WA - Washington|WA"
   'ListItem = "WV - West Virginia|WV"
   'ListItem = "WI - Wisconsin|WI"
   'ListItem = "WY - Wyoming|WY"
   ListItem = "VI - Virgin Islands|VI"
End Sub


Public Function INEICNoChild(Amount As Currency) As Currency
    Dim Credit, Amt1, Amt2, INAmtEIC, Temp As Currency
    Dim INAmt1, INAmt2 As Double
    
    'Phase-In amount
    Amt1 = MinValue(Amount, 6920@)
    'Phase-Out amount
    Amt2 = MaxValue(Amount - 8650@, 0)
    
    INAmt1 = CDbl(Amt1) * 0.0765
    INAmt2 = CDbl(Amt2) * 0.0765
    
    INAmtEIC = CCur(MaxValue(INAmt1 - INAmt2, 0)) + 50
    Temp = INAmtEIC Mod 1@
    INAmtEIC = INAmtEIC - Temp

    Credit = CCur(CDbl(INAmtEIC) * 0.09) + 50
    Temp = Credit Mod 1@
    Credit = Credit - Temp
    
    If Amount > 15500@ Then
        Credit = 0@
    Else
        Credit = Credit
    End If
    
    ReturnVal = Credit
End Function

Public Function INEICOneChild(Amount As Currency) As Currency
    Dim Credit, Amt1, Amt2, INAmtEIC, Temp As Currency
    Dim INAmt1, INAmt2 As Double
    
    'Phase-In amount
    Amt1 = MinValue(Amount, 10370@)
    'Phase-Out amount
    Amt2 = MaxValue(Amount - 19030@, 0)
    
    INAmt1 = (CDbl(Amt1) * 0.34)
    INAmt2 = (CDbl(Amt2) * 0.1598)
    
    INAmtEIC = CCur(MaxValue(INAmt1 - INAmt2, 0)) + 50
    Temp = INAmtEIC Mod 1@
    INAmtEIC = INAmtEIC - Temp

    Credit = CCur(CDbl(INAmtEIC) * 0.09) + 50
    Temp = Credit Mod 1@
    Credit = Credit - Temp
    
    If Amount > 41050@ Then
        Credit = 0@
    Else
        Credit = Credit
    End If
    
    ReturnVal = Credit
    
End Function

Public Function INEICTwoChild(Amount As Currency) As Currency
    Dim Credit, Amt1, Amt2, INAmtEIC, Temp As Currency
    Dim INAmt1, INAmt2 As Double
    
    'Phase-In amount
    Amt1 = MinValue(Amount, 14570@)
    'Phase-Out amount
    Amt2 = MaxValue(Amount - 19030@, 0)
    
    INAmt1 = (CDbl(Amt1) * 0.4)
    INAmt2 = (CDbl(Amt2) * 0.2106)
    
    INAmtEIC = CCur(MaxValue(INAmt1 - INAmt2, 0)) + 50
    Temp = INAmtEIC Mod 1@
    INAmtEIC = INAmtEIC - Temp

    Credit = CCur(CDbl(INAmtEIC) * 0.09) + 50
    Temp = Credit Mod 1@
    Credit = Credit - Temp
    
    If Amount > 46700@ Then
        Credit = 0@
    Else
        Credit = Credit
    End If
    
    ReturnVal = Credit
End Function

Private Sub K1ServiceCenter_SetList()
   ListTitle = "IRS Service Centers"
   ListItem = "Cincinnati, OH|CINCINNATI, OH  45999"
   ListItem = "Kansas City, MO|KANSAS CITY, MO  64999"
   ListItem = "Ogden, UT for U.S. locations|OGDEN, UT  84201"
   ListItem = "Ogden, UT for foreign locations|OGDEN, UT  84409"
End Sub

Public Function INTSchBBump(TargetOffset As Long) As String
    Dim Count As Long
    Dim Offset As Long
    Dim Total As Long
    Dim AccMktDisc As String
    Dim ContingentPay As String
    Dim Forex As String
    Dim Pipe As String
    
    AccMktDisc = "Accrued Market Discount"
    ContingentPay = "Contingent Payment Debt Instrument"
    Forex = "Foreign Currency Transaction"
    Pipe = "|"
    
    Offset = 0
    
    'USDSFMRes
    Count = 1
    Total = GetAllCopies(USDSFM)
    
    Do While Count <= Total
        If GetBool(USDSFM.Residence, Count) = True And GetCurrency(USDSFM.Interest, Count) > 0 Then
            If Offset = TargetOffset Then
                ReturnVal = GetString(USDSFM.NameAdd, Count) + "|" + GetString(USDSFM.PayerSSN, Count) + "|" + CStr(Round(GetCurrency(USDSFM.Interest, Count))) + "|"
                Count = 9999
            Else
                Offset = Offset + 1
            End If
        End If
        Count = Count + 1
    Loop
    
    'USDSFMOther
    Count = 1
    Total = GetAllCopies(USDSFM)
    
    Do While Count <= Total
        If GetBool(USDSFM.Residence, Count) = False And GetCurrency(USDSFM.Interest, Count) > 0 Then
            If Offset = TargetOffset Then
                ReturnVal = GetString(USDSFM.NameAdd, Count) + "|" + Pipe + CStr(Round(GetCurrency(USDSFM.Interest, Count))) + "|"
                Count = 9999
            Else
                Offset = Offset + 1
            End If
        End If
        Count = Count + 1
    Loop
    
    'USD1099OID
    Count = 1
    Total = GetAllCopies(USD1099OID)
    
    Do While Count <= Total
        If GetCurrency(USD1099OID.BAmt, Count) <> 0 Then
            If Offset = TargetOffset Then
                ReturnVal = GetString(USD1099OID.PayerName, Count) + "|" + Pipe + CStr(Round(GetCurrency(USD1099OID.BAmt, Count))) + "|"
                Count = 9999
            Else
                Offset = Offset + 1
            End If
        End If
        Count = Count + 1
    Loop
    
    'USD1099INT
    Count = 1
    Total = GetAllCopies(USD1099INT)
    
    Do While Count <= Total
        If GetCurrency(USD1099INT.BAmtEF, Count) <> 0 Then
            If Offset = TargetOffset Then
                ReturnVal = GetString(USD1099INT.PayerName, Count) + "|" + Pipe + CStr(Round(GetCurrency(USD1099INT.BAmtEF, Count))) + "|"
                Count = 9999
            Else
                Offset = Offset + 1
            End If
        End If
        Count = Count + 1
    Loop
    
    'USDPartK1
    Count = 1
    Total = GetAllCopies(USDPartK1)
    
    Do While Count <= Total
        If GetCurrency(USDPartK1.Interest, Count) <> 0 Then
            If Offset = TargetOffset Then
                ReturnVal = GetString(USDPartK1.CoName, Count) + "|" + Pipe + CStr(Round(GetCurrency(USDPartK1.Interest, Count))) + "|"
                Count = 9999
            Else
                Offset = Offset + 1
            End If
        End If
        Count = Count + 1
    Loop
    
    'USDSCorpK1
    Count = 1
    Total = GetAllCopies(USDSCorpK1)
    
    Do While Count <= Total
        If GetCurrency(USDSCorpK1.Interest, Count) <> 0 Then
            If Offset = TargetOffset Then
                ReturnVal = GetString(USDSCorpK1.CoName, Count) + "|" + Pipe + CStr(Round(GetCurrency(USDSCorpK1.Interest, Count))) + "|"
                Count = 9999
            Else
                Offset = Offset + 1
            End If
        End If
        Count = Count + 1
    Loop
    
    'USDSEstK1
    Count = 1
    Total = GetAllCopies(USDEstK1)
    
    Do While Count <= Total
        If GetCurrency(USDEstK1.Interest, Count) <> 0 Then
            If Offset = TargetOffset Then
                ReturnVal = GetString(USDEstK1.TrustName, Count) + "|" + Pipe + CStr(Round(GetCurrency(USDEstK1.Interest, Count))) + "|"
                Count = 9999
            Else
                Offset = Offset + 1
            End If
        End If
        Count = Count + 1
    Loop
    
    'Accrued Market Discount from 8949
    Count = 1
    Total = GetBool(USSchB.AccMktDiscInt)
    
    Do While Count <= Total
        If GetCurrency(USSchB.AccMktDiscInt) <> 0 Then
            If Offset = TargetOffset Then
                ReturnVal = AccMktDisc + "|" + Pipe + CStr(Round(GetCurrency(USSchB.AccMktDiscInt))) + "|"
                Count = 9999
            Else
                Offset = Offset + 1
            End If
        End If
        Count = Count + 1
    Loop
    
    'Contingent Payment Debt Instrument from 8949
    Count = 1
    Total = GetBool(USSchB.ContigentPay)
    
    Do While Count <= Total
        If GetCurrency(USSchB.ContigentPay) <> 0 Then
            If Offset = TargetOffset Then
                ReturnVal = ContingentPay + "|" + Pipe + CStr(Round(GetCurrency(USSchB.ContigentPay))) + "|"
                Count = 9999
            Else
                Offset = Offset + 1
            End If
        End If
        Count = Count + 1
    Loop
    
    ReturnVal = ""
  
End Function

Public Function DIVSchBBump(TargetOffset As Long) As String
    Dim Count As Long
    Dim Offset As Long
    Dim Total As Long
    Dim DIV8814 As String
    Dim DIV5471 As String
    Dim DIV8621 As String
    
    DIV8814 = "Form 8814"
    DIV5471 = "Form 5471"
    DIV8621 = "Form 8621"
    
    Offset = 0
    
    
    'USD1099DIV
    Count = 1
    Total = GetAllCopies(USD1099DIV)
    
    Do While Count <= Total
        If GetCurrency(USD1099DIV.OrdDiv, Count) <> 0 Then
            If Offset = TargetOffset Then
                ReturnVal = GetString(USD1099DIV.PayerName, Count) + "|" + CStr(Round(GetCurrency(USD1099DIV.OrdDiv, Count))) + "|"
                Count = 9999
            Else
                Offset = Offset + 1
            End If
        End If
        Count = Count + 1
    Loop
    
    'USDPartK1
    Count = 1
    Total = GetAllCopies(USDPartK1)
    
    Do While Count <= Total
        If GetCurrency(USDPartK1.Dividends, Count) <> 0 Then
            If Offset = TargetOffset Then
                ReturnVal = GetString(USDPartK1.CoName, Count) + "|" + CStr(Round(GetCurrency(USDPartK1.Dividends, Count))) + "|"
                Count = 9999
            Else
                Offset = Offset + 1
            End If
        End If
        Count = Count + 1
    Loop
    
    'USDSCorpK1
    Count = 1
    Total = GetAllCopies(USDSCorpK1)
    
    Do While Count <= Total
        If GetCurrency(USDSCorpK1.Dividends, Count) <> 0 Then
            If Offset = TargetOffset Then
                ReturnVal = GetString(USDSCorpK1.CoName, Count) + "|" + CStr(Round(GetCurrency(USDSCorpK1.Dividends, Count))) + "|"
                Count = 9999
            Else
                Offset = Offset + 1
            End If
        End If
        Count = Count + 1
    Loop
    
    'USDSEstK1
    Count = 1
    Total = GetAllCopies(USDEstK1)
    
    Do While Count <= Total
        If GetCurrency(USDEstK1.Dividends, Count) <> 0 Then
            If Offset = TargetOffset Then
                ReturnVal = GetString(USDEstK1.TrustName, Count) + "|" + CStr(Round(GetCurrency(USDEstK1.Dividends, Count))) + "|"
                Count = 9999
            Else
                Offset = Offset + 1
            End If
        End If
        Count = Count + 1
    Loop
    
    'USDF8814
    Count = 1
    Total = GetBool(USSchB.Form8814)
    
    Do While Count <= Total
        If GetCurrency(USSchB.Form8814) <> 0 Then
            If Offset = TargetOffset Then
                ReturnVal = DIV8814 + "|" + CStr(Round(GetCurrency(USSchB.Form8814))) + "|"
                Count = 9999
            Else
                Offset = Offset + 1
            End If
        End If
        Count = Count + 1
    Loop
    
    'USDF5471
    Count = 1
    Total = GetBool(USSchB.Form5471)
    
    Do While Count <= Total
        If GetCurrency(USSchB.Form5471) <> 0 Then
            If Offset = TargetOffset Then
                ReturnVal = DIV5471 + "|" + CStr(Round(GetCurrency(USSchB.Form5471))) + "|"
                Count = 9999
            Else
                Offset = Offset + 1
            End If
        End If
        Count = Count + 1
    Loop
    
    'USDF8621
    Count = 1
    Total = GetBool(USSchB.Form8621)
    
    Do While Count <= Total
        If GetCurrency(USSchB.Form8621) <> 0 Then
            If Offset = TargetOffset Then
                ReturnVal = DIV8621 + "|" + CStr(Round(GetCurrency(USSchB.Form8621))) + "|"
                Count = 9999
            Else
                Offset = Offset + 1
            End If
        End If
        Count = Count + 1
    Loop
    
    ReturnVal = ""
  
End Function

Public Function Form3115Activity_SetDynaList()
    Call SetListTitle("Form3115Activity")
    
    Call SetListItem("Not Applicable")
    
End Function

Private Sub AmortCode_SetList()
   ListTitle = "Amort Code"
   ListItem = "Sec. 167(h) Geological and geophysical expenditures|Sec. 167(h)"
   ListItem = "Sec. 169 Pollution control facilities|Sec. 169"
   ListItem = "Sec. 171 Certain bond premiums|Sec. 171"
   ListItem = "Sec. 173 Circulation expenditures|Sec. 173"
   ListItem = "Sec. 174 Research and experimental expenditures|Sec. 174"
   ListItem = "Sec. 174(a) Research and experimental expenditures|Sec. 174(a)"
   ListItem = "Sec. 178 Cost of acquiring a lease|Sec. 178"
   ListItem = "Sec. 194 Qualified forestation and reforestation|Sec. 194"
   ListItem = "Sec. 195 Business start-up costs|Sec. 195"
   ListItem = "Sec. 197 Intangibles|Sec. 197"
   ListItem = "Sec. 263(c) Intangible drilling and development|Sec. 263(c)"
   ListItem = "Sec. 461 Mortgage points|Sec. 461"
   ListItem = "Sec. 616(a) Mining exploration and development|Sec. 616(a)"
   ListItem = "Sec. 617(a) Mining exploration and development|Sec. 617(a)"
   ListItem = "Not Listed|"
End Sub

Private Sub MNPrepType_SetList()
    ListTitle = "MN Preparer Type"
    ListItem = "Professional Preparer|P"
    ListItem = "Self-Prepared|S"
    ListItem = "Assisted|A"
    ListItem = "Volunteer Preparer|V"
End Sub

Private Sub SandboxStates_SetList()
   ListTitle = "SandboxStates"

   ListItem = "AA - Military Address|AA"
   ListItem = "AE - Military Address|AE"
   ListItem = "AP - Military Address|AP"
   ListItem = "Alabama|AL"
   ListItem = "Alaska|AK"
   ListItem = "Arizona|AZ"
   ListItem = "Arkansas|AR"
   ListItem = "California|CA"
   ListItem = "Colorado|CO"
   ListItem = "Connecticut|CT"
   ListItem = "Delaware|DE"
   ListItem = "District of Columbia|DC"
   ListItem = "Florida|FL"
   ListItem = "Georgia|GA"
   ListItem = "Hawaii|HI"
   ListItem = "Idaho|ID"
   ListItem = "Illinois|IL"
   ListItem = "Indiana|IN"
   ListItem = "Iowa|IA"
   ListItem = "Kansas|KS"
   ListItem = "Kentucky|KY"
   ListItem = "Louisiana|LA"
   ListItem = "Maine|ME"
   ListItem = "Maryland|MD"
   ListItem = "Massachusetts|MA"
   ListItem = "Michigan|MI"
   ListItem = "Minnesota|MN"
   ListItem = "Mississippi|MS"
   ListItem = "Missouri|MO"
   ListItem = "Montana|MT"
   ListItem = "Nebraska|NE"
   ListItem = "Nevada|NV"
   ListItem = "New Hampshire|NH"
   ListItem = "New Jersey|NJ"
   ListItem = "New Mexico|NM"
   ListItem = "New York|NY"
   ListItem = "North Carolina|NC"
   ListItem = "North Dakota|ND"
   ListItem = "Ohio|OH"
   ListItem = "Oklahoma|OK"
   ListItem = "Oregon|OR"
   ListItem = "Pennsylvania|PA"
   ListItem = "Rhode Island|RI"
   ListItem = "South Carolina|SC"
   ListItem = "South Dakota|SD"
   ListItem = "Tennessee|TN"
   ListItem = "Texas|TX"
   ListItem = "Utah|UT"
   ListItem = "Vermont|VT"
   ListItem = "Virginia|VA"
   ListItem = "Washington|WA"
   ListItem = "West Virginia|WV"
   ListItem = "Wisconsin|WI"
   ListItem = "Wyoming|WY"
End Sub